#include a_samp

#undef MAX_PLAYERS
#define MAX_PLAYERS 250

#undef MAX_VEHICLES
#define MAX_VEHICLES 1100

#include <a_http>
#include <a_mysql>
#include <sscanf2>
#include <crashdetect>
#include <streamer>
#include <foreach>
#include <Pawn.CMD>
#include <playerprogress>
#include <erp_map>


#pragma dynamic 8000
#define publics:%0(%1) forward %0(%1); public %0(%1)
#define NewSPD(%0,%1,%2,%3,%4,%5,%6,%7) format(format_string,244,%4,%7) && ShowPlayerDialog(%0, %1, %2, %3, format_string, %5, %6)
#define SCMF(%0,%1,%2,%3) format(format_string, 144, %2,%3) && SendClientMessage(%0, %1, format_string)

// MYSQL数据库连接信息
#define mysql_host "127.0.0.1"
#define mysql_db "lrp"
#define mysql_user "root"
#define mysql_pass "root"

#define FD1 "Expired" // 技术人员
#define FD2 "Expired" // 服务器所有者&开发者

#define MAILER_MAX_MAIL_SIZE      	                (1024)
#define MAILER_URL 					                "admin@samp-pawn.cn"
#define TABLE_BIZZ          						"bissnes"
#define TABLE_ACCOUNT 								"accounts"
#define TABLE_HOUSE 								"house"
#define TABLE_GANGZONE								"gangzone"
#define TABLE_OTHER									"other"
#define TABLE_LOGS                                  "logs"
#define YouDoNotHaveEnoughMoneyBank 				"你的银行账户余额不足!"
#define YouDoNotHaveEnoughMoney 					"你的现金不足!"
#define J_PRODUCT 									1
#define J_TAXI          							2
#define J_FUEL          							3
#define J_BUS           							4
#define J_BULDOZER                                  5
#define J_MEH                                       6
#define J_DALNOBOI                                  7
#define J_AUGONSHIK                                 8
#define J_TRENER                                    9
#define J_MTAXI                               		10

#define MAX_REPORT 1000

#define MAX_SLOTS 300 // 槽位
#define TAZE_WEAPON 23
#define TAZE_TIMER 15000
#define TAZE_DESTROY 5000
#define TEAM_LCN 						(5)
#define TEAM_YAKUZA						(6)
#define TEAM_RM    						(14)
#define MAX_SURFBOARD_SPEED (9.0)
#define FIRE_OBJECT_SLOT			1
#define SILVER_CASE_PRICE 70
#define GOLD_CASE_PRICE 150
#define EXO_CASE_PRICE 250
#define DELTA_CASE_PRICE 350
#define f(%1,              format(%1,sizeof(%1),
#define MAX_AFK_TIME 	(600)
#define MIN_IGROKOV (2)
#define MIN_STAVKA (1000)
#define MAX_STAVKA (1000000)
#define G_STATE_NOT_GAMBLING    0
#define G_STATE_READY           1
#define G_STATE_GAMBLING        2
#define G_STATE_DISPLAY         3
#define G_STATE_PLAY_AGAIN      4
#define	PRICE_SHADOW        	10000   // SHADOW价格
#define	PRICE_MEGA        		10000   // MEGA价格
#define	PRICE_WIRES				10000   // WIRES价格
#define	PRICE_CLASSIC			10000   // CLASSIC价格
#define	PRICE_TWIST				10000   // TWIST价格
#define	PRICE_GROVE				10000   // GROVE价格
#define	PRICE_ATOMIC			10000   // ATOMIC价格
#define	PRICE_DOLLAR			10000   // DOLLAR价格
#define	PRICE_HYDRAULICS		25000   // 液压系统价格
#define	PRICE_HBUMPER_XFLOW		30000   // X-FLOW价格
#define	PRICE_HBUMPER_ALIEN		30000   // ALIEN价格
#define	PRICE_BBUMPER_XFLOW		30000   // X-FLOW价格
#define	PRICE_BBUMPER_ALIEN		30000   // BBUMPER_ALIEN价格
#define	PRICE_SPOILER_XFLOW		30000   // SPOILER_X-FLOW价格
#define	PRICE_SPOILER_ALIEN		30000   // SPOILER_ALIEN价格
#define	PRICE_NITRO_2X			20000   // 2х价格
#define	PRICE_NITRO_5X			20000   // 5х价格
#define	PRICE_NITRO_10X			20000   // 10х价格
#define SDK_BASKETBALL_MDL 2114
#define SDK_BASKET_MDL 2114
#define SDK_BASKETBALL_SLOT 9
#define SDK_TACKLE_COOLDOWN 2
#define TAXI_DIALOG			5300
#define TAXI_PRICEROUT		0.6
#define TAXI_PRICERENT		1000
#define MAX_TAXI 12
#define DIALOG_PAY (932)
#define SPAWN_CARS 600
#define D_NONE                                      9999
#define MODE_SKATE (0)
#define TYPE_SKATE (0)
#define INDEX_SKATE (0)
#define EXIT_DIALOG (933)
#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define MAX_RULLET 3
#define MAX_OBJ 				5000
#define IsKicked(%0) GetPVarInt(%0, "kicked")
#define Update 					120
#define MAX_GZ          	  			(133) // GZ限制
#define MAX_ATTEMPT_GANG 	   			11 // 上限数量 ( 尝试 )
#define GasMax 					100
#define VEHICLE_PARAMS_OFF  	0
#define VEHICLE_PARAMS_ON   	1
#define CHECKPOINT_NONE 		0
#define YouCanNot 									"你无法使用该功能!"
#define CHECKPOINT_HOME 		102
#define CHECKPOINT_CAR          101
#define forEx(%0,%1) for(new %0; %0 != %1; %0++)
#define FixConsole(%1) for(new rSt; rSt < strlen(%1); rSt++) if(%1[rSt] > 191 && %1[rSt] < 240) %1[rSt] -= 64; else if(%1[rSt] > 239 && %1[rSt] < 256) %1[rSt] -= 16; else if (%1[rSt] == 168 ) %1[rSt] += 72; else if (%1[rSt] == 184) %1[rSt] += 57
#define DIALOG_STYLE_MSGBOX 	0
#define DIALOG_STYLE_INPUT 		1
#define DIALOG_STYLE_LIST 		2
#define DIALOG_STYLE_PASSWORD 	3
#define NUMBER_OF_ARMYTRUCKS    5
#define Ammo_SDPISTOL 			15
#define Ammo_DEAGLE             20
#define Ammo_SHOTGUN            15
#define Ammo_MP5                25
#define Ammo_AK47               35
#define Ammo_M4A1				35
//=============================== 颜色 =====================================//
#define COLOR_FLIGHTRED    		(0xFF6347FF)
#define COLOR_FGREEN        	(0x2CA109FF)
#define COLOR_FSERVER      		(0xFFFF90FF)
//============================ 聊天定义 ====================================//
#define SendErrorMessage(%0,%1) \
	SendClientMessage(%0, COLOR_FLIGHTRED, "―错误:{FFFFFF} "%1)

#define SendSyntaxMessage(%0,%1) \
	SendClientMessage(%0, COLOR_FGREEN, "―系统:{FFFFFF} "%1)

#define SendServerMessage(%0,%1) \
	SendClientMessage(%0, COLOR_FSERVER, "―服务器:{FFFFFF} "%1)
//#deifne SCM SendClientMessage
//#define SPD ShowPlayerDialog
//================================== Color ===================================//
#define COLOR_PAYCHEC 0xa4cd00AA
#define COLOR_BOX 0x00000070
#define COLOR_LIME 0x66CC00AA
#define COLOR_BBLUE 0x20A9FFFF
#define COLOR_CLUB 0x00AFF6AA
#define COLOR_ORANGE 0xFF9900AA
#define COLOR_ISPOLZUY 0x7FB151FF
#define COLOR_GREENYELLOW 0xADFF2FAA
#define COLOR_VALIK 0x73B461FF
#define COLOR_GRAD1 0xB4B5B7FF
#define COLOR_SINIY 0x00004FAA
#define COLOR_LG 0x7FFF00FF
#define COLOR_BLUE 0x33AAFFFF
#define COLOR_SALMON 0xFA8072AA
#define COLOR_SYSTEM 0xEFEFF7AA
#define COLOR_KHAKI 0xF0E68CAA
#define COLOR_TEAL 0x008080FF
#define COLOR_GRAD2 0xBFC0C2FF
#define COLOR_INDIGO 0x4B00B0AA
#define COLOR_IVORY 0xFFFF82AA
#define COLOR_TEAL 0x008080FF
#define COLOR_GRAD3 0xCBCCCEFF
#define COLOR_GRAD4 0xD8D8D8FF
#define COLOR_GRAD5 0xE3E3E3FF
#define COLOR_GRAD6 0xF0F0F0FF
#define COLOR_GRAD7 0xF0F0F0FF
#define COLOR_GRAD8 0xF0F0F0FF
#define COLOR_BLACK 0x000000AA
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_GREEN 0x33AA33AA
#define COLOR_BLUEGREEN 0x46BBAA00
#define COLOR_ORANGE 0xFF9900AA
#define COLOR_RED 0xAA3333AA
#define COLOR_LIGHTRED 0xFF6347AA
#define COLOR_LIGHTBLUE 0x33CCFFAA
#define COLOR_LIGHTGREEN 0x9ACD32AA
#define COLOR_YELLOW 0xFFFF00AA
#define COLOR_YELLOW2 0xF5DEB3AA
#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_REDD 0xFF0000AA
#define COLOR_BROW 0xA85400AA
#define COLOR_FADE1 0xE6E6E6E6
#define COLOR_FADE2 0xC8C8C8C8
#define COLOR_FADE3 0xAAAAAAAA
#define COLOR_FADE4 0x8C8C8C8C
#define COLOR_FADE5 0x6E6E6E6E
#define COLOR_PURPLE 0xC2A2DAAA
#define COLOR_DBLUE 0x2641FEAA
#define COLOR_ALLDEPT 0xFF8282AA
#define COLOR_NEWS 0xFFA500AA
#define COLOR_OOC 0xE0FFFFAA
#define TEAM_HIT_COLOR 0xFFFFFF00
#define TEAM_BLUE_COLOR 0x8D8DFF00
#define COLOR_ADD 0x63FF60AA
#define TEAM_GROVE_COLOR 0x00D900C8
#define TEAM_VAGOS_COLOR 0xFFC801C8
#define TEAM_BALLAS_COLOR 0xD900D3C8
#define TEAM_AZTECAS_COLOR 0x01FCFFC8
#define TEAM_ORANGE_COLOR 0xFF830000
#define COLOR_INVIS 0xAFAFAF00
#define COLOR_SPEC 0xBFC0C200
#define COLOR_STROKA 0xFD0A9FF
#define Cvet_1 0xFF0000FF
#define Cvet_5 0x0000FFFF

//=============================== HTML COLOR =================================//
#define EROR     									"{FF0000}[错误]{FFFFFF}"
#define INFO     									"{9932CC}[信息]{FFFFFF}"
#define GOOD     									"{00CD00}[完成]{FFFFFF}"
#define MONEYC      								"{1E90FF}"
#define WHITE                                       "{FFFFFF}"
#define D_COL       								"{F4A460}"
#define RED         								"{FF0000}"
#define GREEN       								"{00CD00}"

//=============================== 全局变量 ==============================//
enum dfInfo
{
	bool:dfUsed,dfPlayer = INVALID_PLAYER_ID,dfTime, Text3D:dfText
};
//new ans[144],num,moder;
new s_LastAnim[MAX_PLAYERS] = {-1, ...};
new Float:s_LastZVelo[MAX_PLAYERS] = {0.0, ...};
new Float:s_FallDeathVelocity = -0.6;
new Float:s_LastZ[MAX_PLAYERS] = {0.0, ...};
new HideDamage[MAX_PLAYERS];
new PlayerText:Damage_Text_Draw[MAX_PLAYERS][2];
new s_LastStop[MAX_PLAYERS];
new Text3D:Player3DText[MAX_PLAYERS];
enum dataSurfboard
{
	modelID,
	objectID,
	Float:sppeed,
	Float:position[7]
};
new surfboardID = -1, surfboardData[50][dataSurfboard], Float:surfboardGoTo[50][3];
new SurfPlayerUse[MAX_PLAYERS];
enum skate
{
    bool:sActive,
    sSkate,
};
new lowriders;
new zanyat[3];
new lscmipic[1];
new VehID[MAX_PLAYERS];
new block[MAX_PLAYERS],ObjectShip[MAX_PLAYERS],Ships[MAX_PLAYERS];
new sflvslak1,sflvslak2,Slak1,Slak2,Slak3,Slak4;
new Text:STDAUTO[17],PlayerText:TDAUTO[MAX_PLAYERS];//授权
new InfoSkate[MAX_PLAYERS][skate];
new bool:clicktd[MAX_PLAYERS];
new Indicators_xqz[MAX_VEHICLES][6];
new Text:Textdraw7[MAX_PLAYERS], Text:Textdraw8[MAX_PLAYERS];
new CopSal = 0;
new SudSal = 0;
new MhsSal = 0;
new MerSal = 0;
new TaxSal = 0;
new LicSal = 0;
new MehSal = 0;
new biztax = 0;
new electrich = 0;
new TaxValue = 0;
new Text:BusWork[5],PlayerText:BusInfo[MAX_PLAYERS][2];//公交车司机
new OnReic[MAX_PLAYERS]=0; //公交车司机
new SummaRace[MAX_PLAYERS] = 5;//旅程的票价
new Zarabotok[MAX_PLAYERS]=0; //公交车司机
new RaceBus[MAX_PLAYERS];
new ost[27]; //对于公交车司机
new bool:JobFarm[MAX_PLAYERS];
new Farm[MAX_PLAYERS];
new synctimer;
new TextDrawFarm[MAX_PLAYERS];
new Text:FarmJob[7];
new taxicar[17];
new Text:Filling[4];
new Text:ATM[14];
new Text:GPSEnabled[3];
new Text:playergun[25];
new FireObject[MAX_PLAYERS][2],FireSphere[MAX_PLAYERS];
new HorsesPICK[1], Text3D:Horses3D;
new ServerTimer[1];
new PlayerText:Horse[MAX_PLAYERS][4], PlayerText:BG[MAX_PLAYERS][2], PlayerText:Start[MAX_PLAYERS], PlayerText:Finish[MAX_PLAYERS], PlayerText:Start2[MAX_PLAYERS], PlayerText:Finish2[MAX_PLAYERS], HorseCD, PlayerText:HorseNum[MAX_PLAYERS][4], HorseAnimCount,Float:HorsePosX[MAX_PLAYERS][4], HorseStop,RaceStarted;
new Text3D:Player3DTextIn[MAX_PLAYERS];
new PlayerText:JobStats[MAX_PLAYERS][5];
new bool: ac_1[MAX_PLAYERS char];
new univerpic[2], univerraz[1];
new UniversetyPickup1[21],LearnObject[MAX_PLAYERS],LearnTimer[MAX_PLAYERS];
new engine,lights,alarm,doors,bonnet,boot,objective; // 车辆
new currentcase[MAX_PLAYERS];
new format_string[244];
new saveweapon, saveammo;
new PlayerText:Captcha[12], TextArray[] = "1234567890";
// ========== 反作弊
new DamagerTime[MAX_PLAYERS];
new Damager[MAX_PLAYERS char];
new FloodKill[MAX_PLAYERS char];
new DamagWarn[MAX_PLAYERS char];
new Float:Armadura[MAX_PLAYERS];
new AFK[MAX_PLAYERS];
new Float:Vida[MAX_PLAYERS];
new Float:DamHealth[MAX_PLAYERS];
new Float:Dmg[MAX_PLAYERS];
new bool:Spawn[MAX_PLAYERS];
new Float:SpeedVeh[MAX_PLAYERS];
new Float:S_x[MAX_PLAYERS];
new GetAnim[MAX_PLAYERS];
new Float:S_y[MAX_PLAYERS];
new Float:S_z[MAX_PLAYERS];
new Float:AC_Air[MAX_PLAYERS][3];
new bool: BanVeh[MAX_VEHICLES];
new TimeUpdateVeh[MAX_PLAYERS];
new GodCar[MAX_PLAYERS];
new Float:VehPos[MAX_VEHICLES][4];
new Float:PosVeh[MAX_VEHICLES][3];
new Float:CountVeh[MAX_VEHICLES][2];
new StatusAirTP[MAX_PLAYERS];
new CarID[MAX_PLAYERS];
new Float:MpTp[MAX_PLAYERS][3];
// ==========
new bool:MehanON[MAX_PLAYERS];
new Text:weapmenu[52];
new Text:menutd[20];
new Text:bankmenu[25];
new Text:CheckSobClosed;
enum vInfo
{
    vInputID,
    vInt
};
new VehicleInfo[MAX_VEHICLES][vInfo];
new AutoRobPeople[63] = {
	400,401,402,404,405,409,410,411,412,413,414,418,419,420,421,426,436,438,439,445,459,466,467,470,474,491,
	492,507,516,517,518,526,527,529,533,534,536,540,541,542,546,547,549,550,551,555,558,560,562,566,567,575,
	576,580,585,587,596,597,598,602,603,604
};
new Float:gparkcar[101][4] = {
{2889.7695,-1929.0269,10.8499,180.1829}, // 1
{2893.1458,-1928.4424,10.8507,180.1846},
{2896.7625,-1928.4309,10.8672,180.1834},
{2900.4624,-1928.4189,10.8672,180.1834},
{2903.6245,-1928.4089,10.8673,180.1834},
{2910.9326,-1928.3853,10.8673,180.1834},
{2914.7612,-1928.3730,10.8754,180.1825},
{2918.5359,-1928.3612,10.8754,180.1825},
{2922.0652,-1928.3497,10.8897,180.1834},
{2924.9417,-1928.3406,10.8899,180.1834},
{2929.3022,-1928.3267,10.8900,180.1834},
{2932.5435,-1928.3163,10.8901,180.1834},
{2935.7756,-1928.3060,10.8903,180.1834},
{2939.5718,-1928.2938,10.8904,180.1834},
{2943.5759,-1928.2810,10.8906,180.1834},
{2947.2092,-1928.2694,10.8907,180.1834},
{2950.4451,-1928.2590,10.8908,180.1834},
{2954.1218,-1928.2474,10.8910,180.1834},
{2957.2644,-1928.2374,10.8911,180.1834},
{2960.5730,-1928.2268,10.8912,180.1834},
{2964.7583,-1928.2133,10.8914,180.1834},
{2971.8794,-1928.1903,10.8917,180.1834},
{2975.5017,-1928.1787,10.8918,180.1834},
{2979.6563,-1928.1654,10.9061,180.1848},
{2982.9163,-1928.1549,10.9061,180.1848},
{2986.0603,-1928.1448,10.9061,180.1848},
{2985.7209,-1978.5822,10.8535,359.8628},
{2982.7493,-1978.5750,10.8535,359.8628},
{978.8459,-1978.5654,10.8535,359.8628},
{2975.6663,-1978.5580,10.8534,359.8628},
{2971.8293,-1978.5486,10.8534,359.8628},
{2967.8477,-1978.5389,10.8533,359.8628},
{2964.1824,-1978.5300,10.8533,359.8628},
{2960.8989,-1978.5221,10.8533,359.8628},
{2957.6462,-1978.5143,10.8532,359.8628},
{2953.8823,-1978.5050,10.8532,359.8628},
{2949.8047,-1978.4950,10.8532,359.8628},
{2947.0454,-1978.4883,10.8531,359.8628},
{2943.2231,-1978.4789,10.8531,359.8628},
{2939.9656,-1978.4711,10.8530,359.8628},
{2936.2432,-1978.4620,10.8530,359.8628},
{2932.9490,-1978.4541,10.8530,359.8628},
{2929.1191,-1978.4451,10.8529,359.8628},
{2925.5601,-1978.4364,10.8529,359.8628},
{2921.7095,-1978.4271,10.8529,359.8628},
{2918.3401,-1978.4191,10.8528,359.8628},
{2915.0986,-1978.4114,10.8528,359.8628},
{2910.9719,-1978.4014,10.8527,359.8628},
{2907.2004,-1978.3921,10.8527,359.8628},
{2903.9417,-1978.3844,10.8527,359.8628},
{2900.5874,-1978.3762,10.8526,359.8628},
{2896.4417,-1978.3663,10.8526,359.8628},
{2893.1702,-1978.3586,10.8525,359.8628}, // 54
{2982.6123,-2017.7283,11.3954,1.3345},
{2979.1787,-2017.8077,11.6280,1.3345},
{2975.4746,-2017.8937,11.8789,1.3345},
{2972.0664,-2017.9725,12.1098,1.3345},
{2964.5208,-2018.1473,12.6211,1.3345},
{2961.7388,-2018.2119,12.8095,1.3345},
{2957.8579,-2018.3018,13.0725,1.3345},
{2954.0073,-2018.3910,13.3333,1.3345},
{2950.1277,-2018.4807,13.5962,1.3345},
{2947.8252,-2018.5339,13.7522,1.3345},
{2943.6663,-2018.6300,14.0339,1.3345},
{2936.5874,-2018.7920,14.5330,1.2933},
{2932.4465,-2018.8850,14.8195,1.2933},
{2928.8936,-2018.9648,15.0653,1.2933},
{2925.0388,-2019.0514,15.3321,1.2933},
{2921.8291,-2018.2623,15.5511,1.2933},
{2918.0850,-2018.3464,15.8101,1.2933},
{2914.2915,-2018.4314,16.0726,1.2933},
{2911.0425,-2018.5044,16.2974,1.2933},
{2914.5066,-1928.6644,19.1990,181.8529},
{2918.0059,-1928.5510,19.4389,181.8529},
{2921.3159,-1928.4437,19.6658,181.8529},
{2932.6072,-1928.0775,20.4400,181.8529},
{2928.6643,-1928.2052,20.1696,181.8529},
{2935.8835,-1927.9712,20.6646,181.8529},
{2939.5847,-1927.8512,20.9184,181.8529},
{2943.7136,-1927.7174,21.2015,181.8529},
{2946.8784,-1927.6146,21.4185,181.8529},
{2949.8521,-1927.5183,21.6224,181.8529},
{2954.1799,-1927.3779,21.9191,181.8529},
{2957.4121,-1927.2732,22.1407,181.8529},
{2961.1565,-1927.1517,22.3974,181.8529},
{2964.6262,-1927.0394,22.6353,181.8529},
{2974.9219,-1988.8892,24.4950,181.0852},
{2972.2419,-1988.9408,24.6759,181.0852},
{2968.8752,-1989.0056,24.9032,181.0852},
{2964.6338,-1989.0870,25.1895,181.0852},
{2961.8821,-1989.1401,25.3753,181.0852},
{2957.5149,-1989.2242,25.6701,181.0852},
{2954.2961,-1989.2864,25.8874,181.0852},
{2950.7617,-1989.3544,26.1260,181.0852},
{2946.9102,-1989.4283,26.3860,181.0852},
{2943.3545,-1989.4968,26.6261,181.0852},
{2940.0051,-1989.5612,26.8522,181.0852},
{2935.8328,-1989.6416,27.1338,181.0852},
{2932.9797,-1989.6965,27.3264,181.0852},
{2929.2014,-1989.7692,27.5815,181.0852},
{2925.2390,-1989.8457,27.8490,181.0852}
};
/*new Float:gRandomSpawn[4][3] = {
{2043.4955,-2021.4524,14.0345},
{2043.4955,-2021.4524,14.0345},
{2043.4955,-2021.4524,14.0345},
{2043.4955,-2021.4524,14.0345}
};*/
// 酒店
new otelicon[1];
new otelvxod[2];
new Float:gRandomPlayerSpawns[8][3] = {
{120.0210,1084.3729,1015.6948},
{119.3845,1090.4325,1015.6948},
{120.0529,1096.9628,1015.6948},
{120.3552,1102.9854,1015.6948},
{97.8281,1102.7465,1015.6948},
{98.0528,1096.9697,1015.6948},
{98.3049,1089.8636,1015.6948},
{97.7145,1083.4880,1015.6948}
};
new otelzasel[1];

new Text:LRRegister[4];
new Text:LRRightBox[5];
new PlayerText:LRShowVehicle[MAX_PLAYERS];
new PlayerText:LRArrows[MAX_PLAYERS][3];
new gChangeLRVehicle[8] = {536, 575, 534, 567, 535, 566, 576, 412};
new gNumberLRList[MAX_PLAYERS];
new gGamersLowRiders[2];
new Float:gDriversPlace[2][4] =
{
    {2587.9106,-1907.5289,3.5145,90.0940},
    {2580.3086,-1907.0675,3.5101,270.7194}
};
new PlayerVehicleID[MAX_PLAYERS];
new PlayerName[MAX_PLAYERS][MAX_PLAYER_NAME];

new SelectedImage[4][15] =
{
    "LD_BEAT:up",
    "LD_BEAT:down",
    "LD_BEAT:left",
    "LD_BEAT:right"
};

new PlayerImageID[MAX_PLAYERS][3];
new bool:StartServerRiders;
new TimerSecond[2];
new PlayerCountGoodKeys[MAX_PLAYERS];
//
new Text:TDInfo[5];
new Text:Teleport[42];

// 反作弊
new SecondFire[MAX_PLAYERS];
new FirstFire[MAX_PLAYERS];
new Cheat1,Text:CheatText[10];
new time_podoz,time_zcar;
new time_vcar,time_lspawn,time_pick;
// 伤害
new KillTimeForShowDamage[MAX_PLAYERS];
new KillTimeForShowDamage2[MAX_PLAYERS];
new CountDamage[MAX_PLAYERS];
new Text:heal44[MAX_PLAYERS];
new Float:healthy[MAX_PLAYERS];
new Float:Armor[MAX_PLAYERS];
new Float:Armor2[MAX_PLAYERS];
new Float:healthy2[MAX_PLAYERS];
new Text3D:Damage[MAX_PLAYERS];
new addchet[MAX_PLAYERS];
// 决斗
new duelpic[1];
new DLTime;
new setplayerid;
new getplayerid;
new duel_sum;
new duel_map[300];
new duel_weapon[300];
new duel_map_num;
new duel_weapon_num;
new duel_system;
new duel_gkiller;
new duel_skiller;
new duel_second;
new duel_minute;
new Text:Box_1;
new Text:Box_2;
new Text:System;
new Text:Aga;
new Text:Aga2;
new Text:Time;
//
new ZapretDice[MAX_PLAYERS];
new KostiName[MAX_PLAYERS];
new kostiKos[MAX_PLAYERS];
new KostiMoney[MAX_PLAYERS];
new Predlog[MAX_PLAYERS];
new nomeravto[1];
new cpokras[1];
new bool: NeedDell[MAX_PLAYERS];
new ColorBallon[MAX_PLAYERS] = 3;
new TimerP;
new gSpectateID[MAX_PLAYERS];
new PlayerAFK[MAX_PLAYERS];
new PlayerAFKTime[MAX_PLAYERS][2];
new SpecAd[MAX_PLAYERS];
new racecars[MAX_VEHICLES];
new PlayerText:SpecTD[16][MAX_PLAYERS];
new ReconTimer;
new InTuning[MAX_PLAYERS];
new PlayerText:TuningTD[11][MAX_PLAYERS];
new Animited[MAX_PLAYERS];
new Text:RegisterTD[19];
new PlayerText:RegName[MAX_PLAYERS][1];
new reg_pass[MAX_PLAYERS][48];
new PlayerBar: satiet[MAX_PLAYERS];
new hit[2];
new Text:SMS;
new Tyrmasf[1];
new Tyrmaul[1];
new genSFa[2];
new yashik[2];
new Kazarma[2];
new gatetimersfa;
new gatetimerlva;
new Text:RentDraw[16];
new PlayerRemen[MAX_PLAYERS];
new GetBuritoID[MAX_PLAYERS];
new Skor[MAX_PLAYERS];
new Float: X777[MAX_PLAYERS];
new Float: Y777[MAX_PLAYERS];
new Float: Z777[MAX_PLAYERS];
new areaskutor[7];
new Fishing[MAX_PLAYERS];
new furii[8];
new Float:Fuell[MAX_VEHICLES], Refueling[MAX_PLAYERS];
new fura[MAX_PLAYERS];
new boordh[256];
new pokupudotka[1];
new pickbanklv[2];
new pickbanksf[2];
new Text:URL[7];
new ashlem[MAX_PLAYERS];
new svadba[1];
new HPTimer[MAX_PLAYERS];
new cerkva[2];
new clubp[2];
new parashuts[4];
new med;
new avtougon[1];
new ekspert[1];
new picacsec[1];
new Gruzz[MAX_PLAYERS];
new rentcarcerkva[3];
new fbispy;
new pickupmed;
new ConnectTimed[MAX_PLAYERS];
new Vorotasah;
new objectradar[MAX_PLAYERS];
new Dobivat[MAX_PLAYERS];
new RudokopPick[4];
new STimer[MAX_PLAYERS];
new Rudokop[MAX_PLAYERS];
new mehan[30];
new RudnikAmount[MAX_PLAYERS];
new IsConnected[MAX_PLAYERS char];
new vorota[3];
new Text:BPH[4],Text:PHONES[7];
new telefons[1];
new tdload[3];
new Float:GMHP[MAX_PLAYERS][2];
new Float:VEHHP[MAX_PLAYERS][2];
new Float:GMARMOUR[MAX_PLAYERS][1];
new TOTALPRODUCT;
new TOTALFUEL;
new fermpicjob[1];
new nouncar[9];
new jackcar[MAX_PLAYERS];
new jobproduct[14];
new NounObject[20];
new predlojitmp[MAX_PLAYERS];
new sn[MAX_PLAYER_NAME];
new gp[MAX_PLAYER_NAME];
new Text:PlayTD[6];
new PlayURL[MAX_PLAYERS];
new PlayURLON[MAX_PLAYERS];
new PlayerText: gInfoCasino[14];
new
	TimeStavka[8] = 0;
new
	Text:KostiBox[8],
	Text:TableName[8],
	Text:KostiInfo[8],
	Text:KostiGameInfo[8],
	Text:KostiKeyDone,
	Text:KostiKeyExit,
	Text:KostiKeyStavka;

new
Float:StolCoor[8][3] ={
	{1958.67, 1028.13, 991.94},
	{1958.84, 1021.62, 991.94},
	{1958.87, 1015.71, 991.94},
	{1958.86, 1008.58, 991.94},
	{1964.22, 1008.55, 991.94},
	{1964.13, 1015.52, 991.94},
	{1964.08, 1021.56, 991.94},
	{1964.08, 1027.99, 991.94}
};
new Float:SpawnInfo[8][3] =
{
	{1441.4684,749.9454,10.8203}, //
	{954.3276,1734.4581,8.6484},// 
	{1464.7126,2773.5957,10.6719}, // 
	{2721.0615,-1951.6299,13.5469}, // 
	{2074.2205,-1187.5214,23.6609}, // 
	{2487.6582,-1664.7500,13.3438}, // 
	{2790.3486,-1606.6406,10.9219}, // 
	{1681.6520,-2113.1238,13.3828} // 
};
new Float:BolkaSpawns[3][3] = {
{1155.7382,-1345.4010,1001.9869},
{1155.9176,-1356.2888,1001.9819},
{1157.3159,-1368.2029,1001.9819}
};
new Text3D:StolCoorText[8];
new
pickupcas, CasinoInfo[2];

enum Stol {
	Gamer[5],
	Stavka,
	Bank,
	Crupe,
	Igrokov,
	GameStart
}
new StolInfo[8][Stol];
new gCasinoCP[6];
new Text:KeyStartGang, Text:KeyMoneyGang, Text:KeyExitGang, Text:KasinoGangBox, PlayerText:CasinoStavka, PlayerText:CasinoAllMoney;
new Text:Box,Text:Digit1[6],Text:Digit2[6],Text:Digit3[6],Slots[MAX_PLAYERS][3],SlotCounter[MAX_PLAYERS],Gambling[MAX_PLAYERS],SlotTimer[MAX_PLAYERS],Bet[MAX_PLAYERS],Balance[MAX_PLAYERS];

new _TuningPriceWheels[8],
	_TuningPriceSpoilers[2],
	_TuningPriceHydraulics,
	_TuningPriceHBumper[2],
	_TuningPriceBBumper[2],
	_TuningPriceNitro[3]
;
// 棒球棒
enum {
	BASKETBALL_WALK,
	BASKETBALL_RUN,
	BASKETBALL_DUNK,
	BASKETBALL_DEFENSE,
}
enum {
	ISNOT_DYNAMIC_OBJECT,
	IS_DYNAMIC_OBJECT,
}
enum {
	SDK_TEAM_1,
	SDK_TEAM_2,
}
enum {
	AREA_EASTLS,
}
enum EBallInfo {
	EBallModelID,
	EBallType,
Float:EBallX,
Float:EBallY,
Float:EBallZ,
Float:EBallRotX,
Float:EBallRotY,
Float:EBallRotZ,
	EBallVW,
	EBallInt,
	EBallObjectID,
	EBBallArea,
	EBBallOwner,
};
enum EBallBasketInfo {
	EBasketModelID,
	EBasketType,
Float:EBasketX,
Float:EBasketY,
Float:EBasketZ,
Float:EBasketRotX,
Float:EBasketRotY,
Float:EBasketRotZ,
	EBasketVW,
	EBasketInt,
	EBasketObjectID,
	EBasketTeam,
	EBasketArea,
	EBasketScore,
Text3D:EBasketText,
};
new BBallsInfo[][EBallInfo] = {
	{SDK_BASKETBALL_MDL, IS_DYNAMIC_OBJECT, 2316.94,-1527.65,24.45, 0.0, 0.0, 0.0, 0, 0, 0, AREA_EASTLS, -1}
};
new BallBasketInfo[][EBallBasketInfo] = {
	{SDK_BASKET_MDL, ISNOT_DYNAMIC_OBJECT, 2316.83, -1514.80, 28.14, 0.0, 0.0, 90.0, 0, 0, 0, SDK_TEAM_1, AREA_EASTLS, 0},
	{SDK_BASKET_MDL, ISNOT_DYNAMIC_OBJECT, 2317.03, -1541.13, 28.14, 0.0, 0.0, 90.0, 0, 0, 0, SDK_TEAM_2, AREA_EASTLS, 0}
};

enum VEHICLE_DATA
{
	Float:carshotX,
	Float:carshotY,
	Float:carshotZ
}
new gVehicles[MAX_VEHICLES][VEHICLE_DATA];
/// 苹果
new yablokapic[1];
new gTree[15],
	gTreeHealth[15] = {100, ...},
	//gTreeCP[15],
	bool:gTreeStatus[15];
new Float:ObjectTree[][3] = {
	{1030.50977, -310.28210, 69.38030},
	{1018.77686, -310.36716, 69.38030},
	{1041.71082, -310.32391, 69.38030},
	{1052.90796, -310.22421, 69.38030},
	{1063.77588, -310.77939, 69.38030},
	{1063.92090, -300.04129, 69.38030},
	{1052.72327, -300.57681, 69.38030},
	{1041.12012, -300.01431, 69.38030},
	{1030.03711, -300.55710, 69.38030},
	{1018.57959, -300.37961, 69.38030},
	{1018.41962, -291.12119, 69.38030},
	{1030.04858, -290.98010, 69.38030},
	{1041.28101, -291.09641, 69.38030},
	{1052.85083, -291.22961, 69.38030},
	{1064.06470, -290.82520, 69.38030}
};
///===========
new TotalGzR;
new TotalGzA;
new TotalGzB;
new TotalGzG;
new TotalGzV;
new TOTALGZ;
new CaptureTime = 60;
new bool:zahvat = false,attemptslot = -1,CaptureAttempt[5]={0,...};
new PlayerText:Capture[MAX_PLAYERS][4];
enum GzoneInfo
{
	gID,
	Float:gCoords[4],
	gFrakVlad,
	gNapad,
	ZoneOnBattle,
	gTime,
	gzTimer,
	GZids,
	gzSpawn,
	string:GZName[30],
	string:strcpt[30]
}
new GZInfo[MAX_GZ][GzoneInfo];
new FrakCD[20],FracVoina[20],CountOnZone[20];
// =========== 饰品
new accessor[MAX_PLAYERS];
new Text:Accessories[21];
new Text:BuyAcc[MAX_PLAYERS];
new Text:BuyAccesor[7];
new buyaccessor[MAX_PLAYERS];
new accchoose[MAX_PLAYERS];
new HatsGlasses[MAX_PLAYERS];
new PlayerText:AccInv[MAX_PLAYERS][14];
new AccSlot[MAX_PLAYERS];
new AccInvInfo[MAX_PLAYERS][14];
new Accesor[2][34][2] = {
{{19069, 500},
{19068, 400},
{19067, 400},
{18970, 200},
{18969, 500},
{18968, 500},
{18967, 600},
{18973, 500},
{18972, 500},
{18971, 800},
{18951, 500},
{18950, 500},
{18949, 500},
{18948, 100},
{18947, 500},
{18946, 500},
{18945, 500},
{18944, 500},
{18935, 500},
{18934, 500},
{18933, 500},
{18932, 500},
{18931, 500},
{18930, 500},
{18929, 500},
{18928, 500},
{18927, 500},
{18926, 500},
{19098, 500},
{19097, 500},
{19096, 500},
{18962, 500},
{19095, 500},
{19137, 500}},
{{19140, 500},
{19139, 400},
{19138, 400},
{19035, 200},
{19034, 500},
{19033, 500},
{19032, 600},
{19031, 500},
{19030, 500},
{19029, 800},
{19028, 500},
{19027, 500},
{19026, 500},
{19025, 100},
{19024, 500},
{19023, 500},
{19022, 500},
{19021, 500},
{19020, 500},
{19019, 500},
{19018, 500},
{19017, 500},
{19016, 500},
{19015, 500},
{19014, 500},
{19013, 500},
{19012, 500},
{19011, 500},
{19010, 500},
{19009, 500},
{19008, 500},
{19007, 500},
{19006, 500},
{0, 0}}};

new Float:SkinOffSet[300][7] = {
{0.098771, 0.030772, -0.000335, 85.342658, 84.122947, 4.236968, 1.000000}, // - 0
{0.100766, 0.028630, -0.003521, 87.936676, 82.110870, 4.236968, 1.000000}, // - 1
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968, 1.000000}, // - 2
{0.099500, 0.047703, 0.000558, 280.687683, 90.938697, 169.126358, 1.000000}, // - 3
{0.126660, 0.017465, -0.004450, 281.516479, 103.193008, 168.312896, 1.167009}, // - 4
{0.109650, 0.017465, -0.004712, 281.516479, 106.686439, 168.312896, 1.167009}, // - 5
{0.101269, 0.028933, 0.000001, 281.516479, 91.839576, 168.312896, 1.000000}, // - 6
{0.090066, 0.043458, -0.006523, 87.936676, 82.110870, 4.236968, 1.000000}, // - 7
{0.087873, 0.038192, -0.003603, 281.516479, 91.839576, 168.312896, 1.020467}, // - 8
{0.070977, 0.028663, 0.000147, 81.164970, 92.128402, 4.236968, 1.000000},  // - 9
{0.072317, 0.032179, -0.002934, 86.843269, 84.196006, 4.236968, 1.000000}, // - 10
{0.072317, 0.035465, -0.002201, 86.843269, 84.196006, 4.236968, 1.000000}, // - 11
{0.072317, 0.028100, -0.002201, 86.843269, 84.196006, 4.236968, 1.000000}, // - 12
{0.076569, 0.028100, -0.002201, 86.843269, 84.196006, 4.236968, 1.000000}, // - 13
{0.091310, 0.049169, -0.002201, 86.843269, 84.196006, 4.236968, 1.000000}, // - 14
{0.073734, 0.006292, -0.002755, 86.843269, 84.196006, 4.236968, 1.000000}, // - 15
{0.092845, 0.040331, 0.000183, 86.843269, 82.864280, 4.236968, 1.000000},  // - 16
{0.088241, 0.030184, -0.000157, 86.843269, 82.864280, 4.236968, 1.000000}, // - 17
{0.061677, 0.029596, -0.007398, 86.843269, 82.864280, 4.236968, 1.000000}, // - 18
{0.079911, 0.029596, -0.002934, 86.843269, 82.864280, 4.236968, 1.000000}, // - 19
{0.095079, 0.029596, -0.001718, 85.261871, 86.296562, 4.236968, 1.000000}, // - 20
{0.093728, 0.042083, -0.005781, 85.261871, 81.636192, 4.236968, 1.000000}, // - 21
{0.079585, 0.042083, -0.005781, 85.261871, 81.636192, 4.236968, 1.000000}, // - 22
{0.090786, 0.041737, -0.005263, 85.261871, 81.636192, 4.236968, 1.000000}, // - 23
{0.085247, 0.026941, -0.000317, 85.261871, 81.636192, 4.236968, 1.000000}, // - 24
{0.081646, 0.031448, -0.001113, 89.393653, 81.665985, 4.236968, 1.000000}, // - 25
{0.083700, 0.033814, -0.001960, 86.436462, 81.665985, 4.236968, 1.000000}, // - 26
{0.092498, 0.037321, -0.001960, 86.436462, 85.568023, 4.236968, 1.000000}, // - 27
{0.097068, 0.041360, -0.007881, 86.771400, 85.568023, 4.236968, 1.000000}, // - 28
{0.083456, 0.050595, 0.001011, 86.771400, 77.201461, 4.236968, 1.000000},  // - 29
{0.076983, 0.047168, -0.006161, 86.771400, 74.329719, 4.236968, 1.000000}, // - 30
{0.083798, 0.042184, -0.001869, 86.771400, 83.181861, 4.236968, 1.000000}, // - 31
{0.053021, -0.000587, -0.001869, 86.771400, 66.859710, 4.236968, 1.000000},// - 32
{0.034386, 0.013324, -0.001869, 86.771400, 80.314460, 4.236968, 1.000000}, // - 33
{0.104669, 0.037365, -0.001403, 86.771400, 87.178382, 4.236968, 1.000000}, // - 34
{0.102659, 0.037465, -0.000829, 86.771400, 93.020492, 4.236968, 1.000000}, // - 35
{0.107638, 0.037465, -0.000829, 86.771400, 93.020492, 4.236968, 1.000000}, // - 36
{0.107638, 0.035879, -0.000829, 86.771400, 93.020492, 4.236968, 1.000000}, // - 37
{0.107638, 0.041106, -0.000829, 86.771400, 93.020492, 4.236968, 1.000000}, // - 38
{0.080326, 0.035634, -0.000829, 86.771400, 93.020492, 4.236968, 1.000000}, // - 39
{0.080326, 0.027371, -0.000829, 86.771400, 93.020492, 4.236968, 1.000000}, // - 40
{0.084617, 0.039613, -0.001620, 86.771400, 93.020492, 4.236968, 1.000000}, // - 41
{0.087873, 0.037386, -0.003603, 281.516479, 91.839576, 168.312896, 1.093392}, // - 42
{0.040075, 0.025445, -0.000974, 86.771400, 92.964149, 4.236968, 1.000000}, // - 43
{0.077369, 0.028469, -0.000974, 86.771400, 78.435791, 4.236968, 1.000000}, // - 44
{0.064145, 0.028684, -0.000974, 86.771400, 84.762802, 4.236968, 1.000000}, // - 45
{0.091993, 0.056559, -0.000974, 86.771400, 84.762802, 4.236968, 1.000000}, // - 46
{0.084582, 0.051277, -0.005034, 86.771400, 84.762802, 4.236968, 1.000000}, // - 47
{0.092182, 0.042095, -0.003533, 86.771400, 84.762802, 4.236968, 1.000000}, // - 48
{0.086866, 0.032203, -0.001021, 86.771400, 84.762802, 4.236968, 1.000000}, // - 49
{0.099350, 0.009422, -0.005899, 86.771400, 84.762802, 4.236968, 1.000000}, // - 50
{0.099350, 0.030598, -0.005899, 86.771400, 84.762802, 4.236968, 1.000000}, // - 51
{0.099350, 0.030598, -0.003575, 86.771400, 84.762802, 4.236968, 1.000000}, // - 52
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 53
{0.079123, 0.030598, -0.003575, 86.771400, 84.762802, 4.236968, 1.000000}, // - 54
{0.063159, 0.029641, -0.003575, 86.771400, 84.762802, 4.236968, 1.000000}, // - 55
{0.070293, 0.029641, -0.000570, 86.771400, 84.762802, 4.236968, 1.000000}, // - 56
{0.111305, 0.045368, -0.000570, 86.771400, 84.458084, 4.236968, 1.000000}, // - 57
{0.084901, 0.020965, -0.000570, 86.771400, 79.542411, 4.236968, 1.000000}, // - 58
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 59
{0.090164, 0.044163, -0.004754, 86.771400, 79.542411, 4.236968, 1.000000}, // - 60
{0.087151, 0.041447, -0.000885, 90.928329, 89.598678, 0.000000, 1.000000}, // - 61
{0.094350, 0.041447, 0.005717, 90.928329, 89.598678, 0.000000, 1.000000},  // - 62
{0.075534, 0.041447, -0.001751, 90.928329, 89.598678, 0.000000, 1.000000}, // - 63
{0.075534, 0.041447, -0.001751, 90.928329, 89.598678, 0.000000, 1.000000}, // - 64
{0.087873, 0.032505, -0.003603, 281.516479, 91.839576, 168.312896, 0.965358}, // - 65
{0.104148, 0.034787, 0.001341, 90.928329, 89.598678, 0.000000, 1.000000},  // - 66
{0.104148, 0.034787, 0.001341, 90.928329, 89.598678, 0.000000, 1.000000},  // - 67
{0.087317, 0.039646, -0.004032, 90.928329, 89.598678, 0.000000, 1.000000}, // - 68
{0.074873, 0.039646, -0.003072, 90.928329, 89.598678, 0.000000, 1.000000}, // - 69
{0.090391, 0.042364, 0.005494, 90.928329, 89.598678, 0.000000, 1.000000},  // - 70
{0.090391, 0.022298, -0.001170, 90.928329, 89.598678, 0.000000, 1.000000}, // - 71
{0.090391, 0.039580, -0.001170, 90.928329, 89.598678, 0.000000, 1.000000}, // - 72
{0.090391, 0.038224, -0.001170, 90.928329, 89.598678, 0.000000, 1.000000}, // - 73
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 74
{0.083113, 0.038224, -0.001170, 90.928329, 89.598678, 0.000000, 1.000000}, // - 75
{0.072957, 0.028956, -0.001170, 90.928329, 89.598678, 0.000000, 1.000000}, // - 76
{0.069398, 0.039981, -0.001170, 90.928329, 89.598678, 0.000000, 1.000000}, // - 77
{0.105738, 0.010001, 0.004508, 90.928329, 79.030494, 0.000000, 1.000000},  // - 78
{0.078264, 0.019668, 0.004508, 90.928329, 79.030494, 0.000000, 1.000000},  // - 79
{0.087377, 0.022096, -0.001993, 90.928329, 79.030494, 0.000000, 1.000000}, // - 80
{0.087377, 0.022096, -0.001635, 90.928329, 79.030494, 0.000000, 1.000000}, // - 81
{0.100623, 0.043063, -0.001635, 90.928329, 87.672645, 0.000000, 1.000000}, // - 82
{0.092528, 0.027493, -0.001635, 90.928329, 87.672645, 0.000000, 1.000000}, // - 83
{0.102086, 0.027493, -0.001635, 90.928329, 87.672645, 0.000000, 1.000000}, // - 84
{0.081954, 0.041672, -0.001635, 90.928329, 87.672645, 0.000000, 1.000000}, // - 85
{0.025608, -0.003408, 281.516479, 106.686721, 167.551193, 0.965358}, // - 86
{0.077010, 0.046925, -0.003438, 90.928329, 91.590301, 0.000000, 1.000000}, // - 87
{0.069952, 0.042635, -0.003438, 90.928329, 86.722587, 0.000000, 1.000000}, // - 88
{0.093827, 0.019258, -0.003438, 90.928329, 86.722587, 0.000000, 1.000000}, // - 89
{0.066464, 0.035685, -0.000843, 90.928329, 86.722587, 0.000000, 1.000000}, // - 90
{0.066464, 0.035685, -0.000843, 90.928329, 86.722587, 0.000000, 1.000000}, // - 91
{0.066464, 0.038135, -0.000843, 90.928329, 86.722587, 0.000000, 1.000000}, // - 92
{0.066464, 0.038135, -0.001690, 90.928329, 86.722587, 0.000000, 1.000000}, // - 93
{0.048124, 0.010598, -0.001690, 90.928329, 86.722587, 0.000000, 1.000000}, // - 94
{0.084997, 0.006773, -0.001690, 90.928329, 86.722587, 0.000000, 1.000000}, // - 95
{0.100076, 0.026633, -0.001690, 90.928329, 80.020179, 0.000000, 1.000000}, // - 96
{0.061686, 0.027537, -0.001690, 90.928329, 80.020179, 0.000000, 1.000000}, // - 97
{0.098318, 0.053993, -0.001690, 90.928329, 89.237678, 0.000000, 1.000000}, // - 98
{0.098318, 0.033702, -0.001690, 90.928329, 89.237678, 0.000000, 1.000000}, // - 99
{0.086149, 0.042526, -0.001690, 90.928329, 77.587478, 0.000000, 1.000000}, // - 100
{0.081864, 0.030555, -0.001690, 90.928329, 78.145759, 0.000000, 1.000000}, // - 101
{0.081864, 0.047914, -0.005079, 90.928329, 78.145759, 0.000000, 1.000000}, // - 102
{0.089607, 0.036717, -0.005079, 90.928329, 78.145759, 0.000000, 1.000000}, // - 103
{0.079655, 0.042021, -0.005079, 90.928329, 78.145759, 0.000000, 1.000000}, // - 104
{0.091779, 0.037620, -0.005079, 90.928329, 78.145759, 0.000000, 1.000000}, // - 105
{0.084179, 0.035251, -0.005079, 90.928329, 78.145759, 0.000000, 1.000000}, // - 106
{0.089387, 0.040297, -0.006006, 90.928329, 78.145759, 0.000000, 1.000000}, // - 107
{0.081930, 0.030756, 0.001523, 90.928329, 78.145759, 0.000000, 1.000000},  // - 108
{0.092857, 0.043070, -0.006084, 90.928329, 85.326652, 0.000000, 1.000000}, // - 109
{0.092857, 0.043070, -0.006084, 90.928329, 85.326652, 0.000000, 1.000000}, // - 110
{0.106601, 0.028021, -0.003537, 90.928329, 90.217376, 0.000000, 1.000000}, // - 111
{0.096335, 0.015873, -0.003537, 90.928329, 90.217376, 0.000000, 1.000000}, // - 112
{0.105827, 0.046620, -0.001395, 90.928329, 90.217376, 0.000000, 1.000000}, // - 113
{0.097520, 0.044296, -0.007286, 90.928329, 90.217376, 0.000000, 1.000000}, // - 114
{0.097408, 0.043470, -0.007286, 90.928329, 90.217376, 0.000000, 1.000000}, // - 115
{0.092588, 0.049832, -0.007286, 90.928329, 90.217376, 0.000000, 1.000000}, // - 116
{0.081444, 0.037602, -0.003125, 90.928329, 90.217376, 0.000000, 1.000000}, // - 117
{0.078678, 0.037602, -0.001816, 90.928329, 90.217376, 0.000000, 1.000000}, // - 118
{0.093011, 0.037032, -0.001987, 281.516479, 94.968688, 167.551193, 1.051324}, // - 119
{0.089214, 0.029291, -0.000784, 90.928329, 84.624763, 0.000000, 1.000000}, // - 120
{0.086825, 0.033424, -0.000784, 90.928329, 77.233818, 0.000000, 1.000000}, // - 121
{0.082869, 0.030783, -0.000950, 90.928329, 77.233818, 0.000000, 1.000000}, // - 122
{0.096117, 0.048957, -0.006245, 90.928329, 87.579650, 0.000000, 1.000000}, // - 123
{0.103663, 0.040022, 0.000449, 90.928329, 87.579650, 0.000000, 1.000000},  // - 124
{0.099326, 0.031202, -0.001180, 90.928329, 87.579650, 0.000000, 1.000000}, // - 125
{0.099326, 0.031132, -0.001180, 90.928329, 87.579650, 0.000000, 1.000000}, // - 126
{0.099326, 0.039279, -0.001180, 90.928329, 87.579650, 0.000000, 1.000000}, // - 127
{0.099326, 0.047422, -0.001180, 90.928329, 87.579650, 0.000000, 1.000000}, // - 128
{0.088817, 0.021210, 0.000730, 90.928329, 87.579650, 0.000000, 1.000000},  // - 129
{0.025784, 0.028323, 0.000730, 90.928329, 59.394767, 0.000000, 1.000000},  // - 130
{0.068455, 0.031841, -0.004470, 90.928329, 79.979003, 0.000000, 1.000000}, // - 131
{0.012930, 0.008392, -0.004470, 90.928329, 72.129173, 0.000000, 1.000000}, // - 132
{0.102457, 0.032260, -0.003338, 90.928329, 84.534217, 0.000000, 1.000000}, // - 133
{0.085976, 0.014956, -0.003338, 90.928329, 80.308830, 0.000000, 1.000000}, // - 134
{0.071574, 0.028186, -0.001588, 90.928329, 80.308830, 0.000000, 1.000000}, // - 135
{0.085219, 0.016666, -0.000738, 90.928329, 80.308830, 0.000000, 1.000000}, // - 136
{0.065114, 0.009318, -0.000738, 90.928329, 80.308830, 0.000000, 1.000000}, // - 137
{0.066890, 0.040024, -0.000738, 90.928329, 87.341934, 0.000000, 1.000000}, // - 138
{0.072037, 0.036141, -0.000702, 90.928329, 87.341934, 0.000000, 1.000000}, // - 139
{0.069108, 0.042194, -0.000436, 90.928329, 87.341934, 0.000000, 1.000000}, // - 140
{0.058717, 0.043547, -0.000436, 90.928329, 87.209770, 0.000000, 1.000000}, // - 141
{0.104196, 0.039601, -0.005481, 90.928329, 87.209770, 0.000000, 1.000000}, // - 142
{0.090929, 0.045881, -0.012780, 90.928329, 87.209770, 0.000000, 1.000000}, // - 143
{0.098291, 0.042464, -0.006952, 90.928329, 83.081665, 0.000000, 1.000000}, // - 144
{0.080087, 0.030122, 0.000606, 90.928329, 83.081665, 0.000000, 1.000000},  // - 145
{0.093500, 0.030690, -0.001545, 90.928329, 83.081665, 0.000000, 1.000000}, // - 146
{0.079566, 0.020138, 0.004838, 90.928329, 73.715591, 0.000000, 1.000000},  // - 147
{0.073564, 0.028430, -0.000527, 90.928329, 88.295433, 0.000000, 1.000000}, // - 148
{0.099901, 0.011976, 0.001273, 281.516479, 97.607620, 167.551193, 1.190787}, // - 149
{0.073564, 0.028430, -0.000527, 90.928329, 88.295433, 0.000000, 1.000000}, // - 150
{0.083426, 0.032359, -0.005717, 90.928329, 88.295433, 0.000000, 1.000000}, // - 151
{0.072349, 0.019623, -0.000747, 90.928329, 82.624351, 0.000000, 1.000000}, // - 152
{0.075065, 0.015351, 0.006545, 90.928329, 71.041442, 0.000000, 1.000000},  // - 153
{0.062227, 0.029731, -0.004938, 90.928329, 84.602760, 0.000000, 1.000000}, // - 154
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 155
{0.079936, 0.049000, -0.000304, 90.928329, 82.926010, 0.000000, 1.000000}, // - 156
{0.067550, 0.035686, -0.000017, 90.928329, 82.926010, 0.000000, 1.000000}, // - 157
{0.090676, 0.039383, -0.001726, 90.928329, 88.667900, 0.000000, 1.000000}, // - 158
{0.090676, 0.039383, -0.003532, 90.928329, 88.667900, 0.000000, 1.000000}, // - 159
{0.098662, 0.017441, -0.001589, 90.928329, 88.667900, 0.000000, 1.000000}, // - 160
{0.105388, 0.038409, 0.003155, 90.928329, 88.667900, 0.000000, 1.000000},  // - 161
{0.097415, 0.036904, -0.000525, 90.928329, 88.667900, 0.000000, 1.000000}, // - 162
{0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000, 1.000000}, // - 163
{0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000, 1.000000}, // - 164
{0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000, 1.000000},  // - 165
{0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000, 1.000000},  // - 166
{0.095996, 0.038787, 0.000484, 90.928329, 84.315711, 0.000000, 1.000000},  // - 167
{0.089094, 0.034001, -0.006451, 90.928329, 84.315711, 0.000000, 1.000000}, // - 168
{0.075700, 0.028082, -0.006451, 90.928329, 84.315711, 0.000000, 1.000000}, // - 169
{0.093751, 0.041968, -0.005545, 90.928329, 84.315711, 0.000000, 1.000000}, // - 170
{0.090124, 0.031055, -0.000505, 90.928329, 84.315711, 0.000000, 1.000000}, // - 171
{0.066033, 0.032915, -0.002713, 90.928329, 84.315711, 0.000000, 1.000000}, // - 172
{0.088287, 0.045350, -0.005384, 90.928329, 84.315711, 0.000000, 1.000000}, // - 173
{0.087750, 0.042129, -0.005384, 90.928329, 84.315711, 0.000000, 1.000000}, // - 174
{0.092384, 0.039294, -0.005384, 90.928329, 84.315711, 0.000000, 1.000000}, // - 175
{0.097661, 0.039065, -0.006344, 90.928329, 80.736480, 0.000000, 1.000000}, // - 176
{0.097114, 0.039641, -0.006692, 90.928329, 80.736480, 0.000000, 1.000000}, // - 177
{0.069354, 0.039641, -0.000474, 90.928329, 80.736480, 0.000000, 1.000000}, // - 178
{0.091414, 0.039641, -0.005617, 90.928329, 80.736480, 0.000000, 1.000000}, // - 179
{0.094914, 0.039641, -0.005617, 90.928329, 80.736480, 0.000000, 1.000000}, // - 180
{0.117232, 0.033217, -0.001099, 90.928329, 82.396362, 0.000000, 1.000000}, // - 181
{0.082569, 0.032748, -0.003248, 90.928329, 87.394371, 0.000000, 1.000000}, // - 182
{0.095527, 0.027237, -0.001960, 90.928329, 86.443649, 0.000000, 1.000000}, // - 183
{0.095527, 0.040994, -0.006878, 90.928329, 86.443649, 0.000000, 1.000000}, // - 184
{0.085663, 0.030601, -0.002345, 90.928329, 81.496513, 0.000000, 1.000000}, // - 185
{0.085663, 0.030601, -0.001015, 90.928329, 81.496513, 0.000000, 1.000000}, // - 186
{0.076527, 0.027211, 0.008500, 90.928329, 74.401092, 0.000000, 1.000000},  // - 187
{0.096669, 0.032578, 0.001662, 90.928329, 83.502502, 0.000000, 1.000000},  // - 188
{0.098753, 0.032129, -0.001659, 90.928329, 90.153724, 0.000000, 1.000000}, // - 189
{0.092821, 0.035572, -0.001659, 90.928329, 90.153724, 0.000000, 1.000000}, // - 190
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000, 1.000000}, // - 191
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000, 1.000000}, // - 192
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000, 1.000000}, // - 193
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000, 1.000000}, // - 194
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000, 1.000000}, // - 195
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000, 1.000000}, // - 196
{0.100630, 0.020568, -0.001132, 90.928329, 90.153724, 0.000000, 1.000000}, // - 197
{0.077905, 0.028523, 0.000000, 89.675476, 89.270309, 0.000000, 1.000000},  // - 198
{0.099095, 0.022463, 0.000000, 89.675476, 89.270309, 0.000000, 1.000000},  // - 199
{0.103182, 0.031106, 0.000000, 89.675476, 89.270309, 0.000000, 1.000000},  // - 200
{0.078426, 0.038546, 0.000000, 89.675476, 89.270309, 0.000000, 1.000000},  // - 201
{0.101092, 0.035797, -0.002997, 89.675476, 82.081153, 0.000000, 1.000000}, // - 202
{0.092009, 0.042780, -0.005841, 89.675476, 84.463294, 0.000000, 1.000000}, // - 203
{0.092009, 0.042780, -0.005841, 89.675476, 84.463294, 0.000000, 1.000000}, // - 204
{0.092969, 0.027782, -0.002959, 89.675476, 84.463294, 0.000000, 1.000000}, // - 205
{0.105109, 0.036128, -0.000471, 89.675476, 84.463294, 0.000000, 1.000000}, // - 206
{0.066892, 0.024410, -0.002792, 89.675476, 84.463294, 0.000000, 1.000000}, // - 207
{0.088610, 0.043561, 0.001273, 281.516479, 89.674781, 167.551193, 1.000000}, // - 208
{0.084046, 0.013608, -0.002792, 89.675476, 81.667831, 0.000000, 1.000000}, // - 209
{0.084046, 0.013608, -0.001034, 89.675476, 81.667831, 0.000000, 1.000000}, // - 210
{0.067610, 0.033777, -0.001034, 89.675476, 85.214485, 0.000000, 1.000000}, // - 211
{0.094159, 0.020717, 0.000715, 89.675476, 85.214485, 0.000000, 1.000000},  // - 212
{0.098744, 0.036786, -0.001770, 89.675476, 85.214485, 0.000000, 1.000000}, // - 213
{0.068755, 0.036786, -0.001770, 89.675476, 85.214485, 0.000000, 1.000000}, // - 214
{0.068755, 0.026863, -0.001770, 89.675476, 85.214485, 0.000000, 1.000000}, // - 215
{0.068755, 0.026863, -0.001770, 89.675476, 85.214485, 0.000000, 1.000000}, // - 216
{0.095765, 0.030034, -0.001770, 89.675476, 85.214485, 0.000000, 1.000000}, // - 217
{0.085486, 0.039427, -0.003311, 89.675476, 85.214485, 0.000000, 1.000000}, // - 218
{0.068874, 0.027850, -0.001021, 89.675476, 85.214485, 0.000000, 1.000000}, // - 219
{0.052931, 0.050390, -0.002062, 89.675476, 88.113647, 0.000000, 1.000000}, // - 220
{0.094479, 0.034432, 0.000875, 89.675476, 83.572830, 0.000000, 1.000000},  // - 221
{0.094479, 0.034432, -0.000596, 89.675476, 83.572830, 0.000000, 1.000000}, // - 222
{0.094479, 0.062073, -0.003098, 89.675476, 83.572830, 0.000000, 1.000000}, // - 223
{0.064458, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000, 1.000000}, // - 224
{0.064458, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000, 1.000000}, // - 225
{0.072095, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000, 1.000000}, // - 226
{0.110619, 0.043037, -0.001466, 89.675476, 86.927627, 0.000000, 1.000000}, // - 227
{0.099446, 0.050772, -0.001466, 89.675476, 85.103805, 0.000000, 1.000000}, // - 228
{0.078635, 0.023680, -0.000275, 89.675476, 73.445220, 0.000000, 1.000000}, // - 229
{0.043357, 0.028726, -0.000275, 89.675476, 73.445220, 0.000000, 1.000000}, // - 230
{0.092488, 0.049972, -0.000275, 89.675476, 88.981941, 0.000000, 1.000000}, // - 231
{0.092488, 0.016739, -0.000275, 89.675476, 88.981941, 0.000000, 1.000000}, // - 232
{0.071677, 0.037055, -0.002878, 89.675476, 88.981941, 0.000000, 1.000000}, // - 233
{0.082745, 0.004209, -0.002878, 89.675476, 88.981941, 0.000000, 1.000000}, // - 234
{0.057909, 0.021331, -0.002878, 89.675476, 88.981941, 0.000000, 1.000000}, // - 235
{0.079016, 0.021331, -0.000419, 89.675476, 77.678733, 0.000000, 1.000000}, // - 236
{0.074572, 0.021331, -0.000419, 89.675476, 84.527442, 0.000000, 1.000000}, // - 237
{0.074572, 0.038346, -0.001500, 89.675476, 84.527442, 0.000000, 1.000000}, // - 238
{0.111645, 0.011549, 0.006237, 89.675476, 84.527442, 0.000000, 1.000000},  // - 239
{0.090766, 0.044221, -0.000423, 89.675476, 89.461883, 0.000000, 1.000000}, // - 240
{0.069491, 0.049021, -0.000423, 89.675476, 89.461883, 0.000000, 1.000000}, // - 241
{0.059706, 0.031911, -0.000423, 89.675476, 89.461883, 0.000000, 1.000000}, // - 242
{0.065242, 0.031911, -0.000423, 89.675476, 89.461883, 0.000000, 1.000000}, // - 243
{0.065242, 0.051077, -0.001103, 89.675476, 89.461883, 0.000000, 1.000000}, // - 244
{0.082393, 0.038233, 0.000410, 89.675476, 89.461883, 0.000000, 1.000000},  // - 245
{0.079338, 0.044859, -0.002535, 89.675476, 89.461883, 0.000000, 1.000000}, // - 246
{0.101566, 0.037019, 0.000750, 89.675476, 83.514060, 0.000000, 1.000000},  // - 247
{0.091887, 0.047776, -0.000040, 89.675476, 83.514060, 0.000000, 1.000000}, // - 248
{0.089745, 0.044044, 0.004071, 89.675476, 83.514060, 0.000000, 1.000000},  // - 249
{0.094214, 0.044044, -0.007274, 89.675476, 83.514060, 0.000000, 1.000000}, // - 250
{0.072282, 0.044044, -0.001468, 89.675476, 90.444763, 0.000000, 1.000000}, // - 251
{0.095764, 0.034224, -0.000264, 89.675476, 82.959915, 0.000000, 1.000000}, // - 252
{0.087454, 0.026208, -0.000264, 89.675476, 82.959915, 0.000000, 1.000000}, // - 253
{0.099198, 0.037362, -0.000264, 89.675476, 82.959915, 0.000000, 1.000000}, // - 254
{0.070845, 0.019943, 0.003505, 89.675476, 73.529716, 0.000000, 1.000000},  // - 255
{0.065373, 0.033656, -0.001141, 89.675476, 83.002151, 0.000000, 1.000000}, // - 256
{0.070077, 0.033656, -0.001141, 89.675476, 83.002151, 0.000000, 1.000000}, // - 257
{0.089536, 0.041904, 0.000715, 89.675476, 83.002151, 0.000000, 1.000000},  // - 258
{0.084822, 0.041904, 0.000715, 89.675476, 83.002151, 0.000000, 1.000000},  // - 259
{0.093009, 0.031491, -0.001568, 89.675476, 83.002151, 0.000000, 1.000000}, // - 260
{0.093009, 0.015023, -0.001477, 89.675476, 83.002151, 0.000000, 1.000000}, // - 261
{0.076580, 0.039782, -0.001477, 89.675476, 88.620780, 0.000000, 1.000000}, // - 262
{0.076580, 0.028967, -0.001477, 89.675476, 88.620780, 0.000000, 1.000000}, // - 263
{0.075424, 0.043059, -0.001477, 89.675476, 88.620780, 0.000000, 1.000000}, // - 264
{0.089655, 0.021726, -0.001477, 89.675476, 88.620780, 0.000000, 1.000000}, // - 265
{0.096792, 0.014114, -0.003062, 89.675476, 85.166038, 0.000000, 1.000000}, // - 266
{0.094886, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000, 1.000000}, // - 267
{0.094886, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000, 1.000000}, // - 268
{0.102252, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000, 1.000000}, // - 269
{0.102252, 0.024989, 0.000529, 89.675476, 85.166038, 0.000000, 1.000000},  // - 270
{0.096134, 0.025462, 0.000529, 89.675476, 79.225112, 0.000000, 1.000000},  // - 271
{0.099226, 0.032663, 0.000529, 89.675476, 79.225112, 0.000000, 1.000000},  // - 272
{0.080779, 0.028227, -0.001415, 281.516479, 91.776855, 167.551193, 1.061396}, // - 273
{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000, 1.000000}, // - 274
{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000, 1.000000}, // - 275
{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000, 1.000000}, // - 276
{0.082718, 0.062596, -0.000201, 89.675476, 88.636062, 0.000000, 1.000000}, // - 277
{0.082718, 0.062596, -0.000201, 89.675476, 88.636062, 0.000000, 1.000000}, // - 278
{0.087652, 0.059379, -0.000201, 89.675476, 88.636062, 0.000000, 1.000000}, // - 279
{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000, 1.000000}, // - 280
{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000, 1.000000}, // - 281
{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000, 1.000000}, // - 282
{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000, 1.000000}, // - 283
{0.090877, 0.053674, 0.009879, 89.675476, 88.636062, 0.000000, 1.000000},  // - 284
{0.104320, 0.041487, 0.008021, 89.675476, 88.636062, 0.000000, 1.000000},  // - 285
{0.087062, 0.021779, -0.003307, 89.675476, 88.636062, 0.000000, 1.000000}, // - 286
{0.073173, 0.048856, 0.005337, 89.675476, 92.561180, 0.000000, 1.000000},  // - 287
{0.090294, 0.027592, -0.003497, 89.675476, 92.561180, 0.000000, 1.000000}, // - 288
{0.081684, 0.015000, 0.001780, 281.516479, 108.106758, 169.790878, 1.042815}, // - 289
{0.086562, 0.042698, -0.000612, 89.675476, 92.561180, 0.000000, 1.000000}, // - 290
{0.096768, 0.039233, -0.000612, 89.675476, 83.550270, 0.000000, 1.000000}, // - 291
{0.079939, 0.020731, -0.005162, 89.675476, 83.550270, 0.000000, 1.000000}, // - 292
{0.097107, 0.027826, -0.005162, 89.675476, 88.505996, 0.000000, 1.000000}, // - 293
{0.097107, 0.037636, 0.000618, 89.675476, 88.505996, 0.000000, 1.000000},  // - 294
{0.079985, 0.035006, -0.000826, 89.675476, 87.533462, 0.000000, 1.000000}, // - 295
{0.088445, 0.024209, -0.002076, 89.675476, 73.285072, 0.000000, 1.000000}, // - 296
{0.094039, 0.035411, 0.000490, 89.675476, 84.277572, 0.000000, 1.000000},  // - 297
{0.099553, 0.024683, -0.002919, 89.675476, 84.277572, 0.000000, 1.000000}, // - 298
{0.099553, 0.044356, -0.000285, 89.675476, 84.277572, 0.000000, 1.000000}  // - 299
};
new Float: AccAngle[2][4] = {
{ 0.11, 0.0, 90.0, 90.0 },
{ 0.13, 0.0, 0.0 }};

new Float:Spawntyrmasa[24][3] =
{
    {1843.7701,-1732.3809,5202.5859},
    {1840.5924,-1731.8463,5202.5859},
    {1837.2538,-1731.6554,5202.5859},
    {1834.0308,-1731.6432,5202.5859},
    {1830.6439,-1731.4230,5202.5859},
    {1827.4816,-1731.3131,5202.5859},
    {1827.7567,-1712.2048,5202.5859},
    {1831.0509,-1712.4436,5202.5859},
    {1834.3860,-1712.6838,5202.5859},
    {1837.6030,-1712.0765,5202.5859},
	{1840.7040,-1712.2291,5202.5859},
	{1843.9657,-1711.9250,5202.5859},
	{1827.7755,-1712.3440,5206.1860},
	{1831.0874,-1712.4067,5206.1860},
	{1834.1041,-1711.6798,5206.1860},
	{1837.4285,-1711.8591,5206.1860},
	{1840.6586,-1712.0952,5206.1860},
	{1844.0372,-1711.7433,5206.1860},
	{1843.8684,-1731.7384,5209.6860},
	{1840.7223,-1731.6223,5209.6860},
	{1837.6049,-1731.0984,5209.6860},
	{1833.9791,-1731.8348,5209.6870},
    {1830.9706,-1731.4524,5209.6870},
	{1827.5670,-1731.0067,5209.6870}
};
//
new Float:RandomGruzZag[][]={
		{-513.2533,-551.2796,25.5234},
		{-1907.4185,-1715.0089,21.7500},
		{269.2492,1411.8657,10.4638},
		{-2031.5731,176.2253,28.8359}
};
new Float:RandomGruzRaz[][]={
		{2692.3853,-2467.9915,13.6452},
		{-2259.2686,2386.6211,4.9892}, //sf
		{81.7488,1916.0846,17.6612},
		{-2313.6519,-159.4345,35.3203},
        {-2143.9102,-442.5511,35.3359},
	    {-2667.4343,272.8874,4.3359}
};
//车速表
new Maxi[MAX_PLAYERS];
new Text:VehBox[12];
new Float: s_fX, Float:s_fY, Float:s_fZ, Float:s_fVX, Float:s_fVY, Float:s_fVZ;
new Float: s_fLength;
new PlayerText:VehInfo[MAX_PLAYERS][6];
// 体育馆
new down[MAX_PLAYERS];
new usetre[5];
new stotuning;
new duelzanyat;
new Trenag[MAX_PLAYERS], KTrenag[20];
new kol[MAX_PLAYERS];
new sportzal[2];
new SZal[2];
new PlayerText:Trenia[MAX_PLAYERS];
new TotalFight=0,GoFight=0, GFID1=INVALID_PLAYER_ID,GFID2=INVALID_PLAYER_ID, fightID[MAX_PLAYERS], fightSID[MAX_PLAYERS], fightM, Text3D:Fight3D;
// 
new TeamDeathmatch[3];
new DeathmatchONRound = 0;
new DeathmatchKill[2];
new DeathmatchAmout[2];
new Text:Tdboi[8];
new PlayerDeathmatch[MAX_PLAYERS];
new PlayerDeathmatch2[MAX_PLAYERS];
new DeathmatchPlayers = 0;
new DeathmatchRound = 0;
new TeamMapWa = 0;
new TeamMap = 0;
new StartTimeDTMH[MAX_PLAYERS];
new Float:DeathmatchSpawnsRed[10][3] =
{
    {-973.7326,1077.2496,1344.9924},
    {-976.9115,1074.3787,1344.9791},
    {-976.9481,1079.9559,1344.9684},
    {-970.6793,1074.5786,1345.0153},
    {-970.4968,1079.8970,1345.0126},
    {-972.5981,1062.1177,1345.6622},
    {-972.8999,1060.0891,1345.6768},
    {-975.8151,1060.0531,1345.6719},
    {-976.0355,1062.3029,1345.6744},
    {-978.2666,1053.1675,1344.9884}
};
new Float:DeathmatchSpawnsBlue[10][3] =
{
    {-1131.7830,1041.6429,1345.7385},
    {-1128.6295,1044.3875,1345.7205},
    {-1128.4771,1038.8052,1345.7140},
    {-1134.7924,1038.8470,1345.7556},
    {-1134.7029,1044.2855,1345.7604},
    {-1132.7867,1056.6781,1346.4025},
    {-1133.0239,1058.9827,1346.4166},
    {-1129.1296,1058.8649,1346.4141},
    {-1129.1296,1056.5586,1346.4141},
    {-1128.6284,1066.2128,1345.7434}
};
new Float:DeathmatchSpawnsRed2[10][3] =
{
    {-1368.0455,1489.6284,11.0391},
    {-1368.3248,1486.0641,11.0391},
    {-1367.8531,1493.3063,11.0391},
    {-1371.6382,1493.5824,11.0391},
    {-1371.9120,1490.2699,11.0391},
    {-1371.9510,1486.0776,11.0391},
    {-1367.2002,1486.3102,11.0391},
    {-1369.4193,1491.7970,11.0391},
    {-1368.7777,1488.7167,11.0391},
    {-1366.5955,1487.5525,11.0391}
};
new Float:DeathmatchSpawnsBlue2[10][3] =
{
    {-1469.8457,1489.5905,8.2578},
    {-1467.5612,1489.6620,8.2578},
    {-1472.7478,1489.4907,8.2578},
    {-1473.1029,1492.8439,8.2578},
    {-1469.5789,1493.2061,8.2578},
    {-1466.5714,1493.2994,8.2578},
    {-1466.1331,1487.3157,8.2501},
    {-1470.2208,1486.9355,8.2501},
    {-1473.2699,1486.8396,8.2501},
    {-1468.9952,1482.8999,8.2578}
};
new Float:DeathmatchSpawnsRed2MAP[10][3] =
{
    {2293.5193,1071.1025,26.7031},
    {2296.9014,1077.2327,26.7031},
    {2299.8669,1071.7863,26.7031},
    {2292.2505,1076.2343,26.7031},
    {2295.9944,1061.6548,26.7031},
    {2278.5859,1052.5753,26.7031},
    {2282.5200,1061.5653,26.7031},
    {2287.9402,1053.5219,26.7031},
    {2280.9224,1054.4354,29.3203},
    {2283.3145,1058.6825,29.3203}
};
new Float:DeathmatchSpawnsBlue2MAP[10][3] =
{
    {2159.3015,1127.3875,23.3359},
    {2172.7202,1120.6965,23.3359},
    {2170.1279,1131.4414,23.3359},
    {2164.3479,1115.2747,23.3359},
    {2171.1577,1106.2535,23.3283},
    {2149.6785,1116.6372,23.3283},
    {2160.9766,1141.7789,23.3359},
    {2185.4263,1130.5065,23.3359},
    {2180.0315,1115.9960,26.7031},
    {2177.8257,1111.8124,26.6963}
};
new Float:DeathmatchSpawnsRed2MAP2[10][3] =
{
    {-1319.7421,2556.4082,88.6328},
    {-1310.6050,2555.2551,87.3063},
    {-1319.3771,2541.3918,87.5844},
    {-1315.1160,2543.3606,87.7422},
    {-1308.9148,2543.6716,87.7422},
    {-1319.7347,2536.6277,87.5311},
    {-1308.8794,2535.5322,87.7422},
    {-1312.3109,2529.6599,87.6757},
    {-1334.4659,2525.4041,87.0469},
    {-1304.2842,2525.9343,87.5291}
};
new Float:DeathmatchSpawnsBlue2MAP2[10][3] =
{
    {-1348.8582,2322.8027,99.9097},
    {-1347.8777,2312.0081,99.9097},
    {-1352.7021,2317.1958,99.9097},
    {-1344.3413,2317.8020,99.9097},
    {-1343.3066,2328.9299,99.9097},
    {-1355.5812,2328.2275,99.9118},
    {-1354.1334,2306.2805,99.9097},
    {-1340.9778,2306.6963,99.9097},
    {-1346.1246,2322.3462,99.9097},
    {-1350.7749,2311.7520,99.9097}
};
// 比赛
new racenameboat[10][MAX_PLAYER_NAME];  // /racelist
new racepickboat;                       // 比赛的接送
new PlayerKartingboat[MAX_PLAYERS];     // 比赛的注册号码
new KartingPlayersboat;                 // 比赛的玩家
new racetimeboat;                       // 比赛时间
new raceActionboat;                     // 比赛状态
new racecarr[MAX_VEHICLES];             // 车辆
new KartingPlayers;                     // 比赛的玩家
new PlayerKarting[MAX_PLAYERS];         // 比赛的注册号码
new fuelcar[22];
new FuelTime[MAX_PLAYERS];
new MafiaFuelTime[5];
new ReFuelTimer[MAX_PLAYERS];
new Text3D:BusText3D[MAX_PLAYERS];
new Text3D:MexText3D[MAX_PLAYERS];
new buscar[41];
new pPressed[MAX_PLAYERS];
new wantedList[MAX_PLAYERS][7];
static const MaxPassengers[27] =
{
    0x10331113, 0x11311131, 0x11331313, 0x80133301,
    0x1381F110, 0x10311103, 0x10001F10, 0x11113311,
    0x13113311, 0x31101100, 0x30001301, 0x11031311,
    0x11111331, 0x10013111, 0x01131100, 0x11111110,
    0x11100031, 0x11130221, 0x33113311, 0x11111101,
    0x33101133, 0x101001F0, 0x03133111, 0xFF11113F,
    0x13330111, 0xFF131111, 0x0000FF3F
};
new Float:BusCityLV[][] = {
	{2827.7122,1287.5374,10.4960, 2828.5979,1349.7295,10.4851},
	{2828.5979,1349.7295,10.4851, 2830.2490,1453.5867,10.4380},
	{2830.2490,1453.5867,10.4380, 2810.9434,1475.6493,10.4112},
	{2810.9434,1475.6493,10.4112, 2701.4114,1475.5786,13.2682},
	{2701.4114,1475.5786,13.2682, 2565.3254,1475.9387,10.5693},
	{2565.3254,1475.9387,10.5693, 2425.1672,1458.8348,10.3990},
	{2425.1672,1458.8348,10.3990, 2425.0232,1388.2212,10.3990},
	{2425.0232,1388.2212,10.3990, 2402.9827,1375.8306,10.3990},
	{2402.9827,1375.8306,10.3990, 2328.8313,1375.2654,10.4004},
	{2328.8313,1375.2654,10.4004, 2227.2595,1375.5146,10.5165},
	{2227.2595,1375.5146,10.5165, 2141.0669,1375.8522,10.3990},
	{2141.0669,1375.8522,10.3990, 2069.4941,1412.9413,10.3990},
	{2069.4941,1412.9413,10.3990, 2069.3545,1555.6749,10.3985},
	{2069.3545,1555.6749,10.3985, 2074.2522,1691.2032,10.3990},
	{2074.2522,1691.2032,10.3990, 2083.3120,1731.3164,10.3990},
	{2083.3120,1731.3164,10.3990, 2137.4177,1838.8073,10.3990},
	{2137.4177,1838.8073,10.3990, 2149.4041,1949.7141,10.4067},
	{2149.4041,1949.7141,10.4067, 2154.9656,2006.7346,10.3990},
	{2154.9656,2006.7346,10.3990, 2149.2458,2047.8812,10.4067},
	{2149.2458,2047.8812,10.4067, 2150.0891,2212.5806,10.3990},
	{2150.0891,2212.5806,10.3990, 2198.8176,2333.1411,10.3990},
	{2198.8176,2333.1411,10.3990, 2229.5842,2400.6025,10.3990},
	{2229.5842,2400.6025,10.3990, 2229.9485,2442.6384,10.4123},
	{2229.9485,2442.6384,10.4123, 2083.1667,2455.8521,10.399},
	{2083.1667,2455.8521,10.399, 2040.5520,2455.6323,10.3989},
	{2040.5520,2455.6323,10.3989, 2025.2017,2409.2336,10.4048},
	{2025.2017,2409.2336,10.4048, 2010.3225,2395.3706,10.3990},
	{2010.3225,2395.3706,10.3990, 1939.4858,2395.5569,10.3990},
	{1939.4858,2395.5569,10.3990, 1925.0082,2362.3936,10.3990},
	{1925.0082,2362.3936,10.3990, 1924.9097,2314.9290,10.3990},
	{1924.9097,2314.9290,10.3990, 1925.1405,2190.0247,10.4048},
	{1925.1405,2190.0247,10.4048, 1924.7076,2116.0227,10.4982},
	{1924.7076,2116.0227,10.4982, 1924.9579,2054.0154,10.3990},
	{1924.9579,2054.0154,10.3990, 1901.8656,2044.4187,10.3990},
	{1901.8656,2044.4187,10.3990, 1841.7213,2055.7852,10.5195},
	{1841.7213,2055.7852,10.5195, 1716.1443,2055.5381,10.4394},
	{1716.1443,2055.5381,10.4394, 1704.8038,2030.0398,10.4049},
	{1704.8038,2030.0398,10.4049, 1705.0792,1965.8193,10.3990},
	{1705.0792,1965.8193,10.3990, 1705.4348,1884.1003,10.3990},
	{1705.4348,1884.1003,10.3990, 1660.3359,1875.4397,10.3990},
	{1660.3359,1875.4397,10.3990, 1644.6434,1817.6515,10.4047},
	{1644.6434,1817.6515,10.4047, 1645.2438,1726.5471,10.3990},
	{1645.2438,1726.5471,10.3990, 1705.5009,1711.1305,10.3990},
	{1705.5009,1711.1305,10.3990, 1727.8558,1663.9143,9.7931},
	{1727.8558,1663.9143,9.7931, 1730.0469,1611.1600,9.5889},
	{1730.0469,1611.1600,9.5889, 1727.0743,1543.9349,10.3989},
	{1727.0743,1543.9349,10.3989, 1712.6594,1454.8257,10.4624},
	{1712.6594,1454.8257,10.4624, 1720.0021,1380.0167,10.2193},
	{1720.0021,1380.0167,10.2193, 1726.6637,1288.2371,10.3990},
	{1726.6637,1288.2371,10.3990, 1756.3873,1271.1761,11.7470},
	{1756.3873,1271.1761,11.7470, 1882.8234,1270.9567,10.3994},
	{1882.8234,1270.9567,10.3994, 2032.3241,1270.8514,10.3990},
	{2032.3241,1270.8514,10.3990, 2040.4423,1155.8553,10.3990},
	{2040.4423,1155.8553,10.3990, 2045.7813,1094.8022,10.3990},
	{2045.7813,1094.8022,10.3990, 2051.9490,980.1622,10.3478},
	{2051.9490,980.1622,10.3478, 2103.6660,970.9399,10.3455},
	{2103.6660,970.9399,10.3990, 2145.1384,925.0372,10.3989},
	{2145.1384,925.0372,10.3989, 2144.9375,721.4338,10.4355},
	{2144.9375,721.4338,10.4355, 2179.9919,710.7172,10.3990},
	{2179.9919,710.7172,10.3990, 2274.3362,711.1173,10.3990},
	{2274.3362,711.1173,10.3990, 2376.8376,710.9398,10.3990},
	{2376.8376,710.9398,10.3990, 2417.7654,710.7748,10.4140},
	{2417.7654,710.7748,10.4140, 2430.0789,737.1588,10.3990},
	{2430.0789,737.1588,10.3990, 2463.8088,770.4927,10.3990},
	{2463.8088,770.4927,10.3990, 2533.7329,770.6903,10.4068},
	{2533.7329,770.6903,10.4068, 2549.5715,813.9160,11.1068},
	{2549.5715,813.9160,11.1068, 2549.5967,941.5245,10.4065},
	{2549.5967,941.5245,10.4065, 2549.2029,1001.5764,10.3978},
	{2549.2029,1001.5764,10.3978, 2573.9358,1010.4851,10.4699},
	{2573.9358,1010.4851,10.4699, 2609.8220,1048.8676,10.3990},
	{2609.8220,1048.8676,10.3990, 2610.5010,1122.4563,10.3990},
	{2610.5010,1122.4563,10.3990, 2609.2266,1239.9553,10.3990},
	{2609.2266,1239.9553,10.3990, 2629.4099,1298.8424,10.3990},
	{2629.4099,1298.8424,10.3990, 2673.0471,1311.2069,11.5071},
	{2673.0471,1311.2069,11.5071, 2792.4287,1310.6711,10.4771},
	{2792.4287,1310.6711,10.4771, 2785.6804,1275.5779,10.4771},
	{2785.6804,1275.5779,10.4771, 2764.9609,1234.9835,10.4771},
	{2764.9609,1234.9835,10.4771, 2800.6440,1230.2970,10.4977},
	{2800.6440,1230.2970,10.4977, 2827.7122,1287.5374,10.4960},
	{2827.7122,1287.5374,10.4960, 0.0, 0.0, 0.0}
};
new Float:BusCitySF[][] = {
	{-1988.0446,140.1014,27.2661, -2003.4841,214.1351,27.2661},
	{-2003.4841,214.1351,27.2661, -2000.5131,313.4200,34.7426},
	{-2000.5131,313.4200,34.7426, -1998.5398,471.8105,34.7427},
	{-1998.5398,471.8105,34.7427, -2000.0660,589.2780,34.7443},
	{-2000.0660,589.2780,34.7443, -1983.1162,601.5040,34.7447},
	{-1983.1162,601.5040,34.7447, -1765.3795,600.4207,27.5781},
	{-1765.3795,600.4207,27.5781, -1708.5352,638.9060,24.4615},
	{-1708.5352,638.9060,24.4615, -1709.2012,713.6660,24.4673},
	{-1709.2012,713.6660,24.4673, -1686.2982,726.0994,21.9807},
	{-1686.2982,726.0994,21.9807, -1584.0829,725.0784,7.6853},
	{-1584.0829,725.0784,7.6853,-1539.4480,751.1326,6.7661},
	{-1539.4480,751.1326,6.7661, -1526.3699,902.7177,6.7661},
	{-1526.3699,902.7177,6.7661, -1566.6733,1008.7411,6.7661},
	{-1566.6733,1008.7411,6.7661, -1583.1990,1175.9945,6.7720},
	{-1583.1990,1175.9945,6.7720, -1657.7933,1278.0837,6.7703},
	{-1657.7933,1278.0837,6.7703, -1759.8112,1370.0012,6.7661},
	{-1759.8112,1370.0012,6.7661, -1893.3424,1340.7925,6.7662},
	{-1893.3424,1340.7925,6.7662, -2017.5878,1313.2760,6.7661},
	{-2017.5878,1313.2760,6.7661, -2124.4597,1335.1978,6.7739},
	{-2124.4597,1335.1978,6.7739, -2270.4126,1338.5504,6.7661},
	{-2270.4126,1338.5504,6.7661, -2457.7053,1353.1648,6.7688},
	{-2457.7053,1353.1648,6.7688, -2459.7207,1222.8270,34.7824},
	{-2459.7207,1222.8270,34.7824, -2509.7961,1189.8923,39.7203},
	{-2509.7961,1189.8923,39.7203, -2647.5432,1209.3071,54.9540},
	{-2647.5432,1209.3071,54.9540, -2670.1223,1220.7137,55.1568},
	{-2670.1223,1220.7137,55.1568, -2701.2837,1216.6837,54.8801},
	{-2701.2837,1216.6837,54.8801, -2751.0327,1165.2881,51.2197},
	{-2751.0327,1165.2881,51.2197, -2732.4473,1097.7551,46.1041},
	{-2732.4473,1097.7551,46.1041, -2736.0510,1076.3564,46.6157},
	{-2736.0510,1076.3564,46.6157, -2753.1973,989.3776,54.0414},
	{-2753.1973,989.3776,54.0414, -2752.8333,889.3956,65.9159},
	{-2752.8333,889.3956,65.9159, -2753.9016,769.2898,53.9614},
	{-2753.9016,769.2898,53.9614, -2753.8579,704.6906,40.8521},
	{-2753.8579,704.6906,40.8521, -2752.6665,583.9778,15.5260},
	{-2752.6665,583.9778,15.5260, -2629.1440,559.9763,14.1880},
	{-2629.1440,559.9763,14.1880, -2609.3816,550.2076,14.1880},
	{-2609.3816,550.2076,14.1880, -2609.2786,419.0351,14.1443},
	{-2609.2786,419.0351,14.1443, -2623.4963,332.2929,3.9100},
	{-2623.4963,332.2929,3.9100, -2694.1890,337.3127,3.9130},
	{-2694.1890,337.3127,3.9130, -2709.2107,310.5451,3.9068},
	{-2709.2107,310.5451,3.9068, -2708.7454,265.6249,3.9068},
	{-2708.7454,265.6249,3.9068, -2708.4983,137.9188,3.9068},
	{-2708.4983,137.9188,3.9068, -2708.3228,61.5767,3.9068},
	{-2708.3228,61.5767,3.9068, -2708.6318,5.2428,3.9068},
	{-2708.6318,5.2428,3.9068, -2708.3984,-57.2606,3.9068},
	{-2708.3984,-57.2606,3.9068, -2676.2898,-72.9829,3.9068},
	{-2676.2898,-72.9829,3.9068, -2588.9204,-72.8143,3.9952},
	{-2588.9204,-72.8143,3.9952, -2468.8010,-72.3784,30.7145},
	{-2468.8010,-72.3784,30.7145, -2389.8684,-72.2215,34.8912},
	{-2389.8684,-72.2215,34.8912, -2298.3589,-72.0373,34.8912},
	{-2298.3589,-72.0373,34.8912, -2199.7261,-72.9877,34.8990},
	{-2199.7261,-72.9877,34.8990, -2097.7122,-73.0991,34.8989},
	{-2097.7122,-73.0991,34.8989, -2027.6685,-73.1562,34.8990},
	{-2027.6685,-73.1562,34.8990, -2004.3160,-47.7378,34.8920},
	{-2004.3160,-47.7378,34.8920, -2003.9662,82.7331,27.2662},
	{-2003.9662,82.7331,27.2662, -1988.0446,140.1014,27.2661},
	{-1988.0446,140.1014,27.2661, 0.0, 0.0, 0.0}
};
new Float:BusCityLS[][] = {
	{1810.4319,-1889.4810,13.1383, 1818.0439,-1906.7059,13.1226},
	{1818.0439,-1906.7059,13.1226, 1843.1340,-1935.2397,13.1073},
	{1843.1340,-1935.2397,13.1073, 1946.9880,-1935.2286,13.1099},
	{1946.9880,-1935.2286,13.1099, 1959.2635,-1961.4700,13.4311},
	{1959.2635,-1961.4700,13.4311, 1959.2693,-2069.4841,13.1099},
	{1959.2693,-2069.4841,13.1099, 1987.7285,-2111.8867,13.0709},
	{1987.7285,-2111.8867,13.0709, 2105.4421,-2113.4316,13.0344},
	{2105.4421,-2113.4316,13.0344, 2183.5554,-2154.2122,13.1079},
	{2183.5554,-2154.2122,13.1079, 2223.1812,-2144.0498,13.0937},
	{2223.1812,-2144.0498,13.0937, 2298.0415,-2070.1282,13.0763},
	{2298.0415,-2070.1282,13.0763, 2447.1260,-2051.2375,23.3311},
	{2447.1260,-2051.2375,23.3311, 2688.4075,-2051.2974,13.4521},
	{2688.4075,-2051.2974,13.4521, 2717.2813,-2018.4767,13.0423},
	{2717.2813,-2018.4767,13.0423, 2716.9824,-1948.2344,13.0462},
	{2716.9824,-1948.2344,13.0462, 2684.5635,-1930.2468,13.0349},
	{2684.5635,-1930.2468,13.0349, 2533.5410,-1930.1655,13.1099},
	{2533.5410,-1930.1655,13.1099, 2518.7649,-1905.3146,13.1099},
	{2518.7649,-1905.3146,13.1099, 2530.4792,-1746.5675,13.1099},
	{2530.4792,-1746.5675,13.1099, 2507.3545,-1729.7444,13.1099},
	{2507.3545,-1729.7444,13.1099, 2458.1924,-1729.8230,13.1669},
	{2458.1924,-1729.8230,13.1669, 2370.1084,-1729.0712,13.1099},
	{2370.1084,-1729.0712,13.1099, 2344.9167,-1700.7648,13.0865},
	{2344.9167,-1700.7648,13.0865, 2344.4531,-1635.1097,15.7140},
	{2344.4531,-1635.1097,15.7140, 2344.3831,-1537.1405,23.5631},
	{2344.3831,-1537.1405,23.5631, 2345.2053,-1401.7501,23.5419},
	{2345.2053,-1401.7501,23.5419, 2345.2053,-1401.7501,23.5419},
	{2345.2053,-1401.7501,23.5419, 2306.3291,-1355.6639,23.5833},
	{2306.3291,-1355.6639,23.5833, 2306.0701,-1263.0122,23.5694},
	{2306.0701,-1263.0122,23.5694, 2306.0544,-1166.9471,26.2076},
	{2306.0544,-1166.9471,26.2076, 2278.0364,-1145.3464,26.4622},
	{2278.0364,-1145.3464,26.4622, 2170.0706,-1101.1121,25.1248},
	{2170.0706,-1101.1121,25.1248, 2098.8899,-1059.0880,27.2549},
	{2098.8899,-1059.0880,27.2549, 1975.3855,-1024.3198,33.9819},
	{1975.3855,-1024.3198,33.9819, 1835.6329,-1008.1421,35.8599},
	{1835.6329,-1008.1421,35.8599, 1650.2634,-974.2786,37.7485},
	{1650.2634,-974.2786,37.7485, 1462.4369,-950.4426,35.8566},
	{1462.4369,-950.4426,35.8566, 1273.5957,-921.0332,41.7579},
	{1273.5957,-921.0332,41.7579, 1143.7179,-941.1769,42.4873},
	{1143.7179,-941.1769,42.4873, 1008.0687,-954.9758,41.5459},
	{1008.0687,-954.9758,41.5459, 894.7026,-977.7119,37.0105},
	{894.7026,-977.7119,37.0105, 795.0063,-1117.0616,23.3981},
	{795.0063,-1117.0616,23.3981, 794.2153,-1301.7091,13.1099},
	{794.2153,-1301.7091,13.1099, 762.1239,-1317.6649,13.1177},
	{762.1239,-1317.6649,13.1177, 650.9243,-1317.1066,13.0927},
	{650.9243,-1317.1066,13.0927, 624.3660,-1343.6879,13.1109},
	{624.3660,-1343.6879,13.1109, 678.2251,-1408.0879,13.1410},
	{678.2251,-1408.0879,13.1410, 848.8802,-1407.2465,12.9748},
	{848.8802,-1407.2465,12.9748, 974.1296,-1408.0800,12.8539},
	{974.1296,-1408.0800,12.8539, 1047.2054,-1407.8768,13.0464},
	{1047.2054,-1407.8768,13.0464, 1054.4144,-1470.0935,13.1025},
	{1054.4144,-1470.0935,13.1025, 1035.5215,-1614.6154,13.1099},
	{1035.5215,-1614.6154,13.1099, 1035.2695,-1701.0004,13.1142},
	{1035.2695,-1701.0004,13.1142, 1078.9595,-1714.1427,13.1099},
	{1078.9595,-1714.1427,13.1099, 1160.0457,-1714.3573,13.5051},
	{1160.0457,-1714.3573,13.5051, 1171.8032,-1761.6724,13.1255},
	{1171.8032,-1761.6724,13.1255, 1172.3824,-1838.3466,13.1315},
	{1211.1880,-1854.7206,13.1099, 1392.6388,-1875.1660,13.1099},
	{1392.6388,-1875.1660,13.1099, 1482.8757,-1874.8218,13.1099},
	{1482.8757,-1874.8218,13.1099,1556.2026,-1874.5105,13.1099},
	{1556.2026,-1874.5105,13.1099, 1572.3474,-1844.3711,13.1099},
	{1572.7369,-1746.3386,13.1099, 1544.3866,-1729.6533,13.1099},
	{1544.3866,-1729.6533,13.1099, 1532.4961,-1701.3772,13.1099},
	{1532.4961,-1701.3772,13.1099, 1534.9849,-1669.5476,13.1099},
	{1534.9849,-1669.5476,13.1099, 1532.5854,-1607.5736,13.1099},
	{1532.5854,-1607.5736,13.1099, 1572.1364,-1594.9028,13.1099},
	{1572.1364,-1594.9028,13.1099, 1656.8585,-1594.5774,13.1210},
	{1656.8585,-1594.5774,13.1210, 1806.9504,-1613.6790,13.082},
	{1806.9504,-1613.6790,13.082, 1819.3682,-1649.8215,13.1099},
	{1819.3682,-1649.8215,13.1099, 1818.8715,-1788.1320,13.1099},
	{1818.8715,-1788.1320,13.1099, 1790.2782,-1905.7708,13.5294},
	{1790.2782,-1905.7708,13.5294, 0.0, 0.0, 0.0}
};
new Float:BusSchool[][] = {
	{1811.1938,-1889.8872,13.5440, 1824.2263,-1860.5249,13.5438},
	{1824.2263,-1860.5249,13.5438, 1805.1449,-1829.8010,13.5239},
	{1805.1449,-1829.8010,13.5239, 1707.6541,-1809.7888,13.4965},
	{1707.6541,-1809.7888,13.4965, 1686.9036,-1836.6459,13.5159},
	{1686.9036,-1836.6459,13.5159, 1651.8804,-1869.6266,13.5162},
	{1651.8804,-1869.6266,13.5162, 1502.8373,-1869.8811,13.5162},
	{1502.8373,-1869.8811,13.5162, 1353.4274,-1860.7042,13.5161},
	{1353.4274,-1860.7042,13.5161, 1199.3623,-1849.8413,13.5264},
	{1199.3623,-1849.8413,13.5264, 1182.1199,-1834.6306,13.5401},
	{1182.1199,-1834.6306,13.5401, 1182.1145,-1758.0706,13.5318},
	{1182.1145,-1758.0706,13.5318, 1182.0609,-1730.1096,13.5597},
	{1182.0609,-1730.1096,13.5597, 1158.7635,-1709.4669,13.8951},
	{1158.7635,-1709.4669,13.8951, 1055.4957,-1709.8052,13.5161},
	{1055.4957,-1709.8052,13.5161, 1040.0447,-1687.1139,13.5148},
	{1040.0447,-1687.1139,13.5148, 1045.7626,-1522.2072,13.5117},
	{1045.7626,-1522.2072,13.5117, 1064.9896,-1424.6063,13.5307},
	{1064.9896,-1424.6063,13.5307, 1038.4175,-1397.8860,13.4361},
	{1038.4175,-1397.8860,13.4361, 907.1119,-1398.2129,13.3256},
	{907.1119,-1398.2129,13.3256, 785.7393,-1398.1437,13.5111},
	{785.7393,-1398.1437,13.5111, 635.0753,-1377.9424,13.6560},
	{635.0753,-1377.9424,13.6560, 631.3265,-1234.9570,17.9523},
	{631.3265,-1234.9570,17.9523, 595.9270,-1214.4860,18.0844},
	{595.9270,-1214.4860,18.0844, 533.9899,-1244.2378,16.6246},
	{533.9899,-1244.2378,16.6246, 439.1609,-1317.1486,15.1071},
	{439.1609,-1317.1486,15.1071, 277.6425,-1408.1100,13.8231},
	{277.6425,-1408.1100,13.8231, 155.9912,-1540.8994,11.0707},
	{155.9912,-1540.8994,11.0707, 133.4830,-1543.3573,8.9214},
	{133.4830,-1543.3573,8.9214, 48.5961,-1524.0131,5.2265},
	{48.5961,-1524.0131,5.2265, -100.3352,-1488.1211,2.8273},
	{-100.3352,-1488.1211,2.8273, -145.1024,-1306.7865,2.8257},
	{-145.1024,-1306.7865,2.8257, -78.1516,-1082.8153,9.7584},
	{-78.1516,-1082.8153,9.7584, -145.0393,-965.2789,27.8099},
	{-145.0393,-965.2789,27.8099, -283.7025,-876.4399,46.2992},
	{-283.7025,-876.4399,46.2992, -290.2096,-862.1980,46.6386},
	{-290.2096,-862.1980,46.6386, -337.2691,-781.2326,32.0309},
	{-337.2691,-781.2326,32.0309, -351.1661,-756.6705,29.3102},
	{-351.1661,-756.6705,29.3102, -419.3888,-610.9619,10.0949},
	{-419.3888,-610.9619,10.0949, -401.9373,-484.5970,19.1983},
	{-401.9373,-484.5970,19.1983, -535.3818,-389.8976,18.6940},
	{-535.3818,-389.8976,18.6940, -714.6323,-421.5444,16.5601},
	{-714.6323,-421.5444,16.5601, -897.4656,-455.0970,25.314},
	{-897.4656,-455.0970,25.3148, -1032.5560,-445.4271,36.2358},
	{-1032.5560,-445.4271,36.2358, -1154.7145,-585.3818,33.6438},
	{-1154.7145,-585.3818,33.6438, -1216.5745,-752.1287,62.2464},
	{-1216.5745,-752.1287,62.2464, -1351.1592,-811.6833,77.7376},
	{-1351.1592,-811.6833,77.7376, -1522.3048,-813.4449,57.6774},
	{-1522.3048,-813.4449,57.6774, -1723.8932,-734.2736,34.8972},
	{-1723.8932,-734.2736,34.8972, -1758.8379,-603.1448,16.3447},
	{-1758.8379,-603.1448,16.3447, -1783.2706,-575.9223,16.4678},
	{-1783.2706,-575.9223,16.4678, -1899.6965,-575.5848,24.6116},
	{-1899.6965,-575.5848,24.6116, -2051.6191,-571.2690,29.2605},
	{-2051.6191,-571.2690,29.2605, -2187.7424,-455.8456,49.5788},
	{-2187.7424,-455.8456,49.5788, -2251.7327,-328.5629,51.0000},
	{-2251.7327,-328.5629,51.0000, -2251.2747,-91.2423,35.3053},
	{-2251.2747,-91.2423,35.3053, -2232.7847,-73.0775,35.3043},
	{-2232.7847,-73.0775,35.3043, -2092.6924,-72.8101,35.3056},
	{-2092.6924,-72.8101,35.3056, -2027.0743,-72.7576,35.3048},
	{-2027.0743,-72.7576,35.3048, -1970.9655,-67.5993,26.9884},
	{-1970.9655,-67.5993,26.9884, -1890.0920,-108.0391,16.7302},
	{-1890.0920,-108.0391,16.7302, -1817.6470,-118.8596,5.6305},
	{-1817.6470,-118.8596,5.6305, -1801.6559,-133.2738,5.9989},
	{-1801.6559,-133.2738,5.9989, -1801.5969,-259.9263,19.6941},
	{-1801.5969,-259.9263,19.6941, -1819.6621,-422.3518,15.2981},
	{-1819.6621,-422.3518,15.2981, -1821.7964,-556.8774,16.2816},
	{-1821.7964,-556.8774,16.2816, -1786.8654,-584.6452,16.4567},
	{-1786.8654,-584.6452,16.4567, -1764.6979,-603.6809,16.3423},
	{-1764.6979,-603.6809,16.3423, -1748.6947,-720.4413,30.5434},
	{-1748.6947,-720.4413,30.5434, -1581.0503,-807.4423,50.3464},
	{-1581.0503,-807.4423,50.3464, -1423.3228,-821.4654,79.8878},
	{-1423.3228,-821.4654,79.8878, -1224.8724,-769.6058,64.0403},
	{-1224.8724,-769.6058,64.0403, -1152.8224,-596.8960,35.3450},
	{-1152.8224,-596.8960,35.3450, -1041.1260,-457.2589,35.9495},
	{-1041.1260,-457.2589,35.9495, -913.1431,-459.6167,27.2702},
	{-913.1431,-459.6167,27.2702, -723.4605,-431.7139,16.2679},
	{-723.4605,-431.7139,16.2679, -499.9919,-400.8935,15.5326},
	{-499.9919,-400.8935,15.5326, -402.3564,-536.7015,17.7195},
	{-402.3564,-536.7015,17.7195, -378.8124,-714.2237,23.0889},
	{-378.8124,-714.2237,23.0889, -328.8730,-789.6298,33.0501},
	{-328.8730,-789.6298,33.0501, -295.5281,-858.0462,46.4355},
	{-295.5281,-858.0462,46.4355, -268.9687,-889.9434,45.3004},
	{-268.9687,-889.9434,45.3004, -140.8723,-976.6584,26.5499},
	{-140.8723,-976.6584,26.5499, -94.1295,-1115.8562,1.4520},
	{-94.1295,-1115.8562,1.4520, -151.3767,-1304.5347,2.8290},
	{-151.3767,-1304.5347,2.8290, -92.9396,-1501.0825,2.8312},
	{-92.9396,-1501.0825,2.8312, 159.4090,-1553.2952,11.3128},
	{159.4090,-1553.2952,11.3128, 252.4596,-1434.1473,13.5760},
	{252.4596,-1434.1473,13.5760, 459.7539,-1317.6747,15.3072},
	{459.7539,-1317.6747,15.3072, 565.3486,-1243.3866,17.3311},
	{565.3486,-1243.3866,17.3311, 605.5002,-1226.4463,18.1500},
	{605.5002,-1226.4463,18.1500, 625.8234,-1253.1117,17.6397},
	{625.8234,-1253.1117,17.6397, 627.3690,-1377.5931,13.6519},
	{627.3690,-1377.5931,13.6519, 660.7958,-1404.8990,13.5326},
	{660.7958,-1404.8990,13.5326, 806.2908,-1405.2435,13.4385},
	{806.2908,-1405.2435,13.4385, 1018.8021,-1405.9326,13.1585},
	{1018.8021,-1405.9326,13.1585, 1059.8605,-1423.7445,13.5040},
	{1059.8605,-1423.7445,13.5040, 1035.2980,-1569.7013,13.5185},
	{1035.2980,-1569.7013,13.5185, 1034.6521,-1697.4269,13.5162},
	{1034.6521,-1697.4269,13.5162, 1055.5187,-1714.7716,13.5160},
	{1055.5187,-1714.7716,13.5160, 1157.6907,-1714.5591,13.9120},
	{1157.6907,-1714.5591,13.9120, 1172.8723,-1727.8831,13.7010},
	{1172.8723,-1727.8831,13.7010, 1172.4209,-1764.7063,13.5319},
	{1172.4209,-1764.7063,13.5319, 1172.8641,-1834.6772,13.5380},
	{1172.8641,-1834.6772,13.5380, 1194.4520,-1854.6458,13.5317},
	{1194.4520,-1854.6458,13.5317, 1331.0106,-1856.5723,13.5174},
	{1331.0106,-1856.5723,13.5174, 1462.7120,-1875.5095,13.5180},
	{1462.7120,-1875.5095,13.5180, 1656.1395,-1874.7982,13.5168},
	{1656.1395,-1874.7982,13.5168, 1692.3484,-1833.1428,13.5170},
	{1692.3484,-1833.1428,13.5170, 1705.9072,-1815.0320,13.4979},
	{1705.9072,-1815.0320,13.4979, 1803.7441,-1834.7439,13.5176},
	{1803.7441,-1834.7439,13.5176, 1819.1780,-1864.0748,13.5492},
	{1819.1780,-1864.0748,13.5492, 1812.3113,-1888.3627,13.5433},
	{1812.3113,-1888.3627,13.5433, 1788.1925,-1905.1683,13.5291},
	{1788.1925,-1905.1683,13.5291, 0.0, 0.0, 0.0}
};
new Float:BusLS[][] = {
	{1808.7693,-1889.6619,13.5441, 1824.0190,-1874.4978,13.4840},
	{1824.0190,-1874.4978,13.4840, 1824.0060,-1773.2596,13.5162},
	{1824.0060,-1773.2596,13.5162, 1824.0614,-1635.0193,13.5162},
	{1824.0614,-1635.0193,13.5162, 1844.6427,-1520.9193,13.5105},
	{1844.6427,-1520.9193,13.5105, 1853.1488,-1389.1710,13.5240},
	{1853.1488,-1389.1710,13.5240, 1852.5815,-1201.0886,22.2652},
	{1852.5815,-1201.0886,22.2652, 1828.0586,-1178.4015,23.7647},
	{1828.0586,-1178.4015,23.7647, 1743.3359,-1159.2402,23.7648},
	{1743.3359,-1159.2402,23.7648, 1657.0310,-1158.5968,23.9014},
	{1657.0310,-1158.5968,23.9014, 1557.1129,-1158.6820,24.0388},
	{1557.1129,-1158.6820,24.0388, 1437.4683,-1158.1476,23.7897},
	{1437.4683,-1158.1476,23.7897, 1376.5890,-1138.8882,23.7887},
	{1376.5890,-1138.8882,23.7887, 1360.5190,-1121.9950,23.8286},
	{1360.5190,-1121.9950,23.8286, 1378.7158,-965.2871,33.8278},
	{1378.7158,-965.2871,33.8278, 1395.1383,-950.7330,34.7365},
	{1395.1383,-950.7330,34.7365, 1482.0538,-975.8360,36.9147},
	{1482.0538,-975.8360,36.9147, 1588.9043,-991.8221,47.5224},
	{1588.9043,-991.8221,47.5224, 1690.7782,-925.4719,52.2945},
	{1690.7782,-925.4719,52.2945, 1710.1456,-811.7196,56.6823},
	{1710.1456,-811.7196,56.6823, 1715.7312,-658.3969,42.8951},
	{1715.7312,-658.3969,42.8951, 1703.9282,-455.4938,33.5071},
	{1703.9282,-455.4938,33.5071, 1677.1586,-251.9822,43.3416},
	{1677.1586,-251.9822,43.3416, 1654.6398,-33.1713,36.6220},
	{1654.6398,-33.1713,36.6220, 1626.1002,136.1207,36.2453},
	{1626.1002,136.1207,36.2453, 1702.3450,390.6835,30.3718},
	{1702.3450,390.6835,30.3718, 1778.0345,612.6203,21.4697},
	{1778.0345,612.6203,21.4697, 1806.4822,812.1041,11.0276},
	{1806.4822,812.1041,11.0276, 1772.3489,859.8555,10.6022},
	{1772.3489,859.8555,10.6022, 1564.7834,857.3679,6.7893}, // 29
	{1564.7834,857.3679,6.7893, 1423.8711,863.6336,6.9534},
	{1423.8711,863.6336,6.9534, 1259.5035,935.0343,14.0343},
	{1259.5035,935.0343,14.0343, 1108.6045,837.5462,10.8190},
	{1108.6045,837.5462,10.8190, 951.2515,750.0100,10.8096},
	{951.2515,750.0100,10.8096, 780.5138,689.3925,11.4581},
	{780.5138,689.3925,11.4581, 559.9733,696.3895,3.4388},
	{559.9733,696.3895,3.4388, 367.5167,783.2415,6.5434},
	{367.5167,783.2415,6.5434, 272.1324,877.9490,21.3849},
	{272.1324,877.9490,21.3849, 235.9642,956.7602,28.0319},
	{235.9642,956.7602,28.0319, 244.9654,975.6467,28.3250},
	{244.9654,975.6467,28.3250, 397.9491,1016.9831,28.5701},
	{397.9491,1016.9831,28.5701, 564.1965,1060.3011,28.5695},
	{564.1965,1060.3011,28.5695, 718.3242,1101.9430,28.5811},
	{718.3242,1101.9430,28.5811, 802.7499,1132.6182,28.5613},
	{802.7499,1132.6182,28.5613, 832.3854,1119.7511,29.9747},
	{832.3854,1119.7511,29.9747, 914.5725,941.4826,13.3511},
	{914.5725,941.4826,13.3511, 832.3351,854.2448,12.4807},
	{832.3351,854.2448,12.4807, 890.7936,891.7736,13.4848},
	{890.7936,891.7736,13.4848, 887.9802,1028.9658,16.6697},
	{887.9802,1028.9658,16.6697, 827.2870,1127.1987,30.0681},
	{827.2870,1127.1987,30.0681, 797.9722,1136.6748,28.4726},
	{797.9722,1136.6748,28.4726, 622.5432,1083.0826,28.4664},
	{622.5432,1083.0826,28.4664, 430.2862,1031.9989,28.4727},
	{430.2862,1031.9989,28.4727, 239.7596,980.1387,28.3301},
	{239.7596,980.1387,28.3301, 229.4479,955.5310,28.0652},
	{229.4479,955.5310,28.0652, 299.3630,797.7305,14.8966},
	{299.3630,797.7305,14.8966, 426.2678,601.2230,19.0801},
	{426.2678,601.2230,19.0801, 512.9183,478.3800,19.0631},
	{512.9183,478.3800,19.0631, 615.2172,326.4894,19.7042},
	{615.2172,326.4894,19.7042, 605.2267,308.3843,19.6450},
	{605.2267,308.3843,19.6450, 522.1287,247.3229,14.6816},
	{522.1287,247.3229,14.6816, 511.1678,212.9783,14.1755},
	{511.1678,212.9783,14.1755, 524.8848,55.7221,20.7846},
	{524.8848,55.7221,20.7846, 525.1271,-117.4125,37.5993},
	{525.1271,-117.4125,37.5993, 543.7299,-144.9373,37.3545},
	{543.7299,-144.9373,37.3545, 742.2243,-164.6572,19.2261},
	{742.2243,-164.6572,19.2261, 937.1564,-180.5933,11.0567},
	{937.1564,-180.5933,11.0567, 1089.0780,-190.0154,40.2116},
	{1089.0780,-190.0154,40.2116, 1187.1486,-185.4979,39.7762},
	{1187.1486,-185.4979,39.7762, 1251.4387,-354.2089,4.3749},
	{1251.4387,-354.2089,4.3749, 1228.0728,-559.8834,42.2943},
	{1228.0728,-559.8834,42.2943, 1154.3828,-773.3051,58.0512},
	{1154.3828,-773.3051,58.0512, 1156.1265,-925.4431,43.0940},
	{1156.1265,-925.4431,43.0940, 1180.6953,-953.1128,42.7677},
	{1180.6953,-953.1128,42.7677, 1268.9562,-936.8261,42.3414},
	{1268.9562,-936.8261,42.3414, 1347.3760,-943.0712,34.9112},
	{1347.3760,-943.0712,34.9112, 1359.3085,-961.2700,33.8680},
	{1359.3085,-961.2700,33.8680, 1340.5586,-1122.0743,23.8279},
	{1340.5586,-1122.0743,23.8279, 1358.0342,-1143.0795,23.8027},
	{1358.0342,-1143.0795,23.8027, 1436.1731,-1162.8156,23.7961},
	{1436.1731,-1162.8156,23.7961, 1498.9742,-1163.6650,24.0570},
	{1498.9742,-1163.6650,24.0570, 1656.2780,-1163.5833,23.9116},
	{1656.2780,-1163.5833,23.9116, 1728.9275,-1163.5092,23.7771},
	{1728.9275,-1163.5092,23.7771, 1828.8960,-1183.5767,23.7642},
	{1828.8960,-1183.5767,23.7642, 1845.8003,-1200.4696,22.3763},
	{1845.8003,-1200.4696,22.3763, 1846.0093,-1298.4708,13.5051},
	{1846.0093,-1298.4708,13.5051, 1846.3126,-1443.3279,13.5332},
	{1846.3126,-1443.3279,13.5332, 1819.3213,-1590.4891,13.4889},
	{1819.3213,-1590.4891,13.4889, 1819.3759,-1711.7463,13.5161},
	{1819.3759,-1711.7463,13.5161, 1819.2158,-1848.1592,13.5477},
	{1819.2158,-1848.1592,13.5477, 1811.9922,-1888.8358,13.5436},
	{1811.9922,-1888.8358,13.5436, 1788.8031,-1905.1083,13.5291},
	{1788.8031,-1905.1083,13.5291, 0.0, 0.0, 0.0}
};
new ProductTime[MAX_PLAYERS];
new Text3D:tPickup[11];
new Text3D:tnarksklad[1];
new Timer[14];
new TOTALBIZZ;
new vibormashina[MAX_PLAYERS];
new BansMis[MAX_PLAYERS];
new paint[3];
new Text:RegSkin[6];
new EndingRaceRound = 1;
new RacingPlayers = 0;
new ExpUping = 0;
new FirstRaceWinner = MAX_SLOTS;
new antireklamka[MAX_PLAYERS];
new PlayerRacing[MAX_PLAYERS];
new SecondRaceWinner = MAX_SLOTS;
new ThirdRaceWinner = MAX_SLOTS;
new ThoRaceWinner = MAX_SLOTS;
new FiveRaceWinner = MAX_SLOTS;
new SixRaceWinner = MAX_SLOTS;
new SevenRaceWinner = MAX_SLOTS;
new EightRaceWinner = MAX_SLOTS;
new NineRaceWinner = MAX_SLOTS;
new TenRaceWinner = MAX_SLOTS;
new racepic[1];
new Float:RaceSpawns[29][4] = {
	{-2354.8516,-1626.4175,483.0309,249.7451},
	{-2353.4922,-1622.7336,483.0042,249.7451},
    {-2352.6453,-1620.4384,482.9875,249.7451},
    {-2351.1426,-1616.3665,482.9579,249.7451},
    {-2349.8306,-1612.8115,482.9321,249.7451},
    {-2348.5227,-1609.2662,482.9063,249.7451},
    {-2341.3762,-1611.9033,482.8898,249.7451},
    {-2342.6816,-1615.4403,482.9155,249.7451},
    {-2344.2883,-1619.7947,482.9472,249.7451},
    {-2344.6582,-1623.8768,482.9719,249.7451}, // 10
    {-2345.2324,-1630.5220,483.0120,249.7451},
    {-2344.4297,-1636.0559,483.0397,249.7451},
    {-2344.5588,-1642.4017,483.0761,249.7451},
    {-2346.7053,-1648.2185,483.1183,249.7451},
    {-2354.7488,-1638.6115,483.0994,249.7451},
    {-2337.4316,-1645.0018,483.0594,249.7451},
    {-2336.1204,-1641.4486,483.0337,249.7451},
    {-2332.5942,-1638.4927,483.0014,249.7451},
    {-2327.0803,-1633.8296,482.9509,249.7451},
    {-2323.0791,-1630.5656,482.9149,249.7451}, // 20
    {-2320.7556,-1626.7666,482.8832,249.7451},
    {-2318.6245,-1620.9913,482.8412,249.7451},
    {-2316.9670,-1616.4917,483.1349,249.7303},
    {-2315.2871,-1611.9425,483.1844,249.7303},
    {-2311.6377,-1626.5525,483.0858,249.7303},
    {-2313.4299,-1631.4058,483.0330,249.7303},
    {-2312.8618,-1636.4996,482.9939,249.7303},
    {-2312.9070,-1647.5344,482.9008,249.7303},
    {-2311.0457,-1654.4939,482.8545,249.7303}
};
new Float:race[32][4] = {
	{-2285.1321,-1670.8613,481.5994}, // pic 1
    {-1439.6504,-1699.1676,0.4020}, // pic 2
    {-1363.8789,-1760.1735,0.3594}, // pic 3
    {-1316.2002,-1866.6085,0.3787},// pic 4
    {-1464.8606,-2113.8933,0.3612},// pic 5
    {-1530.4048,-2150.5381,4.7225}, // pic 6 = 刷出一辆 444
    {-1722.7896,-2100.9929,41.9682}, // pic 7
    {-1881.0543,-2087.9182,59.9663}, // pic 8
    {-2188.1172,-2161.4565,47.3375}, // pic 9
    {-2529.1074,-2154.3088,30.7712}, // pic 10 刷出一辆 411
    {-2910.7161,-1660.2400,16.0131},// pic 11
    {-2877.4731,-985.4217,9.2193},// pic 12
    {-2515.7783,-342.0007,28.5152}, // pic 13
    {-1967.4264,-347.5891,39.8111}, // pic 14
    {-1885.6129,70.4277,37.9609},// pic 15
    {-1586.8286,620.5012,41.9343}, // pic 16
    {-978.1909,1125.1211,30.0313}, // pic 17
    {-728.2736,689.0345,17.1866}, // pic 18
    {148.1790,696.9816,5.8011}, // pic 19
    {923.2086,617.1326,-32.6233}, // 20  495
    {1213.6201,614.1129,-36.5102}, // 21
    {1691.8799,454.0602,-30.7794}, // 22
    {1867.7644,481.5471,-58.3906}, // 23
    {2750.0542,488.0780,-71.1640},// 24
    {2767.0840,609.3295,7.7706},// 全地形车 471
    {2823.0671,85.6804,25.9319}, // tut
    {2816.2427,-49.2815,34.1197}, // tut
    {2672.3420,-294.8244,13.9638}, // tut
    {2383.7378,-261.9771,26.0487}, // tut
    {2070.1731,-384.3672,71.1031},// tut
    {2201.6340,-704.8870,44.3305},// tut
    {2287.4275,-1381.0131,23.5813} // 完 32
};
new GunObjects[47] =
{
	0,331,333,334,335,336,337,338,339,341,321,322,323,324,325,326,342,343,344,
	0,0,0,346,347,348,349,350,351,352,353,355,356,372,357,358,359,360,361,362,
	363,364,365,366,367,368,368,371
};
new Text:SkinMagazCancel;
new Text:SkinMagazLeft;
new bool:TaxiJobStarted[MAX_PLAYERS];
new PlayerEnteredPoint[MAX_PLAYERS];
new PlayerClickMapingCyka[MAX_PLAYERS];
new bool:PlayerCalledTaxi[MAX_PLAYERS];
new bool:PlayerRentTaxi[MAX_PLAYERS];
new bool:PlayerTaxiStarted[MAX_PLAYERS];
new PlayerService[MAX_PLAYERS];
new GetPlayerRentTaxi[MAX_PLAYERS];
new PlayerExitCount[MAX_PLAYERS];
new Float:FIRSTPOS[MAX_PLAYERS][3];
new Float:LASTPOS[MAX_PLAYERS][3];
new TAXI_ID[MAX_TAXI];
new Text3D:TAXI_TEXT[MAX_TAXI];
enum tInfo {tModel,Float:tPosX,Float:tPosY,Float:tPosZ,Float:tPosA};
new TaxiInfo[MAX_TAXI][tInfo] = {
	{420, 1521.3258,-1704.9739,13.3301,359.9999}, //1
	{420, 1521.3755,-1694.3236,13.3257,0.0416}, // 2
	{420, 1437.7147,-1710.1219,13.3257,359.6855}, // 3
	{420, 1437.9091,-1697.4237,13.3234,0.0005}, // 4
	{420,1705.8087,-1085.7107,23.6833,359.1368},
	{420,1701.5161,-1085.6456,23.6833,359.1368},
	{420,1697.5768,-1085.5865,23.6833,359.1368},
	{420,1692.8724,-1085.5155,23.6833,359.1368},
	{420,1688.3853,-1085.4479,23.6833,359.1368},
	{420, 2853.3333,1351.7152,10.5893,89.3783}, // 11
	{420, 2853.3005,1348.7471,10.4733,89.3783}, // 12
	{420, 2853.3684,1355.0702,10.5833,89.3722} // 13
};
enum LSPD_Door_Info
{
	ObjectID1,
	ObjectID2,
	ObjectID3,
	ObjectID4,
	ButtonID1,
	ButtonID2,
	TimerID,
	Opened
};
new LSPD_Door[LSPD_Door_Info];
new Text:SkinMagazSelect;
new PaintballPlayers = 0;
new PaintballRound = 1;
new PaintballWinner = MAX_SLOTS;
new PaintBallTwoMest = MAX_SLOTS;
new PaintballWinnerKills = 0;
new PaintballRab;
new PlayerPaintballing[MAX_PLAYERS];
new PlayerPaintballKills[MAX_PLAYERS];
new PlayerPaintballDeaths[MAX_PLAYERS];
	new Float:PaintballSpawns[7][3] = {
	{-1129.8708,1057.3213,1346.4141},
	{-1077.0220,1041.9779,1344.1307},
	{-1065.8458,1092.5735,1343.2051},
	{-1039.7141,1046.4412,1341.8033},
	{-1029.5620,1085.4348,1343.2080},
	{-976.8642,1061.2611,1345.6719},
	{-977.2012,1061.3929,1345.6719}
};
new paintgun[] = {24,31,30};
new Text:SkinMagazRight;
new Text:SkinRabCancel;
new Text:SkinRabLeft;
#define MAX_FUEL 100

enum fuel_info
{
	fuelid,
	pNamesss[MAX_PLAYER_NAME],
	pBizzid,
	pPrice,
	pTill,
	bool:pStatus,
	Text3D:pText3D
};
new FuelInfo[MAX_FUEL][fuel_info];
new Text:SkinRabSelect;
new Text:SkinRabRight;
new Pizdorvanka[MAX_PLAYERS];
new FreezePlayer[MAX_PLAYERS];
new PicCP[MAX_PLAYERS];
new realtime = 1;
new ghour = 0;
new gminute = 0;
new wtime = 15;
new gsecond = 0;
new MafiasOn[MAX_PLAYERS];
new MafiACheckGz = 0;
#define D_ADDNED         11
#define D_JOB             131
#define D_HEAL 			105
#define MAX_GPS 30
enum FGPS
{
	gpsid,
	Float: gpsLocationX,
	Float: gpsLocationY,
	Float: gpsLocationZ,
	gpsName[64]
};
enum dGunEnum
{
	Float:ObjPos[3],
	ObjID,
	ObjData[2]
};

enum chetinfo
{
	cheatid1
}
new Float:ChetInfo[10][chetinfo];

new dGunData[MAX_OBJ][dGunEnum];
new GPSInfo[MAX_GPS][FGPS];
new mafiawars = 0;
new idtr[MAX_PLAYERS];
new banip[MAX_PLAYERS];
new pokupka[MAX_PLAYERS];
new Menu:Buyint;
new PlayerText:MafiaTime[MAX_PLAYERS];
new PlayerText:PaintBallTime[MAX_PLAYERS];
new PlayerText:HelpText[3][MAX_PLAYERS];
new HelpMessage[11][MAX_PLAYERS];
new summatr[MAX_PLAYERS];
new ChangeSkin[MAX_PLAYERS];
new IDVEH[MAX_PLAYERS];
new bool:UseEnter[MAX_PLAYERS];
new TeleportDestNoFloat[MAX_PLAYERS][2];
new ammomery[1];

new SkinMen[][2] ={
	{1,100},
	{2,150},
	{3,200},
	{4,500},
	{5,700},
	{6,900},
	{7,1200},
	{8,1300},
	{14,1500},
	{15,1800},
	{16,2000},
	{17,5000},
	{18,6000},
	{19,7500},
	{20,8000},
	{21,10000},
	{22,12000},
	{23,15000},
	{28,20000},
	{29,22000},
	{30,25000},
	{33,28000},
	{34,30000},
	{35,33000},
	{42,35000},
	{43,40000},
	{45,45000},
	{46,48000},
	{47,50000},
	{48,55000},
	{82,58000},
	{83,60000},
	{84,63000},
	{100,65000},
	{101,66000},
	{119,70000},
	{122,75000},
	{127,80000},
	{133,83000},
	{144,85000},
	{153,88000},
	{154,90000},
	{156,95000},
	{176,100000},
	{177,120000},
	{179,130000},
	{180,135000},
	{181,140000},
	{185,150000},
	{208,160000},
	{241,165000},
	{242,170000},
	{248,180000},
	{249,200000},
	{258,210000},
	{259,220000},
	{264,228000},
	{289,240000},
	{290,250000},
	{291,280000},
	{293,300000},
	{294,350000},
	{295,370000},
	{296,390000},
	{297,400000},
	{299,500000}
};
new SkinMale[][2] ={
	{11, 1000},
	{12, 4000},
	{13, 5000},
	{40, 6000},
	{41, 8000},
	{55, 10000},
	{56, 15000},
	{63, 17000},
	{64, 19000},
	{65, 20000},
	{69, 23000},
	{75, 24000},
	{85, 26000},
	{87, 29000},
	{91, 30000},
	{93, 40000},
	{140,45000},
	{141,50000},
	{148,55000},
	{152,60000},
	{172,70000},
	{178,80000},
	{190,90000},
	{192,95000},
	{193,99000},
	{194,100000},
	{198,110000},
	{207,120000},
	{211,130000},
	{214,135000},
	{216,140000},
	{219,145000},
	{224,150000},
	{225,160000},
	{226,170000},
	{233,180000},
	{237,190000},
	{238,200000},
	{243,210000},
	{244,230000},
	{246,250000},
	{251,260000},
	{256,280000},
	{257,290000},
	{263,300000},
	{298,350000}
};
new SkinViborN[][1] ={
	{184},
	{26},
	{234},
	{37},
	{66},
	{170},
	{6},
	{182}
};
new SkinViborM[][1] ={
	{251},
	{215},
	{193},
	{55},
	{9}
};
#define MAX_BIZZ 200
enum bzInfo
{
	bid,
	Float:bEntrx,
	Float:bEntry,
	Float:bEntrz,
	Float:bExitx,
	Float:bExity,
	Float:bExitz,
	Float:bMenux,
	Float:bMenuy,
	Float:bMenuz,
	bOwner[MAX_PLAYER_NAME],
	bPrice,
	bBuyPrice,
	bMoney,
	bType,
	bLic,
	bInt,
	bVirtual,
	bLock,
	bEnter,
	bMIcon,
	bIcon,
	bPickup,
	bPickupExit,
	bName[MAX_PLAYER_NAME],
	bProduct,
	bTill,
	bMenu,
	bLockTime,
	bMafia,
	bCapture
};
new BizzInfo[MAX_BIZZ][bzInfo];
new Text3D:LABELBIZZ[MAX_BIZZ];
new BizzPay[MAX_BIZZ];
new YCMDstr[256];
new Light[MAX_VEHICLES];
new mRank[MAX_PLAYERS];
new VhodVozm = 5;
new TotalHouse = 0;
new NickPaintPobed[MAX_PLAYER_NAME];
new NickPaintPobed2[MAX_PLAYER_NAME];
new NickPobed[MAX_PLAYER_NAME];
new NickPobed2[MAX_PLAYER_NAME];
new NickPobed3[MAX_PLAYER_NAME];
new NickPobed4[MAX_PLAYER_NAME];
new NickPobed5[MAX_PLAYER_NAME];
new NickPobed6[MAX_PLAYER_NAME];
new NickPobed7[MAX_PLAYER_NAME];
new NickPobed8[MAX_PLAYER_NAME];
new NickPobed9[MAX_PLAYER_NAME];
new NickPobed10[MAX_PLAYER_NAME];
new KanPick[5];
new Golosa[6];
new HealthOn[MAX_PLAYERS];
new AvtoSalonChange[MAX_PLAYERS];
new AvtoSalonOn[MAX_PLAYERS];
new AvtoSalonCarNope[][2] ={
	{400,50000},
	{404,25000},
	{436,35000},
	{439,45000},
	{458,60000},
	{466,40000},
	{475,100000},
	{478,25000},
	{479,70000},
	{492,80000},
	{516,85000},
	{517,85000},
	{518,85000},
	{526,35000},
	{527,25000},
	{542,45000},
	{543,25000},
	{546,35000},
	{547,35000},
	{549,40000},
	{567,100000}
};
new AvtoSalonCarD[][2] ={
	{419,150000},
	{421,150000},
	{445,150000},
	{489,300000},
	{491,150000},
	{533,300000},
	{534,150000},
	{554,250000},
	{555,150000},
	{561,200000},
	{579,450000},
	{580,200000},
	{589,200000},
	{603,200000},
	{418,200000},
	{461,500000},
	{581,500000},
	{586,300000},
	{401,150000},
	{405,200000},
	{412,150000},
	{422,200000},
	{426,150000},
	{467,150000},
	{474,150000},
	{496,150000},
	{507,150000},
	{529,150000},
	{536,150000},
	{540,150000},
	{550,150000},
	{551,150000},
	{566,150000},
	{575,200000},
	{576,200000},
	{585,200000},
	{600,150000}
};
new AvtoSalonCarA[][2] ={
	{541,2000000},
	{411,2000000},
	{415,1000000},
	{429,700000},
	{451,1500000},
	{506,700000},
	{522,2000000},
	{434,700000},
	{477,700000},
	{480,750000},
	{535,700000},
	{545,600000},
	{558,700000},
	{559,800000},
	{560,950000},
	{562,700000},
	{565,650000},
	{587,650000},
	{602,700000},
	{521,800000},
	{463,650000},
	{468,700000},
	{402,900000}
};
enum mafInfo
{
	mFuels[128],
	mFuel
};
new MafiaInfo[10][mafInfo][5];
new Float:PickupX[MAX_PLAYERS],Float:PickupY[MAX_PLAYERS];
new oldpickup[MAX_PLAYERS];
new TOTALADVERT[3];
new rob;
new ReportQ[MAX_PLAYERS][144];
enum adInfo
{
	adPhone,
	adText[128],
	adName[MAX_PLAYER_NAME]
};
new AdvertInfo[30][3][adInfo];
new GolosName[256];
new GolosText1[128], GolosText2[128], GolosText3[128], GolosText4[128], GolosText5[128];
new bool:times[MAX_PLAYERS];
new war = 0;
new PaintBallGo = 0;
new RaceGo = 0;
new startwar = 0;
new dinamicash[MAX_PLAYERS];
new duty[MAX_PLAYERS];
new sellzone[MAX_PLAYERS];
new play[MAX_PLAYERS];
new zips[MAX_PLAYERS];
new Float: PlayerHealth[MAX_PLAYERS];
new Float: Armour[MAX_PLAYERS];
new Flood[MAX_PLAYERS];
new Floods[MAX_PLAYERS];
new Weapons[MAX_PLAYERS][47];
new zons;
new umer[MAX_PLAYERS];
new seans[MAX_PLAYERS];
new medicss[2];
new ProposeOffer[MAX_PLAYERS];
new Krisha[MAX_PLAYERS];
new KrishaOffer[MAX_PLAYERS];
new ProposedTo[MAX_PLAYERS];
new GotProposedBy[MAX_PLAYERS];
new chekmatlva[10];
new chekmats[3];
new addd[3];
new TicketOffer[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new Type = 2;
new zvonok[MAX_PLAYERS];
new PlayerDrunk[MAX_PLAYERS];
new startaddiction[MAX_PLAYERS];
new chet[MAX_PLAYERS];
new Text:DRAP;
new caridhouse[MAX_PLAYERS];
new carpick;
new carpick2;
new carpick3;
new world[MAX_PLAYERS];
new world1[MAX_PLAYERS];
new world2[MAX_PLAYERS];
new vcolor1[MAX_PLAYERS];
new vcolor2[MAX_PLAYERS];
new scolor[MAX_PLAYERS];
new scolor1[MAX_PLAYERS];
new VehicleNames[212][] = {
	"Landstalker","Bravura","Buffalo","Linerunner","Perrenial","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
	"Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr.Whoopee","BF Injection",
	"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
	"Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Barron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","Zr-350","Walton","Regina",
	"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
	"Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring A","Hotring B",
	"Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain",
	"Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover",
	"Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
	"Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer A","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car","Police Car",
	"Police Car","Police Ranger","Picador","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","L Trailer A","L Trailer B",
	"Stair Trailer","Boxville","Farm Plow","U Trailer"
};
new JobCarTime[MAX_PLAYERS];
new sellgun;
new sellgun1;
new sellgun2;
new sellgun3;
new sellgun4;
new PEfir[MAX_PLAYERS];
new Pefir[MAX_PLAYERS];
new bool:robhouse[MAX_PLAYERS];
new bool:robh[MAX_PLAYERS];
new WantNickChange[MAX_PLAYERS][MAX_PLAYER_NAME];
new HealOffer[MAX_PLAYERS];
new HealPrice[MAX_PLAYERS];
new InviteOffer[MAX_PLAYERS];
new logs = 1;
new healpric = 100;
new smspricels = 50;
new smsls = 0;
new keys[MAX_PLAYERS];
new PCash[MAX_PLAYERS];
new DrugOffer[MAX_PLAYERS];
new DrugPrice[MAX_PLAYERS];
new DrugGram[MAX_PLAYERS];
new HotdogOffer[MAX_PLAYERS];
new ZoneOffer[MAX_PLAYERS];
new ZonePrice[MAX_PLAYERS];
new HotdogPrice[MAX_PLAYERS];
new FreeOffer[MAX_PLAYERS];
new SposobOffer[MAX_PLAYERS];
new FreePrice[MAX_PLAYERS];
new cbjstore[128];
new TakingLesson[MAX_PLAYERS];
new usegruz[MAX_PLAYERS];
new clearanim[MAX_PLAYERS];
new gLastCar[MAX_PLAYERS];
new ChosenPlayer[MAX_PLAYERS];
new IsLocked[MAX_VEHICLES];
new usemats[MAX_PLAYERS];
new JobAmmount[MAX_PLAYERS];
new OldSkin[MAX_PLAYERS];
new JobOffer[MAX_PLAYERS];
new Employer[MAX_PLAYERS];
new ConsumingMoney[MAX_PLAYERS];
new zavodis[MAX_VEHICLES];
new dostup[MAX_PLAYERS];
new forma[MAX_PLAYERS];
new proverkaforma[MAX_PLAYERS];
new Army;
new TieTime[MAX_PLAYERS];
new Rekl[MAX_PLAYERS];
new WantedTime[MAX_PLAYERS];
new Tazer[MAX_PLAYERS];
new Tazed[MAX_PLAYERS];
new TranPlayer[MAX_PLAYERS];
new Report[MAX_PLAYERS];
new AdvertTime[MAX_PLAYERS];
new RegistrationStep[MAX_PLAYERS];
new WatchingTV[MAX_PLAYERS];
new MatsHolding[MAX_PLAYERS];
new DivorceOffer[MAX_PLAYERS];
new MarriageCeremoney[MAX_PLAYERS];
new MapIconsShown[MAX_PLAYERS];
new MarryWitness[MAX_PLAYERS];
new MarryWitnessOffer[MAX_PLAYERS];
new PlayerStoned[MAX_PLAYERS];
new MedicCall = MAX_SLOTS;
new MedicCallTime[MAX_PLAYERS];
new Police = 0;
new PoliceCall = MAX_SLOTS;
new PoliceCallTime[MAX_PLAYERS];
new player_NoCheck[MAX_PLAYERS];
new PlayerTazeTime[MAX_PLAYERS];
new ConnectedToPC[MAX_PLAYERS];
new PlayerTied[MAX_PLAYERS];
new PlayerCuffed[MAX_PLAYERS];
new PlayerCuffedTime[MAX_PLAYERS];
new LiveOfferls[MAX_PLAYERS];
new TalkingLivels[MAX_PLAYERS];
new SelectChar[MAX_PLAYERS];
new SelectCharID[MAX_PLAYERS];
new SelectCharPlace[MAX_PLAYERS];
new CharPrice[MAX_PLAYERS];
new ChosenSkin[MAX_PLAYERS];
new InviteSkin[MAX_PLAYERS];
new CallLawyer[MAX_PLAYERS];
new CurrentMoney[MAX_PLAYERS];
new KickPlayer[MAX_PLAYERS];
new CP[MAX_PLAYERS];
new RaceCP[MAX_PLAYERS];
new RepairOffer[MAX_PLAYERS];
new RepairPrice[MAX_PLAYERS];
new RefillOffer[MAX_PLAYERS];
new RefillPrice[MAX_PLAYERS];
new RepairCar[MAX_PLAYERS];
new HouseOffer[MAX_PLAYERS];
new CarOffer[MAX_PLAYERS];
new CarPrice[MAX_PLAYERS];
new HousePrice[MAX_PLAYERS];
new WantedPoints[MAX_PLAYERS];
new WantedLevel[MAX_PLAYERS];
new gPlayerCheckpointStatus[MAX_PLAYERS];
new gOoc[MAX_PLAYERS];
new lNews[MAX_PLAYERS];
new gFam[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
new CellTime[MAX_PLAYERS];
new StartTime[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new PlayerLog;
new FirstSpawn[MAX_PLAYERS];
new Locator[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new Tel[MAX_PLAYERS];
new RingTone[MAX_PLAYERS];
new CallCost[MAX_PLAYERS];
new gLastDriver[MAX_VEHICLES];
new gCarLock[MAX_VEHICLES];
new noooc = 1;
new callcost = 10;
new realchat = 1;
new levelexp = 4;
new cchargetime = 60;
new MatsArmyCar[MAX_PLAYERS];
new VertMats[MAX_PLAYERS];
new vertmatbi = 0;
new armmatbi = 100000;
new armmatsf = 50000;
new lspdmatbi = 50000;
new sfpdmats = 50000;
new lvpdmats = 50000;
new fbimats = 50000;
new yakuzamats = 50000;
new rmmats = 50000;
new lcnmats = 50000;
new rifamatbi = 50000;
new ballasmatbi = 50000;
new groovmatbi = 50000;
new vagosmatbi = 50000;
new aztekmatbi = 50000;
new ballasnark = 1000;
new groovnark = 1000;
new vagosnark = 1000;
new azteknark = 1000;
new rifanark = 1000;
new pickups;
new Float:TeleportDest[MAX_PLAYERS][3];
new Float:TelePos[MAX_PLAYERS][6];
new GunNames[48][] = {
	"Fist",
	"Brass Knuckles",
	"Golf Club",
	"Nightstick",
	"Knife",
	"Baseball Bat",
	"Shovel",
	"Pool Cue",
	"Katana",
	"Chainsaw",
	"Purple Dildo",
	"Dildo",
	"Vibrator",
	"Silver Vibrator",
	"Flowers",
	"Cane",
	"Grenade",
	"Tear Gas",
	"Molotov Cocktil",
	"Vehicle Missile",
	"Hydra Flare",
	"Jetpack",
	"9mm",
	"Silenced 9mm",
	"Desert Eagle",
	"Showgun",
	"Sawnoff Shotgun",
	"Combat Showgun",
	"Uzi",
	"MP5",
	"AK47",
	"M4",
	"Tec9",
	"Country Rifle",
	"Sniper Rifle",
	"RPG",
	"HS Rocket",
	"Flamethrower",
	"Minigun",
	"Satchel Charge",
	"Detonator",
	"Spraycan",
	"Fire Extinguisher",
	"Camera",
	"Night Vis Goggles",
	"Infrared Vision",
	"Parachute",
	"Fake Pistol"
};
new legalmods[48][22] = {
	{400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
	{404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
	{492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
	{500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
	{518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
	{527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
	{534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
	{535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
	{536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
	{540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
	{542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
	{547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
	{550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
	{551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
	{558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
	{559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
	{560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
	{561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
	{562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
	{565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
	{567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
	{575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
	{600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
};
new matsfuravagos, matsfuragrove, matsfuraactek, matsfurarifa, matsfura;
new matslcn, matsrm, matsyakuza;
new lsnewscar[6], lvpdcar[17], univercar[5];
new LicCar[11], rentcarsf[6], rentcarls[9], rentcarlv[18], medicsls[9];
new SapdCar[35], fbicar[12],sfpdcar[28],armycarsf[27], yakcar[12],ruscar[15],govcar[5], lcncar[15], armcar[39], gunscar[NUMBER_OF_ARMYTRUCKS], grovecar[7], ballascar[7], coronoscar[7], vagoscar[7],rifacar[8];
new arenda[MAX_PLAYERS];
new arendal[MAX_PLAYERS];
new arendas[MAX_PLAYERS];
new arendajob1[MAX_PLAYERS];
new arendajobe[MAX_PLAYERS];
new arendalodok[13], arendasf[14], arendalodoksf[5];
new mysti;
new shop[6];
new gvictim[2];
new lspic[2];
new rmpic[2];
new lcnpic[2];
new yakexit[2];
new pdd;
new pdgategar = 0;
new pdgatebar = 0;
new buygunzakon[4];
new FBIpick[2];
new lspd[6];
new sf[5];
new lvpdpic[7];
new armijavhod;
new armijavihod;
new AvtoshPic[2];
new ZavtohPic[2];
new marenter[2];
new bankpic[2];
new ballasvhod[2];
new rifa[2];
new ufobar;
new vagospic[2];
new aztecpic[2];
new groovee[2];
new skinshop[4];
new gunarm[2];
new zip[2];
new plen[2];
new zona;
new zonaa;
new sklad[4];
new Float: PlayerArmor[MAX_PLAYERS];
enum SavePlayerPosEnum
{
	Float:LastX,
	Float:LastY,
	Float:LastZ
}
new MafiaBank[4];
new FracBank[19];
enum PickInfo
{
Float: PickX,
Float: PickY,
Float: PickZ
}
new PickupInfo[MAX_PICKUPS][PickInfo];
enum AC_STRUCT_INFO
{
Float:LastOnFootPosition[3],
	checkmaptp,
	maptplastclick,
Float:maptp[3]
}
new acstruct[MAX_PLAYERS][AC_STRUCT_INFO];
CreatePickupAC(model, type, Float:X, Float:Y, Float:Z, virtualworld = 0)
{
	new TempID = CreatePickup(model, type, X, Y, Z, virtualworld);
	PickupInfo[TempID][PickX] = X;
	PickupInfo[TempID][PickY] = Y;
	PickupInfo[TempID][PickZ] = Z;
	return TempID;
}

PutPlayerInSlotMachine(playerid, firstBet)
{
	if(Gambling[playerid] != G_STATE_NOT_GAMBLING) return true;
	Gambling[playerid] = G_STATE_READY;
	Slots[playerid][0] = random(5);
	Slots[playerid][1] = random(5);
	Slots[playerid][2] = random(5);
	ShowPlayerSlots(playerid,Slots[playerid][0],Slots[playerid][1],Slots[playerid][2]);
	Bet[playerid] = firstBet;
	TogglePlayerControllable(playerid,0);
	SlotCounter[playerid] = 30+random(10);
    SlotTimer[playerid] = SetTimerEx("Gambler",100,1,"d",playerid);
    Gambling[playerid] = G_STATE_GAMBLING;
 	CancelSelectTextDraw(playerid);
 	SetPVarInt(playerid, "GangCasino", -1);
	return true;
}

ShowPlayerSlots(playerid,slot1,slot2,slot3)
{
    TextDrawHideForPlayer(playerid,Digit1[0]);
	TextDrawHideForPlayer(playerid,Digit2[0]);
	TextDrawHideForPlayer(playerid,Digit3[0]);

	TextDrawHideForPlayer(playerid,Digit1[1]);
	TextDrawHideForPlayer(playerid,Digit2[1]);
	TextDrawHideForPlayer(playerid,Digit3[1]);

	TextDrawHideForPlayer(playerid,Digit1[2]);
	TextDrawHideForPlayer(playerid,Digit2[2]);
	TextDrawHideForPlayer(playerid,Digit3[2]);

	TextDrawHideForPlayer(playerid,Digit1[3]);
	TextDrawHideForPlayer(playerid,Digit2[3]);
	TextDrawHideForPlayer(playerid,Digit3[3]);

	TextDrawHideForPlayer(playerid,Digit1[4]);
	TextDrawHideForPlayer(playerid,Digit2[4]);
	TextDrawHideForPlayer(playerid,Digit3[4]);

	TextDrawHideForPlayer(playerid,Digit1[5]);
	TextDrawHideForPlayer(playerid,Digit2[5]);
	TextDrawHideForPlayer(playerid,Digit3[5]);


	TextDrawShowForPlayer(playerid,Digit1[slot1]);
	TextDrawShowForPlayer(playerid,Digit2[slot2]);
	TextDrawShowForPlayer(playerid,Digit3[slot3]);
}

GangUpdateBalanceTextDraw(playerid, balance)
{
	format(YCMDstr,sizeof(YCMDstr),"Balance: %d$", balance);
	PlayerTextDrawSetString(playerid, CasinoStavka, YCMDstr);
	Balance[playerid] = balance;
}

GangShowForTextDraw(playerid)
{
	Slots[playerid][0] = random(5);
	Slots[playerid][1] = random(5);
	Slots[playerid][2] = random(5);
	ShowPlayerSlots(playerid,Slots[playerid][0],Slots[playerid][1],Slots[playerid][2]);

	TextDrawShowForPlayer(playerid, Box);
	TextDrawShowForPlayer(playerid, KasinoGangBox);

	TextDrawShowForPlayer(playerid, KeyStartGang);
	TextDrawShowForPlayer(playerid, KeyMoneyGang);
	TextDrawShowForPlayer(playerid, KeyExitGang);

	CasinoStavka = CreatePlayerTextDraw(playerid, 234.333374, 183.348159, "Balance: 0$");
	PlayerTextDrawLetterSize(playerid, CasinoStavka, 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, CasinoStavka, 1);
	PlayerTextDrawColor(playerid, CasinoStavka, -65281);
	PlayerTextDrawSetShadow(playerid, CasinoStavka, 0);
	PlayerTextDrawSetOutline(playerid, CasinoStavka, 1);
	PlayerTextDrawBackgroundColor(playerid, CasinoStavka, 51);
	PlayerTextDrawFont(playerid, CasinoStavka, 2);
	PlayerTextDrawSetProportional(playerid, CasinoStavka, 1);


	format(YCMDstr,sizeof(YCMDstr),"Money: %d$", GetPlayerMoney(playerid));
	CasinoAllMoney = CreatePlayerTextDraw(playerid, 234.000030, 197.451736, YCMDstr);
	PlayerTextDrawLetterSize(playerid, CasinoAllMoney, 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, CasinoAllMoney, 1);
	PlayerTextDrawColor(playerid, CasinoAllMoney, -1);
	PlayerTextDrawSetShadow(playerid, CasinoAllMoney, 0);
	PlayerTextDrawSetOutline(playerid, CasinoAllMoney, 1);
	PlayerTextDrawBackgroundColor(playerid, CasinoAllMoney, 51);
	PlayerTextDrawFont(playerid, CasinoAllMoney, 2);
	PlayerTextDrawSetProportional(playerid, CasinoAllMoney, 1);

	PlayerTextDrawShow(playerid,CasinoStavka);
	PlayerTextDrawShow(playerid,CasinoAllMoney);

	SetPVarInt(playerid, "GangCasino", 1);

}

HideSlotsForPlayer(playerid)
{
    TextDrawHideForPlayer(playerid,Digit1[0]);
	TextDrawHideForPlayer(playerid,Digit2[0]);
	TextDrawHideForPlayer(playerid,Digit3[0]);

	TextDrawHideForPlayer(playerid,Digit1[1]);
	TextDrawHideForPlayer(playerid,Digit2[1]);
	TextDrawHideForPlayer(playerid,Digit3[1]);

	TextDrawHideForPlayer(playerid,Digit1[2]);
	TextDrawHideForPlayer(playerid,Digit2[2]);
	TextDrawHideForPlayer(playerid,Digit3[2]);

	TextDrawHideForPlayer(playerid,Digit1[3]);
	TextDrawHideForPlayer(playerid,Digit2[3]);
	TextDrawHideForPlayer(playerid,Digit3[3]);

	TextDrawHideForPlayer(playerid,Digit1[4]);
	TextDrawHideForPlayer(playerid,Digit2[4]);
	TextDrawHideForPlayer(playerid,Digit3[4]);

	TextDrawHideForPlayer(playerid,Digit1[5]);
	TextDrawHideForPlayer(playerid,Digit2[5]);
	TextDrawHideForPlayer(playerid,Digit3[5]);

	TextDrawHideForPlayer(playerid, Box);
	TextDrawHideForPlayer(playerid, KasinoGangBox);

	TextDrawHideForPlayer(playerid, KeyStartGang);
	TextDrawHideForPlayer(playerid, KeyMoneyGang);
	TextDrawHideForPlayer(playerid, KeyExitGang);

	PlayerTextDrawHide(playerid,CasinoStavka);
	PlayerTextDrawHide(playerid,CasinoAllMoney);
	PlayerTextDrawDestroy(playerid,CasinoStavka);
	PlayerTextDrawDestroy(playerid,CasinoAllMoney);

	SetPVarInt(playerid, "GangCasino", -1);
	SetPVarInt(playerid, "StartCasino", 0);

	CancelSelectTextDraw(playerid);
}

ExitPlayerFromSlotMachine(playerid)
{
	HideSlotsForPlayer(playerid);
	Gambling[playerid] = G_STATE_NOT_GAMBLING;
	TogglePlayerControllable(playerid,1);
    return true;
}

PlayerText:CreateInfoCasino(playerid, Float:X, Float: Y, Nameb[] )
{
	new PlayerText: RestSript;
	RestSript = CreatePlayerTextDraw(playerid, X, Y, Nameb);
	PlayerTextDrawLetterSize(playerid, RestSript, 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid,RestSript, 21.000000, 23.229614);
	PlayerTextDrawAlignment(playerid,RestSript, 1);
	PlayerTextDrawColor(playerid,RestSript, -1);
	PlayerTextDrawSetShadow(playerid,RestSript, 0);
	PlayerTextDrawSetOutline(playerid,RestSript, 0);
	PlayerTextDrawFont(playerid,RestSript, 4);
	return RestSript;
}

Text:CreateSprite(Float:X,Float:Y,Nameb[])
{
	new Text:RetSprite;
	RetSprite = TextDrawCreate(X, Y, Nameb);
	TextDrawLetterSize(RetSprite, 0.000000, 0.000000);
	TextDrawTextSize(RetSprite, 51.999988, 60.977779);
	TextDrawAlignment(RetSprite, 1);
	TextDrawColor(RetSprite, -1);
	TextDrawSetShadow(RetSprite, 0);
	TextDrawSetOutline(RetSprite, 0);
	TextDrawFont(RetSprite, 4);
	return RetSprite;
}

stock RemovePlayerFromVehicleEx(playerid)
{
	SetTimerEx("CarHack",3000,false,"ii",playerid,GetPlayerVehicleID(playerid));
	return RemovePlayerFromVehicle(playerid);
}
#define RemovePlayerFromVehicle RemovePlayerFromVehicleEx
//================================== PUBLIC'S ================================//
#define CreatePickup CreatePickupAC
publics: ReFill(playerid)
{
	new string[32];
	Fuell[GetPlayerVehicleID(playerid)]++;
	SetPVarInt(playerid, "Filling", GetPVarInt(playerid, "Filling") + 1);
	format(string,32,"~g~filling ~w~%i ~g~liters",GetPVarInt(playerid, "Filling"));
	GameTextForPlayer(playerid, string, 600, 6);
	if(GetPVarInt(playerid, "Refueling") <= GetPVarInt(playerid, "Filling"))
	{
	    KillTimer(ReFuelTimer[playerid]);
	    DeletePVar(playerid, "Refueling");
	    DeletePVar(playerid, "Filling");
	    TogglePlayerControllable(playerid, true);
	}
	return 1;
}

stock SetMafiaStr(idx, stolb[], znach[])
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE mafia SET  %s = '%s' WHERE id = '1' LIMIT 1", stolb, znach, idx);
    return mysql_query(Query);
}

stock SetOtherInt(stolb[], znach)
{
	new string[100];
	format(string, sizeof(string), "UPDATE `"TABLE_OTHER"` SET  `%s` = '%i'", stolb, znach);
    mysql_query(string);
    return true;
}

stock SetBizzInt(idx, stolb[], znach)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "TABLE_BIZZ" SET  %s = '%d' WHERE id = '%d' LIMIT 1", stolb, znach, idx);
    return mysql_query(Query);
}

stock UnFreeze(playerid)
{
	TogglePlayerControllable(playerid, 1);
}

publics: IsVehicleOccupied(vehicleid)
{
	foreach(new i : Player)
	{
		if(IsPlayerInVehicle(i,vehicleid)) return i;
	}
	return -1;
}

stock LoadOther()
{
	new query[400];
    new time = GetTickCount();
	format(query,sizeof(query), "SELECT * FROM `"TABLE_OTHER"`");
	mysql_query(query);
	mysql_store_result();
	if(mysql_fetch_row(query) == 1)
  	{
		mysql_fetch_row(query);
 		sscanf(query, "p<|>ddddddddddddddddddddddddddddddd",
		MafiaBank[0], //1
		MafiaBank[1], //2
		MafiaBank[2], //3
		FracBank[0], //4
		FracBank[1], //5
		FracBank[2], //6
		FracBank[3], //7
		FracBank[4], //8
		FracBank[5], //9
		FracBank[6], //10
		FracBank[7], //11
		FracBank[8], //12
		FracBank[9], //13
		FracBank[10], //14
		armmatbi, //15
		armmatsf, //16
		rifamatbi, //17
		ballasmatbi, //18
		aztekmatbi, //19
		vagosmatbi, //20
		groovmatbi, //21
		lspdmatbi, //22
		fbimats, //23
		yakuzamats, //24
		rmmats, //25
		lcnmats, //26
		sfpdmats, //27
		lvpdmats, //28
		tdload[0], //29
		tdload[1], //30
		tdload[2]); // 31
    }
    mysql_free_result();
    printf("[信息]: 加载其他信息成功.耗费时间 %d(毫秒)",GetTickCount() - time);
	return 1;
}

stock Float:GetDistanceBetweenPoints(Float:X, Float:Y, Float:Z, Float:PointX, Float:PointY, Float:PointZ)
{
    new Float:Distance;Distance = floatabs(floatsub(X, PointX)) + floatabs(floatsub(Y, PointY)) + floatabs(floatsub(Z, PointZ));
    return Distance;
}

stock Float:PointAngle(playerid, Float:xa, Float:ya, Float:xb, Float:yb)
{
    new Float:carangle;
    new Float:xc, Float:yc;
    new Float:angle;
    xc = floatabs(floatsub(xa,xb));
    yc = floatabs(floatsub(ya,yb));
    if (yc == 0.0 || xc == 0.0)
    {
        if(yc == 0 && xc > 0) angle = 0.0;
        else if(yc == 0 && xc < 0) angle = 180.0;
        else if(yc > 0 && xc == 0) angle = 90.0;
        else if(yc < 0 && xc == 0) angle = 270.0;
        else if(yc == 0 && xc == 0) angle = 0.0;
    }
    else
    {
        angle = atan(xc/yc);
        if(xb > xa && yb <= ya) angle += 90.0;
        else if(xb <= xa && yb < ya) angle = floatsub(90.0, angle);
        else if(xb < xa && yb >= ya) angle -= 90.0;
        else if(xb >= xa && yb > ya) angle = floatsub(270.0, angle);
    }
    GetVehicleZAngle(GetPlayerVehicleID(playerid), carangle);
    return floatadd(angle, -carangle);
}

stock GetName(playerid) {
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	return name;}

stock ScanTextAntiBags(text[])
{
	if(strlen(text)<1) return true;
	for (new ilisy=0;ilisy<strlen(text);ilisy++)
	{
		if(text[ilisy]==37 || text[ilisy]==126) text[ilisy]=35;
	}
	return true;
}

publics: Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
new Float:gInviteSpawns[0][4] = {
	{222.3489,-8.5845,1002.2109,266.7302}
};
new LessonCar[MAX_PLAYERS];
new LessonStat[MAX_PLAYERS];
new pLessonCar[MAX_PLAYERS];
enum
{
	CHECKPOINT_1,
	CHECKPOINT_2,
	CHECKPOINT_3,
	CHECKPOINT_4,
	CHECKPOINT_5,
	CHECKPOINT_6,
	CHECKPOINT_7,
	CHECKPOINT_8,
	CHECKPOINT_9,
	CHECKPOINT_10,
	CHECKPOINT_11,
	CHECKPOINT_13,
	CHECKPOINT_14,
	CHECKPOINT_15,
	CHECKPOINT_16,
	CHECKPOINT_17,
	CHECKPOINT_18,
	CHECKPOINT_19,
	CHECKPOINT_20,
	CHECKPOINT_21,
	CHECKPOINT_22,
	CHECKPOINT_23,
	CHECKPOINT_24,
	CHECKPOINT_25
}
new helpdialogMSG[14][] = {
	{"{FF0000}> 1. 如何赚钱?.<\n\n"},
	{"{FFFFFF}强烈建议您在任务通过后开始游戏 ( /quest ).\n"},
	{"{FFFFFF}为了不在找工作时不知所措，请使用'/gps'导航器，然后选择工作.\n"},
	{"{FFFFFF}要进入高薪工作岗位，请前往国家就业中心 (/gps -> [2] -> [9].\n"},
	{"{FFFFFF}不要忘记在执照中心获得驾驶执照.\n\n"},
	{"{FF0000}> 2. 组织收益.< \n\n"},
	{"{FFFFFF}一种简单的收入方法是 - 组织中的收入. 组织每小时支付一份工资.\n"},
	{"{FFFFFF}要加入组织，您必须携带医疗卡在该州居住超过2年 ( /showmed )\n\n"},
	{"{FF0000}> 3. 一般信息.<\n\n"},
	{"{FFFFFF}我们有捐赠项目 '/Donate'.\n"},
	{"{FFFFFF}允许充值游戏币 '人民币充值'.\n"},
	{"{FFFFFF}捐赠可以让你在游戏中快速的发展 '/donate'\n"},
	{"{FFFFFF}你可以前往官方网站进行充值[暂未搭建]\n"},
	{"{FFFFFF}请前往官方网站进行充值."}
};
new pdddialogMSG[13][] = {
	{"> 1. 一般规则 <\n\n"},
	{"仅允许从左侧超车,\n"},
	{"驾驶员必须确保迎面而来的车道在足够的距离内自由超车.\n"},
	{"在发生事故时，司机必须报警，并等待警察的到来\n\n"},
	{"> 2. 行驶速度 <\n\n"},
	{"在市内驾驶车辆速度不允许超过 50 km/h.\n"},
	{"在住宅区和庭院区不允许超过30 km/h\n\n"},
	{"> 3. 停车和泊车 <\n\n"},
	{"在路边的道路右侧允许停车和泊车.\n"},
	{"这个地方特殊位置\n\n"},
	{"> 4. 警察 < \n\n"},
	{"当你发现一辆正在响警报的警车时,司机必须减速慢行,或者靠边停下.\n"},
	{"如果TA要求出示驾驶执照,司机必须出示护照/执照"}
};
new RulesMSG[17][] = {
	{"{00BF00}1. {0080FF}服务器规则\n"},
	{"{FF0000}不允许:{FF8000}\n"},
	{"{FF8000}使用任何程序，脚本，作弊 - 在游戏中给予不诚实的优势.\n"},
	{"{FF8000}使用错误（漏洞，Bugs）.\n"},
	{"{FF8000}使用ESC来逃避追逐/死亡.\n"},
	{"{FF8000}杀死出生中的玩家（出生点，组织的基地）.\n"},
	{"{FF8000}通过车辆杀死玩家（碾压，从驾驶座上射击）.\n"},
	{"{FF8000}无理由地杀死/对玩家造成伤害（DM - Death Match）.\n"},
	{"{FF8000}滥用游戏功能给玩家带来不便.\n\n"},
	{"{00BF00}2. {0080FF} 游戏中的名称\n"},
	{"{FF8000}(修改名称你可以通过 /donate > 2 > 修改名称)\n"},
	//{"{FF8000}名称格式必须是:FirstName_LastName ((注意下横线 _ )).\n"},
	{"{FF8000}允许使用中文游戏昵称.\n"},
	{"{FF0000}不允许:{FF8000}\n"},
	{"{FF8000}禁止使用别人的名称(已经有玩家使用的名称).\n"},
	{"{FF8000}禁止使用含有淫秽或冒犯性词语的名称.\n"},
	{"{FF8000}禁止刷请求 (例如: 管理员请求).\n"},
	{"{FF8000}如果你被拒绝更改名称,那么你就不能修改.\n"}
};
new RulesMSGG[22][] = {
	{"{00BF00}3. {0080FF}聊天\n"},
	{"{FF8000}OOC (Out Of Charter) - 这都是关于现实世界的.\n"},
	{"{FF8000}IC (In Charter) - 这完全是关于虚拟世界,即游戏.\n"},
	{"{FF0000}不允许:{FF8000}\n"},
	{"{FF8000}诅咒，侮辱或淫秽言论.\n"},
	{"{FF8000}对玩家的威胁（与游戏玩法无关）.\n"},
	{"{FF8000}以英文大写形式发送消息(Caps Lock).\n"},
	{"{FF8000}将非角色扮演消息写入IC频道.\n"},
	{"{FF8000}刷屏.\n"},
	{"{FF8000}讨论,批评管理员的处理方式或者做事行为.\n"},
	{"{FF8000}第三方广告.\n\n"},
	{"{00BF00}4. {0080FF}服务器管理员\n"},
	{"{FF8000}有必要通知管理员任何违规或者作弊行为 (/mn > REPORT).\n"},
	{"{FF8000}管理员独立选择对每个事件的处理方法.\n"},
	{"{FF8000}禁止妨碍管理员执勤.\n"},
	{"{FF8000}管理组的决定是最终决定,不允许做讨论.\n\n"},
	{"{00BF00}5. {0080FF}贸易.\n"},
	{"{FF8000}任何金钱欺诈都是被禁止的.\n"},
	{"{FF8000}禁止出售/购买东西(玩家私下人民币交易).\n"},
	{"{FF8000}禁止以任何形式交换非游戏物品进行游戏.\n"},
	{"{FF8000}禁止在游戏服务器之间交换任何东西.\n"},
	{"{FF8000}禁止出售/购买本服务器的游戏账号.\n"}
};
enum pSpec
{
Float:Coords[3],
Float:sPx,
Float:sPy,
Float:sPz,
	sPint,
	sLocal,
	sCam
};
new Unspec[MAX_PLAYERS][pSpec];
enum pInfo
{
    prefix_id,
	kickdm,
	pGM,
	pName[30],
	pKey[32],
	pChas,
	pMin,
	pLogin,
	pLevel,
	pJob,
	pID,
	pAdministration228,
	pSupport,
	pJobHeal,
	pJobHealLeader,
	pMestoJail,
	pIp[32],
	pIpReg[32],
	pHousecash,
	pText,
	pHP,
	//pGolod,
	pDataReg[128],
	pMes,
	pCar,
	Float:pFuelcar,
	pProcents,
	pDonateRank,
	pDonatemoney,
	pMats,
	pSex,
	pArrested,
	pMuted,
	pCrimes,
	pExp,
	pCash,
	pKills,
	pWantedDeaths,
	pPayCheck,
	pJailed,
	pJailTime,
	pDrugs,
	pLeader,
	pMember,
	pRank,
	pChar[3],
	Float:pHealth,
	Float:pSHealth,
	pInt,
	pLocal,
	pModel,
	pPnumber,
	pPhoneBook,
	pDirectory,
	pVhoddata,
	pVhodMes,
	pVhodchas,
	pVhodminute,
	pCarLic,
	pFlyLic,
	pBoatLic,
	pFishLic,
	pGunLic,
	pNkeys,
	pPhousekey,
	pZakonp,
	pAddiction,
	pNarcoLomka,
	pWarns,
	punWarns,
	punWarnstime,
	pFuel,
	pMarried,
	pMarriedTo[32],
	pDrug[32],
	pDrugmoney,
	pMuteTime,
	pBank,
	pLocked,
	pBanTime,
	pBanData,
	pDonatechet,
	pMobile,
	pDostup[32],
	pDolg,
	pKrisha,
	pUseKrisha,
	pWantedLevel,
	pSlot[11],
	pSlotammo[11],
	pGunSkill[6],
	pDrugtime,
	pPaintJob,
	pOnline[32],
	pOnlineLid[32],
	pKicka,
	pBana,
	pWarna,
	pMpa,
	pReg,
	pInFrac,
	pDataInvite[20],
	pDataLeader[20],
 	pKouka[14],
    pBolnica,
    pMedcard,
    pEmail[48],
    pBomjj,
	pFish,
	pUdotka,
	pRadar,
	pNr1,
	pNr,
	pEmailpod,
	pBolnicad,
	pTruckSkill,
	pOtmbI4ka,
	pAutoSkill,
	pAutoTime,
	pShtanga,
	pVelo,
	pGiri,
	pBeg,
	pSkillT,
	pAreaskut,
	pTimeBP,
	pPhousekey2,
	pSkate,
	pSgf,
	pSiga,
	pPhonePlayer,
	pWork,
	pWorkGruzObject,
	pWorkGruzSkin,
	pGraffityID,
	pGraffityStop,
	//PlayerLastTick,
	pNazivka,
	pAccesories[128],
	pSpawnChange,
	pNumbercar[25],
	pColor[2],
	pWheels,
	pSpoilers,
	pHydraulics,
	pHBumper,
	pBBumper,
	pNitro,
	pSnyal,
	pBalon4ik,
	pBint,
	pMaskON,
	pQuest,
	Float:dCarx,
	Float:dCary,
	Float:dCarz,
	Float:dCarc,
	pOtel,
	pQuest_1,
	pQuest_2,
	pQuest_3,
	pQuest_4,
	pQuest_5,
	pLWarns,
	pMWarns,
	pAWarn,
	pKeylog,
	pSuperKey[64],
	bool:pDialog,
	pDiplom,
	pMath,
	pHistory,
	pBiology,
	pInform,
	pRussian,
	pCoster,
	pSerf,
	pBizpokup,
	pRinvitation[28],
	pTimeDayS[32],
	Promo,
	pRub
};
new PlayerInfo[MAX_PLAYERS][pInfo];
#define MAX_PRODUCT 100
static const stock pPrefixName[17][80] = {
	{"实习管理员"}, //0
	{"{FF0000}正式管理员{FFFFFF}"}, // 1
	{"{6600CC}中级管理员{FFFFFF}"}, // 2
	{"{D900D3}高级管理员{FFFFFF}"}, // 3
	{"{33CCFF}协理管理员{FFFFFF}"}, //4
	{"{33CCFF}常务管理员{FFFFFF}"},// 5
	{"{33CCFF}前台管理员.{FFFFFF}"},//6
	{"{FF0000}行政管理员{FFFFFF}"},//7
	{"{660022}内务管理员{FFFFFF}"},//8
	{"{660022}内务管理员{FFFFFF}"},//9
	{"{FF0000}裁决管理员{FFFFFF}"},//10
	{"{CC00FF}开发人员{FFFFFF}"},//11
	{"{3399CC}管理组组长{FFFFFF}"},//12
	{"{00FFFF}前台总管{FFFFFF}"},//13
	{"{CC00FF}行政总管{FFFFFF}"},//14
	{"{0033FF}服务器总管{FFFFFF}"},//15
	{"{FF66FF}服务器所有者&开发者{FFFFFF}"}//16
};
enum pinfo
{
	id,
	pNamesss[MAX_PLAYER_NAME],
	pBizzid,
	pPrice,
	pTill,
	bool:pStatus,
	Text3D:pText3D
};
new ProductInfo[MAX_PRODUCT][pinfo];
stock Name(i)
{
	return true;
}
#define Name(%1) PlayerInfo[%1][pName]
enum hInfo
{
	Float:hEntrancex,
	Float:hEntrancey,
	Float:hEntrancez,
	Float:hExitx,
	Float:hExity,
	Float:hExitz,
	Float:hCarx,
	Float:hCary,
	Float:hCarz,
	Float:hCarc,
	hOwner[128],
	hValue,
	hHel,
	hInt,
	hLock,
	hOwned,
	hTakings,
	hDate,
	hKlass,
	hVec,
	hPickup,
	hMIcon,
	hVehSost,
	hID,
	hDeagle,
	hShotgun,
	hM4,
	hAK47,
	hDrugs,
	hMaterials
};
new HouseInfo[800][hInfo];
enum sHaul
{
	sLoad
};
enum pMatss
{
	gBallas,
	gVagos,
	gGrove,
	gAztek,
	gRifa,
	gYakuza,
	gLcn,
	gRm
};
new Furi[1][pMatss];
enum pMat
{
	mCapasity,
	mLoad
};
enum pStore
{
    oLock,
    oFreazy,
	gmLock
}
new StoreInfo[12][pStore];
new MatHaul[NUMBER_OF_ARMYTRUCKS][pMat];
enum pCrime
{
	pBplayer[32],
	pAccusing[32],
	pAccusedof[32],
	pVictim[32]
};
new PlayerCrime[MAX_PLAYERS][pCrime];
new JoinPed[93][1] = {
	//LSPD
	{265}, //1
	{266}, //2
	{267}, //3
	{165}, //4
	{284}, //5
	{285}, //6
	{310}, //7
	{306}, //8
	//FBI
	{286},//9
	{163},//10
	{164},//11
	{294},//12
	{166},//13
	{141},//14
	//tyrma
	{71},//15
	{309},//16
	//教育部
	{70},//17
	{274},//18
	{275},//19
	{276},//20
	{308},//21
	//LCN
	{223},//22
	{124},//23
	{113},//24
	{214},//25
	//Yakuza
	{120},//26
	{123},//27
	{169},//28
	{186},//29
	//政府
	{57},//30
	{150},//31
	{98},//32
	{187},//33
	{147},//34
	//SFPD
	{265},//35
	{266},//36
	{267},//37
	{165},//38
	{284},//39
	{285},//40
	{310},//41
	{306},//42
	//SFNEWS
	{250},//43
	{261},//44
	{211},//45
	{217},//46
	//大学
	{227},//47
	{194},//48
	//AutoShkol
	{59},//49
	{172},//50
	{189},//51
	{240},//52
	//LVPD
	{265},//53
	{266},//54
	{267},//55
	{165},//56
	{284},//57
	{285},//58
	{310},//59
	{306},//60
	//РМ
	{112},//61
	{111},//62
	{125},//63
	{272},//64
	{214},//65
	//Groove
	{105},//66
	{106},//67
	{107},//68
	{269},//69
	{270},//70
	{271},//71
	//Aztecas
	{114},//72
	{115},//73
	{116},//74
	//Ballas
	{102},//75
	{103},//76
	{104},//77
	//Rifa
	{173},//78
	{174},//79
	{175},//80
	//Vagos
	{108},//81
	{109},//82
	{110},//83
	//Army CB
	{287},//84
	{191},//85
	//SMI LS
	{250},//86
	{261},//87
	{211},//88
	{217},//89
	//XZ
	{287},//90
	{287},//91
	{191},//92
	{287}//93
};

publics: GETHP(playerid)
{
	new string[128];
	GetPlayerHealth(playerid,GMHP[playerid][1]);
	GetVehicleHealth(GetPlayerVehicleID(playerid),VEHHP[playerid][1]);
	if(!IsPlayerInAnyVehicle(playerid))
	{
		if(GMHP[playerid][1] >= 100.0) format(string, sizeof(string), "{ff0000}[错误 003/ANTI-GM]: {bbbbbb}%s[%i] 使用作弊脚本.", Name(playerid),playerid), ABroadCast(-1,string,1);
		else format(string, sizeof(string), "{34c924}[ANTI-GM] {bbbbbb}%s[%i] 使用作弊脚本.", Name(playerid),playerid), ABroadCast(-1,string,1), SetPlayerHealthAC(playerid, GMHP[playerid][0]), SetPlayerArmourAC(playerid, GMARMOUR[playerid][0]);
	}
	else
	{
		if(VEHHP[playerid][1] >= 10000.0) format(string, sizeof(string), "{ff0000}[错误 004/ANTI-GM]: {bbbbbb}%s[%i] 使用GM CAR.", Name(playerid),playerid), ABroadCast(COLOR_LIGHTRED,string,1), SetVehicleHealth(GetPlayerVehicleID(playerid),VEHHP[playerid][0]);
		else format(string, sizeof(string), "{34c924}[ANTI-GM] {bbbbbb}%s[%i] 使用 GM CAR.", Name(playerid),playerid), ABroadCast(COLOR_LIGHTRED,string,1), SetVehicleHealth(GetPlayerVehicleID(playerid),VEHHP[playerid][0]);
	}
}

stock SBroadCast(color, const string[], level)
{
    foreach (new i : Player)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerInfo[i][pSupport] >= level) SendClientMessage(i, color, string);
        }
    }
    return true;
}

publics: TimerGiveMiner(playerid)
{
    TogglePlayerControllable(playerid, 1);
	new randruda = 3 + random(5);
	new string[32];
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 1, 1);
	RemovePlayerAttachedObject(playerid, 3);
	SendSyntaxMessage(playerid,"您已完成采矿，将其带到输送机.");
	SetPlayerAttachedObject(playerid, 4, 2936, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 0.476124, 0.468181, 0.470769);
	SetPlayerCheckpoint(playerid,-401.8764,-1097.2584,708.5899,3.0);
	RudnikAmount[playerid] += randruda;
	format(string,sizeof(string),"AMOUNT: %d KG",RudnikAmount[playerid]);
	SetPVarInt(playerid,"Otnesti",1);
	return true;
}

publics: UpdateDoors()
{
	MoveObject(RudaVorota,-412.4790039,-1084.4709473,706.0360107,2.00);
	Vorotasah = 0;
}
publics: IsAMafias(issuerid)
{
	if(IsPlayerConnected(issuerid))
	{
		new leader = PlayerInfo[issuerid][pLeader];
		new member = PlayerInfo[issuerid][pMember];
		if(member == 5 || member == 6 || member == 14)
		{
			return true;
		}
		if(leader == 5|| leader == 6 || leader == 14)
		{
			return true;
		}
	}
	return false;
}
publics: IsAMafia(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member == 5 || member == 6 || member == 14)
		{
			return true;
		}
		if(leader == 5|| leader == 6 || leader == 14)
		{
			return true;
		}
	}
	return false;
}
publics: IsAGange(issuerid)
{
    if(IsPlayerConnected(issuerid))
	{
		new leader = PlayerInfo[issuerid][pLeader];
		new member = PlayerInfo[issuerid][pMember];
		if(member==12 || member==13 || member==15 || member==17 || member==18)
		{
			return true;
		}
		if(leader==12 || leader==13 || leader==15 || leader==17 || leader==18)
		{
			return true;
		}
	}
	return false;
}
publics: IsAGang(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member==12 || member==13 || member==15 || member==17 || member==18)
		{
			return true;
		}
		if(leader==12 || leader==13 || leader==15 || leader==17 || leader==18)
		{
			return true;
		}
	}
	return false;
}
new Peds[57][1] = {
	{79},
	{254},{259},{249},{248},{247},{242},{239},{228},
	{185},{184},{160},{155},{135},{126},{122},{121},{101},
	{100},{96},{82},{83},{84},{294},{94},{73},{67},
	{28},{29},{24},{23},{22},{21},
	{20},{19},{18},{17},{15},
	{7},{2},{299},{297},{296},{293},{46},
	{198},{197},{196},
	{190},{193},{243},{178},{192},{199},{201},{214},
	{224}
};

stock BuyHouse(h)
{
	if(HouseInfo[h][hOwned] == 0)
	{
		DestroyDynamicMapIcon(HouseInfo[h][hMIcon]);
		DestroyPickup(HouseInfo[h][hPickup]);
		AddStaticPickup(1273, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
		pickups++;
		HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 31, COLOR_WHITE, 0, -1, -1, 400.0);
	}
	if(HouseInfo[h][hOwned] == 1)
	{
		DestroyDynamicMapIcon(HouseInfo[h][hMIcon]);
		DestroyPickup(HouseInfo[h][hPickup]);
		AddStaticPickup(19522, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
		pickups++;
		HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 32, COLOR_WHITE, 0, -1, -1, 400.0);
	}
	return true;
}

main() return true;


stock HPCheck()
{
	foreach(new i : Player)
	{
		if(PlayerInfo[i][pLogin] == 1)
		{
			if(!IsAPlane(GetPlayerVehicleID(i)) && !IsABoat(GetPlayerVehicleID(i)) && !IsABike(GetPlayerVehicleID(i)) && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == PLAYER_STATE_DRIVER && zavodis[GetPlayerVehicleID(i)] == 1)
			{
				if(VehiclePlayer(GetPlayerVehicleID(i)) != -1 && PlayerInfo[VehiclePlayer(GetPlayerVehicleID(i))][pProcents] < 70 && PlayerInfo[VehiclePlayer(GetPlayerVehicleID(i))][pProcents] > 50) Fuell[GetPlayerVehicleID(i)] -= 3.0000, PlayerInfo[VehiclePlayer(GetPlayerVehicleID(i))][pFuelcar] = Fuell[GetPlayerVehicleID(i)];
				else if(VehiclePlayer(GetPlayerVehicleID(i)) != -1 && PlayerInfo[VehiclePlayer(GetPlayerVehicleID(i))][pProcents] < 50 && PlayerInfo[VehiclePlayer(GetPlayerVehicleID(i))][pProcents] > 20) Fuell[GetPlayerVehicleID(i)] -= 4.0000, PlayerInfo[VehiclePlayer(GetPlayerVehicleID(i))][pFuelcar] = Fuell[GetPlayerVehicleID(i)];
				else if(VehiclePlayer(GetPlayerVehicleID(i)) != -1 && PlayerInfo[VehiclePlayer(GetPlayerVehicleID(i))][pProcents] < 20) Fuell[GetPlayerVehicleID(i)] -= 7.0000, PlayerInfo[VehiclePlayer(GetPlayerVehicleID(i))][pFuelcar] = Fuell[GetPlayerVehicleID(i)];
				else if(VehiclePlayer(GetPlayerVehicleID(i)) == -1 || PlayerInfo[VehiclePlayer(GetPlayerVehicleID(i))][pProcents] > 70) Fuell[GetPlayerVehicleID(i)] -= 2.0000;
			}
			new Float:health;
			GetPlayerHealth(i,health);
			if(health <= 10.0) SendServerMessage(i, "你的健康状况大为恶化，你将从医生那里康复!");
			PlayerInfo[i][pMin]++;
			if(PlayerInfo[i][pMin] >= 60) PlayerInfo[i][pChas]++, PlayerInfo[i][pMin] = 0;
		}
	}
	return true;
}

publics: DollahScoreUpdate(playerid)
{
	new LevScore;
	LevScore = PlayerInfo[playerid][pLevel];
	SetPlayerScore(playerid, LevScore);
	return true;
}

stock GivePlayerPPCash(playerid, money)
{
	PCash[playerid] = PCash[playerid] + money;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid,PCash[playerid]);
	return PCash[playerid];
}

stock ResetPlayerPCash(playerid)
{
	PCash[playerid] = 0;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid,PCash[playerid]);
	return PCash[playerid];
}

stock bigstr(const string[], &idx)
{
	new length = strlen(string);
	while ((idx < length) && (string[idx] <= ' '))
	{
		idx++;
	}
	new offset = idx;
	new result[128];
	while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
	{
		result[idx - offset] = string[idx];
		idx++;
	}
	result[idx - offset] = EOS;
	return result;
}
publics: lechenie(playerid)
{
    if(PlayerInfo[playerid][pKouka][0] == 1 || PlayerInfo[playerid][pKouka][1] == 1 || PlayerInfo[playerid][pKouka][2] == 1 || PlayerInfo[playerid][pKouka][3] == 1 || PlayerInfo[playerid][pKouka][4] == 1
	|| PlayerInfo[playerid][pKouka][5] == 1 || PlayerInfo[playerid][pKouka][6] == 1 || PlayerInfo[playerid][pKouka][7] == 1 || PlayerInfo[playerid][pKouka][8] == 1 || PlayerInfo[playerid][pKouka][9] == 1
	|| PlayerInfo[playerid][pKouka][10] == 1 || PlayerInfo[playerid][pKouka][11] == 1 || PlayerInfo[playerid][pKouka][12] == 1 || PlayerInfo[playerid][pKouka][13] == 1)
    {
	    new Float:health;
		GetPlayerHealth(playerid, health);
        if(health < 99)
        {
            if(PlayerInfo[playerid][pDonateRank])
            {
            	GameTextForPlayer(playerid, "~h~~g~+5hp", 1500, 3),PlayerInfo[playerid][pHP] ++,SetPlayerHealthAC(playerid, health+5.0);
            	PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
			}
			else
			{
			    GameTextForPlayer(playerid, "~h~~g~+2hp", 1500, 3),PlayerInfo[playerid][pHP] ++,SetPlayerHealthAC(playerid, health+2.0);
            	PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
			}
        }
        else
        {
            if(PlayerInfo[playerid][pKouka][0] == 1 || PlayerInfo[playerid][pKouka][1] == 1 || PlayerInfo[playerid][pKouka][2] == 1 || PlayerInfo[playerid][pKouka][3] == 1 || PlayerInfo[playerid][pKouka][4] == 1
	        || PlayerInfo[playerid][pKouka][5] == 1 || PlayerInfo[playerid][pKouka][6] == 1 || PlayerInfo[playerid][pKouka][7] == 1 || PlayerInfo[playerid][pKouka][8] == 1 || PlayerInfo[playerid][pKouka][9] == 1
	        || PlayerInfo[playerid][pKouka][10] == 1 || PlayerInfo[playerid][pKouka][11] == 1 || PlayerInfo[playerid][pKouka][12] == 1 || PlayerInfo[playerid][pKouka][13] == 1)
            {
                KillTimer(HPTimer[playerid]);
                SendServerMessage(playerid,"你治好了，你可以离开医院!");
                PlayerInfo[playerid][pKouka][0] = 0;
                PlayerInfo[playerid][pKouka][1] = 0;
                PlayerInfo[playerid][pKouka][2] = 0;
                PlayerInfo[playerid][pKouka][3] = 0;
                PlayerInfo[playerid][pKouka][4] = 0;
                PlayerInfo[playerid][pKouka][5] = 0;
                PlayerInfo[playerid][pKouka][6] = 0;
                PlayerInfo[playerid][pKouka][7] = 0;
                PlayerInfo[playerid][pKouka][8] = 0;
                PlayerInfo[playerid][pKouka][9] = 0;
                PlayerInfo[playerid][pKouka][10] = 0;
                PlayerInfo[playerid][pKouka][11] = 0;
                PlayerInfo[playerid][pKouka][12] = 0;
                PlayerInfo[playerid][pKouka][13] = 0;
                PlayerInfo[playerid][pBolnica] = 0;
            }
        }
    }
    return 1;
}

publics: IsAMedic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member == 4 || member == 22 || member == 33)
		{
			return true;
		}
		else if(leader == 4 || leader == 22 || member == 33)
		{
			return true;
		}
	}
	return false;
}

publics: IsAuniver(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member == 8)
		{
			return true;
		}
		else if(leader == 8)
		{
			return true;
		}
	}
	return false;
}

publics: IsAMayor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member == 7)
		{
			return true;
		}
		else if(leader == 7)
		{
			return true;
		}
	}
	return false;
}

publics: IsALicenser(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member == 11)
		{
			return true;
		}
		else if(leader == 11)
		{
			return true;
		}
	}
	return false;
}

stock IsAZamAndLeader(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	 	if (PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pRank] == 14) return true;
		else if (PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] == 8) return true;
		else if (PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pRank] == 15) return true;
		else if (PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 4 && PlayerInfo[playerid][pRank] == 9) return true;
		else if (PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] == 9) return true;
		else if (PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] == 9) return true;
		else if (PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] >= 5) return true;
		else if (PlayerInfo[playerid][pLeader] == 8 || PlayerInfo[playerid][pMember] == 8 && PlayerInfo[playerid][pRank] == 3) return true;
		else if (PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pMember] == 9 && PlayerInfo[playerid][pRank] == 14) return true;
		else if (PlayerInfo[playerid][pLeader] == 11 || PlayerInfo[playerid][pMember] == 11 && PlayerInfo[playerid][pRank] == 9) return true;
		else if (PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] == 9) return true;
		else if (PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] == 9) return true;
		else if (PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] == 9) return true;
		else if (PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pRank] == 9) return true;
		else if (PlayerInfo[playerid][pLeader] == 16 || PlayerInfo[playerid][pMember] == 16 && PlayerInfo[playerid][pRank] == 9) return true;
		else if (PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pRank] == 9) return true;
		else if (PlayerInfo[playerid][pLeader] == 18 || PlayerInfo[playerid][pMember] == 18 && PlayerInfo[playerid][pRank] == 9) return true;
		else if (PlayerInfo[playerid][pLeader] == 19 || PlayerInfo[playerid][pMember] == 19 && PlayerInfo[playerid][pRank] == 15) return true;
		else if (PlayerInfo[playerid][pLeader] == 20 || PlayerInfo[playerid][pMember] == 20 && PlayerInfo[playerid][pRank] == 14) return true;
	}
	return false;
}
stock Rucovod(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new rucprefix = PlayerInfo[playerid][prefix_id];
	    //if(rucprefix == 11 || rucprefix == 13 || rucprefix == 14 || rucprefix == 16 || rucprefix == 15)
	    if(rucprefix > 11)
		{
		    return 1;
		}
	}
	return false;
}
stock SledAdm(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new rucprefix = PlayerInfo[playerid][prefix_id];
	    //if(rucprefix == 7 || rucprefix == 6 || rucprefix == 8 || rucprefix == 9 || rucprefix == 10)
	    if(rucprefix > 7)
		{
		    return 1;
		}
	}
	return false;
}
stock GhettoAdm(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new rucprefix = PlayerInfo[playerid][prefix_id];
	    //if(rucprefix == 4 || rucprefix == 5 || rucprefix == 8)
	    if(rucprefix > 4)
		{
		    return 1;
		}
	}
	return false;
}
stock GosAdm(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new rucprefix = PlayerInfo[playerid][prefix_id];
	    //if(rucprefix == 2 || rucprefix == 6 || rucprefix == 10)
	    if(rucprefix > 4)
		{
		    return 1;
		}
	}
	return false;
}
stock MafiaAdm(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new rucprefix = PlayerInfo[playerid][prefix_id];
	    //if(rucprefix == 3 || rucprefix == 4 || rucprefix == 8)
	    if(rucprefix > 4)
		{
		    return 1;
		}
	}
	return false;
}
publics: IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member == 1 || member == 2 || member == 9 || member == 20)
		{
			return true;
		}
		else if(leader == 1 || leader == 2 || leader == 9 || leader == 20)
		{
			return true;
		}
	}
	return false;
}

publics: IsAArm(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member == 3 || member == 19)
		{
			return true;
		}
		else if(leader == 3 || leader == 19)
		{
			return true;
		}
	}
	return false;
}

stock IsAtGasStation(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(6.0,playerid,1004.0070,-939.3102,42.1797) || PlayerToPoint(6.0,playerid,1944.3260,-1772.9254,13.3906))
		{
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,-90.5515,-1169.4578,2.4079) || PlayerToPoint(6.0,playerid,-1609.7958,-2718.2048,48.5391))
		{
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,-2029.4968,156.4366,28.9498) || PlayerToPoint(8.0,playerid,-2408.7590,976.0934,45.4175))
		{
			return true;
		}
		else if(PlayerToPoint(5.0,playerid,-2243.9629,-2560.6477,31.8841) || PlayerToPoint(8.0,playerid,-1676.6323,414.0262,6.9484))
		{
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,2202.2349,2474.3494,10.5258) || PlayerToPoint(10.0,playerid,614.9333,1689.7418,6.6968))
		{
			return true;
		}
		else if(PlayerToPoint(8.0,playerid,-1328.8250,2677.2173,49.7665) || PlayerToPoint(6.0,playerid,70.3882,1218.6783,18.5165))
		{
			return true;
		}
		else if(PlayerToPoint(8.0,playerid,2113.7390,920.1079,10.5255) || PlayerToPoint(6.0,playerid,-1327.7218,2678.8723,50.0625))
		{
			return true;
		}
		else if(PlayerToPoint(8.0,playerid,1382.4965,461.0263,20.0829) || PlayerToPoint(6.0,playerid,657.0479,-565.4691,16.3359))
		{
			return true;
		}
		else if(PlayerToPoint(8.0,playerid,-1473.4474,1864.3049,32.6328) || PlayerToPoint(6.0,playerid,2202.9478,2475.6838,10.8203))
		{
			return true;
		}
		else if(PlayerToPoint(8.0,playerid,605.0253,1704.1792,6.9922) || PlayerToPoint(6.0,playerid,616.3572,1691.2368,6.9922))
		{
			return true;
		}
		else if(PlayerToPoint(8.0,playerid,622.9822,1679.3724,6.9922) || PlayerToPoint(6.0,playerid,2638.7400,1104.6748,10.8203))
		{
			return true;
		}
	}
	return false;
}

stock IsAAntidm(playerid)
{
	if(PlayerToPoint(10.0,playerid,1717.2572,-1693.6575,13.5153)
	||PlayerToPoint(30.0,playerid,828.7317,3.4002,1004.1797) // 
	||PlayerToPoint(100.0,playerid,25.7404,42.2561,1200.7729) // univer
	||PlayerToPoint(40.0,playerid,1306.1116,-1333.1641,13.9110) // 酒店
	||PlayerToPoint(40.0,playerid,-2656.3020,1408.5477,906.2734) // 俱乐部 1
	||PlayerToPoint(40.0,playerid,290.0367,-36.8140,1001.5156) // 武器店
	||PlayerToPoint(40.0,playerid,1390.2570,-22.9229,1000.9370) // 24\7
	||PlayerToPoint(40.0,playerid,212.7498,-9.0836,1001.2109) // 服装店
	||PlayerToPoint(40.0,playerid,370.6734,-70.4159,1001.5078) // 汉堡店
	||PlayerToPoint(40.0,playerid,374.8708,-127.2416,1001.4995) // 披萨店
	||PlayerToPoint(40.0,playerid,370.2356,-7.9392,1001.8589) // Clucken's Bell
	||PlayerToPoint(40.0,playerid,2045.5878,-1885.8789,999.9086) // 团队战斗
	||PlayerToPoint(40.0,playerid,-103.7391,-17.1881,1000.7188) // Hippy
	||PlayerToPoint(40.0,playerid,491.1240,-14.3121,1000.7503) // 俱乐部 2
	||PlayerToPoint(40.0,playerid,540.8959,-1813.1261,6.0625) // 水上比赛
	||PlayerToPoint(40.0,playerid,211.4818,-1431.8329,13.2198) // 军事登记
	||PlayerToPoint(40.0,playerid,1554.4183,34.3577,24.1525)
	||PlayerToPoint(100.0,playerid,-1822.3596,2985.6772,1514.3453) // CB
	||PlayerToPoint(40.0,playerid,1480.9207,-1747.6909,15.3086)
	||PlayerToPoint(10.0,playerid,263.6395,78.5962,1001.0391)
	||PlayerToPoint(50.0,playerid,1921.7806,-706.7747,1824.7878) // ls casino
	||PlayerToPoint(40.0,playerid,1962.8058,1018.0125,992.4688) // 4dracons
	||PlayerToPoint(50.0,playerid,62.2556,2241.6416,625.3364) // SMI LS
	||PlayerToPoint(100.0,playerid,-409.1561,-1099.0558,708.6779) // шахта
	||PlayerToPoint(100.0,playerid,-2035.2163,-93.2048,35.1641) // аш ДМ
	||PlayerToPoint(100.0,playerid,-306.2637,-1395.3986,12.7034) // ferma dm
//    ||PlayerToPoint(100.0,playerid,1754.3782,-1898.6836,13.5613) // респа новичков N1
    ||PlayerToPoint(200.0,playerid,622.3818,877.1959,-42.9534) // бульдозера
    ||PlayerToPoint(150.0,playerid,1480.1473,-1703.6901,14.0469) // Правительство
    ||PlayerToPoint(100.0,playerid,1154.8151,-1323.6707,1001.0910) // больница
	||PlayerToPoint(50.0,playerid,681.2658,-502.2542,16.1875) // Опг люди дм
	||PlayerToPoint(50.0,playerid,1474.9379,-1359.4969,89.6799) // банк лос сантос
	||PlayerToPoint(50.0,playerid,364.0767,-2099.7561,10.8194) // рыбалка
	||PlayerToPoint(50.0,playerid,371.0752,-2118.1074,17.4799) // рыбалка
	||PlayerToPoint(50.0,playerid,376.9828,-2102.4067,16.8689)
	||PlayerToPoint(50.0,playerid,385.0403,-2074.8816,9.1786)
	||PlayerToPoint(50.0,playerid,373.8982,-2043.9072,7.6719)
	||PlayerToPoint(50.0,playerid,385.4835,-2024.6649,7.8359)
	||PlayerToPoint(50.0,playerid,371.1529,-2015.4828,7.6719)
	||PlayerToPoint(10.0,playerid,-2031.7778,-117.3789,1035.1719)
	||PlayerToPoint(40.0,playerid,292.1797,-37.3040,1001.5156)
	||PlayerToPoint(25.0,playerid,2317.2358,-1524.8945,25.3438) // dm баскет
	||PlayerToPoint(50.0,playerid,1719.7413,-1643.8140,20.2259))
	{
		return true;
	}
	return false;
}

stock IsATerra(playerid)
{
	if(PlayerToPoint(50.0,playerid,2088.0879,-1185.8517,26.0251) // Ballas
			||PlayerToPoint(50.0,playerid,2774.2703,-1622.6263,10.9219) // Vagos
			||PlayerToPoint(50.0,playerid,2492.7532,-1676.3687,13.3380) // Groove
			||PlayerToPoint(50.0,playerid,1713.9735,-2114.5122,13.3828) // Aztecas
			||PlayerToPoint(50.0,playerid,2729.9133,-1944.4718,13.5469) // Rifa
			||PlayerToPoint(50.0,playerid,2417.6343,-1254.2217,3134.9993) // Ballas Base
			||PlayerToPoint(50.0,playerid,303.6300,309.2500,999.1484) // Vagos Base
			||PlayerToPoint(50.0,playerid,2496.0129,-1708.9232,1014.7422) // Groove Base
			||PlayerToPoint(50.0,playerid,1660.8809,-2108.3828,13.6824) // Aztecas Base
			||PlayerToPoint(50.0,playerid,2736.6726,-1771.0365,1117.2410)) // Rifa Base
	{
		return true;
	}
	return false;
}
stock IsAbtd(playerid)
{
	if(PlayerToPoint(3.0,playerid,2507.5076,-1699.0270,18.4968) || // grove
			PlayerToPoint(3.0,playerid,2766.0505,-1610.8972,11.3752) || // vagos
			PlayerToPoint(3.0,playerid,2013.4742,1342.2686,632.0748) || // el corona
			PlayerToPoint(3.0,playerid,-735.6074,2411.0491,1500.9701) || // ballas
			PlayerToPoint(3.0,playerid,2736.6211,-1771.0443,1117.2410)) // rifa
	{
		return true;
	}
	return false;
}
stock IsAmtd(playerid)
{
	if(PlayerToPoint(3.0,playerid,954.2139,94.2906,1001.2659) || // lcn
			PlayerToPoint(3.0,playerid,281.9512,238.4670,3340.9226) || // yakuza
			PlayerToPoint(3.0,playerid,1256.9954,-790.8815,1084.0078)) // rm
	{
		return true;
	}
	return false;
}

stock IsAzs(playerid)
{
	if(PlayerToPoint(15.0,playerid,1939.4988,-1771.8281,13.3828) ||
			PlayerToPoint(15.0,playerid,1004.0650,-938.2203,42.1797) ||
			PlayerToPoint(15.0,playerid,2117.3188,920.2473,10.8203) ||
			PlayerToPoint(15.0,playerid,1599.2100,2199.5417,10.8203) ||
			PlayerToPoint(15.0,playerid,-2028.1046,155.9385,28.8359) ||
			PlayerToPoint(15.0,playerid,-91.7588,-1167.2668,2.4580) ||
			PlayerToPoint(15.0,playerid,-1675.4270,412.6979,8.6003))
	{
		return true;
	}
	return false;
}

stock IsABank(playerid)
{
	if(PlayerToPoint(2.0,playerid,1474.9379,-1359.4969,89.6799) ||
			PlayerToPoint(3.0,playerid,-2159.1213,640.6534,1052.3817) || // sf
			PlayerToPoint(3.0,playerid,-2159.0693,640.6339,1052.3817) || // lv
			PlayerToPoint(2.0,playerid,1468.6002,-1355.6478,89.6799))
	{
		return true;
	}
	return false;
}

stock IsAtyrma(playerid){
    if(PlayerToPoint(3.0,playerid,1849.32995605,-1714.31005859,5201.54003906) || PlayerToPoint(3.0,playerid,1847.31994629,-1722.56994629,5201.54003906) || PlayerToPoint(3.0,playerid,1854.01953125,-1726.27343750,5201.54003906) || PlayerToPoint(3.0,playerid,1862.02246094,-1710.91992188,5201.54003906)) return true;
	return false; }

stock IsATune(playerid) {
	if(PlayerToPoint(10.0,playerid,1369.8450,-1898.7551,14.4922) || PlayerToPoint(10.0,playerid,1378.3544,-1898.6478,14.4922) || PlayerToPoint(10.0,playerid,-2045.5206,-29.9544,37.2354) || PlayerToPoint(10.0,playerid,-2045.5166,-38.4340,37.2800)) return true;
	return false; }

stock IsABankomat(playerid)
{
	if(PlayerToPoint(2.0,playerid,-1676.34570312,434.01806641,7.08183193) ||
			PlayerToPoint(2.0,playerid,-818.55200195,1567.63708496,27.01933098) ||
			PlayerToPoint(2.0,playerid,1466.5028,-1366.8396,89.6799) ||
			PlayerToPoint(2.0,playerid,2534.1704,-1822.6410,-65.2521) ||
			PlayerToPoint(2.0,playerid,-2421.45410156,958.35540771,45.18632126) ||
			PlayerToPoint(2.0,playerid,2174.20336914,1402.93469238,10.96464443) ||
			PlayerToPoint(2.0,playerid,-2621.31445312,1415.23510742,6.88521862) ||
			PlayerToPoint(2.0,playerid,1587.30920410,2218.34838867,10.96464443) ||
			PlayerToPoint(2.0,playerid,-2452.32275391,2252.62988281,4.87058449) ||
			PlayerToPoint(2.0,playerid,2187.36035156,2478.89160156,11.14433193) ||
			PlayerToPoint(2.0,playerid,-1282.38098145,2715.18652344,50.16842651) ||
			PlayerToPoint(2.0,playerid,-2033.32604980,159.50723267,28.94120598) ||
			PlayerToPoint(2.0,playerid,91.92106628,1180.56555176,18.56620598) ||
			PlayerToPoint(2.0,playerid,2236.16186523,-1665.79772949,15.27980804) ||
			PlayerToPoint(2.0,playerid,847.58093262,-1799.19348145,13.71945286) ||
			PlayerToPoint(2.0,playerid,1367.56359863,-1290.13696289,13.44901943) ||
			PlayerToPoint(2.0,playerid,-78.74282837,-1171.64892578,1.95329499) ||
			PlayerToPoint(2.0,playerid,1142.44287109,-1763.92932129,13.59816360) ||
			PlayerToPoint(2.0,playerid,-1551.53637695,-2737.33691406,48.64560318) ||
			PlayerToPoint(2.0,playerid,661.71307373,-576.21777344,16.25428581) ||
			PlayerToPoint(2.0,playerid,557.32824707,-1294.28137207,17.24994087) ||
			PlayerToPoint(2.0,playerid,-2035.70605469,-102.35491180,35.07402039) ||
			PlayerToPoint(2.0,playerid,1919.78381348,-1766.21813965,13.44901943) ||
			PlayerToPoint(2.0,playerid,1495.9638672,-1749.8842773,15.0503979) || // ma
			PlayerToPoint(2.0,playerid,1769.8105469,-1884.2926025,13.1960735) || // ma
			PlayerToPoint(2.0,playerid,2843.2822,1286.9712,11.3906))
	{
		return true;
	}
	return false;
}

stock IsAHotDog(playerid)
{
	if(PlayerToPoint(2.0,playerid,1144.0961,-1756.7357,13.6432)
			||PlayerToPoint(2.0,playerid,1413.1958,-1718.1736,13.5469)
			||PlayerToPoint(2.0,playerid,1143.9006,-1754.3907,13.6145)
			||PlayerToPoint(2.0,playerid,1477.0962,-1674.0988,14.0469)
			||PlayerToPoint(2.0,playerid,1471.0443,-1674.0376,14.0469)
			||PlayerToPoint(2.0,playerid,2181.1267,-2268.9629,13.4554))
	{
		return true;
	}
	return false;
}

publics: IsAFoods(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 2, -2420.219, 984.578, 44.297)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2420.180, 985.945, 44.297)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2225.203, -1153.422, 1025.906)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2576.703, -1284.430, 1061.094)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2155.906, 1606.773, 1000.055)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2209.906, 1607.195, 1000.055)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2222.203, 1606.773, 1000.055)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 495.969, -24.320, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 501.828, -1.430, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 373.828, -178.141, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 330.680, 178.500, 1020.070)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 331.922, 178.500, 1020.070)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 350.906, 206.086, 1008.477)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 361.563, 158.617, 1008.477)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 371.594, 178.453, 1020.070)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 374.891, 188.977, 1008.477)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2155.844, 1607.875, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2202.453, 1617.008, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2209.242, 1621.211, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2222.367, 1602.641, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 500.563, -1.367, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 379.039, -178.883, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2480.86,-1959.27,12.9609)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1634.11,-2237.53,12.8906)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2139.52,-1161.48,23.3594)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2153.23,-1016.15,62.2344)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1350.12,493.859,10.5859)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2229.19,286.414,34.7031)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1659.46,1722.86,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2647.7,1129.66,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2845.73,1295.05,10.7891)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1398.84,2222.61,10.4219)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1455.12,2591.66,55.2344)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -76.0312,1227.99,19.125)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 662.43,-552.164,15.7109)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -253.742,2599.76,62.2422)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2271.73,-76.4609,25.9609)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1789.21,-1369.27,15.1641)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1729.79,-1943.05,12.9453)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2060.12,-1897.64,12.9297)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1928.73,-1772.45,12.9453)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2325.98,-1645.13,14.2109)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2352.18,-1357.16,23.7734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1154.73,-1460.89,15.1562)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1350.12,492.289,10.5859)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2118.97,-423.648,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2118.62,-422.414,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2097.27,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2092.09,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2063.27,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2005.65,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2034.46,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2068.56,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2039.85,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2011.14,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1980.79,142.664,27.0703)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2319.99,2532.85,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1520.15,1055.27,10.00)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2503.14,1243.7,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2085.77,2071.36,10.4531)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -862.828,1536.61,21.9844)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -14.7031,1175.36,18.9531)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -253.742,2597.95,62.2422)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 201.016,-107.617,0.898438)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1277.84,372.516,18.9531)) return true;
	else return false;
}

stock GetNumberThisIP(test_ip[])
{
	new against_ip[32+1]; new ip_count = 0;
	foreach(new x : Player)
	{
		GetPlayerIp(x,against_ip,32);
		if(!strcmp(against_ip,test_ip))
		{
			ip_count++;
		}
	}
	return ip_count;
}

stock PJ(carid){switch(GetVehicleModel(carid)){case 562,560,565,561,559,558,534,536,535,576:return true;}return false;}
stock zapretgun(playerid){switch(GetPlayerWeapon(playerid)){case 4,16,17,18,27,26,28,32,37,36,42,38,45,35:return true;}return false;}
stock IsABoat(carid){switch(GetVehicleModel(carid)){case 472,473,493,595,484,430,452..454,446:return true;}return false;}
stock IsABike(carid){switch(GetVehicleModel(carid)){case 448,435,449,450,457,462,464,465,481,485,501,509,510,530,564,569,570,584,594,606,607,608,610,611:return true;}return false;}
stock IsAtFishPlace(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(1.0,playerid,403.8266,-2088.7598,7.8359) || PlayerToPoint(1.0,playerid,398.7553,-2088.7490,7.8359)) return true;
		else if(PlayerToPoint(1.0,playerid,396.2197,-2088.6692,7.8359) || PlayerToPoint(1.0,playerid,391.1094,-2088.7976,7.8359)) return true;
		else if(PlayerToPoint(1.0,playerid,383.4157,-2088.7849,7.8359) || PlayerToPoint(1.0,playerid,374.9598,-2088.7979,7.8359)) return true;
		else if(PlayerToPoint(1.0,playerid,369.8107,-2088.7927,7.8359) || PlayerToPoint(1.0,playerid,367.3637,-2088.7925,7.8359)) return true;
		else if(PlayerToPoint(1.0,playerid,362.2244,-2088.7981,7.8359) || PlayerToPoint(1.0,playerid,354.5382,-2088.7979,7.8359)) return true;
	}
	return false;
}
#define MAX_GZONE 150
stock GetXYInBackOfPlayer(const playerid, &Float:x, &Float:y, const Float:distance)
{
	new Float:a; GetPlayerPos(playerid, x, y, a); GetPlayerFacingAngle(playerid, a);
	if (IsPlayerInAnyVehicle(playerid))
	{
		new vid=GetPlayerVehicleID(playerid);
		if (vid > 0 && vid <= MAX_VEHICLES)GetVehicleZAngle(vid, a);
	}
	x -= (distance * floatsin(-a, degrees)); y -= (distance * floatcos(-a, degrees));
}
new allowedmfactions[] = {5,6,14};
enum MzoneInfo
{
	mFrakVlad,
	mNapad
}

new MZInfo[1][MzoneInfo];
new OnmZONE[sizeof(MZInfo)][20];
new ZoneOnBattlem[sizeof(MZInfo)];
new ZoneTimerm[sizeof(MZInfo)];

stock PaintBalls()
{
    PaintBallGo++;
    if(PaintBallGo == 120)
	{
		PaintballWinner = MAX_SLOTS;
		PaintBallTwoMest = MAX_SLOTS;
		PaintballWinnerKills = 0;
		foreach(new i : Player)
		{
			if(PaintballPlayers < 1)
			{
				format(YCMDstr, sizeof(YCMDstr), "由于参赛人数不足，彩弹比赛被取消");
				OOCOff(0x79F200AA,YCMDstr);
				PaintballRound = 1;
				PlayerPaintballing[i] = 0;
				PaintballPlayers = 0;
				Timer[10] = 0;
				return 1;
			}
			if(PlayerPaintballing[i] != 0)
			{
				new rand;
				SetPlayerArmourAC(i, 100);
				DelGun(i);
				ResetPlayerWeapons(i);
				SetPlayerColor(i, COLOR_REDD);
				new rands = random(sizeof(paintgun));
				GiveWeapon(i, paintgun[rands], 250);
				rand = random(sizeof(PaintballSpawns));
				Q_SetPlayerPos(i, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
				SetPlayerInterior(i,10);
				SetPlayerVirtualWorld(i,0);
				PlayerTextDrawShow(i, PaintBallTime[i]);
			}
		}
		format(YCMDstr, sizeof(YCMDstr), "请注意！ 彩弹比赛开始了。 持续时间 - 3分钟 ");
		OOCOff(0x33AAFFFF,YCMDstr);
		PaintballRab = 1;
	}
	if(PaintBallGo == 300)
	{
		format(YCMDstr, sizeof(YCMDstr), "彩弹比赛结束了.");
		OOCOff(0x33AAFFFF,YCMDstr);
		foreach(new i : Player)
		{
			if(IsPlayerConnected(i))
			{
				if(PlayerPaintballing[i] != 0)
				{
					if(IsPlayerConnected(PaintballWinner))
					{
						format(YCMDstr, sizeof(YCMDstr), "{ff0000}[PB]: {FFFFFF}%s 赢得了彩弹比赛. {ffa500}%d {FFFFFF}杀人数",Name(PaintballWinner),PaintballWinnerKills);
						SendClientMessage(i, -1, YCMDstr);
						SendServerMessage(PaintballWinnerKills, "获得奖金 15.000$");
						PlayerInfo[PaintballWinnerKills][pCash] +=15000;
						strmid(NickPaintPobed,Name(PaintballWinner), 0, strlen(Name(PaintballWinner)), 32);
					}
					if(PaintBallTwoMest)
					{
						strmid(NickPaintPobed2,Name(PaintballWinner), 0, strlen(Name(PaintballWinner)), 32);
					}
					DelGun(i);
					PlayerPaintballing[i] = 0;
					Q_SetPlayerPos(i, 286.2404,-32.6571,1001.5156);
					SetPlayerFacingAngle(i, 165.6698);
					SetPlayerInterior(i,1);
					SetPlayerVirtualWorld(i, 1);
					PlayerTextDrawDestroy(i, PaintBallTime[i]);
					PlayerInfo[i][pCash] += 5000;
					PlayerPaintballKills[i] = 0;
					SetPlayerColor(i, TEAM_HIT_COLOR);
				}
			}
		}
		Timer[10] = 0;
		PaintballRab = 0;
		PaintballWinnerKills = 0;
		PaintballRound = 1;
		PaintBallGo = 0;
	}
	foreach(new i: Player)
	{
	    if(PlayerPaintballing[i] != 0)
		{
	    	if(PaintballRab == 1)
	    	{
	    	    new numbers = 300 - PaintBallGo;
				format(YCMDstr,130,"~g~Paint Ball~n~~b~Time:~w~%d~n~~y~Kills:~w~%i~n~~y~Deaths:~w~%i",numbers,PlayerPaintballKills[i],PlayerPaintballDeaths[i]);
				PlayerTextDrawSetString(i,PaintBallTime[i],YCMDstr);
			}
		}
	}
	return true;
}

stock SendMail(const szReceiver[ ], const szSenderMail[ ], const szSenderName[ ], const szSubject[ ], const szMessage[ ])
{
    new szBuffer[ MAILER_MAX_MAIL_SIZE ] = "t=",
    iPos = strlen( szBuffer ),
    iLength = strlen( szReceiver );

    memcpy( szBuffer, szReceiver, iPos * 4, ( iLength + 1 ) * 4 );

    StringURLEncode( szBuffer[ iPos ], 1024 - iPos );

    strcat( szBuffer, "&f=" );

    iPos    = strlen( szBuffer );
    iLength = strlen( szSenderName );

    memcpy( szBuffer, szSenderName, iPos * 4, ( iLength + 1 ) * 4 );

    StringURLEncode( szBuffer[ iPos ], 1024 - iPos );

    strcat( szBuffer, "&n=" );

    iPos    = strlen( szBuffer );
    iLength = strlen( szSenderMail );

    memcpy( szBuffer, szSenderMail, iPos * 4, ( iLength + 1 ) * 4 );

    StringURLEncode( szBuffer[iPos], 1024 - iPos );

    strcat( szBuffer, "&s=" );

    iPos    = strlen( szBuffer );
    iLength = strlen( szSubject );

    memcpy( szBuffer, szSubject, iPos * 4, ( iLength + 1 ) * 4 );

    StringURLEncode( szBuffer[iPos], 1024 - iPos );

    strcat( szBuffer, "&m=" );

    iPos    = strlen( szBuffer );
    iLength = strlen( szMessage );

    memcpy( szBuffer, szMessage, iPos * 4, ( iLength + 1 ) * 4 );

    StringURLEncode( szBuffer[iPos], 1024 - iPos );

    HTTP( 0xD00D, HTTP_POST, MAILER_URL, szBuffer, "OnMailScriptResponse" );
}

stock StringURLEncode(szString[], iSize = sizeof( szString ))
{
    for ( new i = 0, l = strlen( szString ); i < l; i++ )
    {
        switch ( szString[i] )
        {
            case '!', '(', ')', '\'', '*',
                 '0' .. '9',
                 'A' .. 'Z',
                 'a' .. 'z':
            {
                continue;
            }

            case ' ':
            {
                szString[i] = '+';

                continue;
            }
        }

        new
            s_szHex[8];

        if ( i + 3 >= iSize )
        {
            szString[i] = EOS;

            break;
        }

        if ( l + 3 >= iSize )
            szString[ iSize - 3 ] = EOS;

        format( s_szHex, sizeof( s_szHex ), "%02h", szString[ i ] );

        szString[i] = '%';

        strins( szString, s_szHex, i + 1, iSize );

        l += 2;
        i += 2;

        if ( l > iSize - 1 )
            l = iSize - 1;
    }
}

stock MzCheck()
{
	for(new i =0;i<sizeof(MZInfo);i++)
	{
		if(ZoneOnBattlem[i] == 1)
		{
			if(ZoneTimerm[i] > 0) ZoneTimerm[i] -= 1;
			foreach(new x: Player)
			{
				if(PlayerToKvadrat(x,328.755706, 2412.644531, 448.755706, 2564.644531))
				{
					new factionm;
					if(PlayerInfo[x][pLeader] != 0)
					{
						factionm = PlayerInfo[x][pLeader];
					}
					else
					{
						factionm = PlayerInfo[x][pMember];
					}
					OnmZONE[i][factionm] ++;
				}
			}
			foreach(new x: Player)
			{
				new string[128];
				new y = PlayerInfo[x][pMember];
				if(y == MZInfo[i][mFrakVlad] || y == MZInfo[i][mNapad])
				{
					if(MafiasOn[x] == 0)
					{
						zons = GangZoneCreate(328.755706, 2412.644531, 448.755706, 2564.644531);
						GangZoneShowForPlayer(x,zons,COLOR_NEWS);
						GangZoneFlashForPlayer(x,zons,COLOR_REDD);
						PlayerTextDrawShow(x, MafiaTime[x]);
						MafiasOn[x] = 1;
					}
					format(string,130,"~g~MAFIAWAR~n~~b~Time:~w~%s~n~~y~%s:~w~%i~n~~y~%s:~w~%i",Convert(ZoneTimerm[i]),GetMafiaName(MZInfo[i][mNapad]),OnmZONE[i][MZInfo[i][mNapad]],GetMafiaName(MZInfo[i][mFrakVlad]),OnmZONE[i][MZInfo[i][mFrakVlad]]);
					PlayerTextDrawSetString(x,MafiaTime[x],string);
				}
			}
			new asd;
			for(new x = 0; x < 20; x++)
			{
				if(OnmZONE[i][x] > 0 && IsInAllowedM(x) && ZoneTimerm[i] <= 0) asd++;
			}
			if(asd == 1)
			{
				for(new x =0;x<20;x++)
				{
					if(OnmZONE[i][x] > 0)
					{
						new zx,zl;
						zx = x;
						zl = i;
						if(MZInfo[i][mFrakVlad] == x)
						{
							for(new h = 0; h <= TOTALBIZZ; h++)
							{
								if(BizzInfo[h][bCapture] == 1)
								{
									BizzInfo[h][bMafia] = BizzInfo[h][bMafia];
									SendFamilyMessage(BizzInfo[h][bMafia],COLOR_RED, "保护自己的产业");
									BizzInfo[h][bCapture] = 0;
									SetBizzInt(h, "mafia", BizzInfo[h][bMafia]);
								}
							}
							SendFamilyMessage(MZInfo[i][mNapad],COLOR_RED, "抢夺产业失败了");
						}
						else if(MZInfo[i][mNapad] == x)
						{
							SendFamilyMessage(MZInfo[i][mNapad],COLOR_LIGHTGREEN, "抢夺了一个产业");
							for(new h = 0; h <= TOTALBIZZ; h++)
							{
								if(BizzInfo[h][bCapture] == 1)
								{
									SendFamilyMessage(BizzInfo[h][bMafia],COLOR_RED, "失去了对一个产业的控制权");
									BizzInfo[h][bMafia] = MZInfo[i][mNapad];
									BizzInfo[h][bCapture] = 0;
									SetBizzInt(h, "mafia", BizzInfo[h][bMafia]);
								}
							}
						}
						mafiawars--;
						ZoneOnBattlem[zl] =0;
						MZInfo[zl][mFrakVlad] = 0;
						MZInfo[zl][mFrakVlad] = zx;
						GangZoneStopFlashForAll(zons);
						GangZoneHideForAll(zons);
						GangZoneShowForAll(zons,0xB2B2B2AA);
						startwar = 0;
						if(mafiawars == 0)
						{
							Timer[11] = 0;
							MafiACheckGz = 0;
						}
						foreach(new y: Player)
						{
							if(PlayerInfo[y][pMember] == MZInfo[i][mFrakVlad] || PlayerInfo[y][pMember] == MZInfo[i][mNapad])
							{
								MafiasOn[y] = 0;
								PlayerTextDrawHide(y, MafiaTime[y]);
							}
						}
						break;
					}
				}
			}
		}
	}
	for(new i = 0; i <sizeof(MZInfo); i++)
	{
		for(new z = 0; z < 20; z++)
		{
			OnmZONE[i][z] =0;
		}
	}
	return true;
}

stock IsInAllowedM(mnumbers)
{
	for(new i =0;i<sizeof(allowedmfactions);i++)
	{
		if(mnumbers == allowedmfactions[i]) return true;
	}
	return false;
}

stock IsAPlane(carid){switch(GetVehicleModel(carid)){case 592,577,511,512,593,520,553,476,519,460,513,548,417,487,488,497,563,447,469:return true;}return false;}
stock BezBenzacar(carid){switch(GetVehicleModel(carid)){case 462,510,481,509:return true;}return false;}
stock IsANoSpeed(carid){switch(GetVehicleModel(carid)){case 441,448,449,450,464,465,481,501,509,510,537,538,564,569,570,590,591,594,606,607,608,610,611:return true;}return false;}

publics: IsAGunsCar(carid)
{
	if(carid == gunscar[0] || carid == gunscar[1] || carid == gunscar[2] || carid == gunscar[3] || carid == gunscar[4])
	{
		return true;
	}
	return false;
}

stock GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float:a;
	GetPlayerPos(playerid, x, y, a);
	if (IsPlayerInAnyVehicle(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	else GetPlayerFacingAngle(playerid, a);
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
	return 1;
}

stock ResetCarInfo(playerid)
{
	IDVEH[playerid]=-1;
	UseEnter[playerid] = false;
}

stock CreateSpeedometr(playerid)
{
	TDAUTO[playerid] = CreatePlayerTextDraw(playerid, 323.000000, 185.311157, "ENTER");
	PlayerTextDrawLetterSize(playerid, TDAUTO[playerid], 0.181499, 1.264000);
	PlayerTextDrawAlignment(playerid, TDAUTO[playerid], 1);
	PlayerTextDrawColor(playerid, TDAUTO[playerid], -1);
	PlayerTextDrawSetShadow(playerid, TDAUTO[playerid], 0);
	PlayerTextDrawSetOutline(playerid, TDAUTO[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, TDAUTO[playerid], 0xFFFFFF00);
	PlayerTextDrawFont(playerid, TDAUTO[playerid], 2);
	PlayerTextDrawSetProportional(playerid, TDAUTO[playerid], 1);
	//==========================BusInfo
	BusInfo[playerid][0] = CreatePlayerTextDraw(playerid, 27.000000, 200.937500, "100");
	PlayerTextDrawLetterSize(playerid, BusInfo[playerid][0], 0.246499, 0.996249);
	PlayerTextDrawAlignment(playerid, BusInfo[playerid][0], 2);
	PlayerTextDrawColor(playerid, BusInfo[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, BusInfo[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, BusInfo[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, BusInfo[playerid][0], 255);
	PlayerTextDrawFont(playerid, BusInfo[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, BusInfo[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, BusInfo[playerid][0], 0);

	BusInfo[playerid][1] = CreatePlayerTextDraw(playerid, 49.500000, 185.287506,"~w~The fare:~r~ 5$n~~w~Route: ~r~5");
	PlayerTextDrawLetterSize(playerid, BusInfo[playerid][1], 0.161999, 0.773124);
	PlayerTextDrawAlignment(playerid, BusInfo[playerid][1], 1);
	PlayerTextDrawColor(playerid, BusInfo[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, BusInfo[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, BusInfo[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, BusInfo[playerid][1], 255);
	PlayerTextDrawFont(playerid, BusInfo[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, BusInfo[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, BusInfo[playerid][1], 0);
	// td povorot
	Textdraw7[playerid] = TextDrawCreate(516.000061, 427.093566, "<<");
	TextDrawLetterSize(Textdraw7[playerid], 0.449999, 1.600000);
	TextDrawAlignment(Textdraw7[playerid], 1);
	TextDrawColor(Textdraw7[playerid], -65281);
	TextDrawSetShadow(Textdraw7[playerid], 0);
	TextDrawSetOutline(Textdraw7[playerid], 1);
	TextDrawBackgroundColor(Textdraw7[playerid], 51);
	TextDrawFont(Textdraw7[playerid], 3);
	TextDrawSetProportional(Textdraw7[playerid], 1);

	Textdraw8[playerid] = TextDrawCreate(550.000366, 427.093261, ">>");
	TextDrawLetterSize(Textdraw8[playerid], 0.449999, 1.600000);
	TextDrawAlignment(Textdraw8[playerid], 1);
	TextDrawColor(Textdraw8[playerid], -65281);
	TextDrawSetShadow(Textdraw8[playerid], 0);
	TextDrawSetOutline(Textdraw8[playerid], 1);
	TextDrawBackgroundColor(Textdraw8[playerid], 51);
	TextDrawFont(Textdraw8[playerid], 3);
	TextDrawSetProportional(Textdraw8[playerid], 1);
	// лошадь
	BG[playerid][1] = CreatePlayerTextDraw(playerid,0, 0, "LD_OTB:bckgrnd");
	PlayerTextDrawFont(playerid,BG[playerid][1], 4);
	PlayerTextDrawColor(playerid,BG[playerid][1],0xFFFFFFFF);
	PlayerTextDrawTextSize(playerid,BG[playerid][1],640,200);

	BG[playerid][0] = CreatePlayerTextDraw(playerid,0, 0, "LD_OTB:trees");
	PlayerTextDrawFont(playerid,BG[playerid][0], 4);
	PlayerTextDrawColor(playerid,BG[playerid][0],0xFFFFFFFF);
	PlayerTextDrawTextSize(playerid,BG[playerid][0],640,480);

	Start2[playerid] = CreatePlayerTextDraw(playerid,-170, 145, "LD_OTB:pole2");
	PlayerTextDrawFont(playerid,Start2[playerid], 4);
	PlayerTextDrawColor(playerid,Start2[playerid],0xFFFFFFFF);
	PlayerTextDrawTextSize(playerid,Start2[playerid],256,200);

	Finish2[playerid] = CreatePlayerTextDraw(playerid,365, 145, "LD_OTB:pole2");
 	PlayerTextDrawFont(playerid,Finish2[playerid], 4);
  	PlayerTextDrawColor(playerid,Finish2[playerid],0xFFFFFFFF);
   	PlayerTextDrawTextSize(playerid,Finish2[playerid],256,200);

   	Start[playerid] = CreatePlayerTextDraw(playerid,-170, 338, "LD_OTB:pole2");
    PlayerTextDrawFont(playerid,Start[playerid], 4);
    PlayerTextDrawColor(playerid,Start[playerid],0xFFFFFFFF);
    PlayerTextDrawTextSize(playerid,Start[playerid],256,200);

   	Finish[playerid] = CreatePlayerTextDraw(playerid,365, 338, "LD_OTB:pole2");
   	PlayerTextDrawFont(playerid,Finish[playerid], 4);
    PlayerTextDrawColor(playerid,Finish[playerid],0xFFFFFFFF);
    PlayerTextDrawTextSize(playerid,Finish[playerid],256,200);
	for(new po = 0;po < 4;po++)
	{
    	Horse[playerid][po] = CreatePlayerTextDraw(playerid,0, 200+50*po, "LD_OTB:hrs8");
		HorseInfo(Horse[playerid][po]);
		HorsePosX[playerid][po] = 0;
		format(YCMDstr,30,"LD_OTB2:Ric%d",po+1);
		HorseNum[playerid][po] = CreatePlayerTextDraw(playerid,15, 204+50*po,YCMDstr);
    	HorseNumInfo(HorseNum[playerid][po]);
	}
	// ========== vodolaz
    JobStats[playerid][0] = CreatePlayerTextDraw(playerid, 639.000000, 156.083328, "usebox");
	PlayerTextDrawLetterSize(playerid, JobStats[playerid][0], 0.000000, 6.312963);
	PlayerTextDrawBoxColor(playerid, JobStats[playerid][0], 102);
	JobStats[playerid][1] = CreatePlayerTextDraw(playerid, 639.500000, 159.000000, "usebox");
	PlayerTextDrawLetterSize(playerid, JobStats[playerid][1], 0.000000, -1.742593);
	PlayerTextDrawBoxColor(playerid, JobStats[playerid][1], 0x20A9FFFF);
	for(new i;i<2; i++)
	{
		PlayerTextDrawTextSize(playerid, JobStats[playerid][i], 556.500000, 0.000000);
		PlayerTextDrawAlignment(playerid, JobStats[playerid][i], 1);
		PlayerTextDrawColor(playerid, JobStats[playerid][i], 0);
		PlayerTextDrawUseBox(playerid, JobStats[playerid][i], true);
		PlayerTextDrawSetShadow(playerid, JobStats[playerid][i], 0);
		PlayerTextDrawSetOutline(playerid, JobStats[playerid][i], 0);
		PlayerTextDrawFont(playerid, JobStats[playerid][i], 0);
	}
    JobStats[playerid][2] = CreatePlayerTextDraw(playerid, 569.500000, 169.416656, "_");//Air
	JobStats[playerid][3] = CreatePlayerTextDraw(playerid, 569.500000, 184.749984, "__");//Cash
	for(new i = 2;i<4; i++)
	{
		PlayerTextDrawLetterSize(playerid, JobStats[playerid][i], 0.232000, 1.098332);
		PlayerTextDrawAlignment(playerid, JobStats[playerid][i], 1);
		PlayerTextDrawColor(playerid, JobStats[playerid][i], -1);
		PlayerTextDrawSetShadow(playerid, JobStats[playerid][i], 0);
		PlayerTextDrawSetOutline(playerid, JobStats[playerid][i], 1);
		PlayerTextDrawBackgroundColor(playerid, JobStats[playerid][i], 51);
		PlayerTextDrawFont(playerid, JobStats[playerid][i], 3);
		PlayerTextDrawSetProportional(playerid, JobStats[playerid][i], 1);
	}
	JobStats[playerid][4] = CreatePlayerTextDraw(playerid, 576.500000, 145.833328, "Statistic");
	PlayerTextDrawLetterSize(playerid, JobStats[playerid][4], 0.209499, 1.022500);
	PlayerTextDrawAlignment(playerid, JobStats[playerid][4], 1);
	PlayerTextDrawColor(playerid, JobStats[playerid][4], -1);
	PlayerTextDrawSetShadow(playerid, JobStats[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, JobStats[playerid][4], 1);
	PlayerTextDrawBackgroundColor(playerid, JobStats[playerid][4], 51);
	PlayerTextDrawFont(playerid, JobStats[playerid][4], 3);
	PlayerTextDrawSetProportional(playerid, JobStats[playerid][4], 1);
	/// loured
	LRShowVehicle[playerid] = CreatePlayerTextDraw(playerid, 252.800003, 169.493316, "LD_SPAC:white");
    PlayerTextDrawLetterSize(playerid, LRShowVehicle[playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid, LRShowVehicle[playerid], 116.000015, 131.413360);
    PlayerTextDrawAlignment(playerid, LRShowVehicle[playerid], 1);
    PlayerTextDrawColor(playerid, LRShowVehicle[playerid], -1);
    PlayerTextDrawUseBox(playerid, LRShowVehicle[playerid], true);
    PlayerTextDrawBoxColor(playerid, LRShowVehicle[playerid], 0xFF9900AA);
    PlayerTextDrawBackgroundColor(playerid, LRShowVehicle[playerid], 0x008080FF);
    PlayerTextDrawSetShadow(playerid, LRShowVehicle[playerid], 0);
    PlayerTextDrawSetOutline(playerid, LRShowVehicle[playerid], 0);
    PlayerTextDrawFont(playerid, LRShowVehicle[playerid], 5);
    PlayerTextDrawSetPreviewRot(playerid, LRShowVehicle[playerid], -15.000000, 0.000000, 15.000000, 1.0);
    LRArrows[playerid][0] = CreatePlayerTextDraw(playerid, 338.599731, 393.000061, "LD_BEAT:right");
    LRArrows[playerid][1] = CreatePlayerTextDraw(playerid, 300.799896, 394.240081, "LD_BEAT:up");
    LRArrows[playerid][2] = CreatePlayerTextDraw(playerid, 260.399871, 393.253387, "LD_BEAT:left");
    for(new i; i <= 2; i++)
    {
        PlayerTextDrawLetterSize(playerid, LRArrows[playerid][i], 0.000000, 0.000000);
        PlayerTextDrawTextSize(playerid, LRArrows[playerid][i], 16.000015, 20.160001);
        PlayerTextDrawAlignment(playerid, LRArrows[playerid][i], 1);
        PlayerTextDrawColor(playerid, LRArrows[playerid][i], -1);
        PlayerTextDrawSetShadow(playerid, LRArrows[playerid][i], 0);
        PlayerTextDrawSetOutline(playerid, LRArrows[playerid][i], 0);
        PlayerTextDrawFont(playerid, LRArrows[playerid][i], 4);
    }
	/// =============================== admin spec ======================================
	SpecTD[0][playerid] = CreatePlayerTextDraw(playerid, -0.468376, 317.916625, "PANEL");
	PlayerTextDrawLetterSize(playerid, SpecTD[0][playerid], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, SpecTD[0][playerid], 642.811218, 134.749908);
	PlayerTextDrawAlignment(playerid, SpecTD[0][playerid], 1);
	PlayerTextDrawColor(playerid, SpecTD[0][playerid], -2147483536);
	PlayerTextDrawUseBox(playerid, SpecTD[0][playerid], true);
	PlayerTextDrawBoxColor(playerid, SpecTD[0][playerid], 0);
	PlayerTextDrawSetShadow(playerid, SpecTD[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpecTD[0][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, SpecTD[0][playerid], 51);
	PlayerTextDrawFont(playerid, SpecTD[0][playerid], 5);
	PlayerTextDrawSetProportional(playerid, SpecTD[0][playerid], 1);
	PlayerTextDrawSetPreviewModel(playerid, SpecTD[0][playerid], 19131);
	PlayerTextDrawSetPreviewRot(playerid, SpecTD[0][playerid], 0.000000, 90.000000, 0.000000, 0.000000);

	SpecTD[1][playerid] = CreatePlayerTextDraw(playerid, 28.579818, 320.833312, "SLAP");
	PlayerTextDrawLetterSize(playerid, SpecTD[1][playerid], 0.442972, 2.124999);
	PlayerTextDrawTextSize(playerid, SpecTD[1][playerid], 11.244508, 40.833328);
	PlayerTextDrawAlignment(playerid, SpecTD[1][playerid], 2);
	PlayerTextDrawColor(playerid, SpecTD[1][playerid], 0x20A9FFFF);
	PlayerTextDrawUseBox(playerid, SpecTD[1][playerid], true);
	PlayerTextDrawBoxColor(playerid, SpecTD[1][playerid], 89);
	PlayerTextDrawSetShadow(playerid, SpecTD[1][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpecTD[1][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, SpecTD[1][playerid], -203);
	PlayerTextDrawFont(playerid, SpecTD[1][playerid], 1);
	PlayerTextDrawSetProportional(playerid, SpecTD[1][playerid], 1);
	PlayerTextDrawSetSelectable(playerid, SpecTD[1][playerid], true);

	SpecTD[2][playerid] = CreatePlayerTextDraw(playerid, 81.585662, 320.833312, "GM");
	PlayerTextDrawLetterSize(playerid, SpecTD[2][playerid], 0.442972, 2.124999);
	PlayerTextDrawTextSize(playerid, SpecTD[2][playerid], 11.244508, 40.833328);
	PlayerTextDrawAlignment(playerid, SpecTD[2][playerid], 2);
	PlayerTextDrawColor(playerid, SpecTD[2][playerid], 0x20A9FFFF);
	PlayerTextDrawUseBox(playerid, SpecTD[2][playerid], true);
	PlayerTextDrawBoxColor(playerid, SpecTD[2][playerid], 89);
	PlayerTextDrawSetShadow(playerid, SpecTD[2][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpecTD[2][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, SpecTD[2][playerid], -203);
	PlayerTextDrawFont(playerid, SpecTD[2][playerid], 1);
	PlayerTextDrawSetProportional(playerid, SpecTD[2][playerid], 1);
	PlayerTextDrawSetSelectable(playerid, SpecTD[2][playerid], true);

	SpecTD[3][playerid] = CreatePlayerTextDraw(playerid, 143.961929, 320.833312, "BAN");
	PlayerTextDrawLetterSize(playerid, SpecTD[3][playerid], 0.442972, 2.124999);
	PlayerTextDrawTextSize(playerid, SpecTD[3][playerid], 11.244508, 55.416652);
	PlayerTextDrawAlignment(playerid, SpecTD[3][playerid], 2);
	PlayerTextDrawColor(playerid, SpecTD[3][playerid], 0x20A9FFFF);
	PlayerTextDrawUseBox(playerid, SpecTD[3][playerid], true);
	PlayerTextDrawBoxColor(playerid, SpecTD[3][playerid], 89);
	PlayerTextDrawSetShadow(playerid, SpecTD[3][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpecTD[3][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, SpecTD[3][playerid], -203);
	PlayerTextDrawFont(playerid, SpecTD[3][playerid], 1);
	PlayerTextDrawSetProportional(playerid, SpecTD[3][playerid], 1);
	PlayerTextDrawSetSelectable(playerid, SpecTD[3][playerid], true);

	SpecTD[4][playerid] = CreatePlayerTextDraw(playerid, 215.240112, 320.833312, "PRISON");
	PlayerTextDrawLetterSize(playerid, SpecTD[4][playerid], 0.442972, 2.124999);
	PlayerTextDrawTextSize(playerid, SpecTD[4][playerid], 11.244508, 55.999992);
	PlayerTextDrawAlignment(playerid, SpecTD[4][playerid], 2);
	PlayerTextDrawColor(playerid, SpecTD[4][playerid], 0x20A9FFFF);
	PlayerTextDrawUseBox(playerid, SpecTD[4][playerid], true);
	PlayerTextDrawBoxColor(playerid, SpecTD[4][playerid], 89);
	PlayerTextDrawSetShadow(playerid, SpecTD[4][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpecTD[4][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, SpecTD[4][playerid], -203);
	PlayerTextDrawFont(playerid, SpecTD[4][playerid], 1);
	PlayerTextDrawSetProportional(playerid, SpecTD[4][playerid], 1);
	PlayerTextDrawSetSelectable(playerid, SpecTD[4][playerid], true);

	SpecTD[5][playerid] = CreatePlayerTextDraw(playerid, 413.767364, 320.833312, "STATS");
	PlayerTextDrawLetterSize(playerid, SpecTD[5][playerid], 0.442972, 2.124999);
	PlayerTextDrawTextSize(playerid, SpecTD[5][playerid], 11.244508, 46.083328);
	PlayerTextDrawAlignment(playerid, SpecTD[5][playerid], 2);
	PlayerTextDrawColor(playerid, SpecTD[5][playerid], 0x20A9FFFF);
	PlayerTextDrawUseBox(playerid, SpecTD[5][playerid], true);
	PlayerTextDrawBoxColor(playerid, SpecTD[5][playerid], 89);
	PlayerTextDrawSetShadow(playerid, SpecTD[5][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpecTD[5][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, SpecTD[5][playerid], -203);
	PlayerTextDrawFont(playerid, SpecTD[5][playerid], 1);
	PlayerTextDrawSetProportional(playerid, SpecTD[5][playerid], 1);
	PlayerTextDrawSetSelectable(playerid, SpecTD[5][playerid], true);

	SpecTD[6][playerid] = CreatePlayerTextDraw(playerid, 473.801208, 320.833312, "KICK");
	PlayerTextDrawLetterSize(playerid, SpecTD[6][playerid], 0.442972, 2.124999);
	PlayerTextDrawTextSize(playerid, SpecTD[6][playerid], 11.244508, 40.833328);
	PlayerTextDrawAlignment(playerid, SpecTD[6][playerid], 2);
	PlayerTextDrawColor(playerid, SpecTD[6][playerid], 0x20A9FFFF);
	PlayerTextDrawUseBox(playerid, SpecTD[6][playerid], true);
	PlayerTextDrawBoxColor(playerid, SpecTD[6][playerid], 89);
	PlayerTextDrawSetShadow(playerid, SpecTD[6][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpecTD[6][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, SpecTD[6][playerid], -203);
	PlayerTextDrawFont(playerid, SpecTD[6][playerid], 1);
	PlayerTextDrawSetProportional(playerid, SpecTD[6][playerid], 1);
	PlayerTextDrawSetSelectable(playerid, SpecTD[6][playerid], true);

	SpecTD[7][playerid] = CreatePlayerTextDraw(playerid, 241.288391, 293.416595, "left");
	PlayerTextDrawLetterSize(playerid, SpecTD[7][playerid], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, SpecTD[7][playerid], 67.467048, 50.166671);
	PlayerTextDrawAlignment(playerid, SpecTD[7][playerid], 1);
	PlayerTextDrawColor(playerid, SpecTD[7][playerid], 0x20A9FFFF);
	PlayerTextDrawUseBox(playerid, SpecTD[7][playerid], true);
	PlayerTextDrawBoxColor(playerid, SpecTD[7][playerid], 0);
	PlayerTextDrawSetShadow(playerid, SpecTD[7][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpecTD[7][playerid], 1);
	PlayerTextDrawFont(playerid, SpecTD[7][playerid], 5);
	PlayerTextDrawBackgroundColor(playerid, SpecTD[7][playerid], 0x00000000);
	PlayerTextDrawSetProportional(playerid, SpecTD[7][playerid], 1);
	PlayerTextDrawSetSelectable(playerid, SpecTD[7][playerid], true);
	PlayerTextDrawSetPreviewModel(playerid, SpecTD[7][playerid], 19134);
	PlayerTextDrawSetPreviewRot(playerid, SpecTD[7][playerid], 0.000000, 90.000000, 90.000000, 1.000000);

	SpecTD[8][playerid] = CreatePlayerTextDraw(playerid, 331.307647, 293.249908, "right");
	PlayerTextDrawLetterSize(playerid, SpecTD[8][playerid], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, SpecTD[8][playerid], 67.467048, 50.166671);
	PlayerTextDrawAlignment(playerid, SpecTD[8][playerid], 1);
	PlayerTextDrawColor(playerid, SpecTD[8][playerid], 0x20A9FFFF);
	PlayerTextDrawUseBox(playerid, SpecTD[8][playerid], true);
	PlayerTextDrawBoxColor(playerid, SpecTD[8][playerid], 0);
	PlayerTextDrawSetShadow(playerid, SpecTD[8][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpecTD[8][playerid], 1);
	PlayerTextDrawFont(playerid, SpecTD[8][playerid], 5);
	PlayerTextDrawBackgroundColor(playerid, SpecTD[8][playerid], 0x00000000);
	PlayerTextDrawSetProportional(playerid, SpecTD[8][playerid], 1);
	PlayerTextDrawSetSelectable(playerid, SpecTD[8][playerid], true);
	PlayerTextDrawSetPreviewModel(playerid, SpecTD[8][playerid], 19134);
	PlayerTextDrawSetPreviewRot(playerid, SpecTD[8][playerid], 0.000000, 270.000000, 90.000000, 1.000000);

	SpecTD[9][playerid] = CreatePlayerTextDraw(playerid, 320.000091, 299.833251, "1");
	PlayerTextDrawLetterSize(playerid, SpecTD[9][playerid], 0.564787, 3.653333);
	PlayerTextDrawTextSize(playerid, SpecTD[9][playerid], 0.000000, 126.583358);
	PlayerTextDrawAlignment(playerid, SpecTD[9][playerid], 2);
	PlayerTextDrawColor(playerid, SpecTD[9][playerid], -1);
	PlayerTextDrawUseBox(playerid, SpecTD[9][playerid], true);
	PlayerTextDrawBoxColor(playerid, SpecTD[9][playerid], 22);
	PlayerTextDrawSetShadow(playerid, SpecTD[9][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpecTD[9][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, SpecTD[9][playerid], 0x20A9FFFF);
	PlayerTextDrawFont(playerid, SpecTD[9][playerid], 1);
	PlayerTextDrawSetProportional(playerid, SpecTD[9][playerid], 1);
	PlayerTextDrawSetSelectable(playerid, SpecTD[9][playerid], true);

	SpecTD[10][playerid] = CreatePlayerTextDraw(playerid, 535.709106, 320.833312, "WARN");
	PlayerTextDrawLetterSize(playerid, SpecTD[10][playerid], 0.442972, 2.124999);
	PlayerTextDrawTextSize(playerid, SpecTD[10][playerid], 11.244508, 44.333328);
	PlayerTextDrawAlignment(playerid, SpecTD[10][playerid], 2);
	PlayerTextDrawColor(playerid, SpecTD[10][playerid], 0x20A9FFFF);
	PlayerTextDrawUseBox(playerid, SpecTD[10][playerid], true);
	PlayerTextDrawBoxColor(playerid, SpecTD[10][playerid], 89);
	PlayerTextDrawSetShadow(playerid, SpecTD[10][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpecTD[10][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, SpecTD[10][playerid], -203);
	PlayerTextDrawFont(playerid, SpecTD[10][playerid], 1);
	PlayerTextDrawSetProportional(playerid, SpecTD[10][playerid], 1);
	PlayerTextDrawSetSelectable(playerid, SpecTD[10][playerid], true);

	SpecTD[11][playerid] = CreatePlayerTextDraw(playerid, 599.490966, 320.833312, "MUTE");
	PlayerTextDrawLetterSize(playerid, SpecTD[11][playerid], 0.442972, 2.124999);
	PlayerTextDrawTextSize(playerid, SpecTD[11][playerid], 11.244508, 40.833328);
	PlayerTextDrawAlignment(playerid, SpecTD[11][playerid], 2);
	PlayerTextDrawColor(playerid, SpecTD[11][playerid], 0x20A9FFFF);
	PlayerTextDrawUseBox(playerid, SpecTD[11][playerid], true);
	PlayerTextDrawBoxColor(playerid, SpecTD[11][playerid], 89);
	PlayerTextDrawSetShadow(playerid, SpecTD[11][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpecTD[11][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, SpecTD[11][playerid], -203);
	PlayerTextDrawFont(playerid, SpecTD[11][playerid], 1);
	PlayerTextDrawSetProportional(playerid, SpecTD[11][playerid], 1);
	PlayerTextDrawSetSelectable(playerid, SpecTD[11][playerid], true);

	SpecTD[12][playerid] = CreatePlayerTextDraw(playerid, 319.531890, 420.583343, "Legendary RPG");
	PlayerTextDrawLetterSize(playerid, SpecTD[12][playerid], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, SpecTD[12][playerid], 0.468521, 114.916656);
	PlayerTextDrawAlignment(playerid, SpecTD[12][playerid], 2);
	PlayerTextDrawColor(playerid, SpecTD[12][playerid], 0x20A9FFFF);
	PlayerTextDrawUseBox(playerid, SpecTD[12][playerid], true);
	PlayerTextDrawBoxColor(playerid, SpecTD[12][playerid], -1523963252);
	PlayerTextDrawSetShadow(playerid, SpecTD[12][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpecTD[12][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, SpecTD[12][playerid], -1);
	PlayerTextDrawFont(playerid, SpecTD[12][playerid], 1);
	PlayerTextDrawSetProportional(playerid, SpecTD[12][playerid], 1);

	SpecTD[13][playerid] = CreatePlayerTextDraw(playerid, 641.999816, 178.250015, "usebox");
	PlayerTextDrawLetterSize(playerid, SpecTD[13][playerid], 0.000000, 13.122016);
	PlayerTextDrawTextSize(playerid, SpecTD[13][playerid], 496.975006, 0.000000);
	PlayerTextDrawAlignment(playerid, SpecTD[13][playerid], 1);
	PlayerTextDrawColor(playerid, SpecTD[13][playerid], 0);
	PlayerTextDrawUseBox(playerid, SpecTD[13][playerid], true);
	PlayerTextDrawBoxColor(playerid, SpecTD[13][playerid], 102);
	PlayerTextDrawSetShadow(playerid, SpecTD[13][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpecTD[13][playerid], 0);
	PlayerTextDrawFont(playerid, SpecTD[13][playerid], 0);

	SpecTD[14][playerid] = CreatePlayerTextDraw(playerid, 572.533386, 181.416702, "_");
	PlayerTextDrawLetterSize(playerid, SpecTD[14][playerid], 0.271493, 1.454166);
	PlayerTextDrawAlignment(playerid, SpecTD[14][playerid], 2);
	PlayerTextDrawColor(playerid, SpecTD[14][playerid], -1523963137);
	PlayerTextDrawSetShadow(playerid, SpecTD[14][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpecTD[14][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, SpecTD[14][playerid], -167);
	PlayerTextDrawFont(playerid, SpecTD[14][playerid], 2);
	PlayerTextDrawSetProportional(playerid, SpecTD[14][playerid], 1);

	SpecTD[15][playerid] = CreatePlayerTextDraw(playerid, 319.063171, 340.666503, "close");
	PlayerTextDrawLetterSize(playerid, SpecTD[15][playerid], 0.625695, 2.305833);
	PlayerTextDrawAlignment(playerid, SpecTD[15][playerid], 2);
	PlayerTextDrawColor(playerid, SpecTD[15][playerid], 0x20A9FFFF);
	PlayerTextDrawSetShadow(playerid, SpecTD[15][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpecTD[15][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, SpecTD[15][playerid], -1523963137);
	PlayerTextDrawFont(playerid, SpecTD[15][playerid], 3);
	PlayerTextDrawSetProportional(playerid, SpecTD[15][playerid], 1);
	PlayerTextDrawSetSelectable(playerid, SpecTD[15][playerid], true);
	/// ============================== TUNING ===============================================
	TuningTD[0][playerid] = CreatePlayerTextDraw(playerid, 427.411743, 332.833282, "usebox");
	PlayerTextDrawLetterSize(playerid, TuningTD[0][playerid], 0.000000, 10.419496);
	PlayerTextDrawTextSize(playerid, TuningTD[0][playerid], 191.411651, 0.000000);
	PlayerTextDrawAlignment(playerid, TuningTD[0][playerid], 1);
	PlayerTextDrawColor(playerid, TuningTD[0][playerid], 0);
	PlayerTextDrawUseBox(playerid, TuningTD[0][playerid], true);
	PlayerTextDrawBoxColor(playerid, TuningTD[0][playerid], 0x00000000);
	PlayerTextDrawSetShadow(playerid, TuningTD[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningTD[0][playerid], 0);
	PlayerTextDrawFont(playerid, TuningTD[0][playerid], 0);

	TuningTD[1][playerid] = CreatePlayerTextDraw(playerid, 426.058746, 334.416717, "usebox");
	PlayerTextDrawLetterSize(playerid, TuningTD[1][playerid], 0.000000, 10.090081);
	PlayerTextDrawTextSize(playerid, TuningTD[1][playerid], 192.823425, 0.000000);
	PlayerTextDrawAlignment(playerid, TuningTD[1][playerid], 1);
	PlayerTextDrawColor(playerid, TuningTD[1][playerid], 0);
	PlayerTextDrawUseBox(playerid, TuningTD[1][playerid], true);
	PlayerTextDrawBoxColor(playerid, TuningTD[1][playerid], 0x20A9FFFF);
	PlayerTextDrawSetShadow(playerid, TuningTD[1][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningTD[1][playerid], 0);
	PlayerTextDrawFont(playerid, TuningTD[1][playerid], 0);

	TuningTD[2][playerid] = CreatePlayerTextDraw(playerid, 303.529449, 335.416595, "WHEELS");
	PlayerTextDrawLetterSize(playerid, TuningTD[2][playerid], 0.474940, 1.844999);
	PlayerTextDrawAlignment(playerid, TuningTD[2][playerid], 2);
	PlayerTextDrawColor(playerid, TuningTD[2][playerid], -1);
	PlayerTextDrawSetShadow(playerid, TuningTD[2][playerid], 2);
	PlayerTextDrawSetOutline(playerid, TuningTD[2][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, TuningTD[2][playerid], 51);
	PlayerTextDrawFont(playerid, TuningTD[2][playerid], 1);
	PlayerTextDrawSetProportional(playerid, TuningTD[2][playerid], 1);

	TuningTD[3][playerid] = CreatePlayerTextDraw(playerid, 303.588287, 356.833404, "Shadow");
	PlayerTextDrawLetterSize(playerid, TuningTD[3][playerid], 0.474940, 1.844999);
	PlayerTextDrawAlignment(playerid, TuningTD[3][playerid], 2);
	PlayerTextDrawColor(playerid, TuningTD[3][playerid], -1);
	PlayerTextDrawSetShadow(playerid, TuningTD[3][playerid], 2);
	PlayerTextDrawSetOutline(playerid, TuningTD[3][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, TuningTD[3][playerid], 51);
	PlayerTextDrawFont(playerid, TuningTD[3][playerid], 1);
	PlayerTextDrawSetProportional(playerid, TuningTD[3][playerid], 1);

	TuningTD[4][playerid] = CreatePlayerTextDraw(playerid, 229.647140, 334.833312, "LEFT1");
	PlayerTextDrawLetterSize(playerid, TuningTD[4][playerid], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, TuningTD[4][playerid], 34.352920, 20.416666);
	PlayerTextDrawAlignment(playerid, TuningTD[4][playerid], 1);
	PlayerTextDrawColor(playerid, TuningTD[4][playerid], -1);
	PlayerTextDrawUseBox(playerid, TuningTD[4][playerid], true);
	PlayerTextDrawBoxColor(playerid, TuningTD[4][playerid], 0);
	PlayerTextDrawSetShadow(playerid, TuningTD[4][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningTD[4][playerid], 1);
	PlayerTextDrawFont(playerid, TuningTD[4][playerid], 5);
	PlayerTextDrawBackgroundColor(playerid, TuningTD[4][playerid], 0x00000000);
	PlayerTextDrawSetProportional(playerid, TuningTD[4][playerid], 1);
	PlayerTextDrawSetSelectable(playerid, TuningTD[4][playerid], true);
	PlayerTextDrawSetPreviewModel(playerid, TuningTD[4][playerid], 19134);
	PlayerTextDrawSetPreviewRot(playerid, TuningTD[4][playerid], 0.000000, 90.000000, 90.000000, 1.000000);

	TuningTD[5][playerid] = CreatePlayerTextDraw(playerid, 229.235397, 355.666656, "LEFT2");
	PlayerTextDrawLetterSize(playerid, TuningTD[5][playerid], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, TuningTD[5][playerid], 34.352920, 20.416666);
	PlayerTextDrawAlignment(playerid, TuningTD[5][playerid], 1);
	PlayerTextDrawColor(playerid, TuningTD[5][playerid], -1);
	PlayerTextDrawUseBox(playerid, TuningTD[5][playerid], true);
	PlayerTextDrawBoxColor(playerid, TuningTD[5][playerid], 0);
	PlayerTextDrawSetShadow(playerid, TuningTD[5][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningTD[5][playerid], 1);
	PlayerTextDrawFont(playerid, TuningTD[5][playerid], 5);
	PlayerTextDrawBackgroundColor(playerid, TuningTD[5][playerid], 0x00000000);
	PlayerTextDrawSetProportional(playerid, TuningTD[5][playerid], 1);
	PlayerTextDrawSetSelectable(playerid, TuningTD[5][playerid], true);
	PlayerTextDrawSetPreviewModel(playerid, TuningTD[5][playerid], 19134);
	PlayerTextDrawSetPreviewRot(playerid, TuningTD[5][playerid], 0.000000, 90.000000, 90.000000, 1.000000);

	TuningTD[6][playerid] = CreatePlayerTextDraw(playerid, 340.823394, 334.499908, "RIGHT1");
	PlayerTextDrawLetterSize(playerid, TuningTD[6][playerid], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, TuningTD[6][playerid], 34.352920, 20.416666);
	PlayerTextDrawAlignment(playerid, TuningTD[6][playerid], 1);
	PlayerTextDrawColor(playerid, TuningTD[6][playerid], -1);
	PlayerTextDrawUseBox(playerid, TuningTD[6][playerid], true);
	PlayerTextDrawBoxColor(playerid, TuningTD[6][playerid], 0);
	PlayerTextDrawSetShadow(playerid, TuningTD[6][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningTD[6][playerid], 1);
	PlayerTextDrawFont(playerid, TuningTD[6][playerid], 5);
	PlayerTextDrawBackgroundColor(playerid, TuningTD[6][playerid], 0x00000000);
	PlayerTextDrawSetProportional(playerid, TuningTD[6][playerid], 1);
	PlayerTextDrawSetSelectable(playerid, TuningTD[6][playerid], true);
	PlayerTextDrawSetPreviewModel(playerid, TuningTD[6][playerid], 19134);
	PlayerTextDrawSetPreviewRot(playerid, TuningTD[6][playerid], 0.000000, 270.000000, 90.000000, 1.000000);

	TuningTD[7][playerid] = CreatePlayerTextDraw(playerid, 340.882232, 355.333374, "RIGHT2");
	PlayerTextDrawLetterSize(playerid, TuningTD[7][playerid], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, TuningTD[7][playerid], 34.352920, 20.416666);
	PlayerTextDrawAlignment(playerid, TuningTD[7][playerid], 1);
	PlayerTextDrawColor(playerid, TuningTD[7][playerid], -1);
	PlayerTextDrawUseBox(playerid, TuningTD[7][playerid], true);
	PlayerTextDrawBoxColor(playerid, TuningTD[7][playerid], 0);
	PlayerTextDrawSetShadow(playerid, TuningTD[7][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningTD[7][playerid], 1);
	PlayerTextDrawFont(playerid, TuningTD[7][playerid], 5);
	PlayerTextDrawBackgroundColor(playerid, TuningTD[7][playerid], 0x00000000);
	PlayerTextDrawSetProportional(playerid, TuningTD[7][playerid], 1);
	PlayerTextDrawSetSelectable(playerid, TuningTD[7][playerid], true);
	PlayerTextDrawSetPreviewModel(playerid, TuningTD[7][playerid], 19134);
	PlayerTextDrawSetPreviewRot(playerid, TuningTD[7][playerid], 0.000000, 270.000000, 90.000000, 1.000000);

	TuningTD[8][playerid] = CreatePlayerTextDraw(playerid, 201.882385, 406.583404, "Buy");
	PlayerTextDrawLetterSize(playerid, TuningTD[8][playerid], 0.427882, 2.142500);
	PlayerTextDrawAlignment(playerid, TuningTD[8][playerid], 1);
	PlayerTextDrawColor(playerid, TuningTD[8][playerid], -1);
	PlayerTextDrawSetShadow(playerid, TuningTD[8][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningTD[8][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, TuningTD[8][playerid], 51);
	PlayerTextDrawFont(playerid, TuningTD[8][playerid], 2);
	PlayerTextDrawSetProportional(playerid, TuningTD[8][playerid], 1);
	PlayerTextDrawSetSelectable(playerid, TuningTD[8][playerid], true);

	TuningTD[9][playerid] = CreatePlayerTextDraw(playerid, 272.058227, 406.416717, "Test");
	PlayerTextDrawLetterSize(playerid, TuningTD[9][playerid], 0.427882, 2.142500);
	PlayerTextDrawAlignment(playerid, TuningTD[9][playerid], 1);
	PlayerTextDrawColor(playerid, TuningTD[9][playerid], -1);
	PlayerTextDrawSetShadow(playerid, TuningTD[9][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningTD[9][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, TuningTD[9][playerid], 51);
	PlayerTextDrawFont(playerid, TuningTD[9][playerid], 2);
	PlayerTextDrawSetProportional(playerid, TuningTD[9][playerid], 1);
	PlayerTextDrawSetSelectable(playerid, TuningTD[9][playerid], true);

	TuningTD[10][playerid] = CreatePlayerTextDraw(playerid, 356.352447, 406.249938, "Exit");
	PlayerTextDrawLetterSize(playerid, TuningTD[10][playerid], 0.427882, 2.142500);
	PlayerTextDrawAlignment(playerid, TuningTD[10][playerid], 1);
	PlayerTextDrawColor(playerid, TuningTD[10][playerid], -1);
	PlayerTextDrawSetShadow(playerid, TuningTD[10][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningTD[10][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, TuningTD[10][playerid], 51);
	PlayerTextDrawFont(playerid, TuningTD[10][playerid], 2);
	PlayerTextDrawSetProportional(playerid, TuningTD[10][playerid], 1);
	PlayerTextDrawSetSelectable(playerid, TuningTD[10][playerid], true);
	/// ==== акссесуары
    BuyAcc[playerid] = TextDrawCreate(292.000030, 304.640014, "5000$");
    TextDrawLetterSize(BuyAcc[playerid], 0.449999, 1.600000);
    TextDrawAlignment(BuyAcc[playerid], 1);
    TextDrawColor(BuyAcc[playerid], -1);
    TextDrawSetShadow(BuyAcc[playerid], 0);
    TextDrawSetOutline(BuyAcc[playerid], 1);
    TextDrawBackgroundColor(BuyAcc[playerid], 51);
    TextDrawFont(BuyAcc[playerid], 1);
    TextDrawSetProportional(BuyAcc[playerid], 1);

    AccInv[playerid][0] = CreatePlayerTextDraw(playerid,154.222198, 186.168853, "glasses");
    PlayerTextDrawLetterSize(playerid,AccInv[playerid][0], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,AccInv[playerid][0], 69.333297, 76.160003);
    PlayerTextDrawAlignment(playerid,AccInv[playerid][0], 1);
    PlayerTextDrawColor(playerid,AccInv[playerid][0], -1);
    PlayerTextDrawSetShadow(playerid,AccInv[playerid][0], 0);
    PlayerTextDrawSetOutline(playerid,AccInv[playerid][0], 0);
    PlayerTextDrawFont(playerid,AccInv[playerid][0], 5);
    PlayerTextDrawBackgroundColor(playerid,AccInv[playerid][0], 0);
    PlayerTextDrawSetPreviewModel(playerid,AccInv[playerid][0], 19031);
    PlayerTextDrawSetPreviewRot(playerid,AccInv[playerid][0], 0.000000, 0.000000, 110.000000, 1.000000);
    PlayerTextDrawSetSelectable(playerid,AccInv[playerid][0], true);

    AccInv[playerid][1] = CreatePlayerTextDraw(playerid,156.888885, 123.448883, "hat");
    PlayerTextDrawLetterSize(playerid,AccInv[playerid][1], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,AccInv[playerid][1], 70.666671, 74.168884);
    PlayerTextDrawAlignment(playerid,AccInv[playerid][1], 1);
    PlayerTextDrawColor(playerid,AccInv[playerid][1], -1);
    PlayerTextDrawUseBox(playerid,AccInv[playerid][1], true);
    PlayerTextDrawBoxColor(playerid,AccInv[playerid][1], 0);
    PlayerTextDrawSetShadow(playerid,AccInv[playerid][1], 0);
    PlayerTextDrawSetOutline(playerid,AccInv[playerid][1], 0);
    PlayerTextDrawFont(playerid,AccInv[playerid][1], 5);
    PlayerTextDrawBackgroundColor(playerid,AccInv[playerid][1], 0);
    PlayerTextDrawSetPreviewModel(playerid,AccInv[playerid][1], 19137);
    PlayerTextDrawSetPreviewRot(playerid,AccInv[playerid][1], 0.000000, 0.000000, 110.000000, 1.000000);
    PlayerTextDrawSetSelectable(playerid,AccInv[playerid][1], true);

    AccInv[playerid][2] = CreatePlayerTextDraw(playerid,164.000000, 286.720001, "null");
    PlayerTextDrawLetterSize(playerid,AccInv[playerid][2], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,AccInv[playerid][2], 55.111114, 58.737792);
    PlayerTextDrawAlignment(playerid,AccInv[playerid][2], 1);
    PlayerTextDrawColor(playerid,AccInv[playerid][2], -1);
    PlayerTextDrawUseBox(playerid,AccInv[playerid][2], true);
    PlayerTextDrawBoxColor(playerid,AccInv[playerid][2], 0);
    PlayerTextDrawSetShadow(playerid,AccInv[playerid][2], 0);
    PlayerTextDrawSetOutline(playerid,AccInv[playerid][2], 0);
    PlayerTextDrawFont(playerid,AccInv[playerid][2], 5);
    PlayerTextDrawSetPreviewModel(playerid,AccInv[playerid][2], 19031);
    PlayerTextDrawBackgroundColor(playerid,AccInv[playerid][2], 0);
    PlayerTextDrawSetPreviewRot(playerid,AccInv[playerid][2], 0.000000, 0.000000, 110.000000, 1.000000);
    PlayerTextDrawSetSelectable(playerid,AccInv[playerid][2], true);

    AccInv[playerid][3] = CreatePlayerTextDraw(playerid,224.000000, 286.720001, "null");
    PlayerTextDrawLetterSize(playerid,AccInv[playerid][3], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,AccInv[playerid][3], 55.111114, 58.737792);
    PlayerTextDrawAlignment(playerid,AccInv[playerid][3], 1);
    PlayerTextDrawColor(playerid,AccInv[playerid][3], -1);
    PlayerTextDrawUseBox(playerid,AccInv[playerid][3], true);
    PlayerTextDrawBoxColor(playerid,AccInv[playerid][3], 0);
    PlayerTextDrawSetShadow(playerid,AccInv[playerid][3], 0);
    PlayerTextDrawSetOutline(playerid,AccInv[playerid][3], 0);
    PlayerTextDrawFont(playerid,AccInv[playerid][3], 5);
    PlayerTextDrawSetPreviewModel(playerid,AccInv[playerid][3], 19137);
    PlayerTextDrawBackgroundColor(playerid,AccInv[playerid][3], 0);
    PlayerTextDrawSetPreviewRot(playerid,AccInv[playerid][3], 0.000000, 0.000000, 110.000000, 1.000000);
    PlayerTextDrawSetSelectable(playerid,AccInv[playerid][3], true);

    AccInv[playerid][4] = CreatePlayerTextDraw(playerid,284.000000, 286.720001, "null");
    PlayerTextDrawLetterSize(playerid,AccInv[playerid][4], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,AccInv[playerid][4], 55.111114, 58.737792);
    PlayerTextDrawAlignment(playerid,AccInv[playerid][4], 1);
    PlayerTextDrawColor(playerid,AccInv[playerid][4], -1);
    PlayerTextDrawUseBox(playerid,AccInv[playerid][4], true);
    PlayerTextDrawBoxColor(playerid,AccInv[playerid][4], 0);
    PlayerTextDrawSetShadow(playerid,AccInv[playerid][4], 0);
    PlayerTextDrawSetOutline(playerid,AccInv[playerid][4], 0);
    PlayerTextDrawFont(playerid,AccInv[playerid][4], 5);
    PlayerTextDrawSetPreviewModel(playerid,AccInv[playerid][4], 19031);
    PlayerTextDrawBackgroundColor(playerid,AccInv[playerid][4], 0);
    PlayerTextDrawSetPreviewRot(playerid,AccInv[playerid][4], 0.000000, 0.000000, 110.000000, 1.000000);
    PlayerTextDrawSetSelectable(playerid,AccInv[playerid][4], true);

    AccInv[playerid][5] = CreatePlayerTextDraw(playerid,344.000000, 286.720001, "null");
    PlayerTextDrawLetterSize(playerid,AccInv[playerid][5], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,AccInv[playerid][5], 55.111114, 58.737792);
    PlayerTextDrawAlignment(playerid,AccInv[playerid][5], 1);
    PlayerTextDrawColor(playerid,AccInv[playerid][5], -1);
    PlayerTextDrawUseBox(playerid,AccInv[playerid][5], true);
    PlayerTextDrawBoxColor(playerid,AccInv[playerid][5], 0);
    PlayerTextDrawSetShadow(playerid,AccInv[playerid][5], 0);
    PlayerTextDrawSetOutline(playerid,AccInv[playerid][5], 0);
    PlayerTextDrawFont(playerid,AccInv[playerid][5], 5);
    PlayerTextDrawSetPreviewModel(playerid,AccInv[playerid][5], 19137);
    PlayerTextDrawBackgroundColor(playerid,AccInv[playerid][5], 0);
    PlayerTextDrawSetPreviewRot(playerid,AccInv[playerid][5], 0.000000, 0.000000, 110.000000, 1.000000);
    PlayerTextDrawSetSelectable(playerid,AccInv[playerid][5], true);

    AccInv[playerid][6] = CreatePlayerTextDraw(playerid,404.000000, 286.720001, "null");
    PlayerTextDrawLetterSize(playerid,AccInv[playerid][6], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,AccInv[playerid][6], 55.111114, 58.737792);
    PlayerTextDrawAlignment(playerid,AccInv[playerid][6], 1);
    PlayerTextDrawColor(playerid,AccInv[playerid][6], -1);
    PlayerTextDrawUseBox(playerid,AccInv[playerid][6], true);
    PlayerTextDrawBoxColor(playerid,AccInv[playerid][6], 0);
    PlayerTextDrawSetShadow(playerid,AccInv[playerid][6], 0);
    PlayerTextDrawSetOutline(playerid,AccInv[playerid][6], 0);
    PlayerTextDrawFont(playerid,AccInv[playerid][6], 5);
    PlayerTextDrawSetPreviewModel(playerid,AccInv[playerid][6], 19031);
    PlayerTextDrawBackgroundColor(playerid,AccInv[playerid][6], 0);
    PlayerTextDrawSetPreviewRot(playerid,AccInv[playerid][6], 0.000000, 0.000000, 110.000000, 1.000000);
    PlayerTextDrawSetSelectable(playerid,AccInv[playerid][6], true);

    AccInv[playerid][7] = CreatePlayerTextDraw(playerid,464.000000, 286.720001, "null");
    PlayerTextDrawLetterSize(playerid,AccInv[playerid][7], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,AccInv[playerid][7], 55.111114, 58.737792);
    PlayerTextDrawAlignment(playerid,AccInv[playerid][7], 1);
    PlayerTextDrawColor(playerid,AccInv[playerid][7], -1);
    PlayerTextDrawUseBox(playerid,AccInv[playerid][7], true);
    PlayerTextDrawBoxColor(playerid,AccInv[playerid][7], 0);
    PlayerTextDrawSetShadow(playerid,AccInv[playerid][7], 0);
    PlayerTextDrawSetOutline(playerid,AccInv[playerid][7], 0);
    PlayerTextDrawFont(playerid,AccInv[playerid][7], 5);
    PlayerTextDrawSetPreviewModel(playerid,AccInv[playerid][7], 19137);
    PlayerTextDrawBackgroundColor(playerid,AccInv[playerid][7], 0);
    PlayerTextDrawSetPreviewRot(playerid,AccInv[playerid][7], 0.000000, 0.000000, 110.000000, 1.000000);
    PlayerTextDrawSetSelectable(playerid,AccInv[playerid][7], true);

    AccInv[playerid][8] = CreatePlayerTextDraw(playerid,164.000000, 356.720001, "null");
    PlayerTextDrawLetterSize(playerid,AccInv[playerid][8], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,AccInv[playerid][8], 55.111114, 58.737792);
    PlayerTextDrawAlignment(playerid,AccInv[playerid][8], 1);
    PlayerTextDrawColor(playerid,AccInv[playerid][8], -1);
    PlayerTextDrawUseBox(playerid,AccInv[playerid][8], true);
    PlayerTextDrawBoxColor(playerid,AccInv[playerid][8], 0);
    PlayerTextDrawSetShadow(playerid,AccInv[playerid][8], 0);
    PlayerTextDrawSetOutline(playerid,AccInv[playerid][8], 0);
    PlayerTextDrawFont(playerid,AccInv[playerid][8], 5);
    PlayerTextDrawSetPreviewModel(playerid,AccInv[playerid][8], 19031);
    PlayerTextDrawBackgroundColor(playerid,AccInv[playerid][8], 0);
    PlayerTextDrawSetPreviewRot(playerid,AccInv[playerid][8], 0.000000, 0.000000, 110.000000, 1.000000);
    PlayerTextDrawSetSelectable(playerid,AccInv[playerid][8], true);

    AccInv[playerid][9] = CreatePlayerTextDraw(playerid,224.000000, 356.720001, "null");
    PlayerTextDrawLetterSize(playerid,AccInv[playerid][9], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,AccInv[playerid][9], 55.111114, 58.737792);
    PlayerTextDrawAlignment(playerid,AccInv[playerid][9], 1);
    PlayerTextDrawColor(playerid,AccInv[playerid][9], -1);
    PlayerTextDrawUseBox(playerid,AccInv[playerid][9], true);
    PlayerTextDrawBoxColor(playerid,AccInv[playerid][9], 0);
    PlayerTextDrawSetShadow(playerid,AccInv[playerid][9], 0);
    PlayerTextDrawSetOutline(playerid,AccInv[playerid][9], 0);
    PlayerTextDrawFont(playerid,AccInv[playerid][9], 5);
    PlayerTextDrawSetPreviewModel(playerid,AccInv[playerid][9], 19137);
    PlayerTextDrawBackgroundColor(playerid,AccInv[playerid][9], 0);
    PlayerTextDrawSetPreviewRot(playerid,AccInv[playerid][9], 0.000000, 0.000000, 110.000000, 1.000000);
    PlayerTextDrawSetSelectable(playerid,AccInv[playerid][9], true);

    AccInv[playerid][10] = CreatePlayerTextDraw(playerid,284.000000, 356.720001, "null");
    PlayerTextDrawLetterSize(playerid,AccInv[playerid][10], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,AccInv[playerid][10], 55.111114, 58.737792);
    PlayerTextDrawAlignment(playerid,AccInv[playerid][10], 1);
    PlayerTextDrawColor(playerid,AccInv[playerid][10], -1);
    PlayerTextDrawUseBox(playerid,AccInv[playerid][10], true);
    PlayerTextDrawBoxColor(playerid,AccInv[playerid][10], 0);
    PlayerTextDrawSetShadow(playerid,AccInv[playerid][10], 0);
    PlayerTextDrawSetOutline(playerid,AccInv[playerid][10], 0);
    PlayerTextDrawFont(playerid,AccInv[playerid][10], 5);
    PlayerTextDrawSetPreviewModel(playerid,AccInv[playerid][10], 19031);
    PlayerTextDrawBackgroundColor(playerid,AccInv[playerid][10], 0);
    PlayerTextDrawSetPreviewRot(playerid,AccInv[playerid][10], 0.000000, 0.000000, 110.000000, 1.000000);
    PlayerTextDrawSetSelectable(playerid,AccInv[playerid][10], true);

    AccInv[playerid][11] = CreatePlayerTextDraw(playerid,344.000000, 356.720001, "null");
    PlayerTextDrawLetterSize(playerid,AccInv[playerid][11], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,AccInv[playerid][11], 55.111114, 58.737792);
    PlayerTextDrawAlignment(playerid,AccInv[playerid][11], 1);
    PlayerTextDrawColor(playerid,AccInv[playerid][11], -1);
    PlayerTextDrawUseBox(playerid,AccInv[playerid][11], true);
    PlayerTextDrawBoxColor(playerid,AccInv[playerid][11], 0);
    PlayerTextDrawSetShadow(playerid,AccInv[playerid][11], 0);
    PlayerTextDrawSetOutline(playerid,AccInv[playerid][11], 0);
    PlayerTextDrawFont(playerid,AccInv[playerid][11], 5);
    PlayerTextDrawSetPreviewModel(playerid,AccInv[playerid][11], 19137);
    PlayerTextDrawBackgroundColor(playerid,AccInv[playerid][11], 0);
   	PlayerTextDrawSetPreviewRot(playerid,AccInv[playerid][11], 0.000000, 0.000000, 110.000000, 1.000000);
    PlayerTextDrawSetSelectable(playerid,AccInv[playerid][11], true);

    AccInv[playerid][12] = CreatePlayerTextDraw(playerid,404.000000, 356.720001, "null");
    PlayerTextDrawLetterSize(playerid,AccInv[playerid][12], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,AccInv[playerid][12], 55.111114, 58.737792);
    PlayerTextDrawAlignment(playerid,AccInv[playerid][12], 1);
    PlayerTextDrawColor(playerid,AccInv[playerid][12], -1);
    PlayerTextDrawUseBox(playerid,AccInv[playerid][12], true);
    PlayerTextDrawBoxColor(playerid,AccInv[playerid][12], 0);
    PlayerTextDrawSetShadow(playerid,AccInv[playerid][12], 0);
    PlayerTextDrawSetOutline(playerid,AccInv[playerid][12], 0);
    PlayerTextDrawFont(playerid,AccInv[playerid][12], 5);
    PlayerTextDrawSetPreviewModel(playerid,AccInv[playerid][12], 19031);
    PlayerTextDrawBackgroundColor(playerid,AccInv[playerid][12], 0);
    PlayerTextDrawSetPreviewRot(playerid,AccInv[playerid][12], 0.000000, 0.000000, 110.000000, 1.000000);
    PlayerTextDrawSetSelectable(playerid,AccInv[playerid][12], true);

    AccInv[playerid][13] = CreatePlayerTextDraw(playerid,464.000000, 356.720001, "null");
    PlayerTextDrawLetterSize(playerid,AccInv[playerid][13], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,AccInv[playerid][13], 55.111114, 58.737792);
    PlayerTextDrawAlignment(playerid,AccInv[playerid][13], 1);
    PlayerTextDrawColor(playerid,AccInv[playerid][13], -1);
    PlayerTextDrawUseBox(playerid,AccInv[playerid][13], true);
    PlayerTextDrawBoxColor(playerid,AccInv[playerid][13], 0);
    PlayerTextDrawSetShadow(playerid,AccInv[playerid][13], 0);
    PlayerTextDrawSetOutline(playerid,AccInv[playerid][13], 0);
   	PlayerTextDrawFont(playerid,AccInv[playerid][13], 5);
    PlayerTextDrawSetPreviewModel(playerid,AccInv[playerid][13], 19137);
    PlayerTextDrawBackgroundColor(playerid,AccInv[playerid][13], 0);
    PlayerTextDrawSetPreviewRot(playerid,AccInv[playerid][13], 0.000000, 0.000000, 110.000000, 1.000000);
    PlayerTextDrawSetSelectable(playerid,AccInv[playerid][13], true);
	// Registration
	RegName[playerid][0] = CreatePlayerTextDraw(playerid, 310.000000, 165.022186, "ENTER");
	PlayerTextDrawLetterSize(playerid, RegName[playerid][0], 0.190000, 1.008889);
	PlayerTextDrawTextSize(playerid, RegName[playerid][0], 335.500000, 23.022226);
	PlayerTextDrawAlignment(playerid, RegName[playerid][0], 1);
	PlayerTextDrawColor(playerid, RegName[playerid][0], -1);
	PlayerTextDrawUseBox(playerid, RegName[playerid][0], true);
	PlayerTextDrawBoxColor(playerid, RegName[playerid][0], -256);
	PlayerTextDrawSetShadow(playerid, RegName[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, RegName[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, RegName[playerid][0], 51);
	PlayerTextDrawFont(playerid, RegName[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, RegName[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, RegName[playerid][0], true);
	GetPlayerName(playerid, PlayerInfo[playerid][pName], MAX_PLAYER_NAME);

	for(new i = 0; i < 7; i++) TextDrawShowForPlayer(playerid, URL[i]);
	strmid(PlayerInfo[playerid][pEmail], "Nope", 0, strlen("Nope"), 48);
    // Sportzal Nagib
	Trenia[playerid] = CreatePlayerTextDraw(playerid, 517.247680, 420.000061, "[100/100]");
	PlayerTextDrawLetterSize(playerid, Trenia[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, Trenia[playerid], 1);
	PlayerTextDrawColor(playerid, Trenia[playerid], -1);
	PlayerTextDrawSetShadow(playerid, Trenia[playerid], 2);
	PlayerTextDrawSetOutline(playerid, Trenia[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Trenia[playerid], 51);
	PlayerTextDrawFont(playerid, Trenia[playerid], 1);
	PlayerTextDrawSetProportional(playerid, Trenia[playerid], 1);
	// Спиидометр

	VehInfo[playerid][0] = CreatePlayerTextDraw(playerid, 590.701171, 373.900054, "120");
	PlayerTextDrawLetterSize(playerid, VehInfo[playerid][0], 0.233500, 0.927999);
	PlayerTextDrawAlignment(playerid, VehInfo[playerid][0], 3);
	PlayerTextDrawColor(playerid, VehInfo[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, VehInfo[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, VehInfo[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, VehInfo[playerid][0], 255);
	PlayerTextDrawFont(playerid, VehInfo[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, VehInfo[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, VehInfo[playerid][0], 0);

	VehInfo[playerid][1] = CreatePlayerTextDraw(playerid, 591.401000, 389.389068, "100");
	PlayerTextDrawLetterSize(playerid, VehInfo[playerid][1], 0.233500, 0.927999);
	PlayerTextDrawAlignment(playerid, VehInfo[playerid][1], 3);
	PlayerTextDrawColor(playerid, VehInfo[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, VehInfo[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, VehInfo[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, VehInfo[playerid][1], 255);
	PlayerTextDrawFont(playerid, VehInfo[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, VehInfo[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, VehInfo[playerid][1], 0);

	VehInfo[playerid][2] = CreatePlayerTextDraw(playerid, 589.801757, 402.455749, "ON");
	PlayerTextDrawLetterSize(playerid, VehInfo[playerid][2], 0.233500, 0.927999);
	PlayerTextDrawAlignment(playerid, VehInfo[playerid][2], 3);
	PlayerTextDrawColor(playerid, VehInfo[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, VehInfo[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, VehInfo[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, VehInfo[playerid][2], 255);
	PlayerTextDrawFont(playerid, VehInfo[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, VehInfo[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, VehInfo[playerid][2], 0);

	VehInfo[playerid][3] = CreatePlayerTextDraw(playerid, 590.302124, 415.166778, "110");
	PlayerTextDrawLetterSize(playerid, VehInfo[playerid][3], 0.233500, 0.927999);
	PlayerTextDrawAlignment(playerid, VehInfo[playerid][3], 3);
	PlayerTextDrawColor(playerid, VehInfo[playerid][3], -1);
	PlayerTextDrawSetShadow(playerid, VehInfo[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, VehInfo[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, VehInfo[playerid][3], 255);
	PlayerTextDrawFont(playerid, VehInfo[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, VehInfo[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, VehInfo[playerid][3], 0);

	VehInfo[playerid][4] = CreatePlayerTextDraw(playerid, 623.301757, 414.900207, "MAX");
	PlayerTextDrawLetterSize(playerid, VehInfo[playerid][4], 0.233500, 0.927999);
	PlayerTextDrawAlignment(playerid, VehInfo[playerid][4], 3);
	PlayerTextDrawColor(playerid, VehInfo[playerid][4], -1);
	PlayerTextDrawSetShadow(playerid, VehInfo[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, VehInfo[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, VehInfo[playerid][4], 255);
	PlayerTextDrawFont(playerid, VehInfo[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid, VehInfo[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, VehInfo[playerid][4], 0);

	VehInfo[playerid][5] = CreatePlayerTextDraw(playerid, 624.301757, 400.589080, "LOCK");
	PlayerTextDrawLetterSize(playerid, VehInfo[playerid][5], 0.233500, 0.927999);
	PlayerTextDrawAlignment(playerid, VehInfo[playerid][5], 3);
	PlayerTextDrawColor(playerid, VehInfo[playerid][5], -1);
	PlayerTextDrawSetShadow(playerid, VehInfo[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, VehInfo[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, VehInfo[playerid][5], 255);
	PlayerTextDrawFont(playerid, VehInfo[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid, VehInfo[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, VehInfo[playerid][5], 0);

	// Mafia Capture
	MafiaTime[playerid] = CreatePlayerTextDraw(playerid,40.00000, 250.00000, "Time:~w~ 00:00~n~Vagos: ~w~10~n~Ballas: ~w~10");
	PlayerTextDrawBackgroundColor(playerid,MafiaTime[playerid], 51);
	PlayerTextDrawAlignment(playerid,MafiaTime[playerid], 1);
	PlayerTextDrawLetterSize(playerid,MafiaTime[playerid], 0.410000, 1.000000);
	PlayerTextDrawFont(playerid,MafiaTime[playerid], 2);
	PlayerTextDrawColor(playerid,MafiaTime[playerid], -1);
	PlayerTextDrawSetOutline(playerid,MafiaTime[playerid], 1);
	PlayerTextDrawSetProportional(playerid,MafiaTime[playerid], 1);
	PlayerTextDrawSetShadow(playerid,MafiaTime[playerid],0);
	PlayerTextDrawUseBox(playerid,MafiaTime[playerid], 1);
	PlayerTextDrawBoxColor(playerid,MafiaTime[playerid], 70);
	PlayerTextDrawTextSize(playerid,MafiaTime[playerid], 250.000000, 22.000000);
	PlayerTextDrawHide(playerid, MafiaTime[playerid]);
	// Paint Ball
	PaintBallTime[playerid] = CreatePlayerTextDraw(playerid,40.00000, 250.00000, "Time:~w~ 00:00~n~Kills: ~w~10~n~Deaths: ~w~10");
	PlayerTextDrawBackgroundColor(playerid,PaintBallTime[playerid], 51);
	PlayerTextDrawAlignment(playerid,PaintBallTime[playerid], 1);
	PlayerTextDrawLetterSize(playerid,PaintBallTime[playerid], 0.410000, 1.000000);
	PlayerTextDrawFont(playerid,PaintBallTime[playerid], 2);
	PlayerTextDrawColor(playerid,PaintBallTime[playerid], -1);
	PlayerTextDrawSetOutline(playerid,PaintBallTime[playerid], 1);
	PlayerTextDrawSetProportional(playerid,PaintBallTime[playerid], 1);
	PlayerTextDrawSetShadow(playerid,PaintBallTime[playerid],0);
	PlayerTextDrawUseBox(playerid,PaintBallTime[playerid], 1);
	PlayerTextDrawBoxColor(playerid,PaintBallTime[playerid], 70);
	PlayerTextDrawTextSize(playerid,PaintBallTime[playerid], 250.000000, 22.000000);
	PlayerTextDrawHide(playerid, PaintBallTime[playerid]);
	// help bankomat
	HelpText[0][playerid] = CreatePlayerTextDraw(playerid,197.000000, 185.500000, "usebox");
	PlayerTextDrawLetterSize(playerid,HelpText[0][playerid], 0.000000, 2.568054);
	PlayerTextDrawTextSize(playerid,HelpText[0][playerid], 20.500000, 0.000000);
	PlayerTextDrawAlignment(playerid,HelpText[0][playerid], 1);
	PlayerTextDrawUseBox(playerid,HelpText[0][playerid], true);
	PlayerTextDrawBoxColor(playerid,HelpText[0][playerid], 102);

	HelpText[1][playerid] = CreatePlayerTextDraw(playerid,25.500000, 185.750000, "");
	PlayerTextDrawLetterSize(playerid,HelpText[1][playerid], 0.220500, 0.939375);
	PlayerTextDrawAlignment(playerid,HelpText[1][playerid], 1);
	PlayerTextDrawColor(playerid,HelpText[1][playerid], -1);
	PlayerTextDrawSetOutline(playerid,HelpText[1][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid,HelpText[1][playerid], 51);
	PlayerTextDrawFont(playerid,HelpText[1][playerid], 2);
	PlayerTextDrawSetProportional(playerid,HelpText[1][playerid], 1);

	HelpText[2][playerid] = CreatePlayerTextDraw(playerid,25.000000, 198.000000, "");
	PlayerTextDrawLetterSize(playerid,HelpText[2][playerid], 0.220500, 0.939374);
	PlayerTextDrawAlignment(playerid,HelpText[2][playerid], 1);
	PlayerTextDrawColor(playerid,HelpText[2][playerid], -1);
	PlayerTextDrawSetOutline(playerid,HelpText[2][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid,HelpText[2][playerid], 51);
	PlayerTextDrawFont(playerid,HelpText[2][playerid], 2);
	PlayerTextDrawSetProportional(playerid,HelpText[2][playerid], 1);
}

stock ResetNew(playerid)
{
	PlayerInfo[playerid][pTimeDayS] = 0;
    clicktd[playerid] =  false;
    PlayerInfo[playerid][pSuperKey] = 0;
	PlayerInfo[playerid][pSupport] = 0;
	PlayerInfo[playerid][pKicka] = 0;
	PlayerInfo[playerid][pBana] = 0;
	PlayerInfo[playerid][pWarna] = 0;
	PlayerInfo[playerid][pMpa] = 0;
    SurfPlayerUse[playerid] = -1;
	if(GetPVarInt(playerid,"INCAROK") > 0)
	{
 		TogglePlayerSpectating(playerid, 0);
		TextDrawHideForPlayer(playerid,CheckSobClosed);
        TogglePlayerControllable(playerid, 1);
		DestroyDynamic3DTextLabel(Player3DTextIn[playerid]);
 		SetPVarInt(playerid,"INCAROK",0);
   		VehicleInfo[GetPVarInt(playerid,"INCAROK")][vInputID] = 0;
	}
    PlayerInfo[playerid][pWork] = 0;
    GodCar[playerid] = INVALID_VEHICLE_ID;
    CarID[playerid] = INVALID_VEHICLE_ID;
    Spawn[playerid] = false;
    StatusAirTP[playerid] = 0;
    KillTimer(HPTimer[playerid]);
    PlayerInfo[playerid][pKouka][0] = 0;
    PlayerInfo[playerid][pKouka][1] = 0;
    PlayerInfo[playerid][pKouka][2] = 0;
    PlayerInfo[playerid][pKouka][3] = 0;
    PlayerInfo[playerid][pKouka][4] = 0;
    PlayerInfo[playerid][pKouka][5] = 0;
    PlayerInfo[playerid][pKouka][6] = 0;
    PlayerInfo[playerid][pKouka][7] = 0;
    PlayerInfo[playerid][pKouka][8] = 0;
    PlayerInfo[playerid][pKouka][9] = 0;
    PlayerInfo[playerid][pKouka][10] = 0;
    PlayerInfo[playerid][pKouka][11] = 0;
    PlayerInfo[playerid][pKouka][12] = 0;
    PlayerInfo[playerid][pKouka][13] = 0;
    InfoSkate[playerid][sActive] = false;
	PlayerInfo[playerid][pRadar] = 0;
    PlayerInfo[playerid][pNr] = 0;
    PlayerInfo[playerid][pNr1] = 0;
    PlayerInfo[playerid][pDialog] = false;
    FloodKill{playerid} = 0;
	DamagerTime[playerid] = 0;
	Damager{playerid} = 0;
    DamagWarn{playerid} = 0;
   	RemoveBuildingForPlayer(playerid, 5199, 1982.640015, -2038.163940, 14.789000, 0.250000);
	RemoveBuildingForPlayer(playerid, 5201, 1988.140015, -2003.421021, 15.773000, 0.250000);
	RemoveBuildingForPlayer(playerid, 5313, 2043.991943, -2016.866943, 25.054001, 0.250000);
	RemoveBuildingForPlayer(playerid, 5316, 2043.991943, -2016.866943, 25.054001, 0.250000);
	RemoveBuildingForPlayer(playerid, 5346, 2016.312012, -1968.921021, 17.625000, 0.250000);
	RemoveBuildingForPlayer(playerid, 5337, 1995.437012, -2066.147949, 18.531000, 0.250000);
	RemoveBuildingForPlayer(playerid, 5375, 1995.437012, -2066.147949, 18.531000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1532, 1977.053955, -2035.890015, 12.539000, 0.250000);
	RemoveBuildingForPlayer(playerid, 5140, 1982.640015, -2038.163940, 14.789000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1306, 2001.022949, -2024.288940, 19.750000, 0.250000);
	RemoveBuildingForPlayer(playerid, 5136, 1988.140015, -2003.421021, 15.773000, 0.250000);
	RemoveBuildingForPlayer(playerid, 5312, 2068.959961, -2013.475952, 24.156000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1412, 1989.084961, -1982.475952, 13.820000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1412, 1983.812012, -1982.475952, 13.820000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1412, 1978.531006, -1982.475952, 13.820000, 0.250000);
	RemoveBuildingForPlayer(playerid, 3567, 1986.569946, -1974.491943, 13.257000, 0.250000);
	RemoveBuildingForPlayer(playerid, 5153, 1975.709961, -1974.506958, 13.117000, 0.250000);
	RemoveBuildingForPlayer(playerid, 3567, 2004.491943, -1974.491943, 13.257000, 0.250000);
	RemoveBuildingForPlayer(playerid, 3567, 2008.625000, -1974.546021, 15.023000, 0.250000);
	RemoveBuildingForPlayer(playerid, 5152, 1997.765015, -1974.468018, 14.875000, 0.250000);
	RemoveBuildingForPlayer(playerid, 3286, 2042.194946, -1986.084961, 38.327999, 0.250000);
	RemoveBuildingForPlayer(playerid, 5169, 2016.312012, -1968.921021, 17.625000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1308, 1971.459961, -1980.609009, 12.640000, 0.250000);
	RemoveBuildingForPlayer(playerid, 3744, 2072.545898, -1967.600952, 15.117000, 0.250000);
	RemoveBuildingForPlayer(playerid, 3574, 2072.545898, -1967.600952, 15.117000, 0.250000);
 //=========================================================================================
	/// парковка у отеля
	RemoveBuildingForPlayer(playerid, 5929, 1230.8906, -1337.9844, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 739, 1231.1406, -1341.8516, 12.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 739, 1231.1406, -1328.0938, 12.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 739, 1231.1406, -1356.2109, 12.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1374.6094, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1356.5547, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 1231.6406, -1389.8672, 15.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1374.6094, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1356.5547, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1335.0547, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1317.7422, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 5812, 1230.8906, -1337.9844, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1335.0547, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1317.7422, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1300.9219, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1300.9219, 12.2969, 0.25);
	//=================== HOTEL
    RemoveBuildingForPlayer(playerid, 5928, 1309.914, -1330.132, 25.187, 0.250);
    RemoveBuildingForPlayer(playerid, 620, 1321.523, -1374.429, 12.585, 0.250);
    RemoveBuildingForPlayer(playerid, 620, 1292.000, -1374.296, 12.367, 0.250);
    RemoveBuildingForPlayer(playerid, 620, 1300.585, -1374.296, 12.367, 0.250);
    RemoveBuildingForPlayer(playerid, 5704, 1309.914, -1330.132, 25.187, 0.250);
    RemoveBuildingForPlayer(playerid, 620, 1329.476, -1374.429, 12.585, 0.250);
    RemoveBuildingForPlayer(playerid, 620, 1330.601, -1340.984, 6.109, 0.250);
    RemoveBuildingForPlayer(playerid, 620, 1326.695, -1316.007, 8.726, 0.250);
    RemoveBuildingForPlayer(playerid, 620, 1327.593, -1333.671, 6.109, 0.250);
    RemoveBuildingForPlayer(playerid, 620, 1332.000, -1309.429, 8.726, 0.250);
	// мэрия
    RemoveBuildingForPlayer(playerid, 3980, 1481.1875, -1785.0703, 22.3828, 50);
	/// anticheat
    FirstFire[playerid]=0;
    addchet[playerid]=0;
	/// автосалон ЛС дел ///
	RemoveBuildingForPlayer(playerid, 4070, 1719.742, -1770.781, 23.429, 0.250);//START AUTO_LS
    RemoveBuildingForPlayer(playerid, 1531, 1724.734, -1741.500, 14.101, 0.250);
    RemoveBuildingForPlayer(playerid, 620, 1700.851, -1778.398, 12.492, 0.250);
    RemoveBuildingForPlayer(playerid, 620, 1701.304, -1794.429, 12.546, 0.250);
    RemoveBuildingForPlayer(playerid, 620, 1701.148, -1753.226, 12.351, 0.250);
    RemoveBuildingForPlayer(playerid, 620, 1701.257, -1764.484, 12.437, 0.250);
    RemoveBuildingForPlayer(playerid, 620, 1700.898, -1743.984, 12.453, 0.250);
    RemoveBuildingForPlayer(playerid, 3986, 1719.742, -1770.781, 23.429, 0.250);// END
	// del гетто ацтека
    RemoveBuildingForPlayer(playerid, 3695, 2239.9297, -1790.6953, 17.0078, 0.25);
    RemoveBuildingForPlayer(playerid, 3695, 2282.9922, -1790.6953, 17.0078, 0.25);
    RemoveBuildingForPlayer(playerid, 3695, 2314.8203, -1790.6953, 17.0078, 0.25);
    RemoveBuildingForPlayer(playerid, 3695, 2352.7188, -1790.6953, 17.0078, 0.25);
    RemoveBuildingForPlayer(playerid, 3695, 2387.8203, -1790.6953, 17.0078, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2229.0469, -1810.0313, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1807.3281, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1801.8672, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 2230.4141, -1815.1484, 11.3438, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 2234.4844, -1817.9297, 12.0938, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1791.0000, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1796.4531, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 3584, 2239.9297, -1790.6953, 17.0078, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1775.5078, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1780.9844, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2228.6719, -1767.2734, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1770.0469, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1307, 2232.5156, -1766.0547, 12.7500, 0.25);
    RemoveBuildingForPlayer(playerid, 1307, 2249.8672, -1815.4141, 12.7500, 0.25);
    RemoveBuildingForPlayer(playerid, 669, 2254.7266, -1827.4375, 12.5625, 0.25);
    RemoveBuildingForPlayer(playerid, 1226, 2259.9453, -1796.0703, 16.4219, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 2258.3438, -1804.7422, 12.0938, 0.25);
    RemoveBuildingForPlayer(playerid, 645, 2259.2656, -1773.2422, 11.1250, 0.25);
    RemoveBuildingForPlayer(playerid, 17886, 2264.0391, -1789.2578, 20.7734, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2265.2969, -1791.0000, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2265.2969, -1796.4531, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2265.2969, -1807.3281, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2265.2969, -1801.8672, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2265.2969, -1770.0469, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2265.2969, -1775.5078, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2265.2969, -1780.9844, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 2275.3906, -1820.7266, 12.0938, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2268.1875, -1810.0313, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2273.6953, -1810.0313, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 3584, 2282.9922, -1790.6953, 17.0078, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2267.8125, -1767.2734, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2273.3359, -1767.3438, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 2271.6484, -1772.3984, 8.3516, 0.25);
    RemoveBuildingForPlayer(playerid, 645, 2285.7578, -1762.1250, 12.2891, 0.25);
    RemoveBuildingForPlayer(playerid, 1226, 2297.8984, -1793.8203, 16.4219, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 2297.3828, -1798.5391, 8.3516, 0.25);
    RemoveBuildingForPlayer(playerid, 1307, 2293.6250, -1760.6172, 12.7500, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 2297.1484, -1775.8750, 8.3516, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2305.0625, -1810.0313, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2302.1719, -1807.3281, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2302.1719, -1801.8672, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2302.1719, -1791.0000, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2302.1719, -1796.4531, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 3584, 2314.8203, -1790.6953, 17.0078, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2302.1719, -1775.5078, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2302.1719, -1770.0469, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2302.1719, -1780.9844, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2304.7813, -1767.3828, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1307, 2322.6484, -1815.4141, 12.7500, 0.25);
    RemoveBuildingForPlayer(playerid, 645, 2332.8281, -1817.7109, 12.1172, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2341.7578, -1810.0313, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1807.3281, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 2341.7578, -1817.7266, 8.3594, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1801.8672, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1226, 2335.6484, -1796.6328, 16.4219, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1791.0000, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1796.4531, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 2334.7109, -1785.0625, 12.0938, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1775.5078, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1780.9844, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 17887, 2343.6094, -1784.5078, 20.3125, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1770.0469, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2341.3828, -1767.2734, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 669, 2329.1875, -1765.5234, 12.4375, 0.25);
    RemoveBuildingForPlayer(playerid, 673, 2349.6172, -1763.3438, 11.6328, 0.25);
    RemoveBuildingForPlayer(playerid, 3584, 2352.7188, -1790.6953, 17.0078, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 2367.6484, -1802.7969, 8.3594, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 2367.6484, -1780.7734, 11.0469, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 2378.3359, -1818.7266, 8.3594, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1800.4688, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1805.9297, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2376.9922, -1813.9297, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1811.3828, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1780.9844, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1789.6016, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1795.0547, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2376.6172, -1767.2734, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1770.0469, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1775.5078, 13.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 645, 2399.9766, -1815.9922, 11.8906, 0.25);
    RemoveBuildingForPlayer(playerid, 3584, 2387.8203, -1790.6953, 17.0078, 0.25);
    RemoveBuildingForPlayer(playerid, 673, 2398.5781, -1782.7734, 10.7031, 0.25);
    RemoveBuildingForPlayer(playerid, 645, 2387.0234, -1763.6406, 12.1797, 0.25);
    RemoveBuildingForPlayer(playerid, 17518, 2361.9375, -1699.9375, 15.9219, 0.25);
    RemoveBuildingForPlayer(playerid, 3685, 1230.5859, -1013.5859, 34.7656, 0.25);
    RemoveBuildingForPlayer(playerid, 3684, 1230.5859, -1013.5859, 34.7656, 0.25);
	/// ls-lv del
	RemoveBuildingForPlayer(playerid, 8026, 1677.3906, 843.2266, 8.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 8049, 1677.3906, 843.2266, 8.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 1290, 1657.0547, 843.0938, 11.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 1540, 1717.5313, 849.9375, 12.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 3516, 1776.9922, 828.9688, 12.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 3516, 1811.7422, 822.9297, 12.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3516, 1783.5391, 863.4375, 12.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 3516, 1817.5469, 857.6797, 13.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 8518, 1877.3906, 843.1953, 8.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 8896, 1877.3906, 843.1953, 8.4844, 0.25);
    ZapretDice[playerid] = 0;
    Predlog[playerid]=0;
    kostiKos[playerid]=0;
	KostiName[playerid] = INVALID_PLAYER_ID;
	KostiMoney[playerid] = 0;
	//===========================яблок==========================================
	RemoveBuildingForPlayer(playerid, 3404, 1019.3828, -300.2422, 72.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3404, 1045.5625, -300.6016, 72.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3402, 1019.3828, -300.2422, 72.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3402, 1045.5625, -300.6016, 72.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 13206, 1072.9531, -289.1797, 72.7344, 0.25);
	//
	RemoveBuildingForPlayer(playerid, 620, 326.9531, -1313.6875, 44.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 669, 323.8359, -1298.0703, 51.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 1691, 340.1875, -1305.7422, 53.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 342.9766, -1301.6328, 54.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 346.1250, -1285.8984, 49.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 351.0469, -1296.2266, 45.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 706, 230.7734, -1163.8828, 73.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 3734, 244.7734, -1208.9375, 80.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 13862, 359.2500, -1125.8281, 80.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 13864, 273.2656, -1210.8516, 65.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 208.9922, -1194.2891, 78.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 251.1250, -1236.1328, 70.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 240.1406, -1237.7891, 73.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 245.8906, -1180.3047, 74.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 3605, 244.7734, -1208.9375, 80.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 268.5703, -1221.6953, 73.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 275.2891, -1216.2813, 73.8281, 0.25);
	PlayerInfo[playerid][pCash] = 0;
	ProductTime[playerid] = 0;
	vibormashina[playerid] = 0;
	PlayerInfo[playerid][pMaskON] = 0;
	SetPVarInt(playerid,"BrosilBBall", 0);
	GivePlayerPPCash(playerid,PlayerInfo[playerid][pCash]);
	PlayerEnteredPoint[playerid] = 0;
	PlayerAFKTime[playerid][0] = 0;
	PlayerAFKTime[playerid][1] = 0;
	Animited[playerid] = 0;
	PlayerClickMapingCyka[playerid] = 0;
    GetPlayerRentTaxi[playerid] = INVALID_VEHICLE_ID;
    PlayerRentTaxi[playerid] = false;
    PlayerCalledTaxi[playerid] = false;
    TaxiJobStarted[playerid] = false;
    SetPlayerHealthAC(playerid, 100);
    PlayerTaxiStarted[playerid] = false;
    PlayerService[playerid] = INVALID_PLAYER_ID;
	dostup[playerid] = 0;
	mRank[playerid] = 0;
	PlayerInfo[playerid][punWarns] = 0;
	PlayerInfo[playerid][punWarnstime] = 0;
	PreloadAnimLib(playerid,"BASEBALL");
	PreloadAnimLib(playerid,"BEACH");
	PreloadAnimLib(playerid,"benchpress");
	PreloadAnimLib(playerid,"BD_FIRE");
	PreloadAnimLib(playerid,"BOMBER");
	PreloadAnimLib(playerid,"CAMERA");
	PreloadAnimLib(playerid,"CAR_CHAT");
	PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"CASINO");
	PreloadAnimLib(playerid,"COP_AMBIENT");
	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"DAM_JUMP");
	PreloadAnimLib(playerid,"DEALER");
	PreloadAnimLib(playerid,"DODGE");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"GANGS");
	PreloadAnimLib(playerid,"GRAVEYARD");
	PreloadAnimLib(playerid,"HEIST9");
	PreloadAnimLib(playerid,"INT_HOUSE");
	PreloadAnimLib(playerid,"INT_OFFICE");
	PreloadAnimLib(playerid,"KISSING");
	PreloadAnimLib(playerid,"LOWRIDER");
	PreloadAnimLib(playerid,"MD_CHASE");
	PreloadAnimLib(playerid,"ON_LOOKERS");
	PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"PAULNMAC");
	PreloadAnimLib(playerid,"PED");
	PreloadAnimLib(playerid,"RYDER");
	PreloadAnimLib(playerid,"RAPPING");
	PreloadAnimLib(playerid,"RIOT");
	PreloadAnimLib(playerid,"SHOP");
	PreloadAnimLib(playerid,"SMOKING");
	PreloadAnimLib(playerid,"SNM");
	PreloadAnimLib(playerid,"STRIP");
	PreloadAnimLib(playerid,"SUNBATHE");
	PreloadAnimLib(playerid,"SWAT");
	PreloadAnimLib(playerid,"SWEET");
	PreloadAnimLib(playerid,"OTB");
	PreloadAnimLib(playerid,"ROB_BANK");
	AvtoSalonChange[playerid] = 0;
	AvtoSalonOn[playerid] = 0;
	caridhouse[playerid] = -1;
	Trenag[playerid] = 0;
	PlayerInfo[playerid][pLocked] = 0;
	PlayerInfo[playerid][pBanTime] = 0;
	PlayerInfo[playerid][pBanData] = 0;
	times[playerid] = true;
	duty[playerid] = 0;
	fightSID[playerid] = INVALID_PLAYER_ID;
	fightID[playerid] = INVALID_PLAYER_ID;
	ZoneOffer[playerid] = MAX_SLOTS;
	ZonePrice[playerid] = 0;
	Armour[playerid] = 0;
	robh[playerid] = false;
	play[playerid] = 0;
	HotdogOffer[playerid] = MAX_SLOTS;
	HotdogPrice[playerid] = MAX_SLOTS;
	DrugOffer[playerid] = MAX_SLOTS;
	DrugPrice[playerid]= MAX_SLOTS;
	DrugGram[playerid]= MAX_SLOTS;
	ZoneOffer[playerid]= MAX_SLOTS;
	ZonePrice[playerid]= MAX_SLOTS;
	FreeOffer[playerid]= MAX_SLOTS;
	TicketOffer[playerid] = MAX_SLOTS;
	TicketMoney[playerid] = 0;
	ProposeOffer[playerid] = MAX_SLOTS;
	PlayerInfo[playerid][pReg] = 0;
	PlayerInfo[playerid][pInFrac] = 0;
	MarryWitness[playerid] = MAX_SLOTS;
	MarryWitnessOffer[playerid] = MAX_SLOTS;
	InviteOffer[playerid] = MAX_SLOTS;
	Pizdorvanka[playerid] = 0;
	FreezePlayer[playerid] = 0;
	MarriageCeremoney[playerid] = 0;
	InTuning[playerid] = 0;
	ProposedTo[playerid] = MAX_SLOTS;
	GotProposedBy[playerid] = MAX_SLOTS;
	DivorceOffer[playerid] = MAX_SLOTS;
	MafiasOn[playerid] = 0;
	PlayerInfo[playerid][pChas] = 0;
	PlayerInfo[playerid][pMin] = 0;
	for(new i = 0; i < 133; i++) GangZoneShowForPlayer(playerid,GZInfo[i][gID],GetGangZoneColor(i));
	MatsArmyCar[playerid] = 0;
	JobCarTime[playerid] = 0;
	CharPrice[playerid] = 0;
	SelectCharID[playerid] = 0;
	chet[playerid] = 0;
	RaceCP[playerid] = 0;
	PicCP[playerid] = 0;
	SelectChar[playerid] = 0;
	PhoneOnline[playerid] = 0;
	TotalFight = 0;
	ChosenSkin[playerid] = 0;
	InviteSkin[playerid] = 0;
	PEfir[playerid] = 255;
	Pefir[playerid] = 0;
	MapIconsShown[playerid] = 0;
	JobAmmount[playerid] = 0;
	OldSkin[playerid] = 320;
	TakingLesson[playerid] = 0;
	JobOffer[playerid] = MAX_SLOTS;
	Employer[playerid] = MAX_SLOTS;
	ConsumingMoney[playerid] = 0;
	CallLawyer[playerid] = 0;
	KickPlayer[playerid] = 0;
	CurrentMoney[playerid] = 0;
	CP[playerid] = 0;
	RaceCP[playerid] = 0;
	TalkingLivels[playerid] = 255;
	LiveOfferls[playerid] = MAX_SLOTS;
	TranPlayer[playerid] = MAX_SLOTS;
	RepairOffer[playerid] = MAX_SLOTS;
	RepairPrice[playerid] = 0;
	HouseOffer[playerid] = MAX_SLOTS;
	HousePrice[playerid] = 0;
	CarOffer[playerid] = MAX_SLOTS;
	CarPrice[playerid] = 0;
	RepairCar[playerid] = 0;
	TieTime[playerid] = 0;
	RefillOffer[playerid] = MAX_SLOTS;
	RefillPrice[playerid] = 0;
	PlayerCuffed[playerid] = 0;
	PlayerCuffedTime[playerid] = 0;
	RegistrationStep[playerid] = 0;
	DrugGram[playerid] = 0;
	ConnectedToPC[playerid] = 0;
	WantedPoints[playerid] = 0;
	WantedLevel[playerid] = 0;
	PlayerTied[playerid] = 0;
	Mobile[playerid] = MAX_SLOTS;
	Tel[playerid] = 255;
	Unspec[playerid][sLocal] = 255;
	WantedTime[playerid] = 0;
	Rekl[playerid] = 1;
	gLastCar[playerid] = 0;
	FirstSpawn[playerid] = 0;
	Report[playerid] = 0;
	AdvertTime[playerid] = 0;
	gOoc[playerid] = 0;
	lNews[playerid] = 0;
	BigEar[playerid] = 0;
	gFam[playerid] = 0;
	PlayerInfo[playerid][pLogin] = 0;
	PlayerTazeTime[playerid] = 0;
	PlayerStoned[playerid] = 0;
	StartTime[playerid] = 0;
	MatsHolding[playerid] = 0;
	Locator[playerid] = 0;
	PlayerDrunk[playerid] = 0;
	WatchingTV[playerid] = 0;
	MarryWitness[playerid] = MAX_SLOTS;
	MarryWitnessOffer[playerid] = MAX_SLOTS;
	MarriageCeremoney[playerid] = 0;
	KrishaOffer[playerid] = MAX_SLOTS;
	PlayerInfo[playerid][pNarcoLomka] = 0;
	PlayerInfo[playerid][pAddiction] = 0;
	PlayerInfo[playerid][pLevel] = 1;
	SetPlayerColor(playerid, TEAM_HIT_COLOR);
	DollahScoreUpdate(playerid);
	PlayerInfo[playerid][pJob] = 0;
	PlayerInfo[playerid][pAdministration228] = 0;
	PlayerInfo[playerid][pSupport] = 0;
	PlayerInfo[playerid][pHousecash] = 0;
	PlayerInfo[playerid][pDirectory] = 0;
	PlayerInfo[playerid][pPhoneBook] = 0;
	PlayerInfo[playerid][pCarLic] = 0;
	PlayerInfo[playerid][pFlyLic] = 0;
	PlayerInfo[playerid][pBoatLic] = 0;
	PlayerInfo[playerid][pFishLic] = 0;
	PlayerInfo[playerid][pGunLic] = 0;
	PlayerInfo[playerid][pMats] = 0;
	PlayerInfo[playerid][pPhousekey] = 799;
	PlayerInfo[playerid][pPhousekey2] = 799;
	PlayerInfo[playerid][pKills] = 0;
	PlayerInfo[playerid][pDonateRank] = 0;
	PlayerInfo[playerid][pDonatemoney] = 0;
	PlayerInfo[playerid][pSex] = 0;
	PlayerInfo[playerid][pChar][0] = 66;
	OldSkin[playerid] = GetPlayerSkin(playerid);
	ChosenSkin[playerid] = OldSkin[playerid];
	InviteSkin[playerid] = OldSkin[playerid];
	PlayerInfo[playerid][pArrested] = 0;
	PlayerInfo[playerid][pExp] = 1;
	PlayerInfo[playerid][pDrugtime] = 0;
	PlayerInfo[playerid][pSlot][0] = 0;
	PlayerInfo[playerid][pSlot][1] = 0;
	PlayerInfo[playerid][pSlot][2] = 0;
	PlayerInfo[playerid][pSlot][3] = 0;
	PlayerInfo[playerid][pSlot][4] = 0;
	PlayerInfo[playerid][pSlot][5] = 0;
	PlayerInfo[playerid][pSlot][6] = 0;
	PlayerInfo[playerid][pSlot][7] = 0;
	PlayerInfo[playerid][pSlot][8] = 0;
	PlayerInfo[playerid][pSlot][9] = 0;
	PlayerInfo[playerid][pSlot][10] = 0;
	PlayerInfo[playerid][pSlotammo][0] = 0;
	PlayerInfo[playerid][pSlotammo][1] = 0;
	PlayerInfo[playerid][pSlotammo][2] = 0;
	PlayerInfo[playerid][pSlotammo][3] = 0;
	PlayerInfo[playerid][pSlotammo][4] = 0;
	PlayerInfo[playerid][pSlotammo][5] = 0;
	PlayerInfo[playerid][pSlotammo][6] = 0;
	PlayerInfo[playerid][pSlotammo][7] = 0;
	PlayerInfo[playerid][pSlotammo][8] = 0;
	PlayerInfo[playerid][pSlotammo][9] = 0;
	PlayerInfo[playerid][pSlotammo][10] = 0;
	PlayerInfo[playerid][pGunSkill][0] = 0;
	PlayerInfo[playerid][pGunSkill][1] = 0;
	PlayerInfo[playerid][pGunSkill][2] = 0;
	PlayerInfo[playerid][pGunSkill][3] = 0;
	PlayerInfo[playerid][pGunSkill][4] = 0;
	PlayerInfo[playerid][pGunSkill][5] = 0;
	PlayerInfo[playerid][pWantedDeaths] = 0;
	PlayerInfo[playerid][pPayCheck] = 0;
	PlayerInfo[playerid][pJailed] = 0;
	PlayerInfo[playerid][pJailTime] = 0;
	PlayerInfo[playerid][pDrugs] = 0;
	PlayerInfo[playerid][pLeader] = 0;
	PlayerInfo[playerid][pMember] = 0;
	PlayerInfo[playerid][pSHealth] = 100.0;
	PlayerInfo[playerid][pHealth] = 100.0;
	PlayerInfo[playerid][pInt] = 0;
	PlayerInfo[playerid][pLocal] = 255;
	PlayerInfo[playerid][pModel] = 255;
	PlayerInfo[playerid][pWarns] = 0;
	PlayerInfo[playerid][pBank] = 0;
	PlayerInfo[playerid][pDonatechet] = 0;
	PlayerInfo[playerid][pCar] = 0;
	PlayerInfo[playerid][pMuteTime] = 0;
	PlayerInfo[playerid][pMobile] = 0;
	PlayerInfo[playerid][pFuel] = 0;
	PlayerArmor[playerid] = 0;
	HelpMessage[0][playerid] = 0;
    HelpMessage[1][playerid] = 0;
    HelpMessage[2][playerid] = 0;
    HelpMessage[3][playerid] = 0;
    HelpMessage[4][playerid] = 0;
    HelpMessage[5][playerid] = 0;
    HelpMessage[6][playerid] = 0;
    HelpMessage[7][playerid] = 0;
    HelpMessage[8][playerid] = 0;
    HelpMessage[9][playerid] = 0;
    HelpMessage[10][playerid] = 0;
    Armour[playerid] = 0;
    fura[playerid] = 0;
    PlayURL[playerid] = 0;
    PlayURLON[playerid] = 0;
	Rudokop[playerid] = 0;
	RudnikAmount[playerid] = 0;
	Farm[playerid] = 0;
	SetPlayerArmourAC(playerid, 0);
	//=== Новый спавн
	RemoveBuildingForPlayer(playerid, 5033, 1745.2031, -1882.8516, 26.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 5055, 1745.2031, -1882.8516, 26.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1774.7578, -1931.3125, 16.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 5024, 1748.8438, -1883.0313, 14.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1774.7578, -1901.5391, 16.3750, 0.25);
    // Удаленные объекты у мэрий пальмы
    RemoveBuildingForPlayer(playerid, 713, 1407.1953, -1749.3125, 13.0938, 0.25);
    RemoveBuildingForPlayer(playerid, 713, 1457.9375, -1620.6953, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 4236, 1387.0313, -1715.0234, 30.4141, 0.25);
    RemoveBuildingForPlayer(playerid, 1261, 1413.6328, -1721.8203, 28.2813, 0.25);
    RemoveBuildingForPlayer(playerid, 713, 1496.8672, -1707.8203, 13.4063, 0.25);
    RemoveBuildingForPlayer(playerid, 4235, 1387.0313, -1715.0234, 30.4141, 0.25);
    RemoveBuildingForPlayer(playerid, 700, 1404.9141, -1765.2656, 12.9141, 0.25);
    RemoveBuildingForPlayer(playerid, 673, 1415.3125, -1748.5625, 12.3984, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1429.5313, -1748.4219, 12.9063, 0.25);
    RemoveBuildingForPlayer(playerid, 700, 1438.0313, -1747.9375, 13.4453, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1447.9063, -1748.2266, 12.9063, 0.25);
    RemoveBuildingForPlayer(playerid, 1267, 1413.6328, -1721.8203, 28.2813, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1516.0000, -1748.6016, 13.0078, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1419.3281, -1710.2344, 11.8359, 0.25);
    RemoveBuildingForPlayer(playerid, 712, 1445.8125, -1650.0234, 22.2578, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1461.6563, -1707.6875, 11.8359, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1461.1250, -1687.5625, 11.8359, 0.25);
    RemoveBuildingForPlayer(playerid, 641, 1458.6172, -1684.1328, 11.1016, 0.25);
    RemoveBuildingForPlayer(playerid, 712, 1471.4063, -1666.1797, 22.2578, 0.25);
    RemoveBuildingForPlayer(playerid, 712, 1449.8516, -1655.9375, 22.2578, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1496.9766, -1686.8516, 11.8359, 0.25);
    RemoveBuildingForPlayer(playerid, 641, 1494.1406, -1689.2344, 11.1016, 0.25);
    RemoveBuildingForPlayer(playerid, 712, 1480.6094, -1666.1797, 22.2578, 0.25);
    RemoveBuildingForPlayer(playerid, 712, 1488.2266, -1666.1797, 22.2578, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1503.1875, -1621.1250, 11.8359, 0.25);
    RemoveBuildingForPlayer(playerid, 712, 1508.4453, -1668.7422, 22.2578, 0.25);
    RemoveBuildingForPlayer(playerid, 673, 1553.2578, -1764.8125, 12.7969, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1533.2656, -1749.0234, 12.8047, 0.25);
    RemoveBuildingForPlayer(playerid, 673, 1522.1641, -1748.5703, 13.0234, 0.25);
    RemoveBuildingForPlayer(playerid, 700, 1553.7031, -1747.9375, 13.4063, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1541.4531, -1709.6406, 13.0469, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1547.5703, -1689.9844, 13.0469, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1547.5703, -1661.0313, 13.0469, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1541.4531, -1642.0313, 13.0469, 0.25);
	// удаленые объекты СВ Армии
	RemoveBuildingForPlayer(playerid, 1411, 347.1953, 1799.2656, 18.7578, 0.25);
    RemoveBuildingForPlayer(playerid, 1411, 342.9375, 1796.2891, 18.7578, 0.25);
    RemoveBuildingForPlayer(playerid, 16670, 330.7891, 1813.2188, 17.8281, 0.25);
    RemoveBuildingForPlayer(playerid, 16671, 193.9531, 2051.7969, 20.1797, 0.25);
    RemoveBuildingForPlayer(playerid, 16668, 357.9375, 2049.4219, 16.8438, 0.25);
    RemoveBuildingForPlayer(playerid, 16669, 380.2578, 1914.9609, 17.4297, 0.25);
	// NEW RESPAWN
	RemoveBuildingForPlayer(playerid, 1533, 1700.1328, -1666.4063, 19.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1537, 1700.1328, -1669.4219, 19.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1537, 1725.4297, -1637.4375, 19.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1533, 1728.4453, -1637.4375, 19.2109, 0.25);
	// Военкомат
	RemoveBuildingForPlayer(playerid, 1268, 218.2266, -1434.5625, 24.6406, 0.25);
    RemoveBuildingForPlayer(playerid, 6362, 201.4453, -1476.8516, 17.9609, 0.25);
    RemoveBuildingForPlayer(playerid, 6350, 247.3906, -1454.8281, 37.7344, 0.25);
    RemoveBuildingForPlayer(playerid, 1259, 218.2266, -1434.5625, 24.6406, 0.25);
    RemoveBuildingForPlayer(playerid, 1226, 203.1953, -1429.2031, 15.8125, 0.25);
	// Автошкола Мастерская
	RemoveBuildingForPlayer(playerid, 11164, -2061.5547, -16.2422, 40.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 11002, -2061.5547, -16.2422, 40.2813, 0.25);
	// Мастерская
	RemoveBuildingForPlayer(playerid, 1283, 1373.4609, -1872.2266, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 4901, 1391.5703, -1891.5859, 18.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 5058, 1457.5625, -1895.9297, 22.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 4880, 1391.5703, -1891.5859, 18.5234, 0.25);
	// Удалёные обьекты
	RemoveBuildingForPlayer(playerid, 1411, 347.1953, 1799.2656, 18.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 342.9375, 1796.2891, 18.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 950, -2021.5469, -118.9141, 1034.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2034.8047, -117.4531, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2028.1563, -117.6719, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2028.1563, -117.0391, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2028.1406, -116.4375, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2026.6094, -117.6719, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2025.1250, -117.6719, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2023.4766, -117.6719, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2026.5859, -117.0391, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2025.1250, -117.0391, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2023.4766, -117.0391, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2026.6094, -116.4375, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2025.1563, -116.4375, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2023.4766, -116.4375, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2033.0625, -114.3594, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2028.1563, -115.7813, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2026.6094, -115.7813, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2025.1250, -115.7813, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2023.4766, -115.7813, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 950, -2021.5469, -113.8125, 1034.7031, 0.25);
		// Пропуск
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1029.6641, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1029.6563, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.0234, 1014.2266, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1939.6953, 1014.2188, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.0234, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1939.6953, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.8438, 1029.1328, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1940.5547, 1029.4766, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1942.1250, 1006.5703, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1940.8828, 1006.1094, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 1938.0469, 986.6250, 992.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 1940.6875, 989.1719, 992.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1940.8828, 1006.1094, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1941.5234, 1006.3828, 993.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1942.1250, 1006.5703, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 1943.2188, 986.5234, 992.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1939.6953, 1014.2188, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1940.3906, 1014.2031, 993.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.0234, 1014.2266, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1939.6953, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1940.3906, 1021.4141, 993.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.0234, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 14568, 1953.6797, 994.2813, 992.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 14566, 1954.3984, 994.9922, 992.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 14567, 1955.1172, 995.7109, 992.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.4453, 987.6719, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.7188, 987.1953, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1959.3984, 1010.1172, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1960.3672, 1015.6641, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1960.3672, 1020.1719, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1961.9609, 992.2031, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1962.4063, 991.8750, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1962.3438, 1015.6641, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1962.3438, 1020.1797, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1964.5703, 998.4531, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1965.1016, 998.3047, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1963.7109, 1010.1172, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1940.5547, 1029.4766, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1941.2188, 1029.2969, 993.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.8438, 1029.1328, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1959.3984, 1025.6953, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1963.7109, 1025.6953, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1029.6563, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1029.6641, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1964.5469, 1037.2813, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1965.0938, 1037.3516, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1961.9219, 1043.3594, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1962.3984, 1043.6328, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.3203, 1047.9766, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.6563, 1048.4141, 992.9844, 0.25);
	//=== Пропуск
	RemoveBuildingForPlayer(playerid, 3672, 1889.6563, -2666.0078, 18.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3672, 1822.7344, -2666.0078, 18.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3672, 1682.7266, -2666.0078, 18.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3672, 1617.2813, -2666.0078, 18.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3672, 1754.1719, -2666.0078, 18.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3629, 1617.2813, -2666.0078, 18.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 1290, 1649.0625, -2641.4063, 18.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3629, 1682.7266, -2666.0078, 18.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3629, 1754.1719, -2666.0078, 18.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3629, 1822.7344, -2666.0078, 18.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 1290, 1855.7969, -2641.4063, 18.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3629, 1889.6563, -2666.0078, 18.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 1290, 1922.2031, -2641.4063, 18.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2273.4609, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2268.7188, 1596.4688, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2273.4609, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2268.7188, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2263.6563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2258.2578, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2253.2344, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2263.6563, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2258.2578, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2253.2344, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2254.1797, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2259.2188, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2264.6250, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2269.6719, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2274.4063, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2274.4063, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2269.6563, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2264.6094, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2259.1875, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2254.1563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1588.0938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1588.5703, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1592.3984, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1592.8750, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2217.0156, 1602.8125, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2217.5469, 1602.7969, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2217.0234, 1603.9297, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1835, 2217.0156, 1605.0469, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2217.0313, 1603.9219, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2217.5469, 1603.8984, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2217.5469, 1603.9141, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1834, 2217.5469, 1605.0391, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1614.2422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1614.7188, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1618.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1619.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1588.0938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1588.0781, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1588.6016, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1588.5703, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1588.3359, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1589.1875, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2242.3672, 1589.1875, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1592.3828, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1592.9063, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1592.6406, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1592.3984, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1592.8750, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1594.7578, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2242.3672, 1594.7578, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2220.6719, 1602.8125, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2221.2031, 1602.7969, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2230.3750, 1602.7500, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2241.3125, 1602.7500, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2220.6797, 1603.9297, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2221.2031, 1603.8984, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2220.6875, 1603.9219, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2221.2031, 1603.9141, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2243.1250, 1604.4375, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2232.1875, 1604.4375, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2239.4297, 1604.4531, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2228.4922, 1604.4531, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1834, 2221.2031, 1605.0391, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1835, 2220.6719, 1605.0469, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2241.3125, 1606.2734, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2230.3750, 1606.2734, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1614.2266, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1614.2422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1614.4844, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1614.7500, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1614.7188, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1614.5938, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2241.4453, 1614.5547, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1618.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1618.5625, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1619.0859, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1619.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1618.8203, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1619.6563, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2241.4453, 1619.6094, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 2252.0313, 1584.4219, 1007.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 2261.6328, 1584.4297, 1007.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2264.6094, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2263.6563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2258.2578, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2253.2344, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2259.1875, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2254.1563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2258.2578, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2263.6563, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2253.2344, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2254.1797, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2259.2188, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2264.6250, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1609.6406, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1609.6016, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1609.6406, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1609.8750, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1610.1172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1610.1172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1610.1250, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1614.1641, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1613.6875, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1613.6484, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1614.1641, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1613.6875, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1614.1719, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1613.9141, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1617.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1617.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1617.5469, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1617.8125, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1618.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1618.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1618.0703, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 2271.7266, 1584.4219, 1007.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2268.7188, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2269.6563, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2268.7188, 1596.4688, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2269.6719, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2269.2578, 1604.5938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2269.7344, 1604.6172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2269.7734, 1606.6484, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2269.2578, 1608.7422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2269.2500, 1606.6797, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2269.7344, 1608.7344, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2269.5078, 1606.7031, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2273.4609, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2274.4063, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2273.4609, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2274.4063, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2273.2969, 1606.6797, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2273.3047, 1604.5938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2273.3047, 1608.7422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2273.5469, 1606.7031, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2273.8203, 1606.6484, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2273.7813, 1604.6172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2273.7813, 1608.7344, 1006.0000, 0.25);
}

publics: OnPlayerConnect(playerid)
{
	Damage_Text_Draw[playerid][0] = CreatePlayerTextDraw(playerid,137.500000, 349.416625, "Nick - Weapon +Damage_Text_Draw");
    PlayerTextDrawLetterSize(playerid,Damage_Text_Draw[playerid][0], 0.226874, 0.859166);
    PlayerTextDrawAlignment(playerid,Damage_Text_Draw[playerid][0], 1);
    PlayerTextDrawColor(playerid,Damage_Text_Draw[playerid][0], 16711935);
    PlayerTextDrawSetShadow(playerid,Damage_Text_Draw[playerid][0], 0);
    PlayerTextDrawSetOutline(playerid,Damage_Text_Draw[playerid][0], 1);
    PlayerTextDrawBackgroundColor(playerid,Damage_Text_Draw[playerid][0], 51);
    PlayerTextDrawFont(playerid,Damage_Text_Draw[playerid][0], 1);
    PlayerTextDrawSetProportional(playerid,Damage_Text_Draw[playerid][0], 1);

    Damage_Text_Draw[playerid][1] = CreatePlayerTextDraw(playerid,448.500000, 346.333251, "Nick - Weapon -Damage_Text_Draw");
    PlayerTextDrawLetterSize(playerid,Damage_Text_Draw[playerid][1], 0.209374, 0.934999);
    PlayerTextDrawAlignment(playerid,Damage_Text_Draw[playerid][1], 1);
    PlayerTextDrawColor(playerid,Damage_Text_Draw[playerid][1], 16777215);
    PlayerTextDrawSetShadow(playerid,Damage_Text_Draw[playerid][1], 0);
    PlayerTextDrawSetOutline(playerid,Damage_Text_Draw[playerid][1], 1);
    PlayerTextDrawBackgroundColor(playerid,Damage_Text_Draw[playerid][1], 51);
    PlayerTextDrawFont(playerid,Damage_Text_Draw[playerid][1], 1);
    PlayerTextDrawSetProportional(playerid,Damage_Text_Draw[playerid][1], 1);
    Tazed[playerid] = 0;
	Tazer[playerid] = 0;
    ac_1{playerid} = false;
    SetPVarInt(playerid, "PlayerTimer", SetTimerEx("PlayerUpdate", 180000, true, "d", playerid));
    satiet[playerid] = CreatePlayerProgressBar(playerid, 548.705,30.333,57.411,3.499,462420735, 100.0);
    PlayerVehicleID[playerid] = INVALID_VEHICLE_ID;
	CountDamage[playerid] = 0;
 	healthy2[playerid] = 0;
    Armor2[playerid] = 0;
    Damage[playerid] = Create3DTextLabel(" ",COLOR_BLUE,0,0,0,20.0,GetPlayerVirtualWorld(playerid),true);
    Attach3DTextLabelToPlayer(Damage[playerid], playerid, 0.0, 0.0, 0.43);
    heal44[playerid] = TextDrawCreate(330.000000,400.0," ");
    TextDrawAlignment(heal44[playerid],2);
    TextDrawSetShadow(heal44[playerid],0);
    TextDrawFont(heal44[playerid],3);
    TextDrawLetterSize(heal44[playerid],0.279999,0.800000);
    TextDrawBoxColor(heal44[playerid], 0x33AAFFFF);
    TextDrawTextSize(heal44[playerid], 100, 80);
    TextDrawUseBox(heal44[playerid], 1);
    NeedDell[playerid] = false;
    SetPVarInt(playerid,"Crupe",0);
    SetPVarInt(playerid,"GameStol",-1);
	SetPVarInt(playerid,"Ochki",-1);
    NewTextDrawsLoad(playerid);
    GetBuritoID[playerid] = -1;
    Maxi[playerid] = false;
    jackcar[playerid] = 0;
    ResetCarInfo(playerid);
	if(VhodVozm > 0)
	{
		SCMF(playerid,COLOR_FSERVER,"― 加载MOD, 请等待 %i 秒",VhodVozm);
		GKick(playerid);
		return true;
	}
	if(PlayerLog == 1)
	{
	    if(IsPlayerConnected(playerid))
	    {
        	new pname[MAX_PLAYER_NAME];
        	GetPlayerName(playerid, pname, sizeof(pname));
        	format(YCMDstr,sizeof(YCMDstr),"{bbbbbb}― %s[%d] 登录到服务器",pname,playerid);
        	ABroadCast(-1,YCMDstr,1);
		}
    }
    for(new i = 0; i < 47; i++) Weapons[playerid][i] = 0;
	new PlName[MAX_PLAYER_NAME],count;
	GetPlayerName(playerid,PlName,sizeof(PlName));
	for (new i; i < strlen(PlName); i++)
	{
	    if (PlName[i] >= '0' && PlName[i] <= '9')
	    {
	        count++;
	        if(count == 4)
	        {
	            SendErrorMessage(playerid,"你的名称中超过3个数字,请换一个名称!");
	            GKick(playerid);
	            break;
	        }
	    }
	}
 	/*if(strfind(PlName,"_",true,1) == -1)
  	{
	   	SendErrorMessage(playerid,"游戏名称格式:FirstName_LastName!请更换.");
	   	GKick(playerid);
	   	return 1;
   	}*/
	ResetNew(playerid);
	CreateSpeedometr(playerid);
	return true;
}

stock acc_int_strcat(query[], len, name[], number)
{
	new string[100];
	format(string, sizeof(string), "`%s` = '%i',",name, number);
	strcat(query, string, len);
	return true;
}

stock acc_str_strcat(query[], len, name[], str[])
{
	new string[100];
	format(string, sizeof(string), "`%s` = '%s',",name, str);
	strcat(query, string, len);
	return true;
}

stock acc_float_strcat(query[], len, name[], Float:number)
{
	new string[100];
	format(string, sizeof(string), "`%s` = '%f',", name, number);
	strcat(query, string, len);
	return true;
}

stock SPD(playerid, dialogid, style, caption[], info[], button1[], button2[])
{
	ShowPlayerDialog(playerid, dialogid, style, caption, info, button1, button2);
	SetPVarInt(playerid, "USEDIALOGID", dialogid);
	PlayerInfo[playerid][pDialog] = true;
	return true;
}
#define ShowPlayerDialog SPD

stock ShowPlayerDialogEx(playerid,dialogid,style,caption[],info[],button1[],button2[])
{
	PlayerInfo[playerid][pDialog] = true;
	return ShowPlayerDialog(playerid,dialogid,style,caption,info,button1,button2);
}

publics: OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(GetPVarInt(playerid,"USEDIALOGID") != dialogid)
	{
		SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊工具 {FFFFFF}( Dialog Hider )");
		return true;
	}
	if(PlayerInfo[playerid][pDialog] != true)
	{
	    SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊工具 {FFFFFF}( Dialog Hider  #1 )");
	    return true;
	}
	else PlayerInfo[playerid][pDialog] = false;
	strreplace(inputtext, '%', '#');
	if(strlen(inputtext) && (strfind(inputtext,"`") != -1 || strfind(inputtext,"'") != -1 || strfind(inputtext,"=") != -1)) return SendErrorMessage(playerid,"你使用了禁用的字符.");
    ScanTextAntiBags(inputtext);
	if(GetPVarInt(playerid,"UN_HACK_DIALOG") > gettime()) return SendClientMessage(playerid,-1, "{F70000}反作弊: {ADAEAD}操作太快了!");
	SetPVarInt(playerid,"UN_HACK_DIALOG",gettime()+1);
	while(strfind(inputtext, "%s",true) !=-1)
	{
		strdel(inputtext,strfind(inputtext, "%s",true),strfind(inputtext, "%s",true)+2);
	}
	while(strfind(inputtext, "%",true) !=-1)
	{
		strdel(inputtext,strfind(inputtext, "%",true),strfind(inputtext, "%",true)+2);
	}
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 	if(dialogid == 14155)
    {
        if(response)
        {
                new plo = predlojitmp[playerid];
                new Float:plocx,Float:plocy,Float:plocz;
                GetPlayerPos(plo, plocx, plocy, plocz);
                Q_SetPlayerPos(playerid,plocx,plocy+2, plocz);
                SetPlayerInterior(playerid,GetPlayerInterior(plo));
                SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(plo));
                SendSyntaxMessage(playerid, "你被传送到国会议员的地点!");
                SendSyntaxMessage(playerid, "你的武器和护甲被重置了!");
                SetPlayerColor(playerid,0xE65131AA);
                SetPlayerArmourAC(playerid,0);
                ResetPlayerWeapons(playerid);

        }
        else
        {
            SendErrorMessage(playerid,"你拒绝参加");
        }
    }
	new gun,ammo,money;
	new string[512];
	new gunname[32];
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	if(dialogid == TAXI_DIALOG)
	{
		PlayerRentTaxi[playerid] = false;
	    if(response)
	    {
			if(PlayerInfo[playerid][pCash] < TAXI_PRICERENT)
			{
			    SCMF(playerid,COLOR_FSERVER,"― 你没有足够的现金租赁. 需要 %d$", TAXI_PRICERENT);
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			PlayerInfo[playerid][pCash] -= TAXI_PRICERENT;
  			for ( new i = 0;  i < 5; i++ ) TextDrawShowForPlayer(playerid, TDInfo[i]);
			SetTimerEx("InfoTime", 2000, false, "d", playerid);
  			GetPlayerRentTaxi[playerid] = GetPlayerVehicleID(playerid);
  			TaxiJobStarted[playerid] = true;
	    }
	    else
	    {
			RemovePlayerFromVehicle(playerid);
		}
		return 1;
	}
	if(dialogid == TAXI_DIALOG+1)
	{
	    if(response)
	    {
			new stringus[256];
	    	if(GetPlayerMoney(playerid) < GetPriceTaxi(playerid))
			{
				SendErrorMessage(playerid,"你没有足够的现金去旅行. {5BD93B}选择其他路线.");
			    format(stringus, sizeof(stringus), "{00FFFF}目的地:{FFFFFF} %s\n{00FFFF}票价:{FFFFFF} %d$\n{999999}要更改目的地\n点击按钮 '返回'", GetPlayerPoint(playerid), GetPriceTaxi(GetPlayerCarDriver(playerid)));
				ShowPlayerDialog(playerid, TAXI_DIALOG+1, DIALOG_STYLE_MSGBOX, "{1E90FF}信息", stringus, "确定", "返回");
				return 1;
			}
	    	format(stringus, sizeof(stringus), "{00FFFF}目的地:{FFFFFF} %s\n{00FFFF}票价:{FFFFFF} %d$\n{999999}取消订单\n点击按钮 '退出'", GetPlayerPoint(playerid), GetPriceTaxi(GetPlayerCarPass(playerid)));
			ShowPlayerDialog(GetPlayerCarDriver(playerid), TAXI_DIALOG+2, DIALOG_STYLE_MSGBOX, "{1E90FF}信息", stringus, "确定", "退出");
	        for ( new i = 0;  i < 5; i++ ) TextDrawShowForPlayer(playerid, TDInfo[i]);
			SetTimerEx("InfoTime", 2000, false, "d", playerid);
	        PlayerEnteredPoint[playerid] = 1;
	        PlayerClickMapingCyka[playerid] = 0;
	    }
	    else
	    {
			ShowPlayerDialog(playerid,D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}信息", "{00FFFF}\
			将地图上的标记设置为该位置,\n\
			你需要去哪里.", "关闭", "");
	    }
		return 1;
	}
	if(dialogid == TAXI_DIALOG+2)
	{
	    if(response)
	    {
	    	PlayerTaxiStarted[playerid] = true;
			SetPlayerCheckpoint(playerid, LASTPOS[playerid][0], LASTPOS[playerid][1], LASTPOS[playerid][2], 5.0);
	    	SetPlayerCheckpoint(GetPlayerCarPass(playerid), LASTPOS[playerid][0], LASTPOS[playerid][1], LASTPOS[playerid][2], 5.0);
	    	SendServerMessage(GetPlayerCarPass(playerid), "出租车司机同意带你到目的地.");
			SendServerMessage(playerid,"转到地图上的红色标记.");
			for(new i=0; i<MAX_TAXI; i++)
			{
			    if(TAXI_ID[i] == GetPlayerVehicleID(playerid))
			    {
		        	Update3DTextLabelText(TAXI_TEXT[i], COLOR_YELLOW, "{ff0000}出租车司机: 忙\n");
		            break;
		        }
			}
	    }
	    else
	    {
			SendServerMessage(GetPlayerCarPass(playerid),"出租车司机拒绝带你到目的地.");
			SendSyntaxMessage(playerid,"你拒绝接走乘客.");
			RemovePlayerFromVehicle(GetPlayerCarPass(playerid));
	    }
		return 1;
	}
	if(dialogid==663)
    {
        if(response)
        {
            SetPlayerPos(playerid, MpTp[playerid][0],MpTp[playerid][1],MpTp[playerid][2]);
            SendClientMessage(playerid,0xFF0000, "你参加了这个活动!");
        }
        else
        {
            SendClientMessage(playerid,0xAFAFAFAA, "你取消了这个活动!");
        }
    }
	if(dialogid == TAXI_DIALOG+3)
	{
	    if(!response) return 1;
		RemovePlayerFromVehicle(playerid);
		SendSyntaxMessage(playerid, "出租车租金已成功取消.");
		SetPVarInt(playerid, "OnPlayerExitCar", 0);
		TaxiJobStarted[playerid] = false;
		PlayerTaxiStarted[playerid] = false;
		SetVehicleToRespawn(GetPlayerRentTaxi[playerid]);
		GetPlayerRentTaxi[playerid] = INVALID_VEHICLE_ID;
		foreach(new d: Player)
		{
	    	if(IsPlayerConnected(d) && PlayerCalledTaxi[d]) RemovePlayerMapIcon(playerid, d);
		}
		return 1;
	}
	if(dialogid == TAXI_DIALOG+4)
	{
	    if(!response) return 1;
		switch(listitem)
		{
		    case 0: SendServerMessage(PlayerService[playerid],"你的客户给你的点评:超赞");
		    case 1: SendServerMessage(PlayerService[playerid],"你的客户给你的点评:很好");
		    case 2: SendServerMessage(PlayerService[playerid],"你的客户给你的点评:不怎么好");
  			case 3: SendServerMessage(PlayerService[playerid],"你的客户给你的点评:极差");
		}
		PlayerService[playerid] = INVALID_PLAYER_ID;
		return 1;
	}
 	if(dialogid == 22821)
	{
		if(response)
		{
			if(StoreInfo[11][gmLock] == 1)
            {
			    StoreInfo[11][gmLock] = 0;
			    PlayerPlaySound(playerid, 5201, 0.0, 0.0, 0.0);
			    SendSyntaxMessage(playerid, "AntiGM OFF.");
			}
	    }
	    else
		{
			if(StoreInfo[11][gmLock] == 0)
			{
			    StoreInfo[11][gmLock] = 1;
                PlayerPlaySound(playerid, 5201, 0.0, 0.0, 0.0);
                SendSyntaxMessage(playerid, "AntiGM ON.");
            }
		}
	}
    if(dialogid == 1406)
	{
		if(response)
		{
			if(StoreInfo[10][oFreazy] == 1)
            {
			    StoreInfo[10][oFreazy] = 0;
			    PlayerPlaySound(playerid, 5201, 0.0, 0.0, 0.0);
			    format(YCMDstr, sizeof(YCMDstr), "管理员 %s 解锁了贫民窟.", PlayerInfo[playerid][pName]);
                SendClientMessageToAll(0x00FF00AA,YCMDstr);
			}
	    }
	    else
		{
			if(StoreInfo[10][oFreazy] == 0)
			{
			    StoreInfo[10][oFreazy] = 1;
                PlayerPlaySound(playerid, 5201, 0.0, 0.0, 0.0);
                format(YCMDstr, sizeof(YCMDstr), "管理员 %s 锁住了贫民窟.", PlayerInfo[playerid][pName]);
                SendClientMessageToAll(0xFF6347AA,YCMDstr);
            }
		}
	}
    if(dialogid == 1401)
	{
		if(response)
		{
			if(StoreInfo[8][oLock] == 1)
            {
			    StoreInfo[8][oLock] = 0;
			    PlayerPlaySound(playerid, 36401, 0.0, 0.0, 0.0);
			    format(YCMDstr, sizeof(YCMDstr), "[警告] %s 开设了黑手党商店.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
			}
	    }
	    else
		{
			if(StoreInfo[8][oLock] == 0)
			{
			    StoreInfo[8][oLock] = 1;
                PlayerPlaySound(playerid, 36401, 0.0, 0.0, 0.0);
                format(YCMDstr, sizeof(YCMDstr), "[警告] %s 关闭了黑手党商店.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
            }
		}
	}
	if(dialogid == 1408)
	{
		if(response)
		{
			if(StoreInfo[7][oLock] == 1)
            {
			    StoreInfo[7][oLock] = 0;
			    PlayerPlaySound(playerid, 36401, 0.0, 0.0, 0.0);
			    format(YCMDstr, sizeof(YCMDstr), "[警告] %s 开设了黑手党商店.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
			}
	    }
	    else
		{
			if(StoreInfo[7][oLock] == 0)
			{
			    StoreInfo[7][oLock] = 1;
                PlayerPlaySound(playerid, 36401, 0.0, 0.0, 0.0);
                format(YCMDstr, sizeof(YCMDstr), "[警告] %s 关闭了黑手党商店.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
            }
		}
	}
	if(dialogid == 1407)
	{
		if(response)
		{
			if(StoreInfo[6][oLock] == 1)
            {
			    StoreInfo[6][oLock] = 0;
			    PlayerPlaySound(playerid, 36401, 0.0, 0.0, 0.0);
			    format(YCMDstr, sizeof(YCMDstr), "[警告] %s 开启了黑手党仓库.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
			}
	    }
	    else
		{
			if(StoreInfo[6][oLock] == 0)
			{
			    StoreInfo[6][oLock] = 1;
                PlayerPlaySound(playerid, 36401, 0.0, 0.0, 0.0);
                format(YCMDstr, sizeof(YCMDstr), "[警告] %s 关闭了黑手党仓库.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
            }
		}
	}
	if(dialogid == 1405)
	{
		if(response)
		{
			if(StoreInfo[5][oLock] == 1)
            {
			    StoreInfo[5][oLock] = 0;
			    PlayerPlaySound(playerid, 36401, 0.0, 0.0, 0.0);
			    format(YCMDstr, sizeof(YCMDstr), "[警告] %s 开启了帮派仓库.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
			}
	    }
	    else
		{
			if(StoreInfo[5][oLock] == 0)
			{
			    StoreInfo[5][oLock] = 1;
                PlayerPlaySound(playerid, 36401, 0.0, 0.0, 0.0);
                format(YCMDstr, sizeof(YCMDstr), "[警告] %s 关闭了帮派仓库.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
            }
		}
	}
	if(dialogid == 1404)
	{
		if(response)
		{
			if(StoreInfo[4][oLock] == 1)
            {
			    StoreInfo[4][oLock] = 0;
			    PlayerPlaySound(playerid, 36401, 0.0, 0.0, 0.0);
			    format(YCMDstr, sizeof(YCMDstr), "[警告] %s 开启了帮派仓库.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
			}
	    }
	    else
		{
			if(StoreInfo[4][oLock] == 0)
			{
			    StoreInfo[4][oLock] = 1;
                PlayerPlaySound(playerid, 36401, 0.0, 0.0, 0.0);
                format(YCMDstr, sizeof(YCMDstr), "[警告] %s 关闭了帮派仓库.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
            }
		}
	}
	if(dialogid == 1403)
	{
		if(response)
		{
			if(StoreInfo[3][oLock] == 1)
            {
			    StoreInfo[3][oLock] = 0;
			    PlayerPlaySound(playerid, 36401, 0.0, 0.0, 0.0);
			    format(YCMDstr, sizeof(YCMDstr), "[警告] %s 开启了帮派仓库.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
			}
	    }
	    else
		{
			if(StoreInfo[3][oLock] == 0)
			{
			    StoreInfo[3][oLock] = 1;
                PlayerPlaySound(playerid, 36401, 0.0, 0.0, 0.0);
                format(YCMDstr, sizeof(YCMDstr), "[警告] %s 关闭了帮派仓库.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
            }
		}
	}
	if(dialogid == 1402)
	{
		if(response)
		{
			if(StoreInfo[2][oLock] == 1)
            {
			    StoreInfo[2][oLock] = 0;
			    PlayerPlaySound(playerid, 36401, 0.0, 0.0, 0.0);
			    format(YCMDstr, sizeof(YCMDstr), "[警告] %s 开启了帮派仓库.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
			}
	    }
	    else
		{
			if(StoreInfo[2][oLock] == 0)
			{
			    StoreInfo[2][oLock] = 1;
                PlayerPlaySound(playerid, 36401, 0.0, 0.0, 0.0);
                format(YCMDstr, sizeof(YCMDstr), "[警告] %s 关闭了帮派仓库.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
            }
		}
	}
	if(dialogid == 1401)
	{
		if(response)
		{
			if(StoreInfo[1][oLock] == 1) // groove
            {
			    StoreInfo[1][oLock] = 0;
			    PlayerPlaySound(playerid, 36401, 0.0, 0.0, 0.0);
			    format(YCMDstr, sizeof(YCMDstr), "[警告] %s 开启了帮派仓库.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
			}
	    }
	    else
		{
			if(StoreInfo[1][oLock] == 0)
			{
			    StoreInfo[1][oLock] = 1;
                PlayerPlaySound(playerid, 36401, 0.0, 0.0, 0.0);
                format(YCMDstr, sizeof(YCMDstr), "[警告] %s 关闭了帮派仓库.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
            }
		}
	}
	switch(dialogid)
    {
        case 29213:
        {
            if(!response)
            {
                callcmd::donate2(playerid,"");
                return 1;
			}
			else
			{
			    callcmd::donat(playerid);
			    return 1;
			}
		}
        case 26013:
        {
            if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					new stringerw[144];
				    if(PlayerInfo[playerid][pRub] < 50) return SendErrorMessage(playerid, "你没有足够的钱");
				    PlayerInfo[playerid][pAdministration228] = 1;
				    PlayerInfo[playerid][pRub] -=50;
				    strmid(PlayerInfo[playerid][pDostup], GeneratePassword(Random(10,15)), 0, 20, 20);
					format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pDostup = '%s' WHERE Name = '%s'",PlayerInfo[playerid][pDostup],Name(playerid));
        			format(stringerw,sizeof(stringerw),"感谢支持服务器!你的密码: %d", PlayerInfo[playerid][pDostup]);
				   	SendClientMessage(playerid, COLOR_WHITE,stringerw);
				}
				case 1:
				{
					new stringerw[144];
				    if(PlayerInfo[playerid][pRub] < 100) return SendErrorMessage(playerid, "你没有足够的钱");
				    PlayerInfo[playerid][pAdministration228] = 2;
				    PlayerInfo[playerid][pRub] -=100;
				    strmid(PlayerInfo[playerid][pDostup], GeneratePassword(Random(10,15)), 0, 20, 20);
					format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pDostup = '%s' WHERE Name = '%s'",PlayerInfo[playerid][pDostup],Name(playerid));
				    format(stringerw,sizeof(stringerw),"感谢支持服务器!你的密码: %s", PlayerInfo[playerid][pDostup]);
				    SendClientMessage(playerid, COLOR_WHITE,stringerw);
				}
				case 2:
				{
					new stringerqq[144];
				    if(PlayerInfo[playerid][pRub] < 150) return SendErrorMessage(playerid, "你没有足够的钱");
				    PlayerInfo[playerid][pAdministration228] = 3;
				    PlayerInfo[playerid][pRub] -=150;
				    strmid(PlayerInfo[playerid][pDostup], GeneratePassword(Random(10,15)), 0, 20, 20);
					format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pDostup = '%s' WHERE Name = '%s'",PlayerInfo[playerid][pDostup],Name(playerid));
				    format(stringerqq,sizeof(stringerqq),"感谢支持服务器!你的密码: %s", PlayerInfo[playerid][pDostup]);
				    SendClientMessage(playerid, COLOR_WHITE,stringerqq);
				}
				case 3:
				{
					new stringerqqq[144];
				    if(PlayerInfo[playerid][pRub] < 200) return SendErrorMessage(playerid, "你没有足够的钱");
				    PlayerInfo[playerid][pAdministration228] = 4;
				    PlayerInfo[playerid][pRub] -=200;
				    strmid(PlayerInfo[playerid][pDostup], GeneratePassword(Random(10,15)), 0, 20, 20);
					format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pDostup = '%s' WHERE Name = '%s'",PlayerInfo[playerid][pDostup],Name(playerid));
				    format(stringerqqq,sizeof(stringerqqq),"感谢支持服务器!你的密码: %s", PlayerInfo[playerid][pDostup]);
				    SendClientMessage(playerid, COLOR_WHITE,stringerqqq);
				}
				case 4:
				{
					new stringerq[144];
				    if(PlayerInfo[playerid][pRub] < 250) return SendErrorMessage(playerid, "你没有足够的钱");
				    PlayerInfo[playerid][pAdministration228] = 5;
				    PlayerInfo[playerid][pRub] -=250;
				    strmid(PlayerInfo[playerid][pDostup], GeneratePassword(Random(10,15)), 0, 20, 20);
					format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pDostup = '%s' WHERE Name = '%s'",PlayerInfo[playerid][pDostup],Name(playerid));
				    format(stringerq,sizeof(stringerq),"感谢支持服务器!你的密码: %s", PlayerInfo[playerid][pDostup]);
				    SendClientMessage(playerid, COLOR_WHITE,stringerq);
				}
				case 5:
				{
					new stringeraa[144];
				    if(PlayerInfo[playerid][pRub] < 300) return SendErrorMessage(playerid, "你没有足够的钱");
				    PlayerInfo[playerid][pAdministration228] = 6;
				    PlayerInfo[playerid][pRub] -=300;
				    strmid(PlayerInfo[playerid][pDostup], GeneratePassword(Random(10,15)), 0, 20, 20);
					format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pDostup = '%s' WHERE Name = '%s'",PlayerInfo[playerid][pDostup],Name(playerid));
				    format(stringeraa,sizeof(stringeraa),"感谢支持服务器!你的密码: %s", PlayerInfo[playerid][pDostup]);
				    SendClientMessage(playerid, COLOR_WHITE,stringeraa);
				}
				case 6:
				{
					new stringera[144];
				    if(PlayerInfo[playerid][pRub] < 350) return SendErrorMessage(playerid, "你没有足够的钱");
				    PlayerInfo[playerid][pAdministration228] = 7;
				    PlayerInfo[playerid][pRub] -=350;
				    strmid(PlayerInfo[playerid][pDostup], GeneratePassword(Random(10,15)), 0, 20, 20);
					format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pDostup = '%s' WHERE Name = '%s'",PlayerInfo[playerid][pDostup],Name(playerid));
				    format(stringera,sizeof(stringera),"感谢支持服务器!你的密码: %s", PlayerInfo[playerid][pDostup]);
				    SendClientMessage(playerid, COLOR_WHITE,stringera);
				}
				case 7:
				{
					new stringersss[144];
				    if(PlayerInfo[playerid][pRub] < 400) return SendErrorMessage(playerid, "你没有足够的钱");
				    PlayerInfo[playerid][pAdministration228] = 8;
				    PlayerInfo[playerid][pRub] -=400;
				    strmid(PlayerInfo[playerid][pDostup], GeneratePassword(Random(10,15)), 0, 20, 20);
					format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pDostup = '%s' WHERE Name = '%s'",PlayerInfo[playerid][pDostup],Name(playerid));
				    format(stringersss,sizeof(stringersss),"感谢支持服务器!你的密码: %s", PlayerInfo[playerid][pDostup]);
				    SendClientMessage(playerid, COLOR_WHITE,stringersss);
				}
				case 8:
				{
					new stringerss[144];
				    if(PlayerInfo[playerid][pRub] < 450) return SendErrorMessage(playerid, "你没有足够的钱");
				    PlayerInfo[playerid][pAdministration228] = 9;
				    PlayerInfo[playerid][pRub] -=450;
				    strmid(PlayerInfo[playerid][pDostup], GeneratePassword(Random(10,15)), 0, 20, 20);
					format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pDostup = '%s' WHERE Name = '%s'",PlayerInfo[playerid][pDostup],Name(playerid));
				    format(stringerss,sizeof(stringerss),"感谢支持服务器!你的密码: %s", PlayerInfo[playerid][pDostup]);
				    SendClientMessage(playerid, COLOR_WHITE,stringerss);
				}
				case 9:
				{
					new stringers[144];
				    if(PlayerInfo[playerid][pRub] < 500) return SendErrorMessage(playerid, "你没有足够的钱");
				    PlayerInfo[playerid][pAdministration228] = 10;
				    PlayerInfo[playerid][pRub] -=500;
				    strmid(PlayerInfo[playerid][pDostup], GeneratePassword(Random(10,15)), 0, 20, 20);
					format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pDostup = '%s' WHERE Name = '%s'",PlayerInfo[playerid][pDostup],Name(playerid));
				    format(stringers,sizeof(stringers),"感谢支持服务器!你的密码: %s", PlayerInfo[playerid][pDostup]);
				    SendClientMessage(playerid, COLOR_WHITE,stringers);
				}
			}
		}
		case 26014:
		{
			if(PlayerInfo[playerid][pRub] < 25) return SendErrorMessage(playerid,"你没有足够的钱");
			PlayerInfo[playerid][pSupport] = 1;
			SendClientMessage(playerid,COLOR_WHITE,"感谢支持服务器!你购买了25人民币的辅导员");
			SendClientMessage(playerid,COLOR_WHITE,"查看指令请输入 /hhelp");
		}
        case 26012:
		{
		    if(!response) return true;
		    switch(listitem)
		    {
		        case 0:
		        {
		            /*new stringer[500],stringers[500];
		            format(stringers,sizeof(stringers), "1. 1-级\t{FF8040}50 人民币\n2. 2-级\t{FF8040}100 人民币\n3. 3-级\t{FF8040}150 人民币\n");
					strcat(stringer,stringers);
					format(stringers, sizeof(stringers), "4. 4-级\t{FF8040}200 人民币\n5. 5-级\t{FF8040}250 人民币\n6. 6-级\t{FF8040}300 人民币\n7. 7-级\t{FF8040}350 人民币\n");
					strcat(stringer,stringers);
					format(stringers,sizeof(stringers),"8. 8-级\t{FF8040}400 人民币\n9. 9-级\t{FF8040}450 人民币\n10. 10-级\t{FF8040}500 人民币");
					strcat(stringer,stringers);
		            ShowPlayerDialog(playerid, 26013,DIALOG_STYLE_TABLIST,"购买管理员",stringer, "选择","退出");*/
		            SendErrorMessage(playerid,"暂未开放!!!");
				}
				case 1:
				{
				    //ShowPlayerDialog(playerid, 26014, DIALOG_STYLE_MSGBOX,"购买辅导员","辅导员是25人民币.\n你确定购买吗?","确定","返回");
				    SendErrorMessage(playerid,"暂未开放!!!");
				}
				case 2:
				{
				    ShowPlayerDialog(playerid, 26015, DIALOG_STYLE_INPUT,"购买捐赠点","1 人民币 = 10 捐赠点\n请输入你要购买的数量","确定","退出");
				}
				case 3:
				{
                	ShowPlayerDialog(playerid,7997,DIALOG_STYLE_INPUT,"{1E90FF}购买车辆","{ffffff}输入你想购买的车辆ID,然后点击 {00FF00}'下一步'\n","下一步","退出");
				}
				case 4:
				{
					//NewSPD(playerid,22819,DIALOG_STYLE_LIST,"{1E90FF}宝箱购买","{FFFFFF}1 - 白银 {5F9EA0}[%d 人民币]\n{FFFFFF}2 - 黄金 {5F9EA0}[%d 人民币]\n{FFFFFF}3 - 铂金 {5F9EA0}[%d 人民币]\n{FFFFFF}4 - 钻石 {5F9EA0}[%d 人民币]","选择","返回",SILVER_CASE_PRICE,GOLD_CASE_PRICE,EXO_CASE_PRICE,DELTA_CASE_PRICE);
					SendErrorMessage(playerid,"暂未开放!!!");
				}
				case 5:
				{
					ShowPlayerDialog(playerid,9943,DIALOG_STYLE_INPUT,"{1E90FF}更改名称","\n{FFFFFF}输入你想更改的名称,然后点击.{00FF00}'下一步'","下一步","退出");
				}
				case 6:
				{
					new stringer[144];
				    format(stringer,sizeof(stringer), "\t账户余额 %d 人民币.\n\t 享受游戏吧!",PlayerInfo[playerid][pRub]);
					ShowPlayerDialog(playerid,21001,DIALOG_STYLE_MSGBOX,"人民币账户",stringer,"关闭","");
				}
				case 7:
				{
				    callcmd::donate1(playerid,"");
				    return 1;
				}
			}
		}
		case 26015:
		{
			if(response)
			{
				new amount = strval(inputtext);
				if(amount < 1 || amount > 50000)
				{
                    format(string,sizeof(string),"比例: 1 人民币 / 10捐赠点\n你的帐户: %d 人民币\n{8B658B}输入你要兑换的数量\n{FF0000}你输入了无效数量!\n",PlayerInfo[playerid][pRub]);
					ShowPlayerDialog(playerid, 22810, DIALOG_STYLE_INPUT, "{1E90FF}对话捐赠点", string, "确定.", "返回");
					return 0;
				}
				new price = amount*10;
				if(PlayerInfo[playerid][pRub] < amount)
				{
                    format(string,sizeof(string),"比例:  1 人民币 / 10捐赠点\n你的帐户: %d 人民币\n{8B658B}输入你要兑换的数量\n{FF0000}没有足够的人民币!\n",PlayerInfo[playerid][pRub]);
					ShowPlayerDialog(playerid, 22810, DIALOG_STYLE_INPUT, "{1E90FF}对话捐赠点", string, "确定.", "返回");
					return 0;
				}
				PlayerInfo[playerid][pDonatemoney] += price;
				PlayerInfo[playerid][pRub] -= amount;
				OnPlayerUpdateAc(playerid);
				format(string, sizeof(string), "― 你成功用 {ccff00}%d 人民币兑换了 {ccff00}%d 捐赠点",amount, price);
				SendClientMessage(playerid, COLOR_TEAL, string);
			}
			return 1;
		}
		case 1000:
        {
            if(!response) return true;
           	{
  				new idd = strval(inputtext);
				if(!ProxDetectorS(8.0, playerid, idd)) return SendErrorMessage(playerid,"该玩家不再你旁边!");
            	if(!strlen(inputtext))
             	{
              		SendErrorMessage(playerid,"您输入了一个不存在的玩家ID.");
                	ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_INPUT, "{1E90FF}决斗","输入您要邀请参加决斗的玩家的ID","下一步","退出");
                }
                else
                {
                	getplayerid = strval(inputtext);
                 	setplayerid = playerid;
                  	if(!IsPlayerConnected(getplayerid))
                   	{
                     	SendErrorMessage(playerid,"您输入了一个不存在的玩家ID.");
                      	ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_INPUT, "{1E90FF}决斗","输入您要邀请参加决斗的玩家的ID","下一步","退出");
                   	}
                	ShowPlayerDialog(setplayerid, 1001, DIALOG_STYLE_INPUT, "{1E90FF}决斗","输入赌注金额","下一步","退出");
                }
            }
        }
        case 1001:
        {
            if(!response) return ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_INPUT, "{1E90FF}决斗","输入您要邀请参加决斗的玩家的ID","下一步","退出");
           	{
            	if(!strlen(inputtext) || strval(inputtext) < 1000 || strval(inputtext) > 100000)
             	{
              		ShowPlayerDialog(setplayerid, 1001, DIALOG_STYLE_INPUT, "{1E90FF}决斗","无效赌注","下一步","退出");
                }
                else
                {
               		duel_sum = strval(inputtext);
           			if(PlayerInfo[getplayerid][pCash] < duel_sum)
             		{
             			SendErrorMessage(setplayerid, "玩家没有那么多钱.");
               			return true;
                   	}
                   	if(PlayerInfo[playerid][pCash] < duel_sum)
                    {
                    	SendErrorMessage(playerid, "玩家没有那么多钱.");
                     	return true;
                   	}
                    ShowPlayerDialog(setplayerid, 1002, DIALOG_STYLE_LIST,"{1E90FF}选择一张地图","建筑物","选择","退出");
                }
            }
        }
        case 1002:
        {
            if(!response) return ShowPlayerDialog(setplayerid, 2, DIALOG_STYLE_INPUT, "{1E90FF}决斗","输入赌注金额","下一步","退出");
           	{
            	switch(listitem)
                {
                	case 0:
                    {
                        duel_map = "建筑物";
                        duel_map_num = 1;
                        ShowPlayerDialog(setplayerid, 1004, DIALOG_STYLE_LIST,"{1E90FF}选择一张地图","Deagle\nM4A1","选择","退出");
                    }
                }
            }
        }
        case 1004:
        {
            if(!response) return ShowPlayerDialog(setplayerid, 3, DIALOG_STYLE_LIST,"{1E90FF}选择一张地图","建筑物","选择","退出");
            {
            	switch(listitem)
                {
                	case 0:
                    {
                        duel_weapon = "Deagle";
                        duel_weapon_num = 1;
                        new stringR[900], names[MAX_PLAYER_NAME];
                        GetPlayerName(setplayerid, names, sizeof(names));
                        format(stringR, sizeof(stringR), "{FFFFFF}你被邀请参加决斗: {0C72E0}%s \n{FFFFFF}赌注: {0C72E0}%d $\n{FFFFFF}地图: {0C72E0}%s\n{FFFFFF}武器: {0C72E0}%s",names, duel_sum, duel_map, duel_weapon);
                        ShowPlayerDialog(getplayerid,1005,DIALOG_STYLE_MSGBOX,"{1E90FF}决斗{FFFFFF}",stringR,"接受","拒绝");
                    }
                    case 1:
                    {
                    	duel_weapon = "M4A1";
                        duel_weapon_num = 2;
                        new stringR[900], names[MAX_PLAYER_NAME];
                        GetPlayerName(setplayerid, names, sizeof(names));
                        format(stringR, sizeof(stringR), "{FFFFFF}你被邀请参加决斗: {0C72E0}%s \n{FFFFFF}赌注: {0C72E0}%d $\n{FFFFFF}地图: {0C72E0}%s\n{FFFFFF}武器: {0C72E0}%s",names, duel_sum, duel_map, duel_weapon);
                        ShowPlayerDialog(getplayerid,1005,DIALOG_STYLE_MSGBOX,"{1E90FF}决斗{FFFFFF}",stringR,"接受","拒绝");
			 		}
                }
            }
        }
        case 1005:
        {
            if(response)
            {
            	new name[MAX_PLAYER_NAME],names[MAX_PLAYER_NAME];
           	    GetPlayerName(setplayerid, name, sizeof(name));
                GetPlayerName(getplayerid, names, sizeof(names));
                SCMF(setplayerid,COLOR_FSERVER,"― 玩家 %s 同意参加决斗",name);
                SCMF(getplayerid,COLOR_FSERVER,"― 你同意与 %s 参加决斗",name);
                PlayerInfo[setplayerid][pCash] -= duel_sum;
                PlayerInfo[getplayerid][pCash] -= duel_sum;
                SendSyntaxMessage(setplayerid, "收取决斗赌注");
                SendSyntaxMessage(getplayerid, "收取决斗赌注");
                duel_system = 1;
                TextDrawShowForPlayer(setplayerid, Box_1);
                TextDrawShowForPlayer(getplayerid, Box_1);
                TextDrawShowForPlayer(setplayerid, Box_2);
                TextDrawShowForPlayer(getplayerid, Box_2);
                TextDrawShowForPlayer(setplayerid, System);
                TextDrawShowForPlayer(getplayerid, System);
                TextDrawShowForPlayer(setplayerid, Aga);
                TextDrawShowForPlayer(getplayerid, Aga);
                TextDrawShowForPlayer(setplayerid, Aga2);
                TextDrawShowForPlayer(getplayerid, Aga2);
                TextDrawShowForPlayer(setplayerid, Time);
                TextDrawShowForPlayer(getplayerid, Time);
                duelzanyat = 1;
                GameTextForPlayer(setplayerid, "~r~GO GO GO!", 3000, 4);
                GameTextForPlayer(getplayerid, "~r~GO GO GO!", 3000, 4);
                SetPlayerHealthAC(setplayerid, 100.0);
                SetPlayerHealthAC(getplayerid, 100.0);
				format(YCMDstr, sizeof(YCMDstr), "ID: %d", getplayerid);
                TextDrawSetString(Aga, YCMDstr);
                format(YCMDstr, sizeof(YCMDstr), "ID: %d", setplayerid);
                TextDrawSetString(Aga2, YCMDstr);
                switch(duel_map_num)
                {
                    case 1:
                    {
						SetPlayerVirtualWorld(setplayerid, 0);
						Q_SetPlayerPos(setplayerid, 24.3091,-313.0515,2.3913);
						SetPlayerFacingAngle(setplayerid, 180.90);
						SetPlayerVirtualWorld(getplayerid, 0);
						Q_SetPlayerPos(getplayerid, 75.7970,-312.1203,1.5781);
						SetPlayerFacingAngle(getplayerid, 180.90);
                        SetTimerEx("UnFreezePlayer", 3500, false, "i", setplayerid);
                		TogglePlayerControllable(setplayerid, 0);
                		SetTimerEx("UnFreezePlayer", 3500, false, "i", getplayerid);
                		TogglePlayerControllable(getplayerid, 0);
                    }
                }
                switch(duel_weapon_num)
                {
                    case 1:
                    {
                        GiveWeapon(setplayerid, 24,99);
                        GiveWeapon(getplayerid, 24,99);
                    }
                    case 2:
                    {
                        GiveWeapon(setplayerid,31,999);
                        GiveWeapon(setplayerid,31,999);
                    }
             	}
             }
             else
           	 {
   	         	new name[MAX_PLAYER_NAME];
           	 	GetPlayerName(getplayerid, name, sizeof(name));
           	 	SCMF(setplayerid,COLOR_FSERVER,"― 玩家 %s 拒绝了",name);
                SendSyntaxMessage(getplayerid, "你拒绝了");
			}
 		}
	case 22831:
		{
		    if(response)
		    {
                if(PlayerInfo[playerid][pSex] == 1)
				{
                	SetPlayerSkin(playerid,158);
            	}
            	if(PlayerInfo[playerid][pSex] == 2)
            	{
                	SetPlayerSkin(playerid,157);
            	}
            	switch(random(4))
         	    {
                    case 0: SetPlayerCheckpoint(playerid,-318.1014,-1378.0062,10.9144,1.0);
	            	case 1: SetPlayerCheckpoint(playerid,-319.2519,-1401.7625,13.5333,1.0);
	            	case 2: SetPlayerCheckpoint(playerid,-301.7332,-1424.6324,14.2088,1.0);
	            	case 3: SetPlayerCheckpoint(playerid,-270.9319,-1401.2894,11.3363,1.0);
                }
                Farm[playerid] = 0;
				JobFarm[playerid] = true;
				TextDrawFarm[playerid] = 0;
				SendServerMessage(playerid,"你开始了工作!");
				ClearAnimations(playerid);
		    }
		    else return 1;
		}
	case 22832:
		{
		    if(response)
		    {
				new skin = PlayerInfo[playerid][pChar];
				SetPlayerSkin(playerid,skin);
				DisablePlayerCheckpoint(playerid);
                JobFarm[playerid] = false;
                TextDrawFarm[playerid] = 0;
                if(IsPlayerAttachedObjectSlotUsed(playerid,4)) RemovePlayerAttachedObject(playerid,4);
		    	format(YCMDstr,sizeof(YCMDstr),"―你完成了工作. 获得 %d $.",Farm[playerid]*115);
 				SendClientMessage(playerid,-1, YCMDstr);
 				PlayerInfo[playerid][pCash] += Farm[playerid]*115;
 				FracBank[9] += Farm[playerid]*115; SetOtherInt("FracBank[9]", FracBank[9]);
 				Farm[playerid] = 0;
				/*if(GetPVarInt(playerid,"quest_rab"))
				{
					PlayerInfo[playerid][pQuest_1] = 1;
					PlayerInfo[playerid][pDonatemoney] += 1;
					SendServerMessage(playerid, "Вы прошли первый этап квеста и получили 1 донат рублей ( /quest )");
					DeletePVar(playerid,"quest_rab");
				}*/
				if(PlayerInfo[playerid][pQuest_1] == 0)
				{
				    PlayerInfo[playerid][pQuest_1] = 1;
                    PlayerInfo[playerid][pDonatemoney] += 1;
					SendServerMessage(playerid, "你通过了任务的第一阶段并收到了 1 捐赠点 ( /quest )");
				}
		    }
		    else return 1;
		}
	case 3010:
		{
            if(response)
            {
                switch(listitem)
                {
        	    	case 0:
					{
						format(YCMDstr, sizeof(YCMDstr),"1. {FFFFFF}----------\n2. {FF0000}----------\n3. {0080FF}----------\n4. {00FF00}----------\n5. {000000}----------\n6. {FFFF00}----------\n7. {FF6EB4}----------\n8. {CD00CD}----------\n9. {8B4513}----------\n10. {FF4500}----------");
						ShowPlayerDialog(playerid,3011,DIALOG_STYLE_LIST,"{1E90FF}选择颜色",YCMDstr,"选择","返回");
					}
					case 1:
					{
						format(YCMDstr,sizeof(YCMDstr),"{FFFFFF}更换你的发动机需要: 100.000$\n你确定你想要更换你汽车的发动机吗?");
					    ShowPlayerDialog(playerid,22818,DIALOG_STYLE_MSGBOX,"{1E90FF}引擎",YCMDstr,"同意","关闭");
					}
				}
 			}
		}
	case 4545:
		{
			if(response)
	    	{
	    		if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 4545, DIALOG_STYLE_INPUT, "{1E90FF}制作武器", "{ffffff}输入子弹数量 {1E90FF}Silenced 9mm", "制作", "退出");
	    		new patr = strval(inputtext);
	    		if(patr < 1 || patr > 200) return SendServerMessage(playerid, "你不能低于 1 或者大于 200");
	    		if(patr*3 > PlayerInfo[playerid][pMats]) return SendErrorMessage(playerid, "你没有足够的材料");
    			PlayerInfo[playerid][pMats] -= patr*3;
	    		GiveWeapon(playerid,23,patr);
	    		format(YCMDstr, sizeof(YCMDstr), "%s 制作了一把 Silenced 9mm 以及 %d 发子弹.",PlayerInfo[playerid][pName], patr);
				ProxDetector(20.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SendSyntaxMessage(playerid, "你制作了 {1E90FF} Silenced 9mm");
	    	}
		}
	case 4546:
		{
			if(response)
	    	{
	    		if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 4546, DIALOG_STYLE_INPUT, "{1E90FF}制作武器", "{ffffff}输入子弹数量 {1E90FF}Desert Eagle", "制作", "退出");
	    		new patr = strval(inputtext);
	    		if(patr < 1 || patr > 200) return SendServerMessage(playerid, "你不能低于 1 或者大于 200");
	    		if(patr*6 > PlayerInfo[playerid][pMats]) return SendErrorMessage(playerid, "你没有足够的材料");
	    		PlayerInfo[playerid][pMats] -= patr*6;
	    		GiveWeapon(playerid,24,patr);
	    		format(YCMDstr, sizeof(YCMDstr), "%s 制作了一把 Desert Eagle 以及 %d 发子弹.",PlayerInfo[playerid][pName], patr);
				ProxDetector(20.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SendSyntaxMessage(playerid, "你制作了 {1E90FF} Desert Eagle");
	    	}
		}
	case 4547:
		{
			if(response)
	    	{
	    		if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 4547, DIALOG_STYLE_INPUT, "{1E90FF}制作武器", "{ffffff}输入子弹数量 {1E90FF}Schotgun", "制作", "退出");
	    		new patr = strval(inputtext);
	    		if(patr < 1 || patr > 200) return SendServerMessage(playerid, "你不能低于 1 或者大于 200");
	    		if(patr*6 > PlayerInfo[playerid][pMats]) return SendErrorMessage(playerid, "你没有足够的材料");
	    		PlayerInfo[playerid][pMats] -= patr*6;
	    		GiveWeapon(playerid,25,patr);
	    		format(YCMDstr, sizeof(YCMDstr), "%s 制作了一把 Shotgun 以及 %d 发子弹.",PlayerInfo[playerid][pName], patr);
				ProxDetector(20.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SendSyntaxMessage(playerid, "你制作了 {1E90FF} Shotgun");
	    	}
		}
	case 4548:
		{
			if(response)
	    	{
	    		if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 4548, DIALOG_STYLE_INPUT, "{1E90FF}制作武器", "{ffffff}输入子弹数量 {1E90FF}MP5", "制作", "退出");
	    		new patr = strval(inputtext);
	    		if(patr < 1 || patr > 200) return SendServerMessage(playerid, "你不能低于 1 或者大于 200");
	    		if(patr*3 > PlayerInfo[playerid][pMats]) return SendErrorMessage(playerid, "你没有足够的材料");
	    		PlayerInfo[playerid][pMats] -= patr*3;
	    		GiveWeapon(playerid,29,patr);
	    		format(YCMDstr, sizeof(YCMDstr), "%s 制作了一把 MP5 以及 %d 发子弹.",PlayerInfo[playerid][pName], patr);
				ProxDetector(20.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SendSyntaxMessage(playerid, "你制作了 {1E90FF} MP5");
	    	}
		}
	case 4549:
		{
			if(response)
	    	{
	    		if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 4549, DIALOG_STYLE_INPUT, "{1E90FF}制作武器", "{ffffff}输入子弹数量 {1E90FF}AK-47", "制作", "退出");
	    		new patr = strval(inputtext);
	    		if(patr < 1 || patr > 200) return SendServerMessage(playerid, "你不能低于 1 或者大于 200");
	    		if(patr*6 > PlayerInfo[playerid][pMats]) return SendErrorMessage(playerid, "你没有足够的材料");
	    		PlayerInfo[playerid][pMats] -= patr*6;
	    		GiveWeapon(playerid,30,patr);
	    		format(YCMDstr, sizeof(YCMDstr), "%s 你制作了一把 AK-47 以及 %d 发子弹.",PlayerInfo[playerid][pName], patr);
				ProxDetector(20.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SendSyntaxMessage(playerid, "你制作了 {1E90FF} AK-47");
	    	}
		}
	case 4550:
		{
			if(response)
	    	{
	    		if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 4550, DIALOG_STYLE_INPUT, "{1E90FF}制作武器", "{ffffff}输入子弹数量 {1E90FF}M4", "制作", "退出");
	    		new patr = strval(inputtext);
	    		if(patr < 1 || patr > 200) return SendServerMessage(playerid, "你不能低于 1 或者大于 200");
	    		if(patr*6 > PlayerInfo[playerid][pMats]) return SendErrorMessage(playerid, "你没有足够的材料");
	    		PlayerInfo[playerid][pMats] -= patr*6;
	    		GiveWeapon(playerid,31,patr);
	    		format(YCMDstr, sizeof(YCMDstr), "%s 制作了一把 M4 以及 %d 发子弹.",PlayerInfo[playerid][pName], patr);
				ProxDetector(20.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SendSyntaxMessage(playerid, "你制作了 {1E90FF} M4");
	    	}
		}
	case 4551:
		{
			if(response)
	    	{
	    		if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 4551, DIALOG_STYLE_INPUT, "{1E90FF}制作武器", "{ffffff}输入子弹数量 {1E90FF}Cuntgun", "制作", "退出");
	    		new patr = strval(inputtext);
	    		if(patr < 1 || patr > 200) return SendServerMessage(playerid, "你不能低于 1 或者大于 200");
	    		if(patr*4 > PlayerInfo[playerid][pMats]) return SendErrorMessage(playerid, "你没有足够的材料");
	    		PlayerInfo[playerid][pMats] -= patr*4;
	    		GiveWeapon(playerid,33,patr);
	    		format(YCMDstr, sizeof(YCMDstr), "%s 制作了一把 Cuntgun 以及 %d 发子弹.",PlayerInfo[playerid][pName], patr);
				ProxDetector(20.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SendSyntaxMessage(playerid, "你制作了 {1E90FF} Cuntgun");
	    	}
		}
	case 4552:
		{
			if(response)
	    	{
	    		if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 4552, DIALOG_STYLE_INPUT, "{1E90FF}制作武器", "{ffffff}输入子弹数量 {1E90FF}Colt 45", "制作", "退出");
	    		new patr = strval(inputtext);
	    		if(patr < 1 || patr > 200) return SendServerMessage(playerid, "你不能低于 1 或者大于 200");
	    		if(patr*5 > PlayerInfo[playerid][pMats]) return SendErrorMessage(playerid, "你没有足够的材料");
	    		PlayerInfo[playerid][pMats] -= patr*5;
	    		GiveWeapon(playerid,22,patr);
	    		format(YCMDstr, sizeof(YCMDstr), "%s 制作了一把 Colt 45 以及 %d 发子弹.",PlayerInfo[playerid][pName], patr);
				ProxDetector(20.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SendSyntaxMessage(playerid, "你制作了 {1E90FF} Colt45");
	    	}
		}
	case 4553:
		{
			if(response)
	    	{
	    		if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 4553, DIALOG_STYLE_INPUT, "{1E90FF}制作武器", "{ffffff}输入子弹数量 {1E90FF}Tec-9", "制作", "退出");
	    		new patr = strval(inputtext);
	    		if(patr < 1 || patr > 200) return SendServerMessage(playerid, "你不能低于 1 或者大于 200");
	    		if(patr*50 > PlayerInfo[playerid][pMats]) return SendErrorMessage(playerid, "你们没有足够的材料");
	    		PlayerInfo[playerid][pMats] -= patr*50;
	    		GiveWeapon(playerid,18,patr);
	    		format(YCMDstr, sizeof(YCMDstr), "%s 制作了 %d 个燃烧弹.",PlayerInfo[playerid][pName], patr);
				ProxDetector(20.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SendSyntaxMessage(playerid, "{ffffff} 你制作了 {1E90FF} Molotov");
	    	}
		}
	case 107:
		{
	    	if(!response)
	    	{
            	SendServerMessage(GetPVarInt(playerid,"vod_id"),"乘客拒绝了支付车费的请求!");
            	SendServerMessage(playerid,"你拒绝支付车费!");
	        	return 1;
	    	}
			GiveMoney(playerid,-SummaRace[GetPVarInt(playerid,"vod_id")]);
			GiveMoney(GetPVarInt(playerid,"vod_id"),SummaRace[GetPVarInt(playerid,"vod_id")]);
			Zarabotok[GetPVarInt(playerid,"vod_id")] += SummaRace[GetPVarInt(playerid,"vod_id")];
			SendServerMessage(GetPVarInt(playerid,"vod_id"),"乘客付了车费!");
			SendServerMessage(playerid," 你支付了车费!");
			return 1;
		}
	case 22830:
	    {
			if(response)
			{
			    PlayerInfo[playerid][pLogin] = 0;
			    if(!strlen(inputtext)) return ShowPlayerDialog(playerid,22830,1,"{1E90FF}邀请人","\n\n{ffffff}指定邀请您加入服务器的玩家的昵称\n\n当你达到 {A6FC05}4{ffffff} 级时,TA将获得 {A6FC05}100.000${ffffff}\n\n如果是您自己找到的服务器,请单击 {A6FC05}跳过","确定","跳过");
				if(!strcmp(inputtext,PlayerInfo[playerid][pName])) return ShowPlayerDialog(playerid,22830,1,"{1E90FF}邀请人","\n\n{ffffff}指定邀请您加入服务器的玩家的昵称\n\n当你达到 {A6FC05}4{ffffff} 级时,TA将获得 {A6FC05}100.000${ffffff}\n\n如果是您自己找到的服务器,请单击 {A6FC05}跳过","确定","跳过");
				format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pRinvitation = '%s' WHERE Name = '%s'",inputtext,Name(playerid));
				mysql_query(YCMDstr);
				format(YCMDstr, sizeof(YCMDstr), "― 您指定了邀请人的名称: {1E90FF}%s", inputtext);
				SendClientMessage(playerid, COLOR_FSERVER, YCMDstr);
			}
			PlayerInfo[playerid][pLogin] = 1;
			SendSyntaxMessage(playerid, "你已经注册了！ 选择皮肤");
			SetPVarInt(playerid, "SelectRegSkin", 1);
   			SpawnPlayer(playerid);
	    }
	case 22829:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					new Float:objPos[3];
					if(SurfPlayerUse[playerid] == -1)
					{
						new sbid = IsPlayerAtAnySurfboard(playerid);
						if(sbid != -1)
						{
							new isOccupied = IsSurfboardOccupied(sbid);
							if(isOccupied != INVALID_PLAYER_ID) return SendErrorMessage(playerid, "正忙!!!");
							SurfPlayerUse[playerid] = sbid;
							GetObjectPos(surfboardData[sbid][objectID], objPos[0], objPos[1], objPos[2]);
							SetPlayerPos(playerid, objPos[0], objPos[1], objPos[2] + 1.0);
							SetPlayerFacingAngle(playerid, surfboardData[sbid][position][5] + 270.0);
							ApplyAnimation(playerid, "BSKTBALL", "BBALL_def_loop", 4.0, 1, 0, 0, 0, 0);
						}
						else SendErrorMessage(playerid, "需要站在冲浪板上!");
					}
					else
					{
						StopSurfboard(SurfPlayerUse[playerid]);
						SurfPlayerUse[playerid] = -1;
						ClearAnimations(playerid,1);
					}
				}
			case 1:
			    {
			    	new watter = isPlayerWater(playerid);
					if(watter == 1 || watter == 2 )
					{
						new Float:slx, Float:sly, Float:slz;
						GetPlayerPos(playerid, slx, sly, slz);
						SetVPPos(playerid, slx, sly, slz+1.3,0);
						CreateSurfboard(1, slx, sly, slz+0.7, 270.0, 0.0, 180.0);
						SetPlayerChatBubble(playerid, "拿出冲浪板", COLOR_PURPLE, 15, 5000);
						SendServerMessage(playerid,"(( 使用: 站在冲浪板上,并输入 /serf 选择'管理版面' ))");
					}
					else return SendErrorMessage(playerid,"必须在水中使用!");
			    }
			case 2:
				{
					new sbid = IsPlayerAtAnySurfboard(playerid);
					if(sbid != -1)
					{
						surfboardID--;
						surfboardData[sbid][modelID] = 0;
						surfboardData[sbid][position][0] = 0.0;
						surfboardData[sbid][position][1] = 0.0;
						surfboardData[sbid][position][2] = 0.0;
						surfboardData[sbid][position][3] = 0.0;
						surfboardData[sbid][position][4] = 0.0;
						surfboardData[sbid][position][5] = 0.0;
						surfboardData[sbid][position][6] = 0.0;
						surfboardData[sbid][sppeed] = 0.0;
						DestroyObject(surfboardData[sbid][objectID]);
						SurfPlayerUse[playerid] = -1;
						ClearAnimations(playerid,1);
						SetPlayerChatBubble(playerid, "删除冲浪板", COLOR_PURPLE, 15, 5000);
					}
					else SendErrorMessage(playerid, "需要站在冲浪板上!");
				}
			}
			return true;
		}
  	case 22828:
    	{
    	    if(!response) return true;
         	if(GetPVarInt(playerid,"fire_use") > 0)
			{
   				for(new oject = FireObject[playerid][0];oject < (FireObject[playerid][1]+1);oject++)
				{
					DestroyDynamicObject(oject);
				}
				SetPVarInt(playerid,"fire_use",0);
				DestroyDynamicArea(FireSphere[playerid]);
				FireSphere[playerid] = -1;
				SendServerMessage(playerid,"之前的篝火扑灭了!");
				return true;
			}
			if(IsPlayerInAnyVehicle(playerid)) return SendErrorMessage(playerid,"不能在车内使用!");
			if(GetPlayerInterior(playerid) != 0) return SendErrorMessage(playerid,"不能在内饰里使用!");
			new Float:Pos[4];
			GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
			GetPlayerFacingAngle(playerid, Pos[3]);
			Pos[0] += 0.8*floatsin(-Pos[3], degrees);
			Pos[1] += 0.8*floatcos(-Pos[3], degrees);
			CreateCampfire(playerid,Pos[0],Pos[1],Pos[2]-1, Pos[3], GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid));
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
			SetPVarInt(playerid,"fire_use",1);
			format(YCMDstr, sizeof(YCMDstr), "%s 点燃了篝火",PlayerInfo[playerid][pName]);
        	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
    	}
	case 22827:
	    {
	        if(!response) return true;
	        if(!strlen(inputtext)) return ShowPlayerDialog(playerid,22827,DIALOG_STYLE_INPUT,"{1E90FF}赛马","{ffffff}请输入下注金额以及马号.\n写下马号 [1-4] 和赌注 [1.000$ - 100.000$]\n例如: 1.1000 [你将 1000$ 下注在 1号马]","确定","退出");
			new arrdshu[2][5];
			split(inputtext, arrdshu, '.');
			new horse = strval(arrdshu[0]);
			if(horse < 1 || horse > 4) return ShowPlayerDialog(playerid,22827,DIALOG_STYLE_INPUT,"{1E90FF}赛马","{ffffff}请输入下注金额以及马号.\n写下马号 [1-4] 和赌注 [1.000$ - 100.000$]\n例如: 1.1000 [你将 1000$ 下注在 1号马]","确定","退出");
			new cash = strval(arrdshu[1]);
			if(cash < 1000 || cash > 100000) return ShowPlayerDialog(playerid,22827,DIALOG_STYLE_INPUT,"{1E90FF}赛马","{ffffff}请输入下注金额以及马号.\n写下马号 [1-4] 和赌注 [1.000$ - 100.000$]\n例如: 1.1000 [你将 1000$ 下注在 1号马]","确定","退出");
			if(PlayerInfo[playerid][pCash] < cash) return ShowPlayerDialog(playerid,22827,DIALOG_STYLE_INPUT,"{1E90FF}赛马","{ffffff}请输入下注金额以及马号.\n写下马号 [1-4] 和赌注 [1.000$ - 100.000$]\n例如: 1.1000 [你将 1000$ 下注在 1号马]","确定","退出");
			if(RaceStarted == 1) return SendErrorMessage(playerid,"比赛已经开始!");
		    SetPVarInt(playerid,"MoneyBet",cash);
			PlayerInfo[playerid][pCash] -= cash;
			SetPVarInt(playerid,"BetOnHorse",horse);
			format(string, sizeof(string), "― 你将 %d$ 下注在 %d号马上 ( 等待开始,然后进行观看 )",cash,horse);
			SendClientMessage(playerid, -1, string);
   			new i = GetPVarInt(playerid, "PlayerBizz");
			BizzInfo[i][bProduct] -= 25;
			SetBizzInt(i, "product", BizzInfo[i][bProduct]);
			return 1;
	    }
	case 22826:
		{
		    new ggiveplayerid = GetPVarInt(playerid,"GIVEPLAYERID");
		    if(!response)
		    {
		        format(YCMDstr,sizeof(YCMDstr),"― %s 拒绝将TA推进后备箱!",PlayerInfo[playerid][pName]);
		        SendClientMessage(ggiveplayerid,-1,YCMDstr);
		        SendClientMessage(playerid,-1,"你拒绝进入后备箱!");
		        return true;
		    }
		    new carok = GetPVarInt(playerid,"VeHiCleId");
		    if(VehicleInfo[carok][vInputID] != 0) return SendErrorMessage(playerid,"后备箱里已经有人了!");
		    format(YCMDstr, sizeof(YCMDstr), "― %s 将某人推进后备箱",PlayerInfo[ggiveplayerid][pName]);
			ProxDetector(20.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid,"INCAROK",carok);
			VehicleInfo[carok][vInputID] = playerid;
			SendServerMessage(ggiveplayerid,"/unput, 从后备箱里拖出!");
			TogglePlayerSpectating(playerid, 1);
			TextDrawShowForPlayer(playerid,CheckSobClosed);
			PlayerSpectateVehicle(playerid, carok);
			TogglePlayerControllable(playerid, 0);
			DestroyDynamic3DTextLabel(Player3DTextIn[playerid]);
			format(YCMDstr,80,"后备箱里有人: %s",PlayerInfo[playerid][pName]);
			Player3DTextIn[playerid] = CreateDynamic3DTextLabel(YCMDstr, COLOR_WHITE, 0, -2, 0, 15.0, INVALID_PLAYER_ID, carok);
            return true;
		}
	case 22825:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0:
			    {
					if(GetPVarInt(playerid,"VodolazStart") < 1)
					{
	    				SetPlayerSkin(playerid,279);
						SendSyntaxMessage(playerid,"你开始了潜水员的工作. 潜水船的位置标记在GPS上.");
						SendSyntaxMessage(playerid,"要拿起货物，请按'ALT'.");
						SendSyntaxMessage(playerid,"别忘了带上一罐氧气，否则你会被淹死.");
						SetPVarInt(playerid,"VodolazStart",1);
						SetPVarInt(playerid,"VodolazGruzPicked",0);
						SetPVarInt(playerid,"VodolazOxygen",0);
						SetPVarInt(playerid,"VodolazZP",0);
						SetPVarInt(playerid,"VodolazOxygen",100);
						SetPlayerMapIcon(playerid,0,-1320.4944,1643.0924,-36.6206,19,-1,MAPICON_LOCAL);
						PlayerTextDrawSetString(playerid,JobStats[playerid][2],"Oxygen: 0%");
						PlayerTextDrawSetString(playerid,JobStats[playerid][3],"Earned: 0$");
						for(new i;i<5; i++)
						{
						    PlayerTextDrawShow(playerid,JobStats[playerid][i]);
						}
						SetPVarInt(playerid,"VodolazOxygenTimer",0);
					}
					else
					{
					    DeletePVar(playerid,"VodolazOxygenTimer");
					    SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
						format(YCMDstr,60,"― 你已经完成了潜水员工作,获得了: %d$",GetPVarInt(playerid,"VodolazZP"));
						PlayerInfo[playerid][pCash] += GetPVarInt(playerid,"VodolazZP");
						SendClientMessage(playerid,-1,YCMDstr);
						SetPVarInt(playerid,"VodolazStart",0);
						DeletePVar(playerid,"VodolazZP");
						DeletePVar(playerid,"VodolazOxygen");
						DeletePVar(playerid,"VodolazGruzPicked");
						RemovePlayerAttachedObject(playerid,5);
						RemovePlayerMapIcon(playerid, 0);
      					for(new i;i<5; i++)
						{
						    PlayerTextDrawHide(playerid,JobStats[playerid][i]);
						}
						if(PlayerInfo[playerid][pQuest_1] == 0)
						{
				    		PlayerInfo[playerid][pQuest_1] = 1;
                    		PlayerInfo[playerid][pDonatemoney] += 1;
							SendServerMessage(playerid, "你通过了任务的第一阶段并收到了 1 捐赠点 ( /quest )");
						}
					}
				}
				case 1:
				{
   					if(GetPVarInt(playerid,"VodolazStart") == 1)
					{
    					if(GetPVarInt(playerid,"VodolazOxygen") == -1)
						{
					    	SendSyntaxMessage(playerid,"你拿了一个氧气管");
					    	SetPVarInt(playerid,"VodolazOxygen",100);
						}
						else
						{
					    	if(GetPVarInt(playerid,"VodolazOxygen") < 60)
					    	{
						    	SendSyntaxMessage(playerid,"你的氧气管里装满了空气.");
						    	SetPVarInt(playerid,"VodolazOxygen",100);
					    	}
						}
						SetPlayerAttachedObject(playerid, 5, 1010, 1, -0.023000,-0.071999,-0.020999,-84.700012,176.299942,1.700001,1.000000,1.000000,1.000000);
	    				format(YCMDstr,20,"Oxygen: %d%",GetPVarInt(playerid,"VodolazOxygen"));
				    	PlayerTextDrawSetString(playerid,JobStats[playerid][2],YCMDstr);
					}
				}
			}
		}
	case 22824:
	    {
			if(!response) return 1;
			if(!PlayerInfo[playerid][pWork])
			{
			    if(PlayerInfo[playerid][pSex] == 1)
			    {
					PlayerInfo[playerid][pWork] = 12;
					SetPlayerSkin(playerid, 289);
					SendServerMessage(playerid, "你换了一身衣服,可以去上课了.");
				}
				else
				{
				    PlayerInfo[playerid][pWork] = 12;
				    SetPlayerSkin(playerid, 69);
				    SendServerMessage(playerid, "你换了一身衣服,可以去上课了.");
				}
			}
			else if(PlayerInfo[playerid][pWork] == 12)
			{
			    PlayerInfo[playerid][pWork] = 0;
			    SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
			}
	    }
  	case 82:
		{
            if(!response) return 1;
			ShowPlayerDialog(playerid,83,DIALOG_STYLE_LIST,"{1E90FF}经济管理","1.{FFFFFF}更改组织工资\n2.{FFFFFF}修改税收","选择","返回");
		}
	case 83:
		{
		    if(!response) return 1;
			new sctring[2000];
		    switch(listitem)
		    {
				case 0:
				{
				    strcat(sctring, "{FFFFFF}组织:\t\t{FFFFFF}薪水:\n");
					format(YCMDstr,sizeof(YCMDstr),"{FFFFFF}工资 {5da130}SA 警察局:\t\t{5da130}$%d.", CopSal);
					strcat(sctring,YCMDstr);
					format(YCMDstr,sizeof(YCMDstr),"\n{FFFFFF}工资 {5da130}政府:\t\t{5da130}$%d.", SudSal);
					strcat(sctring,YCMDstr);
					format(YCMDstr,sizeof(YCMDstr),"\n{FFFFFF}工资 {5da130}SA 医院:\t\t{5da130}$%d.", MhsSal);
					strcat(sctring,YCMDstr);
					format(YCMDstr,sizeof(YCMDstr),"\n{FFFFFF}工资 {5da130}SA 联邦调查局:\t\t{5da130}$%d.", MerSal);
					strcat(sctring,YCMDstr);
					format(YCMDstr,sizeof(YCMDstr),"\n{FFFFFF}工资 {5da130}SA 监狱:\t\t{5da130}$%d.", TaxSal);
					strcat(sctring,YCMDstr);
					format(YCMDstr,sizeof(YCMDstr),"\n{FFFFFF}工资 {5da130}SA 驾驶学校:\t\t{5da130}$%d.", LicSal);
					strcat(sctring,YCMDstr);
					format(YCMDstr,sizeof(YCMDstr),"\n{FFFFFF}工资 {5da130}SA 军队:\t\t{5da130}$%d.", MehSal);
					strcat(sctring,YCMDstr);
					ShowPlayerDialog(playerid,84,DIALOG_STYLE_TABLIST_HEADERS,"{1E90FF}经济管理",sctring,"修改","返回");
				}
				case 1:
				{
					format(YCMDstr,sizeof(YCMDstr),"{FFFFFF}个人税: {5da130}$%d.", TaxValue);
					strcat(sctring,YCMDstr);
					format(YCMDstr,sizeof(YCMDstr),"\n{FFFFFF}产业税: {5da130}$%d.", biztax);
					strcat(sctring,YCMDstr);
					format(YCMDstr,sizeof(YCMDstr),"\n{FFFFFF}电费: {5da130}$%d.", electrich);
					strcat(sctring,YCMDstr);
					ShowPlayerDialog(playerid,85,DIALOG_STYLE_LIST,"{1E90FF}经济管理",sctring,"修改","返回");
				}
			}
		}
	case 84: { if(!response) return 1; ShowPlayerDialog(playerid,87,DIALOG_STYLE_INPUT,"{1E90FF}经济管理","{FFFFFF}输入所选组织的工资:","修改","返回"),SetPVarInt(playerid,"zarp",listitem); }
	case 85: { if(!response) return 1; ShowPlayerDialog(playerid,88,DIALOG_STYLE_INPUT,"{1E90FF}经济管理","输入应付税收的金额:","修改","返回"),SetPVarInt(playerid,"zarp",listitem); }
	case 87:
		{
	    	if(!response) return 1;
			new zarp = strval(inputtext); //Веденная сумма
			if(zarp < 500 || zarp > 2000) return SendServerMessage(playerid, "工资限制 500 - 2000!!!");
			switch(GetPVarInt(playerid,"zarp"))
			{
				case 0:
				{
					CopSal = zarp;
					format(string, sizeof(string), "SA 警察局的薪水现在是: %d$", zarp);
				}
				case 1:
				{
					SudSal = zarp;
					format(string, sizeof(string), "政府的薪水现在是: %d$", zarp);
				}
				case 2:
				{
					MhsSal = zarp;
					format(string, sizeof(string), "SA 医院的薪水现在是: %d$", zarp);
				}
				case 3:
				{
					MerSal = zarp;
					format(string, sizeof(string), "SA 联邦调查局的薪水现在是: %d$", zarp);
				}
				case 4:
				{
					TaxSal = zarp;
					format(string, sizeof(string), "SA 监狱的薪水现在是: %d$", zarp);
				}
				case 5:
				{
					LicSal = zarp;
					format(string, sizeof(string), "SA 驾驶学校的薪水现在是: %d$", zarp);
				}
				case 6:
				{
					MehSal = zarp;
					format(string, sizeof(string), "SA 军队的薪水现在是: %d$", zarp);
				}
			}
			SendClientMessage(playerid, COLOR_GREEN, string);
			SaveStuff();
		}
	case 88:
		{
			if(!response) return 1;
			new zarp = strval(inputtext);
			if(zarp < 10 || zarp > 1000) return SendServerMessage(playerid, "金额限制 10 - 1000!!!");
			switch(GetPVarInt(playerid,"zarp"))
			{
				case 0:
				{
					TaxValue = zarp;
					format(string, sizeof(string), "圣安地列斯州: %s 修改个人税为: %d $",Name(playerid), zarp);
					SendClientMessageToAll(0x6666FFAA, string);
					format(string, sizeof(string), "个人税: %d$", zarp);
				}
				case 1:
				{
					biztax = zarp;
					format(string, sizeof(string), "产业税: %d$", zarp);
				}
				case 2:
				{
					electrich = zarp;
					format(string, sizeof(string), "电费: %d$", zarp);
				}
			}
			SendClientMessage(playerid, COLOR_GREEN, string);
			SaveStuff();
		}
	case 204:
		{
			if(!response) return 1;
			new Float: lwx, Float:lwy, Float:lwz;
			GetPlayerPos(wantedList[playerid][listitem], lwx, lwy, lwz);
			SetPlayerCheckpoint(playerid, lwx, lwy, lwz, 2.0);
			SendServerMessage(playerid, "地图上红点标记着玩家.");
		}
	case 22823:
		{
			if(!response) return 1;
			switch(GetPVarInt(playerid, "learn"))
			{
				case 1:
				{
	    			SetPlayerCameraPos(playerid, 30.6143, 52.6836, 1201.5830);
					SetPlayerCameraLookAt(playerid, 31.5496, 53.0337, 1201.6230);
					if(GetPVarInt(playerid, "learnobject") == 1)
					DestroyObject(LearnObject[playerid]);//19353
					LearnObject[playerid] = CreatePlayerObject(playerid, 19353, 35.1051, 54.3846, 1202.5306-0.4, -0.3000, -0.2999, 179.8636);
					SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "", 0, 140, "Arial", 24, 0, -1, 0, 1);
    				switch(random(3))
					{
				    	case 0: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 数学分析\n\n这是一个集合\n专门研究功能的\n数学部分.\n在更一般的解释中，\n泛函分析，\n连同Lebesgue积分理论，\n也被应用于分析，\n一种研究定义在复平面上的函数的复分析。", 0, 140, "Arial", 24, 0, -1, 0, 1);
						case 1: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 引言高等数学是中学和高等教育机构的一门课程\n\n高等数学包括：解析几何，高阶和线性代数元素\n概率论和数理统计元素。", 0, 140, "Arial", 24, 0, -1, 0, 1);
						case 2: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 通用数学这是研究代数系统的数学分支\n例如组，环，场，模块，格子和这些结构之间的映射。", 0, 140, "Arial", 24, 0, -1, 0, 1);
					}
					SetPVarInt(playerid,"learnobject",1);
					LearnTimer[playerid] = SetTimerEx("LearnUniver", 1000, true, "dd", playerid, 1);
				}
				case 2:
				{
			    	SetPlayerCameraPos(playerid, 30.7062, 45.6051, 1201.6630);
					SetPlayerCameraLookAt(playerid, 31.7046, 45.6273, 1201.6577);
					if(GetPVarInt(playerid, "learnobject") == 1)
					DestroyObject(LearnObject[playerid]);
					LearnObject[playerid] = CreatePlayerObject(playerid, 19353, 35.0928, 45.3589, 1202.4010-0.4, -0.3000, -0.2999, 179.8636);
					SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "", 0, 140, "Arial", 24, 0, -1, 0, 1);
					switch(random(3))
					{
				    	case 0: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: “信息学”\n\n一词是由俄语、英语、法语和德语中的信息构成的，\n在20世纪60年代，人们倾向于用与“信息”一词相关联的词来代替这个词。", 0, 140, "Arial", 24, 0, -1, 0, 1);
						case 1: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 信息学是\n收集、存储、处理、传递、分析和评估信息的方法和过程的科学，\n为信息的使用提供了可能性。", 0, 140, "Arial", 24, 0, -1, 0, 1);
						case 2: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 理论信息学理论信息学涉及形式语言和自动机理论，\n可计算性和复杂性理论，图论，密码学，逻辑，形式语义学，\n并为编程语言编译器的开发提供了基础。", 0, 140, "Arial", 24, 0, -1, 0, 1);
					}
					SetPVarInt(playerid,"learnobject", 1);
					LearnTimer[playerid] = SetTimerEx("LearnUniver", 1000, true, "dd", playerid, 2);
				}
				case 3:
				{
			    	SetPlayerCameraPos(playerid, 30.5128, 31.3466, 1201.6506);
					SetPlayerCameraLookAt(playerid, 31.4561, 31.6743, 1201.6654);
	    			if(GetPVarInt(playerid, "learnobject") == 1)
					DestroyObject(LearnObject[playerid]);
					LearnObject[playerid] = CreatePlayerObject(playerid, 19353, 35.0525, 32.9940, 1202.5638-0.4, -0.3000, -0.2999, 179.8636);
					SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "", 0, 140, "Arial", 24, 0, -1, 0, 1);
					switch(random(3))
					{
				    	case 0: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 史学\n\n术语史学有多种含义。\n它是关于如何书写历史、\n如何正确应用历史方法和历史认知如何发展的科学。\n同一术语表示历史作品的总体性。", 0, 140, "Arial", 24, 0, -1, 0, 1);
						case 1: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 引言史是一门知识领域，也是一门研究人类过去的人文科学。\n它是一门研究过去各种来源的科学，\n以便建立一系列事件、历史进程、所描述的事实的客观性。", 0, 140, "Arial", 24, 0, -1, 0, 1);
						case 2: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 历史哲学是哲学的一部分，试图回答人类历史的终极意义问题。\n对于同一哲学领域，关于历史可能的目的论终结的猜测，\n即历史是否按照任何计划发展。", 0, 140, "Arial", 24, 0, -1, 0, 1);
					}
					SetPVarInt(playerid,"learnobject", 1);
					LearnTimer[playerid] = SetTimerEx("LearnUniver", 1000, true, "dd", playerid, 3);
				}
				case 4:
				{
			    	SetPlayerCameraPos(playerid, 30.1828, 23.6917, 1201.6566);
					SetPlayerCameraLookAt(playerid, 31.1678, 23.5270, 1201.6312);
	    			if(GetPVarInt(playerid, "learnobject") == 1)
					DestroyObject(LearnObject[playerid]);
					LearnObject[playerid] = CreatePlayerObject(playerid, 19353, 35.1562, 22.4555, 1202.6033-0.4, -0.3000, -0.2999, 179.8636);
					SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "", 0, 140, "Arial", 24, 0, -1, 0, 1);
					switch(random(3))
					{
				    	case 0: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 中文（Chinese）\n\n字面意思是中国文字（特指汉字）\n广泛意思是中国语言文字（包括少数民族语言文学）.", 0, 140, "Arial", 24, 0, -1, 0, 1);
						case 1: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 中文作为一种象形文字，具有超语言交际功能，不是单纯的语言符号。\n历史上，壮语、白语、苗语、蒙古语、满语地区，以及周边国家等皆有使用中文记录之习惯。", 0, 140, "Arial", 24, 0, -1, 0, 1);
						case 2: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 中文以其超越地域、超时空的方式，\n给不同语种、不同背景的人们提供了交流上的便利。", 0, 140, "Arial", 24, 0, -1, 0, 1);
					}
					SetPVarInt(playerid,"learnobject", 1);
					LearnTimer[playerid] = SetTimerEx("LearnUniver", 1000, true, "dd", playerid, 4);

				}
		    	case 5:
	    		{
		        	SetPlayerCameraPos(playerid, 29.6923, 12.5308, 1201.6956);
					SetPlayerCameraLookAt(playerid, 30.6898, 12.4811, 1201.6451);
       				if(GetPVarInt(playerid, "learnobject") == 1)
					DestroyObject(LearnObject[playerid]);
					LearnObject[playerid] = CreatePlayerObject(playerid, 19353, 35.1266, 11.8953, 1202.6334-0.4, -0.3000, -0.2999, 179.8636);
					SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "", 0, 140, "Arial", 24, 0, -1, 0, 1);
					switch(random(3))
					{
                        case 0: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 基因理论\n\n是研究生物体的遗传和变异的科学\n是生物学的一个重要分支。", 0, 140, "Arial", 24, 0, -1, 0, 1);
				    	case 1: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 史前时期，\n人们就已经利用生物体的遗传特性通过选择育种来提高谷物和牲畜的产量。\n而现代遗传学，其目的是寻求了解遗传的整个过程的机制\n则是开始于19世纪中期孟德尔的研究工作。", 0, 140, "Arial", 24, 0, -1, 0, 1);
						case 2: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 虽然，孟德尔并不知道遗传的物理基础\n但他观察到了生物体的遗传特性\n某些遗传单位遵守简单的统计学规律\n这些遗传单位现在被称为基因。 ", 0, 140, "Arial", 24, 0, -1, 0, 1);
					}
					SetPVarInt(playerid,"learnobject", 1);
					LearnTimer[playerid] = SetTimerEx("LearnUniver", 1000, true, "dd", playerid, 5);
		    	}
			}
			SendServerMessage(playerid, "每一次秒,学习指定内容,获得{FFCD00}2分 {33AAFF},.");
			SendServerMessage(playerid, "按下 {FFCD00}Left ALT {33AAFF}结束讲座.");
			TogglePlayerControllable(playerid, 0);
		}
   	case 22819:
        {
            if(response)
            {
                switch(listitem)
                {
                    case 0:currentcase[playerid] = 1, ShowPlayerDialog(playerid,22820,DIALOG_STYLE_MSGBOX,"{1E90FF}1 - 白银宝箱","{FFFFFF}可能会获得以下奖励:\n\n{5F9EA0}70 人民币\n100 人民币","确定","返回");
                    case 1:currentcase[playerid] = 2, ShowPlayerDialog(playerid,22820,DIALOG_STYLE_MSGBOX,"{1E90FF}2 - 黄金宝箱","{FFFFFF}可能会获得以下奖励:\n\n{5F9EA0}150 人民币\n200 人民币","确定","返回");
                    case 2:currentcase[playerid] = 3, ShowPlayerDialog(playerid,22820,DIALOG_STYLE_MSGBOX,"{1E90FF}3 - 铂金宝箱","{FFFFFF}可能会获得以下奖励:\n\n{5F9EA0}250 人民币","确定","返回");
                    case 3:currentcase[playerid] = 4, ShowPlayerDialog(playerid,22820,DIALOG_STYLE_MSGBOX,"{1E90FF}4 - 钻石宝箱","{FFFFFF}可能会获得以下奖励:\n\n{5F9EA0}350 人民币","确定","返回");
                }
            }
        }
    case 22820:
        {
            if(response)
            {
                switch(currentcase[playerid])
                {
                    case 1:
                    {
                        if(PlayerInfo[playerid][pRub] < SILVER_CASE_PRICE) return SendErrorMessage(playerid,"你没有那么多人民币");
                        PlayerInfo[playerid][pRub] -= SILVER_CASE_PRICE;
                        switch(random(40))
                        {
                            case 0..20: PlayerInfo[playerid][pRub] +=70, SendSyntaxMessage(playerid,"恭喜你! 获得, 70 人民币");
                            case 21..40: PlayerInfo[playerid][pRub] +=100, SendSyntaxMessage(playerid,"恭喜你! 获得, 100 人民币");
                            //case 81..90: PlayerInfo[playerid][pAdministration228] += 1, SendSyntaxMessage(playerid,"恭喜你! 管理员等级+1!");
                            //case 91..99: PlayerInfo[playerid][pAdministration228] += 2, SendSyntaxMessage(playerid,"恭喜你! 管理员等级+2!");
                        }
                    }
                    case 2:
                    {
                        if(PlayerInfo[playerid][pRub] < GOLD_CASE_PRICE) return SendErrorMessage(playerid,"你没有那么多人民币");
                        PlayerInfo[playerid][pRub] -= GOLD_CASE_PRICE;
                        switch(random(40))
                        {
                            case 0..20: PlayerInfo[playerid][pRub] += 150, SendSyntaxMessage(playerid,"恭喜你! 获得, 150 人民币");
                            case 21..40: PlayerInfo[playerid][pRub] += 200, SendSyntaxMessage(playerid,"恭喜你! 获得, 200 人民币");
                            //case 81..90: PlayerInfo[playerid][pAdministration228] += 2,SetPlayerSkin(playerid,294), SendSyntaxMessage(playerid,"恭喜你! 管理员等级+2!");
                            //case 91..99: PlayerInfo[playerid][pAdministration228] += 3, SendSyntaxMessage(playerid,"恭喜你! 管理员等级+3!");
                        }
                    }
                    case 3:
                    {
                        if(PlayerInfo[playerid][pRub] < EXO_CASE_PRICE) return SendErrorMessage(playerid,"你没有那么多人民币");
                        PlayerInfo[playerid][pRub] -= EXO_CASE_PRICE;
                        switch(random(8))
                        {
                            case 0..8: PlayerInfo[playerid][pRub] += 250, SendSyntaxMessage(playerid,"恭喜你! 获得, 250 人民币");
                            //case 9..10: PlayerInfo[playerid][pAdministration228] += 4, SendSyntaxMessage(playerid,"恭喜你! 管理员等级+4!");
                        }
                    }
                    case 4:
                    {
                        if(PlayerInfo[playerid][pRub] < DELTA_CASE_PRICE) return SendErrorMessage(playerid,"你没有那么多人民币");
                        PlayerInfo[playerid][pRub] -= DELTA_CASE_PRICE;
                        switch(random(8))
                        {
                            case 0..8: PlayerInfo[playerid][pRub] += 350, SendSyntaxMessage(playerid,"恭喜你! 获得, 350 人民币");
                            //case 9..10: PlayerInfo[playerid][pAdministration228] += 5, SendSyntaxMessage(playerid,"恭喜你! 管理员等级+5!");
                        }
                    }
                }
            }
        }
	case 22818:
	    {
	        if(!response) return true;
	        if(PlayerInfo[playerid][pCash] < 100000) return SendErrorMessage(playerid,"需要 100.000$");
			PlayerInfo[playerid][pProcents] = 100;
			SendServerMessage(playerid, "成功更换新的发动机");
			PlayerPlaySound(playerid, 32000, 0.0, 0.0, 0.0);
			PlayerInfo[playerid][pCash] -= 100000;
			return 1;
	    }
	case 3011:
    	{
        	if(!response) return true;
        	switch(listitem)
        	{
            	case 0:
				{
				    if(PlayerInfo[playerid][pBalon4ik] == 0) return SendErrorMessage(playerid,"你没有喷漆罐(你可以去24/7购买).");
                    PlayerInfo[playerid][pBalon4ik]--;
					ColorBallon[playerid] = 1;
		        	RemovePlayerWeaponn(playerid,41);
		        	GiveWeapon(playerid,41,500);
			    	SendServerMessage(playerid,"现在开始给你的车喷漆");
				}
            	case 1:
				{
				    if(PlayerInfo[playerid][pBalon4ik] == 0) return SendErrorMessage(playerid,"你没有喷漆罐(你可以去24/7购买).");
                    PlayerInfo[playerid][pBalon4ik]--;
					ColorBallon[playerid] = 3;
					RemovePlayerWeaponn(playerid,41);
		        	GiveWeapon(playerid,41,500);
			    	SendServerMessage(playerid,"现在开始给你的车喷漆");
				}
            	case 2:
				{
				    if(PlayerInfo[playerid][pBalon4ik] == 0) return SendErrorMessage(playerid,"你没有喷漆罐(你可以去24/7购买).");
				    PlayerInfo[playerid][pBalon4ik]--;
					ColorBallon[playerid] = 106;
					RemovePlayerWeaponn(playerid,41);
		        	GiveWeapon(playerid,41,500);
			    	SendServerMessage(playerid,"现在开始给你的车喷漆");
				}
            	case 3:
				{
				    if(PlayerInfo[playerid][pBalon4ik] == 0) return SendErrorMessage(playerid,"你没有喷漆罐(你可以去24/7购买).");
				    PlayerInfo[playerid][pBalon4ik]--;
					ColorBallon[playerid] = 86;
					RemovePlayerWeaponn(playerid,41);
		        	GiveWeapon(playerid,41,500);
			    	SendServerMessage(playerid,"现在开始给你的车喷漆");
				}
				/// new
				case 4:
				{
				    if(PlayerInfo[playerid][pBalon4ik] == 0) return SendErrorMessage(playerid,"你没有喷漆罐(你可以去24/7购买).");
				    PlayerInfo[playerid][pBalon4ik]--;
					ColorBallon[playerid] = 0;
					RemovePlayerWeaponn(playerid,41);
		        	GiveWeapon(playerid,41,500);
			    	SendServerMessage(playerid,"现在开始给你的车喷漆");
				}
				case 5:
				{
				    if(PlayerInfo[playerid][pBalon4ik] == 0) return SendErrorMessage(playerid,"你没有喷漆罐(你可以去24/7购买).");
				    PlayerInfo[playerid][pBalon4ik]--;
					ColorBallon[playerid] = 6;
					RemovePlayerWeaponn(playerid,41);
		        	GiveWeapon(playerid,41,500);
			    	SendServerMessage(playerid,"现在开始给你的车喷漆");
				}
				case 6:
				{
				    if(PlayerInfo[playerid][pBalon4ik] == 0) return SendErrorMessage(playerid,"你没有喷漆罐(你可以去24/7购买).");
				    PlayerInfo[playerid][pBalon4ik]--;
					ColorBallon[playerid] = 126; // malinka
					RemovePlayerWeaponn(playerid,41);
		        	GiveWeapon(playerid,41,500);
			    	SendServerMessage(playerid,"现在开始给你的车喷漆");
				}
				case 7:
				{
				    if(PlayerInfo[playerid][pBalon4ik] == 0) return SendErrorMessage(playerid,"你没有喷漆罐(你可以去24/7购买).");
				    PlayerInfo[playerid][pBalon4ik]--;
					ColorBallon[playerid] = 233; // fiolet
					RemovePlayerWeaponn(playerid,41);
		        	GiveWeapon(playerid,41,500);
			    	SendServerMessage(playerid,"现在开始给你的车喷漆");
				}
				case 8:
				{
				    if(PlayerInfo[playerid][pBalon4ik] == 0) return SendErrorMessage(playerid,"你没有喷漆罐(你可以去24/7购买).");
				    PlayerInfo[playerid][pBalon4ik]--;
					ColorBallon[playerid] = 224; // корич
					RemovePlayerWeaponn(playerid,41);
		        	GiveWeapon(playerid,41,500);
			    	SendServerMessage(playerid,"现在开始给你的车喷漆");
				}
				case 9:
				{
				    if(PlayerInfo[playerid][pBalon4ik] == 0) return SendErrorMessage(playerid,"你没有喷漆罐(你可以去24/7购买).");
				    PlayerInfo[playerid][pBalon4ik]--;
					ColorBallon[playerid] = 158; // orange
					RemovePlayerWeaponn(playerid,41);
		        	GiveWeapon(playerid,41,500);
			    	SendServerMessage(playerid,"现在开始给你的车喷漆");
				}
        	}
        	if(caridhouse[playerid] != -1){DestroyVehicle(caridhouse[playerid]); caridhouse[playerid] = -1; }
			caridhouse[playerid] = CreateVehicle(PlayerInfo[playerid][pCar],1410.8140,-1897.8684,13.1220,91.0955, PlayerInfo[playerid][pColor][0] ,PlayerInfo[playerid][pColor][1], 86400);
			LockCar(caridhouse[playerid]);
			Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelcar];
			LinkVehicleToInterior(caridhouse[playerid], 0);
			CompVeh(playerid,caridhouse[playerid]);
		}
	case 22811:
		{
			if(!response) return true;
			if(PlayerInfo[playerid][pQuest] == 1) return SendErrorMessage(playerid,"您已经在酒店里注册!");
			if(strcmp(inputtext,PlayerInfo[playerid][pName]))
			{
			    SendErrorMessage(playerid, "对不起,该名称没有注册酒店住房!");
			}
			else
			{
				new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
				if(PlayerInfo[playerid][pCash] < till*100) return SendErrorMessage(playerid,"你没有足够的钱!");
				if(BizzInfo[i][bProduct] < 100) return SendServerMessage(playerid, "该产业缺货了!");
            	BizzInfo[i][bMoney] += till*100;
				BizzPay[i] += till*100;
				BizzInfo[i][bProduct] -= 100;
				PlayerInfo[playerid][pCash] -= till*100;
				SetBizzInt(i, "money", BizzInfo[i][bMoney]);
				SetBizzInt(i, "product", BizzInfo[i][bProduct]);
				PlayerInfo[playerid][pOtel] = 1000;
			    SendServerMessage(playerid, "感谢您在本酒店注册入住!");
			    SendServerMessage(playerid, "请不要忘记支付酒店房费,否则你的行李将会出现在酒店大门口!");
                SendServerMessage(playerid, "客房付款可在酒店大楼内进行!");
				PlayerInfo[playerid][pQuest] += 1;
				/*if(GetPVarInt(playerid,"quest_otel"))
				{
					PlayerInfo[playerid][pQuest_5] = 1;
					PlayerInfo[playerid][pDonatemoney] += 10;
					SendServerMessage(playerid, "Вы прошли пятый этап квеста и получили 10 донат рублей  ( /quest )");
					DeletePVar(playerid,"quest_otel");
				}*/
				if(PlayerInfo[playerid][pQuest_5] == 0)
				{
					PlayerInfo[playerid][pQuest_5] = 1;
					PlayerInfo[playerid][pDonatemoney] += 10;
					SendServerMessage(playerid, "你通过了第五阶段的任务,并收到了 10 捐赠点.( /quest )");
				}
			}
			return true;
		}
	case 3001:
		{
		    if(PlayerInfo[playerid][pLevel] < 3) return SendErrorMessage(playerid,"你的等级小于3级!");
			new cr = GetPVarInt(playerid,"Crupe");
			if(!response)
			{
				if(cr == 0) SendErrorMessage(playerid,"你不在经销店!");
				else SetPVarInt(playerid,"Crupe",0);
				SetPlayerSkin(playerid, PlayerInfo[playerid][pChar][0]);
				return 1;
			}
			if(cr == 1) return SendErrorMessage(playerid,"你不在经销店!");
			SetPVarInt(playerid,"Crupe",1);
			SendSyntaxMessage(playerid,"你开始经销商工作.");
			SetPlayerSkin(playerid,189);
		}
	case 3005:
		{
			new s = GetPVarInt(playerid,"GameStol");
			if(StolInfo[s][Stavka] != 0) return SendErrorMessage(playerid,"赌注已经确定！ 只有在下一轮才能改变!");
			new stavka = strval(inputtext);
			if(stavka < MIN_STAVKA) return SendErrorMessage(playerid,"赌注太低,无法开始!");
			if(stavka > MAX_STAVKA) return SendErrorMessage(playerid,"赌注超过了国家政策!");
			if(StolInfo[s][GameStart] != 0) return SendErrorMessage(playerid,"不能在开始之后修改赌注!");
			StolInfo[s][Stavka] = stavka;
			format(YCMDstr,sizeof(YCMDstr),"赌博桌 %d\n赌注: %d$",s+1, StolInfo[s][Stavka]);
			UpdateDynamic3DTextLabelText(StolCoorText[s], -1, YCMDstr);
			for ( new i = 0;  i < 5; i++ ) TextDrawShowForPlayer(playerid, TDInfo[i]);
			SetTimerEx("InfoTime", 2000, false, "d", playerid);
			format(YCMDstr,sizeof(YCMDstr),"Bet: %d ~g~$~n~~w~Bank: 0 ~g~$~n~",stavka);
			TextDrawSetString(KostiGameInfo[s],YCMDstr);
			return 1;
		}
	case 3003:
		{
			if(!response) return 1;
			new stavka = strval(inputtext);
			if(stavka < 1 || stavka > 100000) return SendErrorMessage(playerid,"金额限制 1$ 到 100.000$");
			if(GetPlayerMoney(playerid) < stavka) return SendErrorMessage(playerid,"你没有那么多钱");
			PlayerInfo[playerid][pCash] -= stavka;//pcash+
			Balance[playerid] += stavka;
			GangUpdateBalanceTextDraw(playerid, Balance[playerid]);
		}
	case 3004:
		{
 			if(!response) return 1;
 			{
  				for(new i; i < 14; i++)
    			{
     				PlayerTextDrawDestroy(playerid,gInfoCasino[i]);
	    		}
			}
 			SetPVarInt(playerid, "dCancelInfoCasino1", 0);
		}
	case 3015:
		{
			if(!response) return true;
			new params[128];
			if(sscanf(inputtext, "uds[128]", params[0])) return SendServerMessage(playerid,"输入原因!"), ShowPlayerDialog(playerid, 3017, 1, " ", "输入以分钟为单位的监禁时间,用逗号','分隔出原因", "确定", "返回");
			new text[50];
			format(text, sizeof(text), "%d %d %s", GetPVarInt(playerid, "SpecID"), params[0], params[1]);
			return callcmd::prison(playerid,text);
		}
	case 3016:
		{
			if(!response) return true;
			new params[128];
			if(sscanf(inputtext, "s[128]", params[0])) return SendServerMessage(playerid, "输入原因!"), ShowPlayerDialog(playerid, 3016, 1, " ", "输入踢出原因", "确定", "返回");
			new text[50];
			format(text, sizeof(text), "%d %s", GetPVarInt(playerid, "SpecID"), params[0]);
			return callcmd::kick(playerid,text);
		}
	case 3017:
		{
			if(!response) return true;
			new params[128];
			if(sscanf(inputtext, "s[128]", params[0])) return SendServerMessage(playerid, "输入原因!"), ShowPlayerDialog(playerid, 3017, 1, " ", "输入警告原因", "确定", "返回");
			new text[50];
			format(text, sizeof(text), "%d %s", GetPVarInt(playerid, "SpecID"), params[0]);
			return callcmd::warn(playerid,text);
		}
	case 3018:
		{
			if(!response) return true;
			new params[128];
			if(sscanf(inputtext, "p<,>ds[128]", params[0], params[1])) return SendServerMessage(playerid, "输入原因!"), ShowPlayerDialog(playerid, 3018, 1, " ", "输入禁言的时间以及原因(用逗号','分隔开)", "确定", "返回");
			new text[50];
			format(text, sizeof(text), "%d %d %s", GetPVarInt(playerid, "SpecID"), params[0], params[1]);
			return callcmd::mute(playerid,text);
		}
	case 3019:
		{
			if(!response) return true;
			new params[128];
			if(sscanf(inputtext, "s[128]", params[0])) return SendServerMessage(playerid, "输入原因!"), ShowPlayerDialog(playerid, 3017, 1, " ", "输入封禁原因", "确定", "返回");
			new text[50];
			format(text, sizeof(text), "%d %s", GetPVarInt(playerid, "SpecID"), params[0]);
			return callcmd::ban(playerid,text);
		}
	case 2287:
	    {
  			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					if(GetPVarInt(playerid, "ODEL_0") == 1)
					{
						RemovePlayerAttachedObject(playerid,0);
						RemovePlayerAttachedObject(playerid,1);
						SetPVarInt(playerid,"ODEL_0", 0);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 0, 18641, 6, 0.083000, 0.037999, 0.053999, -166.600021, 0.000000, -1.899999, 1.000000, 1.000000, 1.000000, 0, 0);
						SetPlayerAttachedObject(playerid, 1, 18656, 6, 0.079999, 0.060999, 0.092000, 103.300025, 3.300000, 2.500002, 0.047000, 0.039000, 0.038000, 0, 0);
						SetPVarInt(playerid,"ODEL_0", 1);
					}
				}
				case 1:
				{
					if(GetPVarInt(playerid, "ODEL_1") == 1)
					{
						RemovePlayerAttachedObject(playerid,2);
						SetPVarInt(playerid,"ODEL_1", 0);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 2, 19347, 1, 0.242000, 0.132000, 0.053999, -78.299949, 26.299999, -132.599975, 1.000000, 1.000000, 1.000000, 0, 0);
						SetPVarInt(playerid,"ODEL_1", 1);
					}
				}
				case 2:
				{
					if(GetPVarInt(playerid, "ODEL_2") == 1)
					{
						RemovePlayerAttachedObject(playerid,3);
						SetPVarInt(playerid,"ODEL_2", 0);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 3, 18636, 2, 0.142000, 0.039000, -0.004999, 24.300001, 94.500007, 60.500003, 1.000000, 1.000000, 1.000000, 0, 0);
						SetPVarInt(playerid,"ODEL_2", 1);
					}
				}
				case 3:
				{
					if(GetPVarInt(playerid, "ODEL_3") == 1)
					{
						RemovePlayerAttachedObject(playerid,4);
						SetPVarInt(playerid,"ODEL_3", 0);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 4, 18637, 14, 0.0, 0.0, 0.0, 0.0, 180.0, 180.0);
						SetPlayerHealthAC(playerid, 100);
						SetPVarInt(playerid,"ODEL_3", 1);
					}
				}
				case 4:
				{
					if(GetPVarInt(playerid, "ODEL_4") == 1)
					{
						RemovePlayerAttachedObject(playerid,5);
						SetPVarInt(playerid,"ODEL_4", 0);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 5 , 19142, 1,0.08,0.04,0.00,0.0,0.0,-7.4);
						SetPVarInt(playerid,"ODEL_4", 1);
					}
				}
			}
		}
	case 6675:
		{
			if(!response) return 1;
			{
				if(GetPVarInt(playerid,"Wheels") > 1)
				{
				    if(PlayerInfo[playerid][pCash] < _TuningPriceWheels[0]) return SendErrorMessage(playerid,"你没有那么多钱!");
					if(GetPVarInt(playerid,"Wheels") == 0) PlayerInfo[playerid][pWheels] = 0;
					else if(GetPVarInt(playerid,"Wheels") == 1) PlayerInfo[playerid][pWheels] = 0;
					else if(GetPVarInt(playerid,"Wheels") == 2) PlayerInfo[playerid][pWheels] = 1074;
					else if(GetPVarInt(playerid,"Wheels") == 3) PlayerInfo[playerid][pWheels] = 1076;
					else if(GetPVarInt(playerid,"Wheels") == 4) PlayerInfo[playerid][pWheels] = 1077;
					else if(GetPVarInt(playerid,"Wheels") == 5) PlayerInfo[playerid][pWheels] = 1078;
					else if(GetPVarInt(playerid,"Wheels") == 6) PlayerInfo[playerid][pWheels] = 1081;
					else if(GetPVarInt(playerid,"Wheels") == 7) PlayerInfo[playerid][pWheels] = 1085;
					else if(GetPVarInt(playerid,"Wheels") == 8) PlayerInfo[playerid][pWheels] = 1083;
					else if(GetPVarInt(playerid,"Wheels") == 9) PlayerInfo[playerid][pWheels] = 1073;
					AddVehicleComponent(GetPlayerVehicleID(playerid),PlayerInfo[playerid][pWheels]);
					PlayerInfo[playerid][pCash] -= _TuningPriceWheels[0];
					SendSyntaxMessage(playerid, "成功改装车辆.");
				}
				if(GetPVarInt(playerid,"Hydraulics") == 1)
				{
				    if(PlayerInfo[playerid][pCash] < _TuningPriceHydraulics) return SendErrorMessage(playerid,"你没有那么多钱!");
					PlayerInfo[playerid][pHydraulics] = 1087;
					AddVehicleComponent(GetPlayerVehicleID(playerid),PlayerInfo[playerid][pHydraulics]);
					SendSyntaxMessage(playerid,"成功改装车辆.");
					PlayerInfo[playerid][pCash] -= _TuningPriceHydraulics;
				}
				if(GetPVarInt(playerid,"Nitro") > 1)
				{
				    if(PlayerInfo[playerid][pCash] < _TuningPriceNitro[0]) return SendErrorMessage(playerid,"你没有那么多钱!");
					if(GetPVarInt(playerid,"Nitro") == 0) PlayerInfo[playerid][pNitro] = 0;
					else if(GetPVarInt(playerid,"Nitro") == 1) PlayerInfo[playerid][pNitro] = 0;
					else if(GetPVarInt(playerid,"Nitro") == 2) PlayerInfo[playerid][pNitro] = 1009;
					else if(GetPVarInt(playerid,"Nitro") == 3) PlayerInfo[playerid][pNitro] = 1010;
					else if(GetPVarInt(playerid,"Nitro") == 4) PlayerInfo[playerid][pNitro] = 1010;
					AddVehicleComponent(GetPlayerVehicleID(playerid),PlayerInfo[playerid][pNitro]);
					SendSyntaxMessage(playerid, "成功改装车辆.");
					PlayerInfo[playerid][pCash] -= _TuningPriceNitro[0];
				}
				if(GetPVarInt(playerid,"Spoilers") > 1)
				{
				    if(PlayerInfo[playerid][pCash] < _TuningPriceSpoilers[0]) return SendErrorMessage(playerid,"你没有那么多钱!");
					new TuneID[2], c = GetPlayerVehicleID(playerid);
					if(GetVehicleModel(c) == 562) TuneID[0] = 1146, TuneID[1] = 1147;
					else if(GetVehicleModel(c) == 560) TuneID[0] = 1138, TuneID[1] = 1139;
					else if(GetVehicleModel(c) == 565) TuneID[0] = 1049, TuneID[1] = 1050;
					else if(GetVehicleModel(c) == 561) TuneID[0] = 1058, TuneID[1] = 1060;
					else if(GetVehicleModel(c) == 559) TuneID[0] = 1158, TuneID[1] = 1162;
					else if(GetVehicleModel(c) == 558) TuneID[0] = 1063, TuneID[1] = 1064;
					if(GetPVarInt(playerid,"Spoilers") == 1) PlayerInfo[playerid][pSpoilers] = 0;
					else if(GetPVarInt(playerid,"Spoilers") == 2) PlayerInfo[playerid][pSpoilers] = TuneID[0];
					else if(GetPVarInt(playerid,"Spoilers") == 3) PlayerInfo[playerid][pSpoilers] = TuneID[1];
					AddVehicleComponent(GetPlayerVehicleID(playerid),PlayerInfo[playerid][pSpoilers]);
					SendSyntaxMessage(playerid, "成功改装车辆.");
					PlayerInfo[playerid][pCash] -= _TuningPriceSpoilers[0];
				}
				if(GetPVarInt(playerid,"HBumper") > 1)
				{
				    if(PlayerInfo[playerid][pCash] < _TuningPriceHBumper[0]) return SendErrorMessage(playerid,"你没有那么多钱!");
					new TuneID[2], c = GetPlayerVehicleID(playerid);
					if(GetVehicleModel(c) == 562) TuneID[0] = 1171, TuneID[1] = 1172;
					else if(GetVehicleModel(c) == 560) TuneID[0] = 1169, TuneID[1] = 1170;
					else if(GetVehicleModel(c) == 575) TuneID[0] = 1174, TuneID[1] = 1175;
					else if(GetVehicleModel(c) == 565) TuneID[0] = 1152, TuneID[1] = 1153;
					else if(GetVehicleModel(c) == 561) TuneID[0] = 1155, TuneID[1] = 1157;
					else if(GetVehicleModel(c) == 559) TuneID[0] = 1160, TuneID[1] = 1173;
					else if(GetVehicleModel(c) == 558) TuneID[0] = 1165, TuneID[1] = 1166;
					else if(GetVehicleModel(c) == 534) TuneID[0] = 1179, TuneID[1] = 1185;
					else if(GetVehicleModel(c) == 536) TuneID[0] = 1181, TuneID[1] = 1182;
					else if(GetVehicleModel(c) == 535) TuneID[0] = 1188, TuneID[1] = 1189;
					else if(GetVehicleModel(c) == 576) TuneID[0] = 1190, TuneID[1] = 1191;
					if(GetPVarInt(playerid,"HBumper") == 1) PlayerInfo[playerid][pHBumper] = 0;
					else if(GetPVarInt(playerid,"HBumper") == 2) PlayerInfo[playerid][pHBumper] = TuneID[0];
					else if(GetPVarInt(playerid,"HBumper") == 3) PlayerInfo[playerid][pHBumper] = TuneID[1];
					AddVehicleComponent(GetPlayerVehicleID(playerid),PlayerInfo[playerid][pHBumper]);
					SendSyntaxMessage(playerid, "成功改装车辆.");
					PlayerInfo[playerid][pCash] -= _TuningPriceHBumper[0];
				}
				if(GetPVarInt(playerid,"BBumper") > 1)
				{
				    if(PlayerInfo[playerid][pCash] < _TuningPriceHBumper[0]) return SendErrorMessage(playerid,"你没有那么多钱!");
					new TuneID[2], c = GetPlayerVehicleID(playerid);
					if(GetVehicleModel(c) == 562) TuneID[0] = 1148, TuneID[1] = 1149;
					else if(GetVehicleModel(c) == 560) TuneID[0] = 1140, TuneID[1] = 1141;
					else if(GetVehicleModel(c) == 575) TuneID[0] = 1176, TuneID[1] = 1177;
					else if(GetVehicleModel(c) == 565) TuneID[0] = 1150, TuneID[1] = 1151;
					else if(GetVehicleModel(c) == 561) TuneID[0] = 1154, TuneID[1] = 1156;
					else if(GetVehicleModel(c) == 559) TuneID[0] = 1159, TuneID[1] = 1161;
					else if(GetVehicleModel(c) == 558) TuneID[0] = 1167, TuneID[1] = 1168;
					else if(GetVehicleModel(c) == 534) TuneID[0] = 1178, TuneID[1] = 1180;
					else if(GetVehicleModel(c) == 536) TuneID[0] = 1183, TuneID[1] = 1184;
					else if(GetVehicleModel(c) == 535) TuneID[0] = 1186, TuneID[1] = 1187;
					else if(GetVehicleModel(c) == 576) TuneID[0] = 1192, TuneID[1] = 1193;
					if(GetPVarInt(playerid,"BBumper") == 1) PlayerInfo[playerid][pBBumper] = 0;
					else if(GetPVarInt(playerid,"BBumper") == 2) PlayerInfo[playerid][pBBumper] = TuneID[0];
					else if(GetPVarInt(playerid,"BBumper") == 3) PlayerInfo[playerid][pBBumper] = TuneID[1];
					AddVehicleComponent(GetPlayerVehicleID(playerid),PlayerInfo[playerid][pBBumper]);
					SendSyntaxMessage(playerid, "成功改装车辆.");
					PlayerInfo[playerid][pCash] -= _TuningPriceHBumper[0];
				}
				NullComponents(playerid);
			}
			return 1;
		}
	case 803:
	    {
	    	if(!response) return 1;
    		new caren = PlayerInfo[playerid][pCar];
	    	switch(caren)
			{
				case 400:PlayerInfo[playerid][pCash] += 25000;
				case 404:PlayerInfo[playerid][pCash] += 25000;
				case 436:PlayerInfo[playerid][pCash] += 25000;
				case 439:PlayerInfo[playerid][pCash] += 25000;
				case 458:PlayerInfo[playerid][pCash] += 25000;
				case 466:PlayerInfo[playerid][pCash] += 25000;
				case 475:PlayerInfo[playerid][pCash] += 25000;
				case 478:PlayerInfo[playerid][pCash] += 25000;
				case 479:PlayerInfo[playerid][pCash] += 25000;
				case 492:PlayerInfo[playerid][pCash] += 25000;
				case 516:PlayerInfo[playerid][pCash] += 25000;
				case 517:PlayerInfo[playerid][pCash] += 25000;
				case 518:PlayerInfo[playerid][pCash] += 25000;
				case 526:PlayerInfo[playerid][pCash] += 25000;
				case 527:PlayerInfo[playerid][pCash] += 25000;
				case 542:PlayerInfo[playerid][pCash] += 25000;
				case 543:PlayerInfo[playerid][pCash] += 25000;
				case 546:PlayerInfo[playerid][pCash] += 25000;
				case 547:PlayerInfo[playerid][pCash] += 25000;
				case 549:PlayerInfo[playerid][pCash] += 25000;
				case 567:PlayerInfo[playerid][pCash] += 50000;
				case 419:PlayerInfo[playerid][pCash] += 100000;
				case 421:PlayerInfo[playerid][pCash] += 100000;
				case 445:PlayerInfo[playerid][pCash] += 100000;
				case 489:PlayerInfo[playerid][pCash] += 100000;
				case 491:PlayerInfo[playerid][pCash] += 100000;
				case 533:PlayerInfo[playerid][pCash] += 100000;
				case 534:PlayerInfo[playerid][pCash] += 100000;
				case 554:PlayerInfo[playerid][pCash] += 100000;
				case 555:PlayerInfo[playerid][pCash] += 100000;
				case 561:PlayerInfo[playerid][pCash] += 100000;
				case 579:PlayerInfo[playerid][pCash] += 100000;
				case 580:PlayerInfo[playerid][pCash] += 100000;
				case 589:PlayerInfo[playerid][pCash] += 100000;
				case 603:PlayerInfo[playerid][pCash] += 100000;
				case 418:PlayerInfo[playerid][pCash] += 100000;
				case 461:PlayerInfo[playerid][pCash] += 100000;
				case 581:PlayerInfo[playerid][pCash] += 100000;
				case 586:PlayerInfo[playerid][pCash] += 100000;
				case 401:PlayerInfo[playerid][pCash] += 100000;
				case 405:PlayerInfo[playerid][pCash] += 100000;
				case 412:PlayerInfo[playerid][pCash] += 100000;
				case 422:PlayerInfo[playerid][pCash] += 100000;
				case 426:PlayerInfo[playerid][pCash] += 100000;
				case 467:PlayerInfo[playerid][pCash] += 100000;
				case 474:PlayerInfo[playerid][pCash] += 100000;
				case 496:PlayerInfo[playerid][pCash] += 100000;
				case 507:PlayerInfo[playerid][pCash] += 100000;
				case 529:PlayerInfo[playerid][pCash] += 100000;
				case 536:PlayerInfo[playerid][pCash] += 100000;
				case 540:PlayerInfo[playerid][pCash] += 100000;
				case 550:PlayerInfo[playerid][pCash] += 100000;
				case 551:PlayerInfo[playerid][pCash] += 100000;
				case 566:PlayerInfo[playerid][pCash] += 100000;
				case 575:PlayerInfo[playerid][pCash] += 100000;
				case 576:PlayerInfo[playerid][pCash] += 100000;
				case 585:PlayerInfo[playerid][pCash] += 100000;
				case 600:PlayerInfo[playerid][pCash] += 100000;
				case 402:PlayerInfo[playerid][pCash] += 500000;
				case 411:PlayerInfo[playerid][pCash] += 500000;
				case 415:PlayerInfo[playerid][pCash] += 500000;
				case 429:PlayerInfo[playerid][pCash] += 500000;
				case 451:PlayerInfo[playerid][pCash] += 500000;
				case 506:PlayerInfo[playerid][pCash] += 500000;
				case 541:PlayerInfo[playerid][pCash] += 500000;
				case 522:PlayerInfo[playerid][pCash] += 500000;
				case 434:PlayerInfo[playerid][pCash] += 500000;
				case 477:PlayerInfo[playerid][pCash] += 500000;
				case 480:PlayerInfo[playerid][pCash] += 500000;
				case 535:PlayerInfo[playerid][pCash] += 500000;
				case 545:PlayerInfo[playerid][pCash] += 500000;
				case 558:PlayerInfo[playerid][pCash] += 500000;
				case 559:PlayerInfo[playerid][pCash] += 500000;
				case 560:PlayerInfo[playerid][pCash] += 500000;
				case 562:PlayerInfo[playerid][pCash] += 500000;
				case 565:PlayerInfo[playerid][pCash] += 500000;
				case 587:PlayerInfo[playerid][pCash] += 500000;
				case 602:PlayerInfo[playerid][pCash] += 500000;
				case 521:PlayerInfo[playerid][pCash] += 500000;
				case 463:PlayerInfo[playerid][pCash] += 500000;
				case 468:PlayerInfo[playerid][pCash] += 500000;
			}
			CompVehDel(playerid);
			PlayerInfo[playerid][pCar] = 0;
			PlayerInfo[playerid][pProcents] = 100;
			for ( new i = 0;  i < 5; i++ ) TextDrawShowForPlayer(playerid, TDInfo[i]);
			SetTimerEx("InfoTime", 2000, false, "d", playerid);
			PlayerInfo[playerid][pNumbercar] = 0;
			if(caridhouse[playerid] != -1)
			{
				DestroyVehicle(caridhouse[playerid]);
				caridhouse[playerid] = -1;
			}
			new randik = random(sizeof(gparkcar));
			PlayerInfo[playerid][dCarx] = gparkcar[randik][0];
			PlayerInfo[playerid][dCary] = gparkcar[randik][1];
			PlayerInfo[playerid][dCarz] = gparkcar[randik][2];
			PlayerInfo[playerid][dCarc] = gparkcar[randik][3];
    		OnPlayerUpdateAc(playerid);
    		for ( new i = 0;  i < 5; i++ ) TextDrawShowForPlayer(playerid, TDInfo[i]);
			SetTimerEx("InfoTime", 2000, false, "d", playerid);
	    }
   	case 804:
    	{
    	    if(!response) return 1;
   			if(CarOffer[playerid] < MAX_SLOTS)
			{
				if(ProxDetectorS(8.0, playerid, CarOffer[playerid]))
				{
					if(PlayerInfo[playerid][pCash] < CarPrice[playerid]) return SendErrorMessage(playerid,"你没有那么多钱!");
                    new giveplayer[MAX_PLAYER_NAME];
					GetPlayerName(CarOffer[playerid], giveplayer, sizeof(giveplayer));
					PlayerInfo[playerid][pCash] -= CarPrice[playerid];
					PlayerInfo[playerid][pCar] = PlayerInfo[CarOffer[playerid]][pCar];
					PlayerInfo[playerid][pColor][0] = PlayerInfo[CarOffer[playerid]][pColor][0];
					PlayerInfo[playerid][pColor][1] = PlayerInfo[CarOffer[playerid]][pColor][1];
					PlayerInfo[playerid][pWheels] = PlayerInfo[CarOffer[playerid]][pWheels];
					PlayerInfo[playerid][pSpoilers] = PlayerInfo[CarOffer[playerid]][pSpoilers];
					PlayerInfo[playerid][pHBumper] = PlayerInfo[CarOffer[playerid]][pHBumper];
					PlayerInfo[playerid][pBBumper] = PlayerInfo[CarOffer[playerid]][pBBumper];
					PlayerInfo[playerid][pNitro] = PlayerInfo[CarOffer[playerid]][pNitro];
					PlayerInfo[playerid][pHydraulics] = PlayerInfo[CarOffer[playerid]][pHydraulics];
					PlayerInfo[playerid][pProcents] = PlayerInfo[CarOffer[playerid]][pProcents];
					PlayerInfo[CarOffer[playerid]][pCash] += CarPrice[playerid];
					PlayerInfo[CarOffer[playerid]][pCar] = 0;
					PlayerInfo[CarOffer[playerid]][pColor][0] = 0;
					PlayerInfo[CarOffer[playerid]][pColor][1] = 0;
					CompVehDel(CarOffer[playerid]);
					PlayerInfo[CarOffer[playerid]][pProcents] = 100;
					caridhouse[playerid] = caridhouse[CarOffer[playerid]];
					PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "― 你出售了汽车 %s ,出售价格: %i $", Name(playerid), CarPrice[playerid]);
					SendClientMessage(CarOffer[playerid], -1, string);
					format(string, sizeof(string), "― 你购买了汽车 %s ,购买价格: %i $", giveplayer, CarPrice[playerid]);
					SendClientMessage(playerid, -1, string);
					CarOffer[playerid] = MAX_SLOTS;
					CarPrice[playerid] = 0;
					caridhouse[CarOffer[playerid]] = -1;
					new randik = random(sizeof(gparkcar));
					PlayerInfo[playerid][dCarx] = gparkcar[randik][0];
					PlayerInfo[playerid][dCary] = gparkcar[randik][1];
					PlayerInfo[playerid][dCarz] = gparkcar[randik][2];
					PlayerInfo[playerid][dCarc] = gparkcar[randik][3];
					PlayerInfo[CarOffer[playerid]][dCarx] = gparkcar[randik][0];
					PlayerInfo[CarOffer[playerid]][dCary] = gparkcar[randik][1];
					PlayerInfo[CarOffer[playerid]][dCarz] = gparkcar[randik][2];
					PlayerInfo[CarOffer[playerid]][dCarc] = gparkcar[randik][3];
					OnPlayerUpdateAc(playerid);
					OnPlayerUpdateAc(CarOffer[playerid]);
				}
				else
				{
					SendErrorMessage(playerid,"玩家离你太远了!");
					return true;
				}
			}
			else
			{
				SendErrorMessage(playerid,"没有人要卖给你汽车!");
				return true;
			}
		}
	case 6676:
		{
			if(!response) return 1;
			ExitTuning(playerid),CancelSelectTextDraw(playerid);
			NullComponentid(playerid);
			return 1;
		}
	case 8238:
		{
		    if(!response) return true;
		    SetPVarInt(playerid, "Nom", 1);
		    SetPlayerCheckpoint(playerid,1389.9698,-1890.1642,13.1236,3.0);
            SendServerMessage(playerid,"坐在车里,GPS将显示你要去的地方");
			return true;
		}
	case 9130:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pCash] <= 9499)
				{
					SendErrorMessage(playerid," 你没有足够的钱.");
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				SetPVarInt(playerid,"arenda",GetPlayerVehicleID(playerid));
				TogglePlayerControllable(playerid, 1);
				SendSyntaxMessage(playerid, "你租了一辆车");
				PlayerInfo[playerid][pCash] -= 9500;
				return true;
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
	case 2450:
		{
			if(!response) return 1;
			if(!PlayerInfo[playerid][pWork])
			{
				PlayerInfo[playerid][pWorkGruzObject] = 0;
				PlayerInfo[playerid][pWorkGruzSkin] = GetPlayerSkin(playerid);
				PlayerInfo[playerid][pWork] = 11;
				if(PlayerInfo[playerid][pSex] == 1) { SetPlayerSkin(playerid, 161);}
				if(PlayerInfo[playerid][pSex] == 2) { SetPlayerSkin(playerid, 131);}
				SendSyntaxMessage(playerid, "你现在的工作是园丁");
				SendServerMessage(playerid, "去树下摘苹果. {ffffff}帮助: \"按住鼠标左键并且按下鼠标右键\"");
                SetPVarInt(playerid,"MinerCount", 0);
				SetPlayerAttachedObject(playerid,0,1356,6,0.166000,-0.045999,0.073999,89.099990,-9.800000,105.999992,0.550999,0.520999,0.517999);
			}
			else if(PlayerInfo[playerid][pWork] == 11)
			{
			    if(IsPlayerAttachedObjectSlotUsed(playerid, 0))RemovePlayerAttachedObject(playerid,0);
	    		if(IsPlayerAttachedObjectSlotUsed(playerid, 1))RemovePlayerAttachedObject(playerid,1);
	    		if(IsPlayerAttachedObjectSlotUsed(playerid, 2))RemovePlayerAttachedObject(playerid,2);
	   		 	if(IsPlayerAttachedObjectSlotUsed(playerid, 3))RemovePlayerAttachedObject(playerid,3);
	    		if(IsPlayerAttachedObjectSlotUsed(playerid, 4))RemovePlayerAttachedObject(playerid,4);
	    		if(IsPlayerAttachedObjectSlotUsed(playerid, 5))RemovePlayerAttachedObject(playerid,5);
				PlayerInfo[playerid][pWork] = 0;
				SetPlayerSkin(playerid, PlayerInfo[playerid][pWorkGruzSkin]);
				DisablePlayerCheckpoint(playerid);
				SetPlayerSpecialAction(playerid, 0);
				SCMF(playerid,COLOR_FSERVER,"― Вы заработали {FFCD00}%d$.",PlayerInfo[playerid][pGraffityID]);
				PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pGraffityID];
				FracBank[9] += PlayerInfo[playerid][pGraffityID]; SetOtherInt("FracBank[9]", FracBank[9]);
				PlayerInfo[playerid][pGraffityID] = 0;
				if(PlayerInfo[playerid][pQuest_1] == 0)
				{
				    PlayerInfo[playerid][pQuest_1] = 1;
                    PlayerInfo[playerid][pDonatemoney] += 1;
					SendServerMessage(playerid, "你通过了任务的第一阶段并收到了 1 捐赠点 ( /quest )");
				}
			}
		}
    case 1957:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
				        callcmd::togphone(playerid,"");
					}
				    case 1:
				    {
                        callcmd::admins(playerid,"");
					}
				    case 2:
				    {
				        callcmd::vipmans(playerid,"");
	                }
	            }
			}
			else return true;
		}
	case 9435:
        {
            if(!response) return 0;
            for(new i = 2; i<14; i++)
            {
                if(AccInvInfo[playerid][i] == 0)
                {
                    AccInvInfo[playerid][i] = Accesor[HatsGlasses[playerid]][accchoose[playerid]][0];
                    if(HatsGlasses[playerid] == 0)
                    {
                        AccInvInfo[playerid][1] = i;
                    }
                    else
                    {
                        AccInvInfo[playerid][0] = i;
                    }
                    StopShowBuyAccessories(playerid);
                    CancelSelectTextDraw(playerid);
                    PlayerInfo[playerid][pCash] -= Accesor[HatsGlasses[playerid]][accchoose[playerid]][1];
                    GivePlayerMoney(playerid, -Accesor[HatsGlasses[playerid]][accchoose[playerid]][1]);
                    buyaccessor[playerid] = 0;
                    new skin = GetPlayerSkin(playerid);
                    SetPlayerAttachedObject(playerid, 2, AccInvInfo[playerid][AccInvInfo[playerid][0]], 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5], SkinOffSet[skin][6], SkinOffSet[skin][6], SkinOffSet[skin][6]);
                    new typehat = GetType(AccInvInfo[playerid][AccInvInfo[playerid][1]]);
                    SetPlayerAttachedObject(playerid, 3, AccInvInfo[playerid][AccInvInfo[playerid][1]], 2, AccAngle[typehat][0], 0.03, 0.0, AccAngle[typehat][1], AccAngle[typehat][2], AccAngle[typehat][3]);
                    OnPlayerUpdateAc(playerid);
                    return 1;
                }
            }
            new skin = GetPlayerSkin(playerid);
            SetPlayerAttachedObject(playerid, 2, AccInvInfo[playerid][AccInvInfo[playerid][0]], 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5], SkinOffSet[skin][6], SkinOffSet[skin][6], SkinOffSet[skin][6]);
            new typehat = GetType(AccInvInfo[playerid][AccInvInfo[playerid][1]]);
            SetPlayerAttachedObject(playerid, 3, AccInvInfo[playerid][AccInvInfo[playerid][1]], 2, AccAngle[typehat][0], 0.03, 0.0, AccAngle[typehat][1], AccAngle[typehat][2], AccAngle[typehat][3]);
            return SendErrorMessage(playerid,"没有空间了!!!");
        }
        case 9436:
        {
            if(!response) return 0;
            switch(listitem)
            {
                case 0:
                {
                    if(GetType(AccInvInfo[playerid][AccSlot[playerid]]) == 2)
                    {
                        PlayerTextDrawHide(playerid, AccInv[playerid][0]);
                        PlayerTextDrawSetPreviewModel(playerid,AccInv[playerid][0], AccInvInfo[playerid][AccSlot[playerid]]);
                        PlayerTextDrawShow(playerid, AccInv[playerid][0]);
                        RemovePlayerAttachedObject(playerid, 2);
                        new skin = GetPlayerSkin(playerid);
                        SetPlayerAttachedObject(playerid, 2, AccInvInfo[playerid][AccSlot[playerid]], 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5], SkinOffSet[skin][6], SkinOffSet[skin][6], SkinOffSet[skin][6]);
                    }
                    else
                    {
                        PlayerTextDrawHide(playerid, AccInv[playerid][1]);
                        PlayerTextDrawSetPreviewModel(playerid,AccInv[playerid][1], AccInvInfo[playerid][AccSlot[playerid]]);
                        PlayerTextDrawShow(playerid, AccInv[playerid][1]);
                        RemovePlayerAttachedObject(playerid, 3);
                        new typehat = GetType(AccInvInfo[playerid][AccSlot[playerid]]);
                        SetPlayerAttachedObject(playerid, 3, AccInvInfo[playerid][AccSlot[playerid]], 2, AccAngle[typehat][0], 0.03, 0.0, AccAngle[typehat][1], AccAngle[typehat][2], AccAngle[typehat][3]);
                    }
                }
                case 1:
                {
                    if(AccInvInfo[playerid][0] == AccSlot[playerid])
                    {
                        PlayerTextDrawHide(playerid, AccInv[playerid][0]);
                        PlayerTextDrawHide(playerid, AccInv[playerid][AccSlot[playerid]]);
                        AccInvInfo[playerid][0] = 0;
                        AccInvInfo[playerid][AccSlot[playerid]] = 0;
                        if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
                    }
                    else if(AccInvInfo[playerid][1] == AccSlot[playerid])
                    {
                        PlayerTextDrawHide(playerid, AccInv[playerid][1]);
                        PlayerTextDrawHide(playerid, AccInv[playerid][AccSlot[playerid]]);
                        AccInvInfo[playerid][1] = 0;
                        AccInvInfo[playerid][AccSlot[playerid]] = 0;
                        if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
                    }
                }
            }
        }
    case 2430:
        {
            if(response)
            {
                new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
                if(listitem == 0)
                {
                    if(PlayerInfo[playerid][pUdotka] == 1) return SendErrorMessage(playerid,"你已经有了一根钓鱼竿!");
					if(PlayerInfo[playerid][pCash] < till*20) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 20) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*20;
					BizzPay[i] += till*20;
					BizzInfo[i][bProduct] -= 20;
					PlayerInfo[playerid][pCash] -= till*20;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
                    PlayerInfo[playerid][pUdotka] += 1;
				    RemovePlayerAttachedObject(playerid, 4);
				    SetPlayerAttachedObject(playerid, 4, 18632, 5, 0.082999, 0.049999, 0.000000, -27.899991, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
                    SCMF(playerid,COLOR_FSERVER,"― 你购买了一根钓鱼竿,花费 %d $",till*20);
                    SendClientMessage(playerid, COLOR_WHITE, "- 钓鱼请到码头,并且输入 /fishing!");
                    return true;
                }
                if(listitem == 1)
                {
                    if(PlayerInfo[playerid][pUdotka] == 0) return SendErrorMessage(playerid,"你没有钓鱼竿!");
                    BizzInfo[i][bMoney] -= till*10;
					BizzPay[i] -= till*10;
					PlayerInfo[playerid][pCash] += till*10;
                    PlayerInfo[playerid][pUdotka] = 0;
				    if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
				    SCMF(playerid,COLOR_FSERVER,"― 你将钓鱼竿卖了,获得 %d $",till*10);
                    return true;
				}
    			if(listitem == 2)
                {
                    if(PlayerInfo[playerid][pNazivka] > 0) return SendErrorMessage(playerid,"你已经有了鱼饵!");
  					if(PlayerInfo[playerid][pCash] < till*1) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 1) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*1;
					BizzPay[i] += till*1;
					BizzInfo[i][bProduct] -= 5;
					PlayerInfo[playerid][pCash] -= till*1;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
                    PlayerInfo[playerid][pNazivka] += 10;
                    SCMF(playerid,COLOR_FSERVER,"― 你购买了10个鱼饵,花费 %d $",till*1);
                    return true;
				}
            }
            else
            {
                return 1;
            }
        }
	case 2008:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						ApplyAnimation(playerid,"VENDING","VEND_Drink2_P",25.5,0,1,0,1,1,1);
						PlayerPlaySound(playerid, 20802, 0.0, 0.0, 0.0);
					}
					case 1:
					{
						ApplyAnimation(playerid,"PED","SEAT_down", 4.1, 0, 0, 0, 1, 1 ,1);
						PlayerPlaySound(playerid, 20802, 0.0, 0.0, 0.0);
					}
					case 2:
					{
						SetPlayerSpecialAction(playerid, 5);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 3:
					{
						ApplyAnimation(playerid, "DANCING", "DAN_Loop_A", 4.0999, 0, 1, 1, 1, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 4:
					{
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE4);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 5:
					{
						SetPlayerSpecialAction(playerid, 10);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 6:
					{
						ApplyAnimation(playerid, "Attractors", "Stepsit_in", 4.0999, 0, 1, 1, 1, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 7:
					{
						ApplyAnimation(playerid, "Attractors", "Stepsit_out", 4.0999, 0, 1, 1, 1, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 8:
					{
						ApplyAnimation(playerid, "FOOD", "SHP_Tray_Lift_Out", 4.0999, 0, 1, 1, 1, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 9:
					{
						ApplyAnimation(playerid, "FOOD", "SHP_Tray_Out", 4.0999, 0, 1, 1, 1, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 10:
					{
						ApplyAnimation(playerid, "GANGS", "hndshkca", 4.0999, 0, 1, 1, 1, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 11:
					{
						ApplyAnimation(playerid, "GANGS", "hndshkda", 4.0999, 0, 1, 1, 1, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 12:
					{
						ApplyAnimation(playerid, "GANGS", "hndshkea", 4.0999, 0, 1, 1, 1, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 13:
					{
						ApplyAnimation(playerid, "GANGS", "leanIN", 4.0999, 0, 1, 1, 1, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 14:
					{
						ApplyAnimation(playerid, "OTB", "wtchrace_lose", 4.0999, 0, 1, 1, 1, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 15:
					{
						ApplyAnimation(playerid, "COP_AMBIENT", "Copbrowse_shake", 4.0999, 0, 1, 1, 1, 1,1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 16:
					{
						ApplyAnimation(playerid, "CRACK", "crckidle1", 4.0999, 0, 1, 1, 1, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 17:
					{
						ApplyAnimation(playerid, "CRACK", "crckidle2", 4.0999, 0, 1, 1, 1, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 18:
					{
						ApplyAnimation(playerid, "JST_BUISNESS", "girl_02", 4.0999, 0, 1, 1, 1, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 19:
					{
						ApplyAnimation(playerid, "DAM_JUMP", "DAM_Dive_Loop", 4.0999, 0, 1, 1, 1, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 20:
					{
						ApplyAnimation(playerid, "DEALER", "DEALER_IDLE", 4.0999, 0, 1, 1, 1, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 21:
					{
						ApplyAnimation(playerid, "TATTOOS", "TAT_ArmL_Out_T", 4.0999, 0, 1, 1, 1, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 22:
					{
						ApplyAnimation(playerid,"BEACH","Lay_Bac_Loop",4.1,0,1,1,1,1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 23:
					{
						ApplyAnimation( playerid, "DEALER", "DRUGS_BUY", 4.1, 1, 1, 1, 1, 1 ,1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 24:
					{
						ApplyAnimation( playerid, "RYDER", "RYD_Die_PT1", 4.1, 1, 1, 1, 1, 1 ,1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
				}
				Animited[playerid] = 1;
			}
			return 1;
		}
	case 2351:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: // СКИН №1 +
					{
						switch(PlayerInfo[playerid][pMember]) //
						{
							case 1: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 265);// LSPD
							case 2: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 286);// FBI
							case 3: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 71);// tyrma
							case 4: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 70);// МЧС
							case 5: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 223);// LCN
							case 6: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 120);// Yaki
							case 7: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 57);// Mayer
							case 8: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 295);// Strets
							case 9: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 265);// SFPD
							case 11: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 59);// Licenses
							case 12: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 102);// Ballas
							case 13: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 108);// Vagos
							case 14: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 112);// RM
							case 15: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 105);// Groove
							case 16: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 250);// SMI LS
							case 17: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 114);// Azteck
							case 18: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 173);// Rifa
							case 19: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 287);// Army LV
							case 20: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 265);// LVPD
						}
						PlayerInfo[GetPVarInt(playerid,"SKIN")][pModel] = GetPlayerSkin(GetPVarInt(playerid,"SKIN"));
					}
					case 1:// СКИН №2 +
					{
						switch(PlayerInfo[playerid][pMember])
						{
							case 1: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 266);// LSPD
							case 2: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 163);// FBI
							case 3: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 309);// tyrma
							case 4: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 274);// МЧС
							case 5: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 124);// LCN
							case 6: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 123);// Yaki
							case 7: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 150);// Mayer
							case 8: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 227);// Strets
							case 9: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 266);// SFPD
							case 11: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 172);// Licenses
							case 12: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 103);// Ballas
							case 13: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 109);// Vagos
							case 14: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 111);// RM
							case 15: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 106);// Groove
							case 16: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 261);// SMI LS
							case 17: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 115);// Azteck
							case 18: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 174);// Rifa
							case 19: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 191);// Army LV
							case 20: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 266);// LVPD
						}
						PlayerInfo[GetPVarInt(playerid,"SKIN")][pModel] = GetPlayerSkin(GetPVarInt(playerid,"SKIN"));
					}
					case 2:// СКИН №3 +
					{
						switch(PlayerInfo[playerid][pMember])
						{
							case 1: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 267);// LSPD
							case 2: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 164);// FBI
							case 3: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 300);// tyrma
							case 4: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 275);// MO LS
							case 5: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 113);// LCN
							case 6: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 169);// Yaki
							case 7: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 98);// Mayer
							case 8: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 290);// Strets
							case 9: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 267);// SFPD
							case 11: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 189);// Licenses
							case 12: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 104);// Ballas
							case 13: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 110);// Vagos
							case 14: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 125);// RM
							case 15: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 107);// Groove
							case 16: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 211);// SMI LS
							case 17: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 116);// Azteck
							case 18: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 175);// Rifa
							case 19: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 61);// Army LV
							case 20: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 267);// LVPD
						}
						PlayerInfo[GetPVarInt(playerid,"SKIN")][pModel] = GetPlayerSkin(GetPVarInt(playerid,"SKIN"));
					}
					case 3:// СКИН №4 +
					{
						switch(PlayerInfo[playerid][pMember])
						{
							case 1: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 165);// LSPD
							case 2: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 294);// FBI
							case 3: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 301);// tyrma
							case 4: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 276);// MO Ls
							case 5: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 214);// LCN
							case 6: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 186);// Yaki
							case 7: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 187);// Mayer
							case 8: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 194);// Strets
							case 9: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 165);// SFPD
							case 11: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 240);// instrucotrs
							case 12: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 13);// Ballas
							case 13: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 56);// Vagos
							case 14: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 272);// RM
							case 15: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 269);// Groove
							case 16: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 217);// SMI LS
							case 17: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 292);// Azteck
							case 19: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 255);// tyrma
							case 20: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 165);// LVPD
						}
						PlayerInfo[GetPVarInt(playerid,"SKIN")][pModel] = GetPlayerSkin(GetPVarInt(playerid,"SKIN"));
					}
					case 4:// СКИН №5 +
					{
						switch(PlayerInfo[playerid][pMember])
						{
							case 1: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 284);// LSPD
							case 2: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 166);// FBI
							case 3: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 228);// tyrma
							case 4: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 308);// MO LS
							case 6: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 169);// Yaki
							case 7: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 147);// Mayer
							case 9: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 284);// SFPD
							case 14: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 214);// RM
							case 15: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 270);// Groove
							case 16: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 211);// SMI LS
							case 20: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 284);// LVPD
						}
						PlayerInfo[GetPVarInt(playerid,"SKIN")][pModel] = GetPlayerSkin(GetPVarInt(playerid,"SKIN"));
					}
					case 5:// СКИН №6 +
					{
						switch(PlayerInfo[playerid][pMember])
						{
							case 1: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 285);// LSPD
							case 2: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 141);// fbi
							case 6: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 121);// Yaki
							case 9: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 285);// SFPD
							case 15: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 271);// Groove
							case 20: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 285);// LVPD
						}
						PlayerInfo[GetPVarInt(playerid,"SKIN")][pModel] = GetPlayerSkin(GetPVarInt(playerid,"SKIN"));
					}
					case 6:// СКИН №7
					{
						switch(PlayerInfo[playerid][pMember])
						{
							case 1: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 310);// LSPD
							case 15: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 56);// Groove Stret
							case 9: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 310);// SFPD
							case 20: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 288);// LVPD
						}
						PlayerInfo[GetPVarInt(playerid,"SKIN")][pModel] = GetPlayerSkin(GetPVarInt(playerid,"SKIN"));
					}
					case 7:// СКИН №8
					{
						switch(PlayerInfo[playerid][pMember])
						{
                            case 1: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 306);// LSPD
                            case 15: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 149);// Groove Stret
							case 9: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 306);// SFPD
							case 20: SetPlayerSkin(GetPVarInt(playerid,"SKIN"), 76);// LVPD
						}
						PlayerInfo[GetPVarInt(playerid,"SKIN")][pModel] = GetPlayerSkin(GetPVarInt(playerid,"SKIN"));
					}
				}
			}
		}
   case 2423:
        {
            if(response)
            {
                if(listitem == 0)
                {
                    if(PlayerInfo[playerid][pCash] < 5999) return SendErrorMessage(playerid,"需要 6000$!");
                    PlayerInfo[playerid][pCash] -= 6000;
                    SetPlayerSkin(playerid, 68);
                    SetPlayerHealthAC(playerid, 100);
                    GiveWeapon(playerid, 15, 100);
                    SendSyntaxMessage(playerid, "你购买了服饰");
                    return true;
                }
                if(listitem == 1)
                {
                    if(PlayerInfo[playerid][pCash] < 9999) return SendErrorMessage(playerid,"需要 10000$!");
                    PlayerInfo[playerid][pCash] -= 10000;
                    SetPlayerSkin(playerid, 147);
                    SetPlayerHealthAC(playerid, 100);
                    GiveWeapon(playerid, 14, 100);
                    SendSyntaxMessage(playerid, "你购买了服饰");
                    return true;
                }
                if(listitem == 2)
                {
                    if(PlayerInfo[playerid][pCash] < 9999) return SendErrorMessage(playerid,"需要 10000$!");
                    PlayerInfo[playerid][pCash] -= 10000;
                    SetPlayerSkin(playerid, 93);
                    SetPlayerHealthAC(playerid, 100);
                    GiveWeapon(playerid, 14, 100);
                    SendSyntaxMessage(playerid, "你购买了服饰");
                    return true;
                }
                if(listitem == 3)
                {
                    if(PlayerInfo[playerid][pCash] < 19999) return SendErrorMessage(playerid,"需要 20000$!");
                    PlayerInfo[playerid][pCash] -= 20000;
                    SetPlayerSkin(playerid, 186);
                    SetPlayerHealthAC(playerid, 100);
                    GiveWeapon(playerid, 15, 100);
                    SendSyntaxMessage(playerid, "你购买了新郎服装");
                    return true;
                }
                if(listitem == 4)
                {
                    if(PlayerInfo[playerid][pCash] < 24999) return SendErrorMessage(playerid,"需要 25000$!");
                    PlayerInfo[playerid][pCash] -= 25000;
                    SetPlayerSkin(playerid, 219);
                    SetPlayerHealthAC(playerid, 100);
                    GiveWeapon(playerid, 14, 100);
                    SendSyntaxMessage(playerid, "你购买了新娘服装");
                    return true;
                }
                if(listitem == 5)
                {
                    if(PlayerInfo[playerid][pCash] < 7999) return SendErrorMessage(playerid,"需要 8000$!");
                    PlayerInfo[playerid][pCash] -= 8000;
                    SetPlayerSkin(playerid, 164);
                    SetPlayerHealthAC(playerid, 100);
                    GiveWeapon(playerid, 24, 14);
                    SendSyntaxMessage(playerid, "你购买了保安制服");
                    return true;
                }
                if(listitem == 6)
                {
                    if(PlayerInfo[playerid][pCash] < 5999) return SendErrorMessage(playerid,"需要 6000$!");
                    PlayerInfo[playerid][pCash] -= 6000;
                    SetPlayerSkin(playerid, 61);
                    SetPlayerHealthAC(playerid, 100);
                    SendSyntaxMessage(playerid, "你购买了司机制服");
                    return true;
				}
            }
            else
            {
                return 1;
            }
        }
	case 92:
		{
			if(response)
			{
				if(Rudokop[playerid] == 0)
				{
					Rudokop[playerid] = 1;
					Dobivat[playerid] = 1;
					RudnikAmount[playerid] = 0;
					SetPVarInt(playerid, "skin_old", GetPlayerSkin(playerid));
					SetPlayerSkin(playerid, 260);
					ApplyAnimation(playerid, "CARRY", "liftup", 4.1, 0, 0, 0, 0, 0);
					ApplyAnimation(playerid, "SWORD", "sword_4", 4.0, 1, 0, 0, 0, 0);
					ClearAnimations(playerid);
     				SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000);
					SendServerMessage(playerid, "恭喜你!成为了矿工.");
					SendServerMessage(playerid, "去矿山开采矿石,它在矿山的岩石上.");
					return true;
				}
				else
				{
					DisablePlayerCheckpoint(playerid);
					ApplyAnimation(playerid,"PED", "IDLE_tired", 4.1, 0, 1, 1, 0, 1);
					SetPlayerSkin(playerid, GetPVarInt(playerid, "skin_old"));
					SendSyntaxMessage(playerid, "你辞去了矿工工作.");
					format(string, sizeof(string),"{00FF00}― 开采的矿石总量: {408080}%d 公斤,{00FF00}工资获得 %d$.",RudnikAmount[playerid],RudnikAmount[playerid]*40);
				 	SendClientMessage(playerid,-1,string);
					PlayerInfo[playerid][pCash] += RudnikAmount[playerid]*40;
					FracBank[9] += RudnikAmount[playerid]*40; SetOtherInt("FracBank[9]", FracBank[9]);
					RudnikAmount[playerid] = 0;
					Rudokop[playerid] = 0;
					Dobivat[playerid] = 0;
					SetPVarInt(playerid,"Otnesti",0);
					RemovePlayerAttachedObject(playerid,4);
					RemovePlayerAttachedObject(playerid,3);
					if(GetPVarInt(playerid,"quest_rab"))
					{
						PlayerInfo[playerid][pQuest_1] = 1;
						PlayerInfo[playerid][pDonatemoney] += 1;
						SendServerMessage(playerid, "你通过了任务的第一阶段并收到了 1 捐赠点 ( /quest )");
						DeletePVar(playerid,"quest_rab");
					}
					return true;
				}
			}
		}
	case 2286: if(response) SetCameraBehindPlayer(playerid),TogglePlayerControllable(playerid, 1);
    case 1500:
        {
            if(response)
            {
                switch(listitem)
                {
                    case 0:
                    {
                        if(PlayerInfo[playerid][pCash] < 150) return SendErrorMessage(playerid,"你没有足够的钱!");
                        GameTextForPlayer(playerid, "~r~ 150$~n~~b~ 600 M~n~~y~ GO!", 1000, 4);
                        PlayerInfo[playerid][pCash] -= 150;
                        SetPlayerInterior(playerid,0);
                        SetPlayerVirtualWorld(playerid, 0);
                        Q_SetPlayerPos(playerid,1957.7457,-2183.3574,613.5468);
                        DeletePVar(playerid, "parashuts");
                        PlayerPlaySound(playerid, 1062, 0.0, 0.0, 0.0);
                        DisablePlayerCheckpoint(playerid);
                    }
                    case 1:
                    {
                        if(PlayerInfo[playerid][pCash] < 300) return SendErrorMessage(playerid,"你没有足够的钱!");
                        GameTextForPlayer(playerid, "~r~ 300$~n~~b~ 1000 M~n~~y~ GO!", 1000, 4);
                        PlayerInfo[playerid][pCash] -= 150;
                        SetPlayerInterior(playerid,0);
                        SetPlayerVirtualWorld(playerid, 0);
                        Q_SetPlayerPos(playerid,1957.7457,-2183.3574,1013.5151);
                        DeletePVar(playerid, "parashuts");
                        PlayerPlaySound(playerid, 1062, 0.0, 0.0, 0.0);
                        DisablePlayerCheckpoint(playerid);
                    }
                    case 2:
                    {
                        if(PlayerInfo[playerid][pCash] < 450) return SendErrorMessage(playerid,"你没有足够的钱!.");
                        GameTextForPlayer(playerid, "~r~ 450$~n~~b~ 2000 M~n~~y~ GO!", 1000, 4);
                        PlayerInfo[playerid][pCash] -= 150;
                        SetPlayerInterior(playerid,0);
                        SetPlayerVirtualWorld(playerid, 0);
                        Q_SetPlayerPos(playerid,1957.7457,-2183.3574,2013.5510);
                        DeletePVar(playerid, "parashut");
                        PlayerPlaySound(playerid, 1062, 0.0, 0.0, 0.0);
                        DisablePlayerCheckpoint(playerid);
                        return true;
                    }
                }
		    }
		}
    case 10087:
        {
            if(!response) return true;
            if(PlayerInfo[playerid][pMedcard] == 1) return SendErrorMessage(playerid,"你已经有了医疗卡");
            PlayerInfo[playerid][pMedcard] = 1;
            SendSyntaxMessage(playerid, "你收到了一张医疗卡 (/showmed)");
            SendSyntaxMessage(playerid, "借助医疗卡，您现在可以加入组织.");
            return true;
        }
    case 300:
        {
            if(response)
            {
                if(PlayerInfo[playerid][pGunLic] == 0) return SendErrorMessage(playerid,"你没有武器执照!（再次按ALT退出）");
                new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
				if(PlayerInfo[playerid][pCash] < till*50) return SendErrorMessage(playerid,"你没有足够的钱!");
				if(BizzInfo[i][bProduct] < 50) return SendServerMessage(playerid, "产业缺货了!");
            	BizzInfo[i][bMoney] += till*50;
				BizzPay[i] += till*50;
				BizzInfo[i][bProduct] -= 50;
				PlayerInfo[playerid][pCash] -= till*50;
				SetBizzInt(i, "money", BizzInfo[i][bMoney]);
				SetBizzInt(i, "product", BizzInfo[i][bProduct]);
				GiveWeapon(playerid, 24, 20), SendSyntaxMessage(playerid,"你购买了一把 Desert Eagle");
                SetCameraBehindPlayer(playerid);
            }
            else
            {
                SetCameraBehindPlayer(playerid);
            }
        }
        case 301:
        {
            if(response)
            {
                if(PlayerInfo[playerid][pGunLic] == 0) return SendErrorMessage(playerid,"你没有武器执照!(再次按ALT退出)");
                new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
				if(PlayerInfo[playerid][pCash] < till*30) return SendErrorMessage(playerid,"你没有足够的钱!");
				if(BizzInfo[i][bProduct] < 30) return SendServerMessage(playerid, "产业缺货了!");
            	BizzInfo[i][bMoney] += till*30;
				BizzPay[i] += till*30;
				BizzInfo[i][bProduct] -= 30;
				PlayerInfo[playerid][pCash] -= till*30;
				SetBizzInt(i, "money", BizzInfo[i][bMoney]);
				SetBizzInt(i, "product", BizzInfo[i][bProduct]);
				GiveWeapon(playerid, 23, 20), SendSyntaxMessage(playerid,"你购买了一把 SdPistol");
                SetCameraBehindPlayer(playerid);
            }
            else
            {
                SetCameraBehindPlayer(playerid);
            }
        }
        case 302:
        {
            if(response)
            {
                if(PlayerInfo[playerid][pGunLic] == 0) return SendErrorMessage(playerid,"你没有武器执照(再次按ALT退出)");
                new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
				if(PlayerInfo[playerid][pCash] < till*40) return SendErrorMessage(playerid,"你没有足够的钱!");
				if(BizzInfo[i][bProduct] < 40) return SendServerMessage(playerid, "产业缺货了!");
            	BizzInfo[i][bMoney] += till*40;
				BizzPay[i] += till*40;
				BizzInfo[i][bProduct] -= 40;
				PlayerInfo[playerid][pCash] -= till*40;
				SetBizzInt(i, "money", BizzInfo[i][bMoney]);
				SetBizzInt(i, "product", BizzInfo[i][bProduct]);
				GiveWeapon(playerid, 25, 40), SendSyntaxMessage(playerid,"你购买了一把 ShotGun");
                SetCameraBehindPlayer(playerid);
            }
            else
            {
                SetCameraBehindPlayer(playerid);
            }
        }
        case 303:
        {
            if(response)
            {
                if(PlayerInfo[playerid][pGunLic] == 0) return SendErrorMessage(playerid,"你没有武器执照(再次按ALT退出)");
                new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
				if(PlayerInfo[playerid][pCash] < till*60) return SendErrorMessage(playerid,"你没有足够的钱!");
				if(BizzInfo[i][bProduct] < 60) return SendServerMessage(playerid, "产业缺货了!");
            	BizzInfo[i][bMoney] += till*60;
				BizzPay[i] += till*60;
				BizzInfo[i][bProduct] -= 60;
				PlayerInfo[playerid][pCash] -= till*60;
				SetBizzInt(i, "money", BizzInfo[i][bMoney]);
				SetBizzInt(i, "product", BizzInfo[i][bProduct]);
				GiveWeapon(playerid, 29, 150), SendSyntaxMessage(playerid,"你购买了一把 MP5");
                SetCameraBehindPlayer(playerid);
            }
            else
            {
                SetCameraBehindPlayer(playerid);
            }
        }
        case 304:
        {
            if(response)
            {
                if(PlayerInfo[playerid][pGunLic] == 0) return SendErrorMessage(playerid,"你没有武器执照(再次按ALT退出)");
                new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
				if(PlayerInfo[playerid][pCash] < till*100) return SendErrorMessage(playerid,"你没有足够的钱!");
				if(BizzInfo[i][bProduct] < 100) return SendServerMessage(playerid, "产业缺货了!");
            	BizzInfo[i][bMoney] += till*100;
				BizzPay[i] += till*100;
				BizzInfo[i][bProduct] -= 100;
				PlayerInfo[playerid][pCash] -= till*100;
				SetBizzInt(i, "money", BizzInfo[i][bMoney]);
				SetBizzInt(i, "product", BizzInfo[i][bProduct]);
				GiveWeapon(playerid, 30, 160), SendSyntaxMessage(playerid,"你购买了一把 AK-47");
                SetCameraBehindPlayer(playerid);
            }
            else
            {
                SetCameraBehindPlayer(playerid);
            }
        }
        case 305:
        {
            if(response)
            {
                if(PlayerInfo[playerid][pGunLic] == 0) return SendErrorMessage(playerid,"你没有武器执照(再次按ALT退出)");
                new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
				if(PlayerInfo[playerid][pCash] < till*100) return SendErrorMessage(playerid,"你没有足够的钱!");
				if(BizzInfo[i][bProduct] < 100) return SendServerMessage(playerid, "产业缺货了!");
            	BizzInfo[i][bMoney] += till*100;
				BizzPay[i] += till*100;
				BizzInfo[i][bProduct] -= 100;
				PlayerInfo[playerid][pCash] -= till*100;
				SetBizzInt(i, "money", BizzInfo[i][bMoney]);
				SetBizzInt(i, "product", BizzInfo[i][bProduct]);
				GiveWeapon(playerid, 31, 160), SendSyntaxMessage(playerid,"你购买了一把 M4A1");
                SetCameraBehindPlayer(playerid);
            }
            else
            {
                SetCameraBehindPlayer(playerid);
            }
        }
        case 306:
        {
            if(response)
            {
                if(PlayerInfo[playerid][pGunLic] == 0) return SendErrorMessage(playerid,"你没有武器执照(再次按ALT退出)");
				new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
				if(PlayerInfo[playerid][pCash] < till*100) return SendErrorMessage(playerid,"你没有足够的钱!");
				if(BizzInfo[i][bProduct] < 100) return SendServerMessage(playerid, "产业缺货了!");
            	BizzInfo[i][bMoney] += till*100;
				BizzPay[i] += till*100;
				BizzInfo[i][bProduct] -= 100;
				PlayerInfo[playerid][pCash] -= till*100;
				SetBizzInt(i, "money", BizzInfo[i][bMoney]);
				SetBizzInt(i, "product", BizzInfo[i][bProduct]);
				SetPlayerArmourAC(playerid, 100.0);
                SetPlayerAttachedObject(playerid, 2 , 19142, 1,0.08,0.04,0.00,0.0,0.0,-7.4);
                SetCameraBehindPlayer(playerid);
            }
            else
            {
                SetCameraBehindPlayer(playerid);
            }
        }
	case 9595:
		{
			if(response)
			{
			    new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
				if(listitem == 0)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 7, 19078, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
					SendSyntaxMessage(playerid, "你买了一只鹦鹉");
					return 1;
				}
				if(listitem == 1)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 0, 18693, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
					SetPlayerAttachedObject(playerid, 1, 18693, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
					SetPlayerAttachedObject(playerid, 4, 18965, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
					SendSyntaxMessage(playerid, "你买了全能套装");
					return 1;
				}
				if(listitem == 2)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 7, 19270, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
					SendSyntaxMessage(playerid, "你买了一个 Spark 戴在你头上");
					return 1;
				}
				if(listitem == 3)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 2,19137,2,0.100000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
					SendSyntaxMessage(playerid, "你买了一顶鸡帽子");
					return 1;
				}
				if(listitem == 4)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 7, 19163, 2, 0.111052, 0.021643, -0.000846, 100.280899, 100.752510, 445.071044, 1.100000, 1.300000, 1.300000);
					SendSyntaxMessage(playerid, "你买了一个黑色面具");
					return 1;
				}
				if(listitem == 5)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 0, 18915, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
					SendSyntaxMessage(playerid, "你购买了一个头巾");
					return 1;
				}
				if(listitem == 6)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 0, 18912, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
					SendSyntaxMessage(playerid, "你购买了一个头巾");
					return 1;
				}
				if(listitem == 7)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 0, 18916, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
					SendSyntaxMessage(playerid, "你购买了一个头巾");
					return 1;
				}
				if(listitem == 8)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 0, 18917, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
					SendSyntaxMessage(playerid, "你购买了一个头巾");
					return 1;
				}
				if(listitem == 9)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 0, 18918, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
					SendSyntaxMessage(playerid, "你购买了一个头巾");
					return 1;
				}
				if(listitem == 10)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 4, 3528, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 0.100000, 0.100000, 0.100000);
					SendSyntaxMessage(playerid, "你买了龙面具");
					return 1;
				}
				if(listitem == 11)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 4, 18643, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
					SendSyntaxMessage(playerid, "你买了激光");
					return 1;
				}
				if(listitem == 12)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 1, 356, 6, 0.013610, -0.021393, -0.144862, 2.354303, 354.413848, 0.219168, 3.034477, 3.000000, 3.000000);
					SendSyntaxMessage(playerid, "你买了一个大的M4在你手上");
					return 1;
				}
				if(listitem == 13)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 0, 19078, 1, -1.097527, -0.348305, -0.008029, 0.000000, 0.000000, 0.000000, 8.073966, 8.073966, 8.073966);
					SendSyntaxMessage(playerid, "你买了一只鹦鹉服装");
					return 1;
				}
				if(listitem == 14)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 0, 18642, 6, 0.055994, 0.018028, 0.045403, 348.699523, 154.366394, 0.000000, 1.000000, 1.000000, 1.000000);
					SendSyntaxMessage(playerid, "你买了Shocker");
					return 1;
				}
				if(listitem == 15)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 0, 19348, 6, 0.055994, 0.018028, 0.045403, 348.699523, 154.366394, 0.000000, 1.000000, 1.000000, 1.000000);
					SendSyntaxMessage(playerid, "你买了一根手杖");
					return 1;
				}
				if(listitem == 16)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 4, 19487, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
					SendSyntaxMessage(playerid, "你买了一顶白帽子");
					return 1;
				}
				if(listitem == 17)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 4, 19352, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
					SendSyntaxMessage(playerid, "你买了一顶黑帽子");
					return 1;
				}
				if(listitem == 18)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 2, 19066, 2, 0.13, 0.0, 0.0, 0.0, 80.0, 80.0);
					SendSyntaxMessage(playerid, "你买了一个新年帽");
					return 1;
				}
				if(listitem == 19)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 4, 19488, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
					SendSyntaxMessage(playerid, "你买了一个白帽2号");
					return 1;
				}
				if(listitem == 20)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 3 , 18636, 2,0.131,0.045,0.00,0.0,90.0,96.0);
					SendSyntaxMessage(playerid, "你买了一顶警察帽");
					return 1;
				}
				if(listitem == 21)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 2 , 19036, 2,0.131,0.045,0.00,0.0,90.0,96.0);
					SendSyntaxMessage(playerid, "你买了一个面具");
					return 1;
				}
				if(listitem == 22)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 2 , 19037, 2,0.131,0.045,0.00,0.0,90.0,96.0);
					SendSyntaxMessage(playerid, "你买了一个面具");
					return 1;
				}
				if(listitem == 23)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 2 , 19038, 2,0.131,0.045,0.00,0.0,90.0,96.0);
					SendSyntaxMessage(playerid, "你买了一个面具");
					return 1;
				}
				if(listitem == 24)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 2, 19067, 2, 0.13, 0.0, 0.0, 0.0, 80.0, 80.0);
					SendSyntaxMessage(playerid, "你买了一顶冬帽1号");
					return 1;
				}
				if(listitem == 25)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 2, 19068, 2, 0.13, 0.0, 0.0, 0.0, 80.0, 80.0);
					SendSyntaxMessage(playerid, "你买了一顶冬帽2号");
					return 1;
				}
				if(listitem == 26)
				{
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
            		BizzInfo[i][bMoney] += till*10;
					BizzPay[i] += till*10;
					BizzInfo[i][bProduct] -= 10;
					PlayerInfo[playerid][pCash] -= till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid, 2, 19069, 2, 0.13, 0.0, 0.0, 0.0, 80.0, 80.0);
					SendSyntaxMessage(playerid, "你买了一顶冬帽3号");
					return 1;
				}
			}
			return 1;
		}
	case 8023:
		{
			if(response)
			{
                new carid = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
				    case 0: callcmd::e(playerid,"");
				    case 1: callcmd::farq(playerid,"");
				    case 2: callcmd::lock(playerid,"");
				    case 3:
				    {
				        GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
				        if(bonnet == 0) SetVehicleParamsEx(carid,engine,lights,alarm,doors,true,boot,objective);
				        else SetVehicleParamsEx(carid,engine,lights,alarm,doors,false,boot,objective);
				    }
				    case 4:
				    {
				        GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
				        if(boot == 0) SetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,true,objective);
				        else SetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,false,objective);
				    }
				    case 5: callcmd::fillcarq(playerid,"");
				    case 6: callcmd::seatbelt(playerid,"");
					case 7:
					{
					    format(YCMDstr,sizeof(YCMDstr),"{ffa500}车型: {00cc00}%s",VehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
					    ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}信息",YCMDstr,"关闭","");
					}
				}
			}
		}
	case 8533:
		{
		    if(!response) return true;
		    switch(listitem)
		    {
				case 0:
				{
                    callcmd::smokeq(playerid,"");
				}
				case 1:
				{
                    callcmd::smokeinfo(playerid,"");
                }
		    }
		    return true;
		}
	case 228:
		{
		    new house = PlayerInfo[playerid][pPhousekey];
		    if(!response) return true;
		    switch(listitem)
		    {
				case 0:
				{
					if(HouseInfo[house][hLock] == 1)
					{
						HouseInfo[house][hLock] = 0;
						GameTextForPlayer(playerid, "~w~House doors ~g~Unlocked", 2000, 4);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						callcmd::hpanel(playerid,"");
						return true;
					}
					if(HouseInfo[house][hLock] == 0)
					{
						HouseInfo[house][hLock] = 1;
						GameTextForPlayer(playerid, "~w~House doors ~r~Locked", 2000, 4);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						callcmd::hpanel(playerid,"");
						return true;
					}
				}
				case 1:
				{
				    format(string,sizeof(string),"{FFFFFF}- 房屋账户:{ffa500} %i {FFFFFF}$\n{FF6347}- 您可以在任何ATM机上支付房费",HouseInfo[house][hTakings]);
				    ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX, "{1E90FF}房子",string, "关闭", "");
				    return true;
				}
				case 2:
				{
                    callcmd::homeq(playerid,"");
				}
 			    case 3:
 			    {
        			SendServerMessage(playerid, "重要信息: 必须在家里.");
                    callcmd::sellhouseq(playerid,"");
				}
				case 4:
				{
                    callcmd::fixcarq(playerid,"");
				}
				case 5:
				{
                    callcmd::changeinteriorq(playerid,"");
				}
				case 6:
				{
                    callcmd::setspawn(playerid,"");
				}
	            case 7:
				{
                    ShowPlayerDialog(playerid,5034, DIALOG_STYLE_INPUT, "{1E90FF}登记处","输入市民[ID]\n你想要谁搬进你家", "确定", "退出");
                    return true;
                }
				case 8:
				{
				    ShowPlayerDialog(playerid,5035, DIALOG_STYLE_INPUT, "{1E90FF}移除","输入市民[ID]\n你想将谁移除你家", "确定", "退出");
                    return true;
				}
				case 9:
				{
				    if(!PlayerToPoint(30, playerid,HouseInfo[house][hExitx], HouseInfo[house][hExity], HouseInfo[house][hExitz])) return true;
				    NewSPD(playerid,9887,DIALOG_STYLE_LIST,"{1E90FF}保险柜","{FFFFFF}毒品: {EEC900}%i\n{FFFFFF}材料: {EEC900}%i\n{FFFFFF}武器","选择","关闭",HouseInfo[house][hDrugs],HouseInfo[house][hMaterials]);
					return 1;
				}
		    }
		}
	case 9887:
        {
            if(!response) return 1;
            new house = PlayerInfo[playerid][pPhousekey];
            switch(listitem)
			{
	            case 0: ShowPlayerDialog(playerid,8835,DIALOG_STYLE_LIST,"{1E90FF}毒品","{FFFFFF}存入\n取出","选择","关闭");
	            case 1: ShowPlayerDialog(playerid,8836,DIALOG_STYLE_LIST,"{1E90FF}材料","{FFFFFF}存入\n取出","选择","关闭");
	            case 2: NewSPD(playerid,9881,DIALOG_STYLE_LIST,"{1E90FF}保险柜","{FFFFFF}Deagle [%d 子弹]\nShotgun [%d 子弹]\nM4 [%d 子弹]\nAK47 [%d 子弹]","选择","返回", HouseInfo[house][hDeagle],HouseInfo[house][hShotgun],HouseInfo[house][hM4],HouseInfo[house][hAK47]);
			}
        }
   //Drugs Safe
	case 8835:
		{
		    new house = PlayerInfo[playerid][pPhousekey];
		    if(!response) return NewSPD(playerid,9887,DIALOG_STYLE_LIST,"{1E90FF}保险柜","{FFFFFF}毒品: {EEC900}%i\n{FFFFFF}材料: {EEC900}%i\n{FFFFFF}武器","选择","关闭",HouseInfo[house][hDrugs],HouseInfo[house][hMaterials]);
		    if(!listitem) ShowPlayerDialog(playerid,9980,1,"{1E90FF}保险柜","{FFFFFF}输入要存入数量:","确定","返回");
            else ShowPlayerDialog(playerid,9981,1,"{1E90FF}保险柜","{FFFFFF}输入取出数量:","确定","返回");
		}
	case 9980:
        {
            if(!response) return ShowPlayerDialog(playerid,8835,DIALOG_STYLE_LIST,"{1E90FF}毒品","{FFFFFF}存入\n取出","选择","返回");
            new amount = strval(inputtext);
            new house = PlayerInfo[playerid][pPhousekey];
            if(PlayerInfo[playerid][pDrugs] < amount) return SendErrorMessage(playerid,"没有那么多毒品.");
            if(amount < 0 || amount > 1000) return SendErrorMessage(playerid,"数量限制 1000 以下.");
            if(amount+HouseInfo[house][hDrugs] > 1000) return SCMF(playerid,COLOR_FSERVER,"― 保险柜毒品数量不能超过 1000克, 保险柜里有: %i 克.",HouseInfo[house][hDrugs]);
            PlayerInfo[playerid][pDrugs]-=amount; HouseInfo[house][hDrugs]+=amount;
            SCMF(playerid,COLOR_FSERVER,"― 你存入毒品:{FFFFFF} %d 克.",amount);
            ShowPlayerDialog(playerid,8835,DIALOG_STYLE_LIST,"{1e90ff}毒品","{FFFFFF}存入\n取出","选择","返回");
            SaveProperty(house);
        }
    case 9981:
        {
            if(!response) return ShowPlayerDialog(playerid,8835,DIALOG_STYLE_LIST,"{1E90FF}毒品","{FFFFFF}存入\n取出","选择","返回");
            new amount = strval(inputtext);
            new house = PlayerInfo[playerid][pPhousekey];
            if(HouseInfo[house][hDrugs]<amount) return SendErrorMessage(playerid,"保险柜里没有那么多毒品.");
            HouseInfo[house][hDrugs]-=amount; PlayerInfo[playerid][pDrugs]+=amount;
            SCMF(playerid,COLOR_FSERVER,"― 你从保险柜里取出毒品:{FFFFFF} %i 克.",amount);
            ShowPlayerDialog(playerid,8835,DIALOG_STYLE_LIST,"{1e90ff}毒品","{FFFFFF}存入\n取出","选择","返回");
            SaveProperty(house);
		}
	// materials
	case 8836:
		{
		    new house = PlayerInfo[playerid][pPhousekey];
		    if(!response) return NewSPD(playerid,9887,DIALOG_STYLE_LIST,"{1E90FF}保险柜","{FFFFFF}毒品: {EEC900}%i\n{FFFFFF}材料: {EEC900}%i\n{FFFFFF}武器","选择","关闭",HouseInfo[house][hDrugs],HouseInfo[house][hMaterials]);
		    if(!listitem) ShowPlayerDialog(playerid,9991,1,"{1E90FF}保险柜","{FFFFFF}输入要存入的材料数量:","选择","返回");
      		else ShowPlayerDialog(playerid,9992,1,"{1E90FF}保险柜","{FFFFFF}输入要存入的材料数量:","选择","返回");
		}
	case 9991:
        {
            if(!response) return ShowPlayerDialog(playerid,8836,DIALOG_STYLE_LIST,"{1E90FF}材料","{FFFFFF}存入\n{FFFFFF}取出","选择","返回");
            new amount = strval(inputtext);
            new house = PlayerInfo[playerid][pPhousekey];
            if(PlayerInfo[playerid][pMats] < amount) return SendErrorMessage(playerid,"你没有那么多材料.");
            if(amount < 0 || amount > 1000) return SendErrorMessage(playerid,"数量只能在 1000 以内.");
            if(amount+HouseInfo[house][hMaterials] > 3000) return SCMF(playerid,COLOR_FSERVER,"― 房屋保险柜里不能超过 3000 数量,现在保险柜里有: %i 材料.",HouseInfo[house][hDrugs]);
            PlayerInfo[playerid][pMats] -=amount; HouseInfo[house][hMaterials]+=amount;
            SCMF(playerid,COLOR_FSERVER,"你存入了:{FFFFFF} %d 材料.",amount);
            ShowPlayerDialog(playerid,8836,DIALOG_STYLE_LIST,"{1E90FF}材料","{FFFFFF}存入\n取出","选择","返回");
            SaveProperty(house);
		}
    case 9992:
        {
            if(!response) return ShowPlayerDialog(playerid,8836,DIALOG_STYLE_LIST,"{1E90FF}材料","{FFFFFF}存入\n取出","选择","返回");
            new amount = strval(inputtext);
            new house = PlayerInfo[playerid][pPhousekey];
            if(HouseInfo[house][hMaterials]<amount) return SendErrorMessage(playerid,"房屋里没有那么多材料.");
            HouseInfo[house][hMaterials]-=amount; PlayerInfo[playerid][pMats]+=amount;
            SCMF(playerid,COLOR_FSERVER,"― 你取出了:{FFFFFF} %i 材料.",amount);
            ShowPlayerDialog(playerid,8836,DIALOG_STYLE_LIST,"{1E90FF}材料","{FFFFFF}存入\n取出","选择","返回");
            SaveProperty(house);
		}
	//GunSafe
    case 9881:
        {
            new house = PlayerInfo[playerid][pPhousekey];
            if(!response) return NewSPD(playerid,9887,DIALOG_STYLE_LIST,"{1E90FF}保险柜","{FFFFFF}毒品: {EEC900}%i\n{FFFFFF}存入: {EEC900}%i\n{FFFFFF}武器","选择","关闭",HouseInfo[house][hDrugs],HouseInfo[house][hMaterials]);
            switch(listitem)
			{
	            case 0: ShowPlayerDialog(playerid,9891,DIALOG_STYLE_LIST,"{1E90FF}保险柜 [Deagle]","{FFFFFF}取出\n存入","选择","返回");
	            case 1: ShowPlayerDialog(playerid,9892,DIALOG_STYLE_LIST,"{1E90FF}保险柜 [Shotgun]","{FFFFFF}取出\n存入","选择","返回");
	            case 2: ShowPlayerDialog(playerid,9893,DIALOG_STYLE_LIST,"{1E90FF}保险柜 [M4]","{FFFFFF}取出\n存入","选择","返回");
	            case 3: ShowPlayerDialog(playerid,9002,DIALOG_STYLE_LIST,"{1E90FF}保险柜 [AK-47]","{FFFFFF}取出\n存入","选择","返回");
			}
        }
    case 9891:
        {
            new house = PlayerInfo[playerid][pPhousekey];
            if(!response) return NewSPD(playerid,9881,DIALOG_STYLE_LIST,"{1E90FF}保险柜","{FFFFFF}Deagle [%d 子弹]\nShotgun [%d 子弹]\nM4 [%d 子弹]\nAK47 [%d 子弹]","选择","返回", HouseInfo[house][hDeagle],HouseInfo[house][hShotgun],HouseInfo[house][hM4],HouseInfo[house][hAK47]);
            if(!listitem) ShowPlayerDialog(playerid,9895,DIALOG_STYLE_INPUT,"{1E90FF}保险柜 [Deagle]","{FFFFFF}你想要存入多少子弹?","确定","返回");
            else
            {
				GetPlayerWeaponData(playerid, 2, saveweapon, saveammo);
				if(!saveammo) return SendErrorMessage(playerid,"你没有 Deagle."),ShowPlayerDialog(playerid,9891,DIALOG_STYLE_LIST,"{1E90FF}保险柜 [Deagle]","{FFFFFF}取出\n存入","选择","返回"), true;
                if(saveammo+HouseInfo[house][hDeagle] > 5000) return SCMF(playerid,COLOR_FSERVER,"― 保险柜中子弹不能超过5000, 保险柜中: %i 子弹 Deagle.",HouseInfo[house][hDeagle]);
				SetPlayerAmmo(playerid, 24, 0); HouseInfo[house][hDeagle]+=saveammo;
                SCMF(playerid,COLOR_FSERVER,"― 你存入 Deagle: %d 子弹.",saveammo);
                NewSPD(playerid,9881,DIALOG_STYLE_LIST,"{1E90FF}保险柜","{FFFFFF}Deagle [%i 子弹]\nShotgun [%i 子弹]\nM4 [%i 子弹]\nAK47 [%i 子弹]","选择","返回", HouseInfo[house][hDeagle],HouseInfo[house][hShotgun],HouseInfo[house][hM4],HouseInfo[house][hAK47]);
                SaveProperty(house);
			}
        }
    case 9892:
        {
            new house = PlayerInfo[playerid][pPhousekey];
            if(!response) return NewSPD(playerid,9881,DIALOG_STYLE_LIST,"{1E90FF}保险柜","{FFFFFF}Deagle [%d 子弹]\nShotgun [%d 子弹]\nM4 [%d 子弹]\nAK47 [%d 子弹]","选择","返回", HouseInfo[house][hDeagle],HouseInfo[house][hShotgun],HouseInfo[house][hM4],HouseInfo[house][hAK47]);
            if(!listitem) ShowPlayerDialog(playerid,9896,DIALOG_STYLE_INPUT,"{1E90FF}保险柜 [Shotgun]","{FFFFFF}你想存入多少子弹?","确定","返回");
			else
            {
				GetPlayerWeaponData(playerid, 3, saveweapon, saveammo);
				if(!saveammo) return SendErrorMessage(playerid,"你没有 Shotgun."), ShowPlayerDialog(playerid,9892,DIALOG_STYLE_LIST,"{1E90FF}保险柜 [Shotgun]","{FFFFFF}取出\n存入","选择","返回"), true;
				if(saveammo+HouseInfo[house][hShotgun] > 5000) return SCMF(playerid,COLOR_FSERVER,"― 保险柜中子弹不能超过5000, 保险柜中: %i 子弹 Shotgun.",HouseInfo[house][hShotgun]);
				SetPlayerAmmo(playerid, 25, 0); HouseInfo[house][hShotgun]+=saveammo;
                SCMF(playerid,COLOR_FSERVER,"― 你存入 Shotgun: %i 子弹.",saveammo);
                NewSPD(playerid,9881,DIALOG_STYLE_LIST,"{1E90FF}保险柜","{FFFFFF}Deagle [%i 子弹]\nShotgun [%i 子弹]\nM4 [%i 子弹]\nAK47 [%i 子弹]","选择","返回", HouseInfo[house][hDeagle],HouseInfo[house][hShotgun],HouseInfo[house][hM4],HouseInfo[house][hAK47]);
                SaveProperty(house);
			}
        }
    case 9893:
        {
            new house = PlayerInfo[playerid][pPhousekey];
            if(!response) return NewSPD(playerid,9881,DIALOG_STYLE_LIST,"{1E90FF}保险柜","{FFFFFF}Deagle [%d 子弹]\nShotgun [%d 子弹]\nM4 [%d 子弹]\nAK47 [%d 子弹]","返回","选择", HouseInfo[house][hDeagle],HouseInfo[house][hShotgun],HouseInfo[house][hM4],HouseInfo[house][hAK47]);
            if(!listitem) ShowPlayerDialog(playerid,7761,DIALOG_STYLE_INPUT,"{1E90FF}保险柜 [M4]","{FFFFFF}你想存入多少子弹?","确定","返回");
            else
            {
				GetPlayerWeaponData(playerid, 5, saveweapon, saveammo);
				if(!saveammo) return SendErrorMessage(playerid,"你没有 M4."), ShowPlayerDialog(playerid,9893,DIALOG_STYLE_LIST,"{1E90FF}保险柜 [M4]","{FFFFFF}取出\n存入","选择","返回"), true;
				if(saveammo+HouseInfo[house][hM4] > 5000) return SCMF(playerid,COLOR_FSERVER,"― 保险柜中子弹不能超过5000, 保险柜中: %i 子弹 M4A1.",HouseInfo[house][hM4]);
				SetPlayerAmmo(playerid, 31, 0); HouseInfo[house][hM4]+=saveammo;
                SCMF(playerid,COLOR_FSERVER,"― 你存入 M4: %i 子弹.",saveammo);
                NewSPD(playerid,9881,DIALOG_STYLE_LIST,"{1E90FF}保险柜","{FFFFFF}Deagle [%i 子弹]\nShotgun [%i 子弹]\nM4 [%i 子弹]\nAK47 [%i 子弹]","选择","返回", HouseInfo[house][hDeagle],HouseInfo[house][hShotgun],HouseInfo[house][hM4],HouseInfo[house][hAK47]);
                SaveProperty(house);
			}
        }
    case 9002:
        {
            new house = PlayerInfo[playerid][pPhousekey];
            if(!response) return NewSPD(playerid,9881,DIALOG_STYLE_LIST,"{1E90FF}保险柜","{FFFFFF}Deagle [%d 子弹]\nShotgun [%d 子弹]\nM4 [%d 子弹]\nAK47 [%d 子弹]","确定","返回", HouseInfo[house][hDeagle],HouseInfo[house][hShotgun],HouseInfo[house][hM4],HouseInfo[house][hAK47]);
            if(!listitem) ShowPlayerDialog(playerid,9898,DIALOG_STYLE_INPUT,"{1E90FF}保险柜 [AK47]","{FFFFFF}你想存入多少子弹?","确定","返回");
            else
            {
				GetPlayerWeaponData(playerid, 5, saveweapon, saveammo);
				if(!saveammo) return SendErrorMessage(playerid,"你没有 AK47."), ShowPlayerDialog(playerid,9002,DIALOG_STYLE_LIST,"{1E90FF}保险柜 [AK-47]","{FFFFFF}取出\n存入","选择","返回"), true;
				if(saveammo+HouseInfo[house][hAK47] > 5000) return SCMF(playerid,COLOR_FSERVER,"― 保险柜中子弹不能超过5000, 保险柜中: %i 子弹 AK47.",HouseInfo[house][hAK47]);
				SetPlayerAmmo(playerid, 30, 0); HouseInfo[house][hAK47]+=saveammo;
                SCMF(playerid,COLOR_FSERVER,"― 你存入 AK47: %i 子弹.",saveammo);
                NewSPD(playerid,9881,DIALOG_STYLE_LIST,"{1E90FF}保险柜","{FFFFFF}Deagle [%i 子弹]\nShotgun [%i 子弹]\nM4 [%i 子弹]\nAK47 [%i 子弹]","选择","返回", HouseInfo[house][hDeagle],HouseInfo[house][hShotgun],HouseInfo[house][hM4],HouseInfo[house][hAK47]);
                SaveProperty(house);
			}
        }
    case 9895:
        {
            new house = PlayerInfo[playerid][pPhousekey];
            if(!response) return ShowPlayerDialog(playerid,9891,DIALOG_STYLE_LIST,"{1E90FF}保险柜 [Deagle]","- 取出\n- 存入","选择","返回");
            if(!strval(inputtext)) return ShowPlayerDialog(playerid,9895,DIALOG_STYLE_INPUT,"{1E90FF}保险柜 [Deagle]","{FFFFFF}你想要取出多少子弹?","选择","返回");
            if(strval(inputtext) < 1 || strval(inputtext) > 5000) return SendErrorMessage(playerid,"最小: 1 子弹, 最多: 5000 子弹."), ShowPlayerDialog(playerid,9895,DIALOG_STYLE_INPUT,"{1E90FF}保险柜 [Deagle]","{FFFFFF}你想要取出多少子弹?","确定","返回");
			if(HouseInfo[house][hDeagle] < strval(inputtext)) return ShowPlayerDialog(playerid,9895,DIALOG_STYLE_INPUT,"{1E90FF}保险柜 [Deagle]","{FFFFFF}你想要取出多少子弹?\n保险柜里没那么多.","确定","返回");
            HouseInfo[house][hDeagle]-=strval(inputtext);
            GiveWeapon(playerid,24,strval(inputtext)); SCMF(playerid,COLOR_FSERVER,"― 你取出 %d 子弹-Deagle.",strval(inputtext));
            NewSPD(playerid,9881,DIALOG_STYLE_LIST,"{1E90FF}保险柜","{FFFFFF}Deagle [%d 子弹]\nShotgun [%d 子弹]\nM4 [%d 子弹]\nAK47 [%d 子弹]","选择","返回", HouseInfo[house][hDeagle],HouseInfo[house][hShotgun],HouseInfo[house][hM4],HouseInfo[house][hAK47]);
            SaveProperty(house);
		}
    case 9896:
        {
            new house = PlayerInfo[playerid][pPhousekey];
            if(!response) return ShowPlayerDialog(playerid,9892,DIALOG_STYLE_LIST,"保险柜 [Shotgun]","- 取出\n- 存入","选择","返回");
            if(!strval(inputtext)) return ShowPlayerDialog(playerid,9895,DIALOG_STYLE_INPUT,"{1E90FF}保险柜 [Deagle]","{FFFFFF}你想要取出多少子弹?","选择","返回");
            if(strval(inputtext) < 1 || strval(inputtext) > 5000) return SendErrorMessage(playerid,"最小: 1 子弹, 最大: 5000 子弹."), ShowPlayerDialog(playerid,9895,DIALOG_STYLE_INPUT,"{1E90FF}保险柜 [Deagle]","{FFFFFF}你想要取出多少子弹?","确定","返回");
			if(HouseInfo[house][hShotgun] < strval(inputtext)) return ShowPlayerDialog(playerid,9896,DIALOG_STYLE_INPUT,"{1E90FF}保险柜 [Shotgun]","{FFFFFF}你想要取出多少子弹?\n保险柜里没那么多.","确定","返回");
            HouseInfo[house][hShotgun]-=strval(inputtext);
            GiveWeapon(playerid,25,strval(inputtext)); SCMF(playerid,COLOR_FSERVER,"― 你取出 %d 子弹-Shotgun.",strval(inputtext));
            NewSPD(playerid,9881,DIALOG_STYLE_LIST,"{1E90FF}保险柜","{FFFFFF}Deagle [%d 子弹]\nShotgun [%d 子弹]\nM4 [%d 子弹]\nAK47 [%d 子弹]","确定","返回", HouseInfo[house][hDeagle],HouseInfo[house][hShotgun],HouseInfo[house][hM4],HouseInfo[house][hAK47]);
            SaveProperty(house);
		}
    case 7761:
        {
            new house = PlayerInfo[playerid][pPhousekey];
            if(!response) return ShowPlayerDialog(playerid,9893,DIALOG_STYLE_LIST,"{1E90FF}保险柜 [M4]","- 取出\n- 存入","选择","返回");
            if(!strval(inputtext)) return ShowPlayerDialog(playerid,9895,DIALOG_STYLE_INPUT,"{1E90FF}保险柜 [Deagle]","{FFFFFF}你想要取出多少子弹?","确定","返回");
            if(strval(inputtext) < 1 || strval(inputtext) > 5000) return SendErrorMessage(playerid,"最小: 1 子弹, 最大: 5000 子弹."), ShowPlayerDialog(playerid,9895,DIALOG_STYLE_INPUT,"{1E90FF}保险柜 [Deagle]","{FFFFFF}你想要取出多少子弹?","确定","返回");
			if(HouseInfo[house][hM4] < strval(inputtext)) return ShowPlayerDialog(playerid,7761,DIALOG_STYLE_INPUT,"{1E90FF}保险柜 [M4]","{FFFFFF}你想要取出多少子弹?\n保险柜里没那么多.","确定","返回");
            HouseInfo[house][hM4]-=strval(inputtext);
            GiveWeapon(playerid,31,strval(inputtext)); SCMF(playerid,COLOR_FSERVER,"― 你取出 %d 子弹-M4.",strval(inputtext));
            NewSPD(playerid,9881,DIALOG_STYLE_LIST,"{1E90FF}保险柜","{FFFFFF}Deagle [%d 子弹]\nShotgun [%d 子弹]\nM4 [%d 子弹]\nAK47 [%d 子弹]","确定","返回", HouseInfo[house][hDeagle],HouseInfo[house][hShotgun],HouseInfo[house][hM4],HouseInfo[house][hAK47]);
            SaveProperty(house);
		}
    case 9898:
        {
            new house = PlayerInfo[playerid][pPhousekey];
            if(!response) return ShowPlayerDialog(playerid,9002,DIALOG_STYLE_LIST,"保险柜 [AK-47]","- 取出\n- 存入","选择","返回");
            if(!strval(inputtext)) return ShowPlayerDialog(playerid,9895,DIALOG_STYLE_INPUT,"{1E90FF}保险柜 [Deagle]","{FFFFFF}你想要取出多少子弹?","确定","返回");
            if(strval(inputtext) < 1 || strval(inputtext) > 5000) return SendErrorMessage(playerid,"最小啊: 1 子弹, 最大: 5000 子弹."), ShowPlayerDialog(playerid,9895,DIALOG_STYLE_INPUT,"{1E90FF}保险柜 [Deagle]","{FFFFFF}你想要取出多少子弹?","确定","返回");
            if(HouseInfo[house][hAK47] < strval(inputtext)) return ShowPlayerDialog(playerid,9898,DIALOG_STYLE_INPUT,"{1E90FF}保险柜 [AK47]","{FFFFFF}你想要取出多少子弹?\n保险柜里没那么多.","确定","返回");
            HouseInfo[house][hAK47]-=strval(inputtext);
            GiveWeapon(playerid,30,strval(inputtext)); SCMF(playerid,COLOR_FSERVER,"― 你取出 %d 子弹-AK47.",strval(inputtext));
            NewSPD(playerid,9881,DIALOG_STYLE_LIST,"{1E90FF}保险柜","{FFFFFF}Deagle [%d 子弹]\nShotgun [%d 子弹]\nM4 [%d 子弹]\nAK47 [%d 子弹]","选择","返回", HouseInfo[house][hDeagle],HouseInfo[house][hShotgun],HouseInfo[house][hM4],HouseInfo[house][hAK47]);
            SaveProperty(house);
		}
	case 5034:
		{
			if(response)
			{
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SendErrorMessage(playerid,"无效玩家ID!");
				if(!ProxDetectorS(5.0, playerid, idd)) return SendErrorMessage(playerid,"距离太远了.");
				if(PlayerInfo[idd][pPhousekey] != 799 || PlayerInfo[idd][pPhousekey2] != 799) return SendErrorMessage(playerid,"这个人有自己的房子或者TA已经搬进其他地方了");
				PlayerInfo[idd][pPhousekey2] = PlayerInfo[playerid][pPhousekey];
				SCMF(playerid,COLOR_FSERVER,"― %s 搬进了你家",Name(idd));
				SCMF(idd,COLOR_FSERVER,"― 你搬进了 %s 的家里 ( /vipiska - 退房 )",Name(playerid));
				OnPlayerUpdateAc(idd);
				return true;
			}
			else { return true; }
		}
	case 5035:
		{
			if(response)
			{
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SendErrorMessage(playerid,"无效玩家ID!");
				if (!ProxDetectorS(5.0, playerid, idd)) return SendErrorMessage(playerid,"距离太远了.");
				if(PlayerInfo[idd][pPhousekey2] != PlayerInfo[playerid][pPhousekey]) return SendErrorMessage(playerid,"该玩家没有搬进你家.");
				PlayerInfo[idd][pPhousekey2] = 799;
				SCMF(playerid,COLOR_FSERVER,"― %s 搬走了",Name(idd));
				SCMF(idd,COLOR_FSERVER,"― 你从 %s 房子里搬走了",Name(playerid));
				OnPlayerUpdateAc(idd);
				return true;
			}
			else { return true; }
		}
    case 2502:
	    {
	        if(!response) return true;
	        switch(listitem)
            {
	            case 0: ShowPlayerDialog(playerid, 2502+1, DIALOG_STYLE_LIST, "{1E90FF}警察", "76\n280\n281\n282\n283\n284\n285\n288", "选择", "退出");
	            case 1: ShowPlayerDialog(playerid, 2502+2, DIALOG_STYLE_LIST, "{1E90FF}军队", "191\n287", "选择", "退出");
	            case 2: ShowPlayerDialog(playerid, 2502+3, DIALOG_STYLE_LIST, "{1E90FF}医院", "70\n219\n274\n275\n276", "选择", "退出");
	            case 3: ShowPlayerDialog(playerid, 2502+4, DIALOG_STYLE_LIST, "{1E90FF}政府", "57\n98\n147\n187\n150", "选择", "退出");
	            case 4: ShowPlayerDialog(playerid, 2502+5, DIALOG_STYLE_LIST, "{1E90FF}驾驶学校", "59\n172\n189\n240", "选择", "退出");
	            case 5: ShowPlayerDialog(playerid, 2502+6, DIALOG_STYLE_LIST, "{1E90FF}新闻台", "211\n217\n250\n261", "选择", "退出");
	            case 6: ShowPlayerDialog(playerid, 2502+7, DIALOG_STYLE_LIST, "{1E90FF}LCN", "113\n124\n214\n223", "选择", "退出");
	            case 7: ShowPlayerDialog(playerid, 2502+8, DIALOG_STYLE_LIST, "{1E90FF}山口组", "120\n123\n169\n186", "选择", "退出");
	            case 8: ShowPlayerDialog(playerid, 2502+9, DIALOG_STYLE_LIST, "{1E90FF}俄罗斯黑手党", "272\n112\n125\n214\n111", "选择", "退出");
	            case 9: ShowPlayerDialog(playerid, 2502+10, DIALOG_STYLE_LIST, "{1E90FF}14K", "173\n174\n175", "选择", "退出");
	            case 10: ShowPlayerDialog(playerid, 2502+11, DIALOG_STYLE_LIST, "{1E90FF}格罗夫", "105\n106\n107\n269\n270\n271", "选择", "退出");
	            case 11: ShowPlayerDialog(playerid, 2502+12, DIALOG_STYLE_LIST, "{1E90FF}巴拉斯", "102\n103\n104", "选择", "退出");
	            case 12: ShowPlayerDialog(playerid, 2502+13, DIALOG_STYLE_LIST, "{1E90FF}瓦戈斯", "108\n109\n110", "选择", "退出");
	            case 13: ShowPlayerDialog(playerid, 2502+14, DIALOG_STYLE_LIST, "{1E90FF}阿兹特克", "114\n115\n116", "选择", "退出");
            }
            return true;
		}
		case 2502+1:
        {
            if(!response) return true;
            switch(listitem)
            {
	            case 0: SetPlayerSkin(playerid, 76);
	            case 1: SetPlayerSkin(playerid, 280);
	            case 2: SetPlayerSkin(playerid, 281);
	            case 3: SetPlayerSkin(playerid, 282);
	            case 4: SetPlayerSkin(playerid, 283);
	            case 5: SetPlayerSkin(playerid, 284);
	            case 6: SetPlayerSkin(playerid, 285);
	            case 7: SetPlayerSkin(playerid, 288);
            }
            return ShowPlayerDialog(playerid, 2502+1, DIALOG_STYLE_LIST, "{1E90FF}警察", "76\n280\n281\n282\n283\n284\n285\n288", "选择", "退出");
        }
    	case 2502+2:
        {
            if(!response) return true;
            switch(listitem)
            {
	            case 0: SetPlayerSkin(playerid, 191);
	            case 1: SetPlayerSkin(playerid, 287);
            }
            return ShowPlayerDialog(playerid, 2502+2, DIALOG_STYLE_LIST, "{1E90FF}军队", "191\n287", "选择", "退出");
        }
    	case 2502+3:
        {
            if(!response) return true;
            switch(listitem)
            {
	            case 0: SetPlayerSkin(playerid, 70);
	            case 1: SetPlayerSkin(playerid, 219);
	            case 2: SetPlayerSkin(playerid, 274);
	            case 3: SetPlayerSkin(playerid, 275);
	            case 4: SetPlayerSkin(playerid, 276);
            }
            return ShowPlayerDialog(playerid, 2502+3, DIALOG_STYLE_LIST, "{1E90FF}医院", "70\n219\n274\n275\n276", "选择", "退出");
        }
    	case 2502+4:
        {
            if(!response) return true;
            switch(listitem)
            {
	            case 0: SetPlayerSkin(playerid, 57);
	            case 1: SetPlayerSkin(playerid, 98);
	            case 2: SetPlayerSkin(playerid, 147);
	            case 3: SetPlayerSkin(playerid, 187);
	            case 4: SetPlayerSkin(playerid, 150);
            }
            return ShowPlayerDialog(playerid, 2502+4, DIALOG_STYLE_LIST, "{1E90FF}制服", "57\n98\n147\n187\n150", "选择", "退出");
        }
    	case 2502+5:
        {
            if(!response) return true;
            switch(listitem)
            {
	            case 0: SetPlayerSkin(playerid, 59);
	            case 1: SetPlayerSkin(playerid, 172);
	            case 2: SetPlayerSkin(playerid, 189);
	            case 3: SetPlayerSkin(playerid, 240);
            }
            return ShowPlayerDialog(playerid, 2502+5, DIALOG_STYLE_LIST, "{1E90FF}驾驶学校", "59\n172\n189\n240", "选择", "退出");
        }
    	case 2502+6:
        {
            if(!response) return true;
            switch(listitem)
            {
	            case 0: SetPlayerSkin(playerid, 211);
	            case 1: SetPlayerSkin(playerid, 217);
	            case 2: SetPlayerSkin(playerid, 250);
	            case 3: SetPlayerSkin(playerid, 261);
            }
            return ShowPlayerDialog(playerid, 2502+6, DIALOG_STYLE_LIST, "{1E90FF}新闻台", "211\n217\n250\n261", "选择", "退出");
        }
    	case 2502+7:
        {
            if(!response) return true;
            switch(listitem)
            {
	            case 0: SetPlayerSkin(playerid, 113);
	            case 1: SetPlayerSkin(playerid, 124);
	            case 2: SetPlayerSkin(playerid, 214);
	            case 3: SetPlayerSkin(playerid, 223);
            }
            return ShowPlayerDialog(playerid, 2502+7, DIALOG_STYLE_LIST, "{1E90FF}LCN", "113\n124\n214\n223", "选择", "退出");
        }
    	case 2502+8:
        {
            if(!response) return true;
            switch(listitem)
            {
	            case 0: SetPlayerSkin(playerid, 120);
	            case 1: SetPlayerSkin(playerid, 123);
	            case 2: SetPlayerSkin(playerid, 169);
	            case 3: SetPlayerSkin(playerid, 186);
            }
            return ShowPlayerDialog(playerid, 2502+8, DIALOG_STYLE_LIST, "{1E90FF}山口组", "120\n123\n169\n186", "选择", "退出");
        }
    	case 2502+9:
        {
            if(!response) return true;
            switch(listitem)
            {
	            case 0: SetPlayerSkin(playerid, 272);
	            case 1: SetPlayerSkin(playerid, 112);
	            case 2: SetPlayerSkin(playerid, 125);
	            case 3: SetPlayerSkin(playerid, 214);
	            case 4: SetPlayerSkin(playerid, 111);
            }
            return ShowPlayerDialog(playerid, 2502+9, DIALOG_STYLE_LIST, "{1E90FF}俄罗斯黑手党", "272\n112\n125\n214\n111", "选择", "退出");
        }
    	case 2502+10:
        {
            if(!response) return true;
            switch(listitem)
            {
	            case 0: SetPlayerSkin(playerid, 173);
	            case 1: SetPlayerSkin(playerid, 174);
	            case 2: SetPlayerSkin(playerid, 175);
            }
            return ShowPlayerDialog(playerid, 2502+10, DIALOG_STYLE_LIST, "{1E90FF}14K", "173\n174\n175", "选择", "退出");
        }
    	case 2502+11:
        {
            if(!response) return true;
            switch(listitem)
            {
	            case 0: SetPlayerSkin(playerid, 105);
	            case 1: SetPlayerSkin(playerid, 106);
	            case 2: SetPlayerSkin(playerid, 107);
	            case 3: SetPlayerSkin(playerid, 269);
	            case 4: SetPlayerSkin(playerid, 270);
	            case 5: SetPlayerSkin(playerid, 271);
            }
            return ShowPlayerDialog(playerid, 2502+11, DIALOG_STYLE_LIST, "{1E90FF}格罗夫", "105\n106\n107\n269\n270\n271", "选择", "退出");
        }
    	case 2502+12:
        {
            if(!response) return true;
            switch(listitem)
            {
	            case 0: SetPlayerSkin(playerid, 102);
	            case 1: SetPlayerSkin(playerid, 103);
	            case 2: SetPlayerSkin(playerid, 104);
            }
            return ShowPlayerDialog(playerid, 2502+12, DIALOG_STYLE_LIST, "{1E90FF}巴拉斯", "102\n103\n104", "选择", "退出");
        }
    	case 2502+13:
        {
            if(!response) return true;
            switch(listitem)
            {
	            case 0: SetPlayerSkin(playerid, 108);
	            case 1: SetPlayerSkin(playerid, 109);
	            case 2: SetPlayerSkin(playerid, 110);
            }
            return ShowPlayerDialog(playerid, 2502+13, DIALOG_STYLE_LIST, "{1E90FF}瓦戈斯", "108\n109\n110", "选择", "退出");
        }
    	case 2502+14:
        {
            if(!response) return true;
            switch(listitem)
            {
	            case 0: SetPlayerSkin(playerid, 114);
	            case 1: SetPlayerSkin(playerid, 115);
	            case 2: SetPlayerSkin(playerid, 116);
            }
            return ShowPlayerDialog(playerid, 2502+14, DIALOG_STYLE_LIST, "{1E90FF}阿兹特克", "114\n115\n116", "选择", "退出");
        }
	case 705:
	    {
     		if(response)
			{
				switch(listitem)
				{
					case 0:
					{
      				    ShowPlayerDialog(playerid, 706, 2, "{1E90FF}GPS", "[1] SA 政府\n[2] 停车场\n[3] SA 医院\n[4] SA 媒体\n[5] SA 驾驶学校\n[6] LS 火车站\n[7] SF 火车站\n[8] 军事登记\n[9] 船只\n[10] 码头\n[11] 监狱\n[12] 中央银行\n[13] LS 赌场\n[14] LV 赌场\n[15] 酒店\n[16] 停车位\n[17] 手机商店\n[18] 大学\n[19] 赛马场", "选择", "退出");
					}
					case 1:
					{
     				    ShowPlayerDialog(playerid, 707, 2, "{1E90FF}GPS", "[1] 挖矿 (1 级)\n[2] 农场 (1 级)\n[3] 钓鱼 (1 级)\n[4] 园丁 (1 级)\n[5] 潜水员 (1 级)\n[6] 炼油厂 (4 级)\n[7] 送货员 (4 级)\n[8] 偷车贼 (5 级)\n[9] 就业中心", "选择", "退出");
					}
					case 2:
					{
				    	ShowPlayerDialog(playerid, 708, 2, "{1E90FF}GPS", "[1] LS 警察局\n[2] SF 警察局\n[3] FBI 基地\n[4] 媒体\n[5] LV 警察局\n[6] 军队 ST\n[7] SA 监狱\n[8] SA 政府\n[9] 执照中心", "选择", "退出");
					}
					case 3:
					{
                        ShowPlayerDialog(playerid, 709, 2, "{1E90FF}GPS", "[1] LS 汽车市场\n[2] SF 汽车市场\n[3] LV 汽车市场\n[4] 汽车维修店", "选择", "退出");
					}
					case 4:
					{
                        ShowPlayerDialog(playerid, 710, 2, "{1E90FF}GPS", "[1] LS 船只租赁店\n[2] SF 船只租赁店\n[3] 飞机租赁店", "选择", "退出");
					}
					case 5:
					{
                        ShowPlayerDialog(playerid, 711, 2, "{1E90FF}GPS", "武器店 SA", "选择", "退出");
					}
					case 6:
					{
                        ShowPlayerDialog(playerid, 712, 2, "{1E90FF}GPS", "[1] 服装店\n[2] LS 银行\n[3] SF 银行\n[4] LV 银行", "选择", "退出");
					}
					case 7:
					{
                        ShowPlayerDialog(playerid, 713, 2, "{1E90FF}GPS", "[1] 彩弹场\n[2] 史诗般的比赛\n[3] 水上赛车\n[4] 跳伞\n[5] 体育馆\n[6] 妓院\n[7] 团队战斗场地\n[8] 篮球场\n[9] 决斗场", "选择", "退出");
                    }
					case 8:
					{
                        ShowPlayerDialog(playerid, 714, 2, "{1E90FF}GPS", "[1] La Cosa Nostra\n[2] 俄罗斯黑手党\n[3] 山口组\n[4] 14K\n[5] 巴拉斯\n[6] 格罗夫\n[7] 瓦戈斯\n[8] 阿兹特克", "选择", "退出");
                    }
					case 9:
					{
                         DisablePlayerRaceCheckpoint(playerid);
					}
				}
			}
			return true;
	    }
	case 706:
    {
	    if(response)
	    {
			switch(listitem)
			{
				case 0: EnableGPSForPlayer(playerid,1481.5729,-1738.6235,13.5469);
				case 1:	EnableGPSForPlayer(playerid,1606.0541,-1032.2415,23.9063);
				case 2:	EnableGPSForPlayer(playerid,1177.6864,-1323.2448,14.0830);
				case 3:	EnableGPSForPlayer(playerid,644.6896,-1354.3370,13.5543);
				case 4:	EnableGPSForPlayer(playerid,1420.0571,-1662.3203,13.5469);
				case 5:	EnableGPSForPlayer(playerid,1745.0537,-1949.1543,14.1172);
				case 6:	EnableGPSForPlayer(playerid,-1952.1438,152.8926,26.2813);
				case 7:	EnableGPSForPlayer(playerid,221.0571,-1441.2860,13.2448);
				case 8: EnableGPSForPlayer(playerid,-66.9586,-1627.2025,3.9810);
				case 9: EnableGPSForPlayer(playerid,384.7162,-2080.0752,7.8301);
				case 10:EnableGPSForPlayer(playerid,-1559.6053,484.3009,7.1797);
				case 11:EnableGPSForPlayer(playerid,1471.8306,-1362.1383,11.8828);
				case 12:EnableGPSForPlayer(playerid,1024.0654,-1137.5983,23.6563);
				case 13:EnableGPSForPlayer(playerid,2039.6934,1007.4353,10.6719);
				case 14:EnableGPSForPlayer(playerid,1276.3738,-1333.3799,13.7106);
				case 15:EnableGPSForPlayer(playerid,2863.6753,-1969.6615,11.1094);
				case 16:EnableGPSForPlayer(playerid,1833.6002,-1842.6112,13.5781);
				case 17:EnableGPSForPlayer(playerid,1122.7098,-2037.0220,69.8942);
				case 18:EnableGPSForPlayer(playerid,-2051.6631,459.4496,35.1719);
			}
	    }
		else
		{
            ShowPlayerDialog(playerid, 705, 2, "{1E90FF}GPS 导航", "[1] 公共场所\n[2] 工作\n[3] 国家公职\n[4] 汽车市场/维修站\n[5] 租赁公司\n[6] 武器商店\n[7] 银行/服装店\n[8] 娱乐\n[9] 帮派/黑手党\n[10] {B3B3B3}关闭 GPS", "选择", "退出");
		}
	    return 1;
	}
	case 707:
    {
	    if(response)
	    {
			switch(listitem)
			{
				case 0: EnableGPSForPlayer(playerid,599.9624,867.0283,-42.9609); // шахта
				case 1: EnableGPSForPlayer(playerid,-380.1625,-1426.3593,25.7266); // ферма
				case 2: EnableGPSForPlayer(playerid,358.2391,-2081.4893,7.8359); // ribalka
				case 3: EnableGPSForPlayer(playerid,1101.3879,-300.1970,73.9922); // яблок
				case 4: EnableGPSForPlayer(playerid,-1376.3430,1492.0427,11.2031); // vodolaz
				case 5:	EnableGPSForPlayer(playerid,289.4370,1412.3625,10.3149); // нефтезавод
				case 6: EnableGPSForPlayer(playerid,2791.6802,-2455.8555,13.6327); // продукты
				case 7: EnableGPSForPlayer(playerid,-1548.1265,124.3447,3.5547);// угонщик
				case 8: EnableGPSForPlayer(playerid,1378.2345,-1753.1057,14.1406);//Центр занятости
			}
	    }
		else
		{
      		ShowPlayerDialog(playerid, 705, 2, "{1E90FF}GPS 导航", "[1] 公共场所\n[2] 工作\n[3] 国家公职\n[4] 汽车市场/维修站\n[5] 租赁公司\n[6] 武器商店\n[7] 银行/服装店\n[8] 娱乐\n[9] 帮派/黑手党\n[10] {B3B3B3}关闭 GPS", "选择", "退出");
		}
	}
	case 708:
    {
	    if(response)
	    {
			switch(listitem)
			{
				case 0: EnableGPSForPlayer(playerid,1552.5350,-1675.7169,16.1953);
				case 1: EnableGPSForPlayer(playerid,-1605.4308,715.1087,12.5026);
				case 2: EnableGPSForPlayer(playerid,-530.3709,2596.4138,53.4141);
				case 3: EnableGPSForPlayer(playerid,644.6896,-1354.3370,13.5543);
				case 4: EnableGPSForPlayer(playerid,2244.9604,2453.9585,10.8203);
				case 5: EnableGPSForPlayer(playerid,91.9904,1920.7041,17.9979);
				case 6: EnableGPSForPlayer(playerid,-1530.2388,482.7725,7.1797);
				case 7: EnableGPSForPlayer(playerid,1481.5729,-1738.6235,13.5469);
				case 8: EnableGPSForPlayer(playerid,1420.0571,-1662.3203,13.5469);
			}
	    }
		else
		{
			ShowPlayerDialog(playerid, 705, 2, "{1E90FF}GPS 导航", "[1] 公共场所\n[2] 工作\n[3] 国家公职\n[4] 汽车市场/维修站\n[5] 租赁公司\n[6] 武器商店\n[7] 银行/服装店\n[8] 娱乐\n[9] 帮派/黑手党\n[10] {B3B3B3}关闭 GPS", "选择", "退出");
		}
	}
	case 709:
    {
	    if(response)
	    {
			switch(listitem)
			{
				case 0: EnableGPSForPlayer(playerid,1695.7050,-1758.5007,13.5469);
				case 1: EnableGPSForPlayer(playerid,-1965.7050,293.8829,35.4688);
				case 2: EnableGPSForPlayer(playerid,2197.5889,1391.2931,10.8203);
				case 3: EnableGPSForPlayer(playerid,1376.7102,-1880.3860,13.5469);
				case 4: EnableGPSForPlayer(playerid,692.8537,-1575.0930,14.2422);
			}
	    }
		else
		{
            ShowPlayerDialog(playerid, 705, 2, "{1E90FF}GPS 导航", "[1] 公共场所\n[2] 工作\n[3] 国家公职\n[4] 汽车市场/维修站\n[5] 租赁公司\n[6] 武器商店\n[7] 银行/服装店\n[8] 娱乐\n[9] 帮派/黑手党\n[10] {B3B3B3}关闭 GPS", "选择", "退出");
		}
	}
	case 710:
    {
	    if(response)
	    {
			switch(listitem)
			{
				case 0: EnableGPSForPlayer(playerid,-98.0026,-1635.0717,3.7204);
				case 1: EnableGPSForPlayer(playerid,-1729.5663,1456.4849,7.1875);
				case 2: EnableGPSForPlayer(playerid,-1305.9319,-179.9211,14.1484);
			}
	    }
		else
		{
			ShowPlayerDialog(playerid, 705, 2, "{1E90FF}GPS 导航", "[1] 公共场所\n[2] 工作\n[3] 国家公职\n[4] 汽车市场/维修站\n[5] 租赁公司\n[6] 武器商店\n[7] 银行/服装店\n[8] 娱乐\n[9] 帮派/黑手党\n[10] {B3B3B3}关闭 GPS", "选择", "退出");
		}
	}
	case 711:
    {
	    if(response)
	    {
			switch(listitem)
			{
				case 0: EnableGPSForPlayer(playerid,1366.1638,-1279.7354,13.5469);
			}
	    }
		else
		{
			ShowPlayerDialog(playerid, 705, 2, "{1E90FF}GPS 导航", "[1] 公共场所\n[2] 工作\n[3] 国家公职\n[4] 汽车市场/维修站\n[5] 租赁公司\n[6] 武器商店\n[7] 银行/服装店\n[8] 娱乐\n[9] 帮派/黑手党\n[10] {B3B3B3}关闭 GPS", "选择", "退出");
		}
	}
	case 712:
    {
	    if(response)
	    {
			switch(listitem)
			{
				case 0: EnableGPSForPlayer(playerid,457.6003,-1501.4500,31.0383);
				case 1: EnableGPSForPlayer(playerid,1471.8306,-1362.1383,11.8828);
				case 2: EnableGPSForPlayer(playerid,-1971.7760,435.8206,35.1719);
				case 3: EnableGPSForPlayer(playerid,-185.5843,1133.1909,19.5905);
			}
	    }
		else
		{
			ShowPlayerDialog(playerid, 705, 2, "{1E90FF}GPS 导航", "[1] 公共场所\n[2] 工作\n[3] 国家公职\n[4] 汽车市场/维修站\n[5] 租赁公司\n[6] 武器商店\n[7] 银行/服装店\n[8] 娱乐\n[9] 帮派/黑手党\n[10] {B3B3B3}关闭 GPS", "选择", "退出");
		}
	}
	case 713:
    {
	    if(response)
	    {
			switch(listitem)
			{
				case 0: EnableGPSForPlayer(playerid,383.5248,-1816.6829,7.8329);
				case 1: EnableGPSForPlayer(playerid,1553.5416,33.9742,24.1532);
				case 2: EnableGPSForPlayer(playerid,543.4437,-1810.0592,6.0625);
				case 3: EnableGPSForPlayer(playerid,1683.0054,-1630.6124,13.5469);
				case 4: EnableGPSForPlayer(playerid,2226.6768,-1722.4115,13.5554);
				case 5: EnableGPSForPlayer(playerid,-719.5934,958.0952,12.1328);
				case 6: EnableGPSForPlayer(playerid,-2154.9285,251.4519,35.3125);
				case 7: EnableGPSForPlayer(playerid,2333.7742,-1529.5084,24.0000);
				case 8: EnableGPSForPlayer(playerid,2171.1318,-1675.0327,15.0859);
			}
	    }
		else
		{
			ShowPlayerDialog(playerid, 705, 2, "{1E90FF}GPS 导航", "[1] 公共场所\n[2] 工作\n[3] 国家公职\n[4] 汽车市场/维修站\n[5] 租赁公司\n[6] 武器商店\n[7] 银行/服装店\n[8] 娱乐\n[9] 帮派/黑手党\n[10] {B3B3B3}关闭 GPS", "选择", "退出");
		}
	}
	case 714:
    {
	    if(response)
	    {
			switch(listitem)
			{
				case 0: EnableGPSForPlayer(playerid,1441.4684,749.9454,10.8203); // lcn
				case 1: EnableGPSForPlayer(playerid,954.3276,1734.4581,8.6484); // rm
				case 2: EnableGPSForPlayer(playerid,1464.7126,2773.5957,10.6719); // yaku
				case 3: EnableGPSForPlayer(playerid,2721.0615,-1951.6299,13.5469); // rifa
				case 4: EnableGPSForPlayer(playerid,2074.2205,-1187.5214,23.6609); // ballas
				case 5: EnableGPSForPlayer(playerid,2487.6582,-1664.7500,13.3438); // grove
				case 6: EnableGPSForPlayer(playerid,2790.3486,-1606.6406,10.9219); // vagos
				case 7: EnableGPSForPlayer(playerid,1681.6520,-2113.1238,13.3828); // aztecas
			}
	    }
		else
		{
			ShowPlayerDialog(playerid, 705, 2, "{1E90FF}GPS 导航", "[1] 公共场所\n[2] 工作\n[3] 国家公职\n[4] 汽车市场/维修站\n[5] 租赁公司\n[6] 武器商店\n[7] 银行/服装店\n[8] 娱乐\n[9] 帮派/黑手党\n[10] {B3B3B3}关闭 GPS", "选择", "退出");
		}
	}
	case 229:
        {
            if(response)
            {
                if(PlayerInfo[playerid][pMuted] == 1) { SendServerMessage(playerid, "你被禁言了!"); return false; }
                if(!strlen(inputtext))return ShowPlayerDialog(playerid,229,DIALOG_STYLE_INPUT, "{1E90FF}请求帮助", "请输入你遇到的问题", "确定", "退出");
                format(YCMDstr, sizeof(YCMDstr), "{00a86b}― 请求帮助: {FFFFFF}%s", inputtext);
                SendClientMessage(playerid, COLOR_YELLOW, YCMDstr);
                SendServerMessage(playerid, "预计 1-5 分钟内会有辅导员或者管理员处理!");
                format(YCMDstr, sizeof(YCMDstr), "{FFC125}― 帮助请求来自 {A9A9A9}%s(%d): {FFC125}%s", Name(playerid), playerid, inputtext);
                SBroadCast(-1, YCMDstr, 1);
                return true;
            }
            else return true;
        }
    case 1673:
		{
            if(!IsPlayerInAnyVehicle(playerid)) return SendErrorMessage(playerid,"你不在车内");
			new givep = GetPVarInt(playerid, "refillcar")-1;
			new price = (BizzInfo[GetPVarInt(givep, "zapravka")][bTill]/3)*300;
            if(PlayerInfo[playerid][pCash] < price) return SendErrorMessage(playerid,"你没有那么多钱!");
			if(response) {
			    Fuell[GetPlayerVehicleID(playerid)] = 300;
				GiveMoney(playerid, -price);
				PlayerInfo[givep][pCash] += price/2;
				BizzInfo[GetPVarInt(givep, "zapravka")][bMoney] += price/2;
				BizzInfo[GetPVarInt(givep, "zapravka")][bProduct] -= 150;
				OnPlayerUpdateAc(playerid);
				new str[100];
				format(str,sizeof(str),"~g~+$%d",price/2);
			 	GameTextForPlayer(givep, str, 5000, 1);
			 	format(str,sizeof(str),"― 你给 %s 的车加满了油, %d$ 已经到工资里了",Name(playerid),price/2);
			 	SendClientMessage(givep,-1,str);
			}
			else SendServerMessage(givep, "对方拒绝加油");
			DeletePVar(playerid, "refillcar");
			return 1;
	    }
	case 1653:
   		{
	        if(!IsPlayerInAnyVehicle(playerid)) return SendErrorMessage(playerid,"你不在车内");
			new givep = GetPVarInt(playerid, "repaircar")-1;
			if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid, "repairprice")) return SendErrorMessage(playerid,"你没有那么多钱!");
			if(response) {
				RepairVehicle(GetPlayerVehicleID(playerid));
				GiveMoney(playerid, -GetPVarInt(playerid, "repairprice"));
				PlayerInfo[givep][pCash] += GetPVarInt(playerid, "repairprice");
				OnPlayerUpdateAc(playerid);
				new str[100];
				format(str,sizeof(str),"~g~+$%d",GetPVarInt(playerid, "repairprice"));
			 	GameTextForPlayer(givep, str, 5000, 1);
			 	format(str,sizeof(str),"― 你将 %s 的车修理好了, %d$ 已经到工资里了",Name(playerid),GetPVarInt(playerid, "repairprice"));
			 	SendClientMessage(givep,-1,str);
			}
			else SendServerMessage(givep, "对方拒绝修车");
            DeletePVar(playerid, "repairprice");
			DeletePVar(playerid, "repaircar");
			return 1;
	    }
	case 1643:
		{
			if(!response) return  RemovePlayerFromVehicle(playerid);
			if(PlayerInfo[playerid][pCash] < 700) {
				RemovePlayerFromVehicle(playerid);
				return SendErrorMessage(playerid,"没有那么多钱,需要 700$");
			}
		 	SendServerMessage(playerid, "你可以修理汽车和给汽车加油 ( 加油: /refill <> 维修: /repair )");
		 	SendServerMessage(playerid, "你必须确定加油 ( 帮助: /mcontract )");
		 	SendServerMessage(playerid, "你可以拖车 ( 帮助: /trailer /untrailer )");
			SetPVarInt(playerid, "RentBus1", GetPlayerVehicleID(playerid));
			GiveMoney(playerid, -700);
			return true;
		}
	case 10:
		{
			if(response)
			{
				if(GetPVarInt(playerid,"AntiFloodRep") > gettime()) return SendServerMessage(playerid, "在向管理组提出投诉时,中间需要等待");
				if(PlayerInfo[playerid][pMuted] == 1) return SendServerMessage(playerid, "你被禁言了!");
				if(!strlen(inputtext))return ShowPlayerDialog(playerid,10,DIALOG_STYLE_INPUT, "{1E90FF}向管理员投诉", "向管理员上诉\n填写表格 [ID/玩家名称] [投诉内容]", "确定", "返回");
				if(strlen(inputtext) > 100)
				{
					ShowPlayerDialog(playerid,10,DIALOG_STYLE_INPUT, "{1E90FF}向管理员投诉", "向管理员上诉\n填写表格 [ID/玩家名称] [投诉内容]", "确定", "返回");
					return true;
				}
				new stringuss[128];
			 	SendServerMessage(playerid, "你的投诉内容已经上报至管理组.");
				format(stringuss, sizeof(stringuss), "{FFC125}― 投诉来自 {A9A9A9}%s[%i]: {FFC125}%s", Name(playerid), playerid, (inputtext));
				ABroadCast(-1,stringuss,1);
				if(PlayerInfo[playerid][pDonateRank]) SetPVarInt(playerid, "AntiFloodRep", gettime() + 30);
				else SetPVarInt(playerid, "AntiFloodRep", gettime() + 200);
				//CheckBotReport(playerid);
				return true;
			}
		}
	case 1091:
		{
			if(response)
			{
				if(!strlen(inputtext))
				{
					format(YCMDstr, sizeof(YCMDstr), "{FFFFFF}输入账户的密码:");
					ShowPlayerDialog(playerid,1091,DIALOG_STYLE_PASSWORD, "{1E90FF}登录窗口",YCMDstr, "登录", "退出");
					return true;
				}
				for(new i = strlen(inputtext); i != 0; --i)
				switch(inputtext[i])
				{
				case '#', ' ':
					return ShowPlayerDialog(playerid,1091,DIALOG_STYLE_MSGBOX, "{1E90FF}信息", "{FFFFFF}您输入的密码包含非法字符.", "关闭", "");
				}
				new string2[200];
				format(string2, sizeof(string2), "SELECT * FROM `"TABLE_ACCOUNT"` WHERE name = '%s'",Name(playerid));
				mysql_query(string2);
				mysql_store_result();
				if(mysql_fetch_row_format(string2))
				{
					BaseGet("pKey",PlayerInfo[playerid][pKey]);
				}
				OnPlayerLoginToServer(playerid,(inputtext));
			}
			else
			{
		 		SendServerMessage(playerid, "退出游戏,请使用: /q");
				GKick(playerid);
			}
		}
	case 22812:
		{
			if(response)
			{
				if(listitem == 0)
				{
					SendServerMessage(playerid, "你被赶出了酒店!");
			    	PlayerInfo[playerid][pQuest] = 0;
			    	for ( new i = 0;  i < 5; i++ ) TextDrawShowForPlayer(playerid, TDInfo[i]);
					SetTimerEx("InfoTime", 2000, false, "d", playerid);
				}
				if(listitem == 1)
				{
				    if(PlayerInfo[playerid][pQuest] == 0) return SendErrorMessage(playerid,"你没有在酒店注册入住!");
					format(string,sizeof(string), "{FFFFFF}你的账户: %i $\n输入您要存入酒店房间帐户的金额\n{FF6347}注意! (( 从你的银行账户扣除,当你离线时,资金将不会被收回 ))",PlayerInfo[playerid][pOtel]);
					ShowPlayerDialog(playerid,22814,DIALOG_STYLE_INPUT, "{1E90FF}支付房费",string, "确定", "退出");
					PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
				}
			}
		}
	case 22815:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: ShowPlayerDialog(playerid, 22816, DIALOG_STYLE_INPUT, "{1E90FF}编辑", "输入OBJ ID:", "确定", "退出");
				case 1: SelectObject(playerid);
				}
			}
			return true;
		}
	case 22816:
		{
			if(response)
			{
				new Float:X, Float:Y, Float:Z;
				new model = strval(inputtext);
				if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 22816, DIALOG_STYLE_INPUT, "{1E90FF}编辑", "输入OBJ ID:", "确定", "退出");
				if(strlen(inputtext) > 5) return ShowPlayerDialog(playerid, 22816, DIALOG_STYLE_INPUT, "{1E90FF}编辑", "输入OBJ ID:", "确定", "退出");
				GetPlayerPos(playerid, X, Y, Z);
				new ObjectD = CreateObject(model, X + 0.0, Y + 3.0, Z + 1.0, 0.0, 0.0, 0.0);
				EditObject(playerid, ObjectD);
			}
			return true;
		}
	case 22817:
		{
			if(response) EditObject(playerid, GetPVarInt(playerid, "SelectedObjectD"));
			else
			{
				DestroyObject(GetPVarInt(playerid, "SelectedObjectD"));
				SelectObject(playerid);
			}
			DeletePVar(playerid, "SelectedObjectD");
		}
	case 22814:
	    {
			if(response)
			{
				if(!strlen(inputtext))
				{
					format(YCMDstr,sizeof(YCMDstr), "{FFFFFF}输入您要存入酒店房间帐户的金额");
					ShowPlayerDialog(playerid,22814,DIALOG_STYLE_INPUT,"{1E90FF}支付房费",YCMDstr,"确定","退出");
				}
				new moneyso;
				moneyso = strval(inputtext);
				if(moneyso < 1 || moneyso > 5000)
				{
			 		SendServerMessage(playerid, "最小 1 $, 最大 5.000$");
					format(YCMDstr,sizeof(YCMDstr), "{FFFFFF}输入您要存入酒店房间帐户的金额");
					ShowPlayerDialog(playerid,22814,DIALOG_STYLE_INPUT,"{1E90FF}支付房费",YCMDstr,"确定","退出");
					return true;
				}
				if(PlayerInfo[playerid][pOtel]+moneyso > 5000) return SendErrorMessage(playerid,"不能超过 5.000$");
				if(PlayerInfo[playerid][pBank] < moneyso) return SendErrorMessage(playerid,"你的银行账户里没有足够的钱!");
				PlayerInfo[playerid][pBank] -= moneyso;
				PlayerInfo[playerid][pOtel] += moneyso;
				SendServerMessage(playerid, "您的酒店房间已成功付款!");
				format(YCMDstr,sizeof(YCMDstr), "支付了酒店房间");
				SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
   				return true;
			}
			else
			{
				return true;
			}
	    }
	case 22813:
		{
    		if(!response)return true;
    		switch(listitem)
    		{
        		case 0:
        		{
            		if(PlayerInfo[playerid][pQuest_1]) return SendErrorMessage(playerid,"你已经通过了这个任务!");
            		SendServerMessage(playerid,"在任何工作中赚取第一笔钱 ( /gps -> 工作 )");
            		SendServerMessage(playerid,"通过任务你将会获得 1人民币.");
            		//SetPVarInt(playerid,"quest_rab",1);
        		}
        		case 1:
   				{
   				    if(PlayerInfo[playerid][pQuest_2]) return SendErrorMessage(playerid,"你已经通过了这个任务!");
            		SendServerMessage(playerid,"在执照中心获得驾驶执照 ( /gps -> 公共场所 -> 执照中心 )");
            		SendServerMessage(playerid,"通过任务你将会获得 3人民币.");
            		//SetPVarInt(playerid,"quest_auto",1);
				}
				case 2:
				{
				    if(PlayerInfo[playerid][pQuest_3]) return SendErrorMessage(playerid,"你已经通过了这个任务!");
            		SendServerMessage(playerid,"在任何服装店更改角色的外观 ( /gps -> 服装店 )");
            		SendServerMessage(playerid,"通过任务你将会获得 3人民币.");
            		//SetPVarInt(playerid,"quest_odezda",1);
				}
				case 3:
				{
				    if(PlayerInfo[playerid][pQuest_4]) return SendErrorMessage(playerid,"你已经通过了这个任务!");
            		SendServerMessage(playerid,"完成钓鱼 ( /gps -> 工作 -> 钓鱼 )");
            		SendServerMessage(playerid,"通过任务你将会获得 7人民币.");
            		//SetPVarInt(playerid,"quest_riba",1);
				}
				case 4:
				{
				    if(PlayerInfo[playerid][pQuest_5]) return SendErrorMessage(playerid,"你已经通过了这个任务!");
            		SendServerMessage(playerid,"您需要在酒店办理入住手续 ( /gps -> 公共场所 -> 酒店 )");
            		SendServerMessage(playerid,"通过任务你将会获得 10人民币.");
            		//SetPVarInt(playerid,"quest_otel",1);
				}
    		}
		}
	case 62:
		{
			if(response)
			{
				if(listitem == 0)
				{
					callcmd::hpgro(playerid,"");
				}
				if(listitem == 1)
				{
					callcmd::hpall(playerid,"");
				}
				if(listitem == 2)
				{
					callcmd::armorgro(playerid,"");
				}
				if(listitem == 3)
				{
					callcmd::armorall(playerid,"");
				}
				if(listitem == 4)
				{
					callcmd::weapoffall(playerid,"");
				}
				if(listitem == 5)
				{
					callcmd::weapoffgro(playerid,"");
				}
				if(listitem == 6)
				{
					callcmd::givegungro(playerid,"24 500");
				}
				if(listitem == 7)
				{
					callcmd::givegungro(playerid,"29 500");
				}
				if(listitem == 8)
				{
					callcmd::givegungro(playerid,"30 500");
				}
				if(listitem == 9)
				{
					callcmd::givegungro(playerid,"31 500");
				}
				if(listitem == 10)
				{
					callcmd::givegungro(playerid,"34 500");
				}
			}
		}
		case 72:
		{
		    if(!response) return 1;
		    switch(listitem)
		    {
		        case 0: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE1);
		        case 1: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE2);
		        case 2: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE3);
		        case 3: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE4);
		        case 4: GoAnim(playerid,"DEALER","Dealer_idle",4.1,1,0,0,0,0,0);
		        case 5: ApplyAnimation(playerid,"DEALER","Dealer_Deal",4.1,0,0,0,0,0,1);
		        case 6: ApplyAnimation(playerid,"FOOD","Eat_Burger",4.1,0,0,0,0,0,1);
				case 7: ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,0,0,0,0,1);
				case 8: GoAnim(playerid,"PARK","Tai_Chi_Loop",4.1,1,0,0,0,0,0);
				case 9: GoAnim(playerid,"CRACK","Crckidle1",4.1,1,0,0,0,0,0);
				case 10: GoAnim(playerid,"CRACK","Crckidle2",4.1,1,0,0,0,0,0);
				case 11: GoAnim(playerid,"CRACK","Crckidle4",4.1,1,0,0,0,0,0);
				case 12: ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1,0,0,0,0,0,1);
				case 13: GoAnim(playerid,"SPRAYCAN","spraycan_full",4.1,1,0,0,0,0,0);
				case 14: GoAnim(playerid,"GRAFFITI","spraycan_fire",4.1,1,0,0,0,0,0);
				case 15: GoAnim(playerid,"SMOKING","M_smkstnd_loop",4.1,1,0,0,0,0,0);
				case 16: GoAnim(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,0,0,0);
				case 17: ApplyAnimation(playerid,"SHOP","ROB_shifty",4.1,0,0,0,0,0,1);
				case 18: GoAnim(playerid,"SHOP","SHP_Rob_HandsUP",4.1,1,0,0,0,0,0);
				case 19: GoAnim(playerid,"RYDER","Ryd_Beckon_02",4.1,1,0,0,0,0,0);
				case 20: ApplyAnimation(playerid,"RIOT","Riot_Angry",4.1,0,0,0,0,0,0);
				case 21: GoAnim(playerid,"RIOT","Riot_Angry_B",4.1,1,0,0,0,0,0);
				case 22: GoAnim(playerid,"RIOT","Riot_Chant",4.1,1,1,0,0,0,0);
				case 23: GoAnim(playerid,"RIOT","Riot_Punches",4.1,1,0,0,0,0,0);
				case 24: ApplyAnimation(playerid,"PED","fucku",4.1,0,0,0,0,0,1);
		        case 25: ApplyAnimation(playerid,"BAR","dnK_StndM_loop",4.1,0,0,0,0,0,1);
		        case 26: GoAnim(playerid,"BD_FIRE","BD_Panic_03",4.1,1,0,0,0,0,0);
		        case 27: GoAnim(playerid,"BD_FIRE","M_smklean_loop",4.1,1,0,0,0,0,0);
				case 28: GoAnim(playerid,"BEACH","bather",4.1,1,0,0,0,0,0);
				case 29: GoAnim(playerid,"BEACH","Lay_Bac_loop",4.1,1,0,0,0,0,0);
				case 30: GoAnim(playerid,"BEACH","Parksit_w_loop",4.1,1,0,0,0,0,0);
				case 31: GoAnim(playerid,"BEACH","Sitnwait_Loop_W",4.1,1,0,0,0,0,0);
				case 32: GoAnim(playerid,"BEACH","Parksit_M_loop",4.1,1,0,0,0,0,0);
				case 33: GoAnim(playerid,"benchpress","gym_bp_celebrate",4.1,1,0,0,0,0,0);
				case 34: GoAnim(playerid,"LOWRIDER","Rap_C_loop",4.1,1,0,0,0,0,0);
				case 35: GoAnim(playerid,"LOWRIDER","Rap_B_loop",4.1,1,0,0,0,0,0);
				case 36: GoAnim(playerid,"LOWRIDER","Rap_A_loop",4.1,1,0,0,0,0,0);
				case 37: GoAnim(playerid,"BSKTBALL","BBALL_idleloop",4.1,1,0,0,0,0,0);
				case 38: ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,0,0,0,0,1);
				case 39: ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.1,0,0,0,0,0,1);
				case 40: ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.1,0,0,0,0,0,1);
				case 41: GoAnim(playerid,"CAR","fixn_car_loop",4.1,1,0,0,0,0,0);
				case 42: GoAnim(playerid,"CAR_CHAT","car_talkm_loop",4.1,1,0,0,0,0,0);
				case 43: GoAnim(playerid,"COP_AMBIENT","coplook_loop",4.1,1,0,0,0,0,0);
				case 44: GoAnim(playerid,"CRACK","Bbalbat_Idle_01",4.1,1,0,0,0,0,0);
		        case 45: GoAnim(playerid,"CRACK","Bbalbat_Idle_02",4.1,1,0,0,0,0,0);
		        case 46: ApplyAnimation(playerid,"GHANDS","gsign1",4.1,0,0,0,0,0,1);
		        case 47: ApplyAnimation(playerid,"GHANDS","gsign2",4.1,0,0,0,0,0,1);
		        case 48: ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,0,0,0,0,1);
				case 49: ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,0,0,0,0,1);
				case 50: ApplyAnimation(playerid,"GHANDS","gsign5",4.1,0,0,0,0,0,1);
				case 51: ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,0,0,0,0,1);
				case 52: ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,0,0,0,0,1);
				case 53: ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,0,0,0,0,1);
				case 54: GoAnim(playerid,"GRAVEYARD","mrnF_loop",4.1,1,0,0,0,0,0);
				case 55: GoAnim(playerid,"MISC","seat_LR",4.1,1,0,0,0,0,0);
				case 56: GoAnim(playerid,"INT_HOUSE","Lou_in",4.1,0,1,1,1,1,0);
				case 57: GoAnim(playerid,"INT_OFFICE","OFF_sit_Bored_loop",4.1,1,0,0,0,0,0);
				case 58: GoAnim(playerid,"LOWRIDER","F_smklean_loop",4.1,1,0,0,0,0,0);
				case 59: ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0,1);
				case 60: GoAnim(playerid,"GANGS","LeanIn",4.1,0,1,1,1,1,0);
				case 61: GoAnim(playerid,"MISC","plyrlean_loop",4.1,1,0,0,0,0,0);
				case 62: ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
				case 63: GoAnim(playerid,"MISC","scratchballs_01",4.1,1,0,0,0,0,0);
		    }
		    return 1;
		}
        case 197:
        {
            if(response)
            {
             	new ima[MAX_PLAYER_NAME];
                GetPlayerName(playerid, ima, sizeof(ima));
             	format(YCMDstr, sizeof(YCMDstr), "SELECT sum FROM freekassa_payments WHERE account = '%s' AND status = '1'",ima);
				mysql_query(YCMDstr);
				mysql_store_result();
				if(mysql_fetch_row_format(YCMDstr))
				{
				    new Moneygivepl;
	 				BaseGetInt("sum",Moneygivepl);
             		PlayerInfo[playerid][pRub] += Moneygivepl;
	              	format(string, sizeof(string),"{FFFFFF}你的账户充值了{ffa500} %d {FFFFFF}人民币й.",Moneygivepl);
	              	ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}Donate:", string,"确定", "");
	              	format(string, sizeof(string),"DELETE FROM freekassa_payments WHERE account = '%s'",ima);
	              	mysql_query(string);
             	}
             	else
             	{
                 	ShowPlayerDialog(playerid,D_NONE, DIALOG_STYLE_MSGBOX, "{6A5ACD}x", "{ffffff}你没有填写你的账户!填写账户请转至服务器官网: {6A5ACD}www.samp-pawn.cn","关闭", "");
              	}
            }
        }
	case 10098:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
                        if(PlayerInfo[playerid][pLevel] < 2) return	SendErrorMessage(playerid,"你的等级必须大于2");
						PlayerInfo[playerid][pJob] = 4;
					 	SendServerMessage(playerid, "[帮助]: 去停车场租一辆公共汽车.");
					}
					case 1:
					{
                        if(PlayerInfo[playerid][pLevel] < 2) return	SendErrorMessage(playerid,"你的等级必须大于2");
						PlayerInfo[playerid][pJob] = 2;
					 	SendServerMessage(playerid, "[帮助]: 租一辆出租车司机的车 ( /gps ).");
					}
					case 2:
					{
					    if(PlayerInfo[playerid][pLevel] < 3) return	SendErrorMessage(playerid,"你的等级必须大于3");
						PlayerInfo[playerid][pJob] = 10;
					 	SendServerMessage(playerid, "[帮助]: 看看公共汽车司机的指令 ( /mn > COMMAND > 工作 ).");
					}
					case 3:
					{
                        if(PlayerInfo[playerid][pLevel] < 3) return	SendErrorMessage(playerid,"你的等级必须大于3");
						PlayerInfo[playerid][pJob] = 5;
						SendServerMessage(playerid, "[帮助]: 去LV. ( 开始/结束工作 /start ).");
					}
					case 4:
					{
                        if(PlayerInfo[playerid][pLevel] < 3) return	SendErrorMessage(playerid,"你的等级必须大于3");
						PlayerInfo[playerid][pJob] = 6;
					 	SendServerMessage(playerid, "[帮助]: 查看指令 ( /mn > COMMAND > 工作 ).");
					}
					case 5:
					{
                        if(PlayerInfo[playerid][pLevel] < 4) return	SendErrorMessage(playerid,"你的等级必须大于4");
						PlayerInfo[playerid][pJob] = 1;
					 	SendServerMessage(playerid, "[帮助]: 去LS的港口. ( 指令 /plist ).");
					}
                    case 6:
					{
                        if(PlayerInfo[playerid][pLevel] < 4) return	SendErrorMessage(playerid,"你的等级必须大于4");
						PlayerInfo[playerid][pJob] = 3;
					 	SendServerMessage(playerid, "[帮助]: 进入一个炼油厂的井. ( 指令 /flist ).");
					}
					case 7:
					{
                        if(PlayerInfo[playerid][pLevel] < 5) return	SendErrorMessage(playerid,"你的等级必须大于5");
                        PlayerInfo[playerid][pJob] = 9;
                       	SendServerMessage(playerid, "[帮助]: 查看指令 ( /mn > COMMAND> 工作 ).");
                    }
					case 8:
					{
					    if(PlayerInfo[playerid][pLevel] < 6) return	SendErrorMessage(playerid,"你的等级必须大于5");
                        PlayerInfo[playerid][pJob] = 7;
                        SendServerMessage(playerid, "[帮助]: 你可以使用GPS找到停车场. /gps > 公共场所 > 停车场");
                        SendServerMessage(playerid, "[帮助]: 查看卡车司机指令 ( /mn > COMMAND > 工作 ).");
					}
				}
			}
		}
	case 1050:
		{
			if(response)
			{
                SetPVarInt(playerid,"naboxrana",gettime()+30);
				switch(listitem)
				{
				case 0:
					{
						SetPlayerHealthAC(playerid, 100);
						SetPlayerArmourAC(playerid, 100);
					}
				case 1:
					{
						SetPlayerAttachedObject(playerid, 1, 18637, 14, 0.0, 0.0, 0.0, 0.0, 180.0, 180.0);
					}
				case 2:
					{
						GiveWeapon(playerid, 3, 1);
					}
				case 3:
					{
						GiveWeapon(playerid, 24, 25);
					}
				case 4:
					{
						GiveWeapon(playerid, 25, 10);
					}
				case 5:
					{
						GiveWeapon(playerid, 29, 50);
					}
				case 6:
					{
						GiveWeapon(playerid, 31, 100);
					}
				}
			}
		}
		case 3050:
		{
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 3050, 1,"{ff0000}[离线]{FFFFFF} 设置阶级","{FFFFFF}输入设置到多少阶级","下一步","");
			summatr[playerid]= strval(inputtext);
			format(YCMDstr, sizeof(YCMDstr), "SELECT * FROM `"TABLE_ACCOUNT"` WHERE Name = '%s'",idtr);
			mysql_query(YCMDstr);
			mysql_store_result();
			if(mysql_fetch_row_format(YCMDstr))
			{
			    new yousuf;
				new members = PlayerInfo[playerid][pMember];
				BaseGetInt("pMember",yousuf);
				if(members == yousuf)
				{
					format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pRank = '%i' WHERE Name = '%s'",summatr,idtr);
					mysql_query(YCMDstr);
					format(string, sizeof(string), "{ff0000}― [OFFLINE] {6A5ACD}你将 %s 的阶级调整到 %i",idtr,summatr);
					SendClientMessage(playerid, -1, string);
					mysql_free_result();
					return true;
				}
				format(string, sizeof(string), "{ff0000}― [离线] {FFFFFF}你没有提升/降级 %s.{ff0000} 原因:{FFFFFF} TA没有在你的组织里.",idtr);
				SendClientMessage(playerid, -1,string);
				mysql_free_result();
				return true;
			}
			else
			{
		 		SendServerMessage(playerid,"此帐户不存在!");
		 		mysql_free_result();
	 		}
		}
		case 3049:
		{
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 3049, 1,"{ff0000}[离线]{FFFFFF} 设置阶级","{FFFFFF}输入设置到多少阶级","下一步","");
			strmid(idtr[playerid],inputtext, 0, strlen(inputtext), 32);
			ShowPlayerDialog(playerid, 3050, 1,"{ff0000}[离线]{FFFFFF} 设置阶级","{FFFFFF}输入设置到多少阶级","下一步","");
		}
	case 3048:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						ShowPlayerDialog(playerid,3047,DIALOG_STYLE_INPUT, "{ff0000}[离线]{FFFFFF} 设置阶级","{FFFFFF}输入玩家名称.", "下一步", "退出");
					}
				case 1:
					{
						ShowPlayerDialog(playerid, 3049, 1,"{ff0000}[离线]{FFFFFF} 设置阶级","{FFFFFF}输入玩家名称","下一步","");
					}
				case 2:
					{
						new Names[MAX_PLAYER_NAME];
						new Vxod[32];
						new OnlineLid[32];
						new Rank;
						new OffMembers;
						format(YCMDstr, sizeof(YCMDstr), "SELECT * FROM `"TABLE_ACCOUNT"` WHERE pMember = '%i'",PlayerInfo[playerid][pLeader]);
						mysql_query(YCMDstr);
						mysql_store_result();
						if(mysql_fetch_row_format(YCMDstr))
						{
							BaseGet("Name",Names);
							BaseGet("pOnline",Vxod);
							BaseGetInt("pLogin",OffMembers);
							BaseGet("pOnlineLid",OnlineLid);
							BaseGetInt("pRank",Rank);
							if(OffMembers == 0)
							{
								format(YCMDstr, sizeof(YCMDstr), "{FFFFFF}― | 名称: %s | 阶级: %i | 最后登录时间: %s | 游戏时间: %s |",Names,Rank,Vxod,OnlineLid);
								SendClientMessage(playerid, -1, YCMDstr);
							}
							while(mysql_next_row())
							{
								BaseGet("Name",Names);
								BaseGet("pOnline",Vxod);
								BaseGetInt("pLogin",OffMembers);
								BaseGet("pOnlineLid",OnlineLid);
								BaseGetInt("pRank",Rank);
								if(OffMembers == 0)
								{
									format(YCMDstr, sizeof(YCMDstr), "{FFFFFF}― | 名称: %s | 阶级: %i | 最后登录时间: %s | 游戏时间: %s |",Names,Rank,Vxod,OnlineLid);
									SendClientMessage(playerid, -1, YCMDstr);
								}
							}
						}
						else SendServerMessage(playerid,"找不到匹配项");
						mysql_free_result();
						return true;
					}
				}
			}
		}
	case 8000:
		{
			new playa = GetPVarInt(playerid,"vidalobj");
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 2)) RemovePlayerAttachedObject(playa, 2);
						SetPlayerAttachedObject(playa,2,19137,2,0.100000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
						return 1;
					}
					case 1:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 7)) RemovePlayerAttachedObject(playa, 7);
						SetPlayerAttachedObject(playa,7, 19270, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						return 1;
					}
					case 2:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 4)) RemovePlayerAttachedObject(playa, 4);
						SetPlayerAttachedObject(playa,4, 18646, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						return 1;
					}
					case 3:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 7)) RemovePlayerAttachedObject(playa, 7);
						SetPlayerAttachedObject(playa,7, 19163, 2, 0.111052, 0.021643, -0.000846, 100.280899, 100.752510, 445.071044, 1.100000, 1.300000, 1.300000);
						return 1;
					}
					case 4:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0)) RemovePlayerAttachedObject(playa, 0);
						SetPlayerAttachedObject(playa,0, 18915, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return 1;
					}
					case 5:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0)) RemovePlayerAttachedObject(playa, 0);
						SetPlayerAttachedObject(playa,0, 18912, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return 1;
					}
					case 6:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0)) RemovePlayerAttachedObject(playa, 0);
						SetPlayerAttachedObject(playa,0, 18916, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return 1;
					}
					case 7:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0)) RemovePlayerAttachedObject(playa, 5);
	                    {
							RemovePlayerAttachedObject(playa, 0);
							RemovePlayerAttachedObject(playa, 1);
							RemovePlayerAttachedObject(playa, 2);
							RemovePlayerAttachedObject(playa, 3);
							RemovePlayerAttachedObject(playa, 4);
						}
                        SetPlayerAttachedObject(playa, 0, 2906, 1, 0.24, 0.06, 0.488, 14.699, -81.999, -0.398, 1.485, 1.413, 1.547);
			            SetPlayerAttachedObject(playa, 1, 2907, 1, -0.051, 0.071, 0.033, 91.801, -172.199, -91.898, 2.157, 0.998, 2.815);
			            SetPlayerAttachedObject(playa, 2, 2908, 1, 0.622, 0.134, 0.045, 1.998, 170, -81.699, 2.674, 2.335, 2.368);
			            SetPlayerAttachedObject(playa, 3, 2906, 1, 0.324, 0.121, -0.359, 107.899, 95, -119.299, 1.876, 1.292, 1.250);
			            SetPlayerAttachedObject(playa, 4, 2905, 10, -0.323, 0.226, 0.032, -4.499, -3.199, -77.899, 2.302, 1.278, 2.686);
			            SetPlayerAttachedObject(playa, 5, 2905, 9, -0.26, 0.143, 0.064, -140, 174.901, 93, 2.573, 1.110, 2.330);
						return 1;
					}
					case 8:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0)) RemovePlayerAttachedObject(playa, 3);
						{
						    RemovePlayerAttachedObject(playa, 0);
							RemovePlayerAttachedObject(playa, 1);
							RemovePlayerAttachedObject(playa, 2);
					    }
						SetPlayerAttachedObject(playa, 0, 2590, 6, 0.13, 0.17, -1, 7.1, 176.3, -118.199, 1, 1, 1);
                        SetPlayerAttachedObject(playa, 1, 1254, 2, -0.024, 0.057, 0.000, 0.500, 88.000, 0.000, 0.684, 0.566, 0.525);
                        SetPlayerAttachedObject(playa, 2, 18693, 2, -1.608, 0.036, -0.383, 0.000, 77.299, -1.100, 1.000, 1.000, 1.000);
                        SetPlayerSkin(playa,33);
						return 1;
					}
					case 9:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 4)) RemovePlayerAttachedObject(playa, 4);
						SetPlayerAttachedObject(playa,4, 3528, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 0.100000, 0.100000, 0.100000);
						return 1;
					}
					case 10:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 4)) RemovePlayerAttachedObject(playa, 4);
						SetPlayerAttachedObject(playa,4, 18643, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						return 1;
					}
					case 11:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0) || IsPlayerAttachedObjectSlotUsed(playa, 1) || IsPlayerAttachedObjectSlotUsed(playa, 4))
						{
							RemovePlayerAttachedObject(playa, 0);
							RemovePlayerAttachedObject(playa, 1);
							RemovePlayerAttachedObject(playa, 4);
						}
						SetPlayerAttachedObject(playa,0, 18693, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
						SetPlayerAttachedObject(playa,1, 18693, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
						SetPlayerAttachedObject(playa,4, 18965, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						return 1;
					}
					case 12:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 7)) RemovePlayerAttachedObject(playa, 7);
						SetPlayerAttachedObject(playa,7, 19078, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
						return 1;
					}
					case 13:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 7)) RemovePlayerAttachedObject(playa, 7);
						SetPlayerAttachedObject(playa,7, 354, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
						return 1;
					}
					case 14:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 1)) RemovePlayerAttachedObject(playa, 1);
						SetPlayerAttachedObject(playa,1, 356, 6, 0.013610, -0.021393, -0.144862, 2.354303, 354.413848, 0.219168, 3.034477, 3.000000, 3.000000);
						return 1;
					}
					case 15:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 1)) RemovePlayerAttachedObject(playa, 1);
						SetPlayerAttachedObject(playa,1, 19086, 8, -0.049768, -0.014062, -0.108385, 87.458297, 263.478149, 184.123764, 0.622413, 1.041609, 1.012785);
						return 1;
					}
					case 16:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0)) RemovePlayerAttachedObject(playa, 0);
						SetPlayerAttachedObject(playa,0, 19078, 1, -1.097527, -0.348305, -0.008029, 0.000000, 0.000000, 0.000000, 8.073966, 8.073966, 8.073966);
						return 1;
					}
					case 17:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0)) RemovePlayerAttachedObject(playa, 0);
						SetPlayerAttachedObject(playa,0, 18963, 2, 0.106000,-0.017999, 0.028000, 47.700000, 81.299972, 53.700004,1.972999,1.926000,2.166000);
						return 1;
					}
					case 18:
					{
						RemovePlayerAttachedObject(playa, 0);
						RemovePlayerAttachedObject(playa, 1);
						RemovePlayerAttachedObject(playa, 2);
						RemovePlayerAttachedObject(playa, 3);
						RemovePlayerAttachedObject(playa, 4);
						RemovePlayerAttachedObject(playa, 5);
						RemovePlayerAttachedObject(playa, 6);
						RemovePlayerAttachedObject(playa, 7);
						RemovePlayerAttachedObject(playa, 8);
						RemovePlayerAttachedObject(playa, 9);
						return 1;
					}
				}
			}
		}
	case 3047:
		{
			if(response)
			{

				if(!strlen(inputtext))return ShowPlayerDialog(playerid,3047,DIALOG_STYLE_INPUT, "{ff0000}[离线]{FFFFFF} 踢出玩家","{FFFFFF}输入玩家名称.", "确定", "踢出");
				new yousuf;
				format(YCMDstr, sizeof(YCMDstr), "SELECT * FROM `"TABLE_ACCOUNT"` WHERE Name = '%s'",inputtext);
				mysql_query(YCMDstr);
				mysql_store_result();
				if(!mysql_fetch_row_format(YCMDstr)) return SendServerMessage(playerid,"这个帐号不存在!"), mysql_free_result();
				BaseGetInt("pMember",yousuf);
				if(PlayerInfo[playerid][pMember] == yousuf)
				{
					format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pMember = '0',pRank = '0' WHERE Name = '%s'",inputtext);
					mysql_query(YCMDstr);
					format(string, sizeof(string), "{ff0000}― [离线] {6A5ACD}你踢出了 %s",inputtext);
					SendClientMessage(playerid, -1, string);
					mysql_free_result();
					return true;
				}
				format(string, sizeof(string), "{ff0000}― [离线] {FFFFFF}你没有踢出 %s.{ff0000} 原因:{FFFFFF} TA不在你的组织.",inputtext);
				SendClientMessage(playerid, -1,string);
				mysql_free_result();
			}
		}
	case 9482:
		{
			if(response)
			{
				format(YCMDstr,sizeof(YCMDstr), "banip %s",banip[playerid]);
				SendRconCommand(YCMDstr);
				SendRconCommand("reloadbans");
				format(YCMDstr, 256, "― 管理员 %s 封禁了IP: %s",Name(playerid),banip[playerid]);
				ABroadCast(-1,YCMDstr,1);
				return true;
			}
			else
			{
				return true;
			}
		}
	case D_JOB+63:
		{
		    if(!response) return 1;
    		SetPVarInt(playerid, "OldMinerSkin",GetPlayerSkin(playerid));
			SetPlayerSkin(playerid, 16);
			SetPVarInt(playerid, "Noun", 1);
			SendSyntaxMessage(playerid, "你开始工作了 ( 开始挖矿 )");
			return 1;
		}
	case D_JOB+64:
		{
		    if(!response) return 1;
		    DeletePVar(playerid, "Noun");
    		SetPlayerSkin(playerid, GetPVarInt(playerid, "OldMinerSkin"));
			format(string, sizeof(string), "― 你完成了工作. 你的收入: {33aa33}%i{ffffff} 美元",GetPVarInt(playerid, "MinerKG")*10);
			SendClientMessage(playerid, -1, string);
			GiveMoney(playerid,GetPVarInt(playerid, "MinerKG")*10);
			DeletePVar(playerid, "OldMinerSkin");
			DeletePVar(playerid, "MinerKG");
			DeletePVar(playerid, "Noun");
			DeletePVar(playerid, "MinerKG_One");
			DeletePVar(playerid, "NounObjID");
			return 1;
		}
	case D_JOB+65:
		{
			if(!response) return 1;
			new Float:VPos[3];
			SetPVarFloat(playerid,"Spongebob",GPSInfo[listitem+GetPVarInt(playerid, "GPSID")][gpsLocationX]);
			SetPVarFloat(playerid,"Mario",GPSInfo[listitem+GetPVarInt(playerid, "GPSID")][gpsLocationY]);
			SetPVarFloat(playerid,"SpiderPig",GPSInfo[listitem+GetPVarInt(playerid, "GPSID")][gpsLocationZ]);
			GetPlayerPos(playerid, VPos[0], VPos[1], VPos[2]);
			SetPVarInt(playerid,"YEAH",1);
			DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid, 1, GetPVarFloat(playerid,"Spongebob"), GetPVarFloat(playerid,"Mario"), GetPVarFloat(playerid,"SpiderPig"), 0, 0, 0, 5.0);
			format(string, sizeof(string), "― 在地图上标记了: %s. 距离: %.1f 米",GPSInfo[listitem+GetPVarInt(playerid, "GPSID")][gpsName],GetDistanceBetweenPoints(VPos[0], VPos[1], VPos[2], GetPVarFloat(playerid,"Spongebob"), GetPVarFloat(playerid,"Mario"),GetPVarFloat(playerid,"SpiderPig")));
			SendClientMessage(playerid, COLOR_YELLOW, string);
			return 1;
		}
	case 22572:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pCash] < sellgun3)
				{
					SendErrorMessage(playerid,"你没有足够的钱!");
					return true;
				}
				new name[MAX_PLAYER_NAME];
				new sail[128];
				GetPlayerName(sellgun4, name, sizeof(name));
				GetPlayerName(playerid, sail, sizeof(sail));
				PlayerInfo[sellgun][pCash] -= sellgun3;
				GiveWeapon(sellgun, sellgun1, sellgun2);
				PlayerInfo[sellgun4][pMats] -= (2*sellgun2);
				PlayerInfo[sellgun4][pCash] += sellgun3;
				format(string, sizeof(string), "%s 制作武器给了 %s",name,sail);
				ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 17671:
		{
			if(response)
			{
				new kaka = GetPlayerVehicleID(playerid);
				DestroyVehicle(kaka);
				Q_SetPlayerPos(playerid,1711.3284,-1757.7521,13.9103);
				SetPlayerVirtualWorld(playerid,0);
				SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, 1);
				TextDrawHideForPlayer(playerid, DRAP);
				vibormashina[playerid] = 0;
				return true;
			}
			else
			{
				return true;
			}
		}
	case 17682:
		{
			if(response)
			{
				new kaka = GetPlayerVehicleID(playerid);
				DestroyVehicle(kaka);
				Q_SetPlayerPos(playerid,-1955.7234,297.8658,35.4688);
				SetPlayerVirtualWorld(playerid,0);
				SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, 1);
				TextDrawHideForPlayer(playerid, DRAP);
				vibormashina[playerid] = 0;
				return true;
			}
			else
			{
				return true;
			}
		}
	case 17693:
		{
			if(response)
			{
				new kaka = GetPlayerVehicleID(playerid);
				DestroyVehicle(kaka);
				Q_SetPlayerPos(playerid, 2201.2810,1392.5859,10.8203);
				SetPlayerVirtualWorld(playerid,0);
				SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, 1);
				TextDrawHideForPlayer(playerid, DRAP);
				vibormashina[playerid] = 0;
				return true;
			}
			else
			{
				return true;
			}
		}
	case 17631:
		{
			if(response)
			{
				new kaka = GetPlayerVehicleID(playerid);
				AvtoSalonOn[playerid] = 0;
				if(PlayerInfo[playerid][pCash] < AvtoSalonCarNope[AvtoSalonChange[playerid]][1]) return SendErrorMessage(playerid,"现金不足!");
				PlayerInfo[playerid][pColor][0] = scolor[playerid];
				PlayerInfo[playerid][pColor][1] = scolor1[playerid];
				PlayerInfo[playerid][pCar] = AvtoSalonCarNope[AvtoSalonChange[playerid]][0];
				PlayerInfo[playerid][pProcents] = 100;
				PlayerInfo[playerid][pCash] -= AvtoSalonCarNope[AvtoSalonChange[playerid]][1];
				PlayerInfo[playerid][pFuelcar] = 100;
				CompVehDel(playerid);
				DestroyVehicle(kaka);
				Q_SetPlayerPos(playerid,1711.3284,-1757.7521,13.9103);
				SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, 1);
				SetPlayerVirtualWorld(playerid, 0);
				TextDrawHideForPlayer(playerid, DRAP);
				vibormashina[playerid] = 0;
				PlayerInfo[playerid][pNumbercar] = 0;
				if(caridhouse[playerid] != -1)
				{
					DestroyVehicle(caridhouse[playerid]);
					caridhouse[playerid] = -1;
				}
				SendSyntaxMessage(playerid, "你买了一辆车，它被送到Los Santos的停车场 ( /gps -> 公共场所 -> 停车位 )");
                SendSyntaxMessage(playerid, "您的车将出现在停车场，直到您找到自己爱车停车的地方 ( /park )");
				new randik = random(sizeof(gparkcar));
				PlayerInfo[playerid][dCarx] = gparkcar[randik][0];
				PlayerInfo[playerid][dCary] = gparkcar[randik][1];
				PlayerInfo[playerid][dCarz] = gparkcar[randik][2];
				PlayerInfo[playerid][dCarc] = gparkcar[randik][3];
				caridhouse[playerid] = CreateVehicle(PlayerInfo[playerid][pCar], PlayerInfo[playerid][dCarx], PlayerInfo[playerid][dCary], PlayerInfo[playerid][dCarz], PlayerInfo[playerid][dCarc] , PlayerInfo[playerid][pColor][0] ,PlayerInfo[playerid][pColor][1], 86400);
                Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelcar];
				LockCar(caridhouse[playerid]);
				OnPlayerUpdateAc(playerid);
			}
			else
			{
				return true;
			}
		}
	case 17632:
		{
			if(response)
			{
				new kaka = GetPlayerVehicleID(playerid);
				AvtoSalonOn[playerid] = 0;
				if(PlayerInfo[playerid][pCash] < AvtoSalonCarD[AvtoSalonChange[playerid]][1]) return SendErrorMessage(playerid,"现金不足!");
				PlayerInfo[playerid][pColor][0] = scolor[playerid];
				PlayerInfo[playerid][pColor][1] = scolor1[playerid];
				PlayerInfo[playerid][pCar] = AvtoSalonCarD[AvtoSalonChange[playerid]][0];
				PlayerInfo[playerid][pCash] -= AvtoSalonCarD[AvtoSalonChange[playerid]][1];
				PlayerInfo[playerid][pProcents] = 100;
				PlayerInfo[playerid][pFuelcar] = 100;
				CompVehDel(playerid);
				DestroyVehicle(kaka);
				Q_SetPlayerPos(playerid,-1955.7234,297.8658,35.4688);
				SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, 1);
				SetPlayerVirtualWorld(playerid, 0);
				TextDrawHideForPlayer(playerid, DRAP);
				vibormashina[playerid] = 0;
				PlayerInfo[playerid][pNumbercar] = 0;
				if(caridhouse[playerid] != -1)
				{
					DestroyVehicle(caridhouse[playerid]);
					caridhouse[playerid] = -1;
				}
				SendSyntaxMessage(playerid, "你买了一辆车，它被送到Los Santos的停车场 ( /gps -> 公共场所 -> 停车位 )");
                SendSyntaxMessage(playerid, "您的车将出现在停车场，直到您找到自己爱车停车的地方 ( /park )");
				new randik = random(sizeof(gparkcar));
				PlayerInfo[playerid][dCarx] = gparkcar[randik][0];
				PlayerInfo[playerid][dCary] = gparkcar[randik][1];
				PlayerInfo[playerid][dCarz] = gparkcar[randik][2];
				PlayerInfo[playerid][dCarc] = gparkcar[randik][3];
				caridhouse[playerid] = CreateVehicle(PlayerInfo[playerid][pCar], PlayerInfo[playerid][dCarx], PlayerInfo[playerid][dCary], PlayerInfo[playerid][dCarz], PlayerInfo[playerid][dCarc] , PlayerInfo[playerid][pColor][0] ,PlayerInfo[playerid][pColor][1], 86400);
                Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelcar];
				LockCar(caridhouse[playerid]);
                OnPlayerUpdateAc(playerid);
			}
			else
			{
				return true;
			}
		}
	case 17633:
		{
			if(response)
			{
				new kaka = GetPlayerVehicleID(playerid);
				AvtoSalonOn[playerid] = 0;
				if(PlayerInfo[playerid][pCash] < AvtoSalonCarA[AvtoSalonChange[playerid]][1]) return SendErrorMessage(playerid,"现金不足!");
				PlayerInfo[playerid][pColor][0] = scolor[playerid];
				PlayerInfo[playerid][pColor][1] = scolor1[playerid];
				PlayerInfo[playerid][pCar] = AvtoSalonCarA[AvtoSalonChange[playerid]][0];
				PlayerInfo[playerid][pCash] -= AvtoSalonCarA[AvtoSalonChange[playerid]][1];
				PlayerInfo[playerid][pProcents] = 100;
				PlayerInfo[playerid][pFuelcar] = 100;
				CompVehDel(playerid);
				DestroyVehicle(kaka);
				Q_SetPlayerPos(playerid,2201.2810,1392.5859,10.8203);
				SetPlayerFacingAngle(playerid,181.4750);
				SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, 1);
				SetPlayerVirtualWorld(playerid, 0);
				TextDrawHideForPlayer(playerid, DRAP);
				vibormashina[playerid] = 0;
				PlayerInfo[playerid][pNumbercar] = 0;
				if(caridhouse[playerid] != -1)
				{
					DestroyVehicle(caridhouse[playerid]);
					caridhouse[playerid] = -1;
				}
				SendSyntaxMessage(playerid, "你买了一辆车，它被送到Los Santos的停车场 ( /gps -> 公共场所 -> 停车位 )");
                SendSyntaxMessage(playerid, "您的车将出现在停车场，直到您找到自己爱车停车的地方 ( /park )");
				new randik = random(sizeof(gparkcar));
				PlayerInfo[playerid][dCarx] = gparkcar[randik][0];
				PlayerInfo[playerid][dCary] = gparkcar[randik][1];
				PlayerInfo[playerid][dCarz] = gparkcar[randik][2];
				PlayerInfo[playerid][dCarc] = gparkcar[randik][3];
				caridhouse[playerid] = CreateVehicle(PlayerInfo[playerid][pCar], PlayerInfo[playerid][dCarx], PlayerInfo[playerid][dCary], PlayerInfo[playerid][dCarz], PlayerInfo[playerid][dCarc] , PlayerInfo[playerid][pColor][0] ,PlayerInfo[playerid][pColor][1], 86400);
                Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelcar];
				LockCar(caridhouse[playerid]);
                OnPlayerUpdateAc(playerid);
			}
			else
			{
				return true;
			}
		}
	case 1773:
		{
			if(response)
			{
				SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
                TogglePlayerControllable(playerid, 0);
				TextDrawShowForPlayer(playerid, Text:DRAP);
				world2[playerid] = random(123);
				new mashina[MAX_PLAYERS];
				AvtoSalonOn[playerid] = 3;
				AvtoSalonChange[playerid] = 0;
				mashina[playerid] = CreateVehicle(AvtoSalonCarA[AvtoSalonChange[playerid]][0],2065.1782,-2169.1785,1114.5313,245.0801,1,1,60000);
				SetVehicleVirtualWorld(mashina[playerid], world2[playerid]);
				SetPlayerVirtualWorld(playerid,world2[playerid]);
				PutPlayerInVeh(playerid, mashina[playerid], 0);
       			SetPlayerCameraPos(playerid, 2076.8127, -2173.4705, 1115.1835);
			    SetPlayerCameraLookAt(playerid, 2075.8750, -2173.1252, 1115.1290);
				format(string,sizeof(string),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~-1 ~y~COLOR2: ~w~-1",VehicleNames[AvtoSalonCarA[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarA[AvtoSalonChange[playerid]][1]);
				GameTextForPlayer(playerid,string, 5000, 3);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 1772:
		{
			if(response)
			{
				SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
                TogglePlayerControllable(playerid, 0);
				TextDrawShowForPlayer(playerid, Text:DRAP);
				world1[playerid] = random(123);
				new mashina[MAX_PLAYERS];
				AvtoSalonOn[playerid] = 2;
				AvtoSalonChange[playerid] = 0;
				mashina[playerid] = CreateVehicle(AvtoSalonCarD[AvtoSalonChange[playerid]][0],2065.1782,-2169.1785,1114.5313,245.0801,1,1,60000);
				SetVehicleVirtualWorld(mashina[playerid], world1[playerid]);
				SetPlayerVirtualWorld(playerid,world1[playerid]);
				PutPlayerInVeh(playerid, mashina[playerid], 0);
				SetPlayerCameraPos(playerid, 2076.8127, -2173.4705, 1115.1835);
			    SetPlayerCameraLookAt(playerid, 2075.8750, -2173.1252, 1115.1290);
				format(string,sizeof(string),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~-1 ~y~COLOR2: ~w~-1",VehicleNames[AvtoSalonCarD[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarD[AvtoSalonChange[playerid]][1]);
				GameTextForPlayer(playerid,string, 5000, 3);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 1771:
		{
			if(response)
			{
				SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
                TogglePlayerControllable(playerid, 0);
				TextDrawShowForPlayer(playerid, Text:DRAP);
				world[playerid] = random(123);
				new mashina[MAX_PLAYERS];
				AvtoSalonChange[playerid] = 0;
				AvtoSalonOn[playerid] = 1;
				mashina[playerid] = CreateVehicle(AvtoSalonCarNope[AvtoSalonChange[playerid]][0],2065.1782,-2169.1785,1114.5313,245.0801,1,1,60000);
				SetVehicleVirtualWorld(mashina[playerid], world[playerid]);
				SetPlayerVirtualWorld(playerid,world[playerid]);
				PutPlayerInVeh(playerid, mashina[playerid], 0);
				SetPlayerCameraPos(playerid, 2076.8127, -2173.4705, 1115.1835);
			    SetPlayerCameraLookAt(playerid, 2075.8750, -2173.1252, 1115.1290);
				format(string,sizeof(string),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~-1 ~y~COLOR2: ~w~-1",VehicleNames[AvtoSalonCarNope[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarNope[AvtoSalonChange[playerid]][1]);
				GameTextForPlayer(playerid,string, 5000, 3);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 9129:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pCash] <= 999)
				{
					SendErrorMessage(playerid," 你没有足够的钱!");
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 1000;
				arendajobe[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				format(string, sizeof(string), "~w~YOU HAVE CAR~n~GOD LUCK ON JOB");
				GameTextForPlayer(playerid, string, 5000, 3);
				return true;
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
	case 9128:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pCash] <= 2999)
				{
					SendErrorMessage(playerid," 你没有足够的钱!");
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 3000;
				arendajob1[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				format(string, sizeof(string), "~w~YOU HAVE CAR~n~GOD LUCK ON JOB");
				GameTextForPlayer(playerid, string, 5000, 3);
				PicCP[playerid] = 3;
				SetPlayerCheckpoint(playerid,2348.7664,-2302.8535,13.5469,6.0);
				return true;
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
	case 9126:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pCash] <= 2999)
				{
					SendErrorMessage(playerid," 你没有足够的钱!");
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 3000;
				arenda[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				format(string, sizeof(string), "~w~YOU HAVE HIRED THE CAR~n~GOD LUCK ON ROAD");
				GameTextForPlayer(playerid, string, 5000, 3);
				GameTextForPlayer(playerid, "~g~-3.000$", 1000, 1);
				return true;
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
	case 30067:
		{
			if(response)
			{
	            new q = strval(inputtext);
				if(q >= 50)
				{

				Skor[playerid] = q;
				format(string,sizeof(string), "― 您已设置最大速度. 最高速度: %d km/h",q);
				SendClientMessage(playerid,-1,string);
			 	SendServerMessage(playerid,"超速将会被罚款. 必须支付罚款.");
				PlayerInfo[playerid][pRadar] = 1;
                new Float:x, Float:y, Float:z, Float:angle;
                GetPlayerPos(playerid, x, y, z);
                GetPlayerFacingAngle(playerid, angle);
                x += floatsin(-angle, degrees);
                y += floatcos(-angle, degrees);
                SetPVarInt(playerid,"ograda3",gettime()+100);
                ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
                objectradar[playerid] = CreateDynamicObject(19623, x, y, z-0.9, 0, 0, 0);
                format(string, sizeof(string), "* %s 设置了定速器", Name(playerid));
                ProxDetector(35.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else {SendErrorMessage(playerid,"速度限制 50 到 150 km/h."); return true;}
			}
		}
	case 3008:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pCash] < 6999) { RemovePlayerFromVehicle(playerid); SendErrorMessage(playerid,"Н你没有足够的钱!"); return true;}
				fura[playerid] = GetPlayerVehicleID(playerid);
				SendSyntaxMessage(playerid,"你租了一辆面包车.");
				SendSyntaxMessage(playerid,"跟随拖车 ( /loadgruz )");
		     	SetPlayerRaceCheckpoint(playerid, 1, 896.7841,-1218.6033,16.9766, 0.0, 0.0, 0.0, 5.0);
				PlayerInfo[playerid][pCash] -= 7000;
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
			}
		}
		case 13311:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pCash] <= 499)
				{
					SendErrorMessage(playerid," 你没有足够的钱.");
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 500;
				arendal[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				format(string, sizeof(string), "~w~Thank you for renting~n~All Good");
				GameTextForPlayer(playerid, string, 500, 3);
				return true;
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
	case 9159:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pCash] <= 4999)
				{
					SendErrorMessage(playerid," 你没有足够的钱.");
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 5000;
				arendal[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				format(string, sizeof(string), "~w~Thank you for renting~n~All Good");
				GameTextForPlayer(playerid, string, 5000, 3);
				return true;
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
	case 9158:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pCash] <= 9999)
				{
					SendErrorMessage(playerid," 你没有足够的钱.");
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 10000;
				arendas[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				format(string, sizeof(string), "~w~Thanks for lease~n~Good luck on the rise");
				GameTextForPlayer(playerid, string, 5000, 3);
				return true;
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
	case 9127:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pCash] <= 500)
				{
					SendErrorMessage(playerid," 你没有足够的钱!");
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 500;
				arenda[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				format(string, sizeof(string), "~w~YOU HAVE HIRED THE CAR~n~GOD LUCK ON ROAD");
				GameTextForPlayer(playerid, string, 5000, 3);
				SendSyntaxMessage(playerid, "输入: /fare - 开始");
				return true;
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
	case 3002:
		{

			if(response)
			{
				if(!strlen(inputtext))return ShowPlayerDialog(playerid,3002,DIALOG_STYLE_INPUT, "{1E90FF}通话和短信的价格", "输入价格", "确定", "退出");
				new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 600)
				{
					SendSyntaxMessage(playerid, "金额限制 1 - 600!");
					ShowPlayerDialog(playerid,3002,DIALOG_STYLE_INPUT, "{1E90FF}通话和短信的价格", "输入价格", "确定", "退出");
					return true;
				}

				format(string, sizeof(string), "[大众媒体] 通话和短信的价格: %i$. 由 %s 修改.", moneys, Name(playerid));
				SendFamilyMessage(16,COLOR_YELLOW2, string);
				smspricels = moneys;
				return true;
			}
			else
			{
				return true;
			}
		}
	case 31:
		{

			if(response)
			{
				if(!strlen(inputtext))
				{
					ShowPlayerDialog(playerid,31,DIALOG_STYLE_INPUT, "{1E90FF}广告价格", "输入价格", "确定", "退出");
				}
				new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 3000)
				{
					SendSyntaxMessage(playerid, "金额限制 1 - 3000!");
					ShowPlayerDialog(playerid,31,DIALOG_STYLE_INPUT, "{1E90FF}广告价格", "输入价格", "确定", "退出");
					return true;
				}

				format(string, sizeof(string), "广告价格: %i$. 由 %s 修改.", moneys, Name(playerid));
				SendFamilyMessage(9,COLOR_YELLOW2, string);
				addd[1] = moneys;
				return true;
			}
			else
			{
				return true;
			}
		}
	case 32:
		{

			if(response)
			{
				if(!strlen(inputtext))
				{
					ShowPlayerDialog(playerid,32,DIALOG_STYLE_INPUT, "{1E90FF}广告价格", "输入价格", "确定", "退出");
				}
				new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 100)
				{
					SendSyntaxMessage(playerid, "金额限制 1 - 100!");
					ShowPlayerDialog(playerid,32,DIALOG_STYLE_INPUT, "{1E90FF}广告价格", "输入价格", "确定", "退出");
					return true;
				}

				format(string, sizeof(string), "广告价格: %i$. 由 %s 修改.", moneys, Name(playerid));
				SendFamilyMessage(16,COLOR_YELLOW2, string);
				addd[0] = moneys;
				return true;
			}
			else
			{
				return true;
			}
		}
	case 33:
		{

			if(response)
			{
				if(!strlen(inputtext))
				{
					ShowPlayerDialog(playerid,33,DIALOG_STYLE_INPUT, "{1E90FF}广告价格", "输入价格", "确定", "退出");
				}
				new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 3000)
				{
					SendSyntaxMessage(playerid, "金额限制 1 - 3000!");
					ShowPlayerDialog(playerid,33,DIALOG_STYLE_INPUT, "{1E90FF}广告价格", "输入价格", "确定", "退出");
					return true;
				}

				format(string, sizeof(string), "广告价格: %i$. 由 %s 修改.", moneys, Name(playerid));
				SendFamilyMessage(20,COLOR_YELLOW2, string);
				addd[2] = moneys;
				return true;
			}
			else
			{
				return true;
			}
		}
	case 11518:
		{
			if(!response) return true;
			SetPVarInt(playerid, "AdvertID", listitem+1);
			ShowPlayerDialog(playerid, 11519, 2, "{1E90FF}广告", " [1] 发送广告\n [2] 阅读广告\n [3] 修改广告\n [4] 删除广告\n [5] 发送管理", "选择", "返回");
		}
	case 11519:
		{
			if(!response) { DeletePVar(playerid, "AdvertID"); return AdvertList(playerid); }
			new full = 0;
			switch(PlayerInfo[playerid][pMember])
			{
			case 16: full = 0;
			case 9: full = 1;
			case 20: full = 2;
			}
			if(GetPVarInt(playerid, "AdvertID") != TOTALADVERT[full]) return SendSyntaxMessage(playerid, "编辑广告只能从最后完成!");
			switch(listitem)
			{
			case 0:
				{
					new string1[128];
					format(string1,sizeof(string1),"在下次提交之前，该广告仍然存在: %d 秒!",AdvertTime[playerid]);
					if(AdvertTime[playerid] > 0) return SendClientMessage(playerid, -1, string1);
					AdvertTime[playerid] = 30;
					new nameee[MAX_PLAYER_NAME];
					GetPlayerName(playerid,nameee,sizeof(nameee));
					format(string, 128, "%s. | 提交: %s. (电话. %i)",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adPhone]);
					SendClientMessageToAll(TEAM_GROVE_COLOR, string);
					switch(PlayerInfo[playerid][pMember])
					{
					case 9:
						{
							format(string, 128, "        广告由媒体员工检查 %s", nameee);
						 	SendClientMessageToAll(COLOR_GREEN, string);
						}
					case 16:
						{
							format(string, 128, "        广告由媒体员工检查 %s", nameee);
							SendClientMessageToAll(COLOR_GREEN, string);
						}
					case 20:
						{
							format(string, 128, "        广告由媒体员工检查 %s", nameee);
						 	SendClientMessageToAll(COLOR_GREEN, string);
						}
					}
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++) memcpy(AdvertInfo[i][full], AdvertInfo[i+1][full], 0, 512);
					TOTALADVERT[full]--;
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
			case 1:
				{
					format(string, 128, " 内容: %s. 发送者: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName]);
					ShowPlayerDialog(playerid, 11520, 0, "{1E90FF}广告", string, "关闭", "");
				}
			case 2:
				{
					format(string, 128, " 内容: %s. 发生在: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName]);
					ShowPlayerDialog(playerid, 11521, 1, "{1E90FF}广告", string, "确定", "返回");
				}
			case 3:
				{
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++) memcpy(AdvertInfo[i][full], AdvertInfo[i+1][full], 0, 512);
					TOTALADVERT[full]--;
				 	SendServerMessage(playerid, "广告已删除");
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
			case 4:
				{
					new nameee[MAX_PLAYER_NAME];
					GetPlayerName(playerid,nameee,sizeof(nameee));
					format(string, 128, "― [AD] 广告: %s. 发送者: %s ( 提交者: %s )",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName], nameee);
					ABroadCast(-1,string,1);
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++) memcpy(AdvertInfo[i][full], AdvertInfo[i+1][full], 0, 512);
					TOTALADVERT[full]--;
				 	SendServerMessage(playerid, "广告发送至管理组");
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
			}
		}
	case 11520: ShowPlayerDialog(playerid, 11519, 2, "{1E90FF}广告", " [1] 发送广告\n [2] 阅读广告\n [3] 修改广告\n [4] 删除广告\n [5] 发送管理员", "选择", "返回");
	case 11521:
		{
			if(!response) return ShowPlayerDialog(playerid, 11519, 2, "{1E90FF}广告", " [1] 发送广告\n [2] 阅读广告\n [3] 修改广告\n [4] 删除广告\n [5] 发送管理员", "选择", "返回");
			new full = 0;
			switch(PlayerInfo[playerid][pMember])
			{
			case 9: full = 1;
			case 16: full = 0;
			case 20: full = 2;
			}
			if(!strlen(inputtext))
			{
				format(string, 128, " 内容: %s. 发送者: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName]);
				return ShowPlayerDialog(playerid, 11521, 1, "{1E90FF}广告", string, "确定", "返回");
			}
			strmid(AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText], inputtext, 0, 128, 128);
		 	SendServerMessage(playerid, "广告已修改并已保存");
			ShowPlayerDialog(playerid, 11519, 2, "{1E90FF}广告", " [1] 发送广告\n [2] 阅读广告\n [3] 修改广告\n [4] 删除广告\n [5] 发送管理员", "选择", "返回");
		}
		case 9085:
		{
		    if(!response) return 1;
		    switch(listitem)
		    {
		        case 0: format(boordh,sizeof(boordh),"1390.7771,-10.5458,1000.9370,1392.6676,-21.5595,1000.9370,0,0,1");
		        case 1: format(boordh,sizeof(boordh),"0.0,0.0,0.0,0.0,0.0,0.0,0,0,2");
		        case 2: format(boordh,sizeof(boordh),"372.3061,-133.5236,1001.4922,374.7469,-119.3624,1001.4995,5,29,3");
		        case 3: format(boordh,sizeof(boordh),"362.8425,-75.1392,1001.5078,377.3217,-67.8903,1001.5151,10,10,3");
		        case 4: format(boordh,sizeof(boordh),"364.9063,-11.7721,1001.8516,369.6516,-6.3217,1001.8589,9,14,3");
		        case 5: format(boordh,sizeof(boordh),"493.3561,-24.8449,1000.6797,499.2758,-20.7244,1000.6797,17,48,4");
		        case 6: format(boordh,sizeof(boordh),"-2636.6792,1402.4634,906.4609,-2659.1587,1416.9315,906.2734,3,48,4");
		        case 7: format(boordh,sizeof(boordh),"1204.7395,-13.8515,1000.9219,1214.1865,-12.9937,1000.9219,2,48,4");
		        case 8: format(boordh,sizeof(boordh),"501.9752,-67.5652,998.7578,496.4381,-75.5758,998.7578,11,49,5");

		    }
		    ShowPlayerDialog(playerid, D_HEAL+6, 1, "{1E90FF}产业", "重要提示: 价格 , 名称\n\n示例: 100000 , 艾德伍德加油站", "确定", "退出");
		}
		case D_HEAL+6:
		{
		    if(!response) return 1;
  			new price,name[32];
  			if(sscanf(inputtext,"p<,>is[32]",price,name)) return ShowPlayerDialog(playerid, D_HEAL+6, 1, "{1E90FF}产业", "重要提示: 价格 , 名称\n\n示例: 100000 , 艾德伍德加油站", "确定", "退出");
			if(price < 1) return ShowPlayerDialog(playerid, D_HEAL+6, 1, "{1E90FF}产业", "重要提示: 价格 , 名称\n\n示例: 100000 , 艾德伍德加油站", "确定", "退出");
			TOTALBIZZ++;
            sscanf(boordh,"p<,>ffffffiii",
            BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz],
            BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],
			BizzInfo[TOTALBIZZ][bInt],BizzInfo[TOTALBIZZ][bMIcon], BizzInfo[TOTALBIZZ][bType]);
		    GetPlayerPos(playerid,BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz]);
			strmid(BizzInfo[TOTALBIZZ][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
            strmid(BizzInfo[TOTALBIZZ][bName], name, 0, strlen(name), MAX_PLAYER_NAME);
            BizzInfo[TOTALBIZZ][bVirtual] = TOTALBIZZ;
            BizzInfo[TOTALBIZZ][bPrice] = price;
			BizzInfo[TOTALBIZZ][bEnter] = 100;
			BizzInfo[TOTALBIZZ][bTill] = 50;
			if(BizzInfo[TOTALBIZZ][bType] > 2) BizzInfo[TOTALBIZZ][bIcon] = CreateDynamicMapIcon(BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz], BizzInfo[TOTALBIZZ][bMIcon], 0,-1,-1,-1,200.0);
            if(BizzInfo[TOTALBIZZ][bType] != 2)
			{
			    format(string, 90, "{dad37f}业主: {ffffff}国家\n{dad37f}产业: {ffffff}%s", BizzInfo[TOTALBIZZ][bName]);
				LABELBIZZ[TOTALBIZZ] = Create3DTextLabel(string,COLOR_GREEN,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz],20.0,0,1);
			 	BizzInfo[TOTALBIZZ][bPickup] = CreatePickup(19132,1, BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz]);
		 		BizzInfo[TOTALBIZZ][bPickupExit] = CreatePickup(19134, 1, BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz], BizzInfo[TOTALBIZZ][bVirtual]);
                BizzInfo[TOTALBIZZ][bMenu] = CreateDynamicCP(BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz], 1.0,BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
			}
			else
			{
			    format(string, 90, "业主: None\n加油站: %s\n每升价格: %i$", BizzInfo[TOTALBIZZ][bName],BizzInfo[TOTALBIZZ][bTill] / 3);
				LABELBIZZ[TOTALBIZZ] = Create3DTextLabel(string,COLOR_GREENYELLOW,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz],20.0,0,1);
			}
			format(string, sizeof(string), "INSERT INTO "TABLE_BIZZ" (id, x, y, z, xt, yt, zt,menux,menuy,menuz, vint, virt, owner, name, price, type, icon) VALUES (%i, '%f', '%f', '%f', '%f', '%f', '%f','%f', '%f', '%f',%i, %i, '%s', '%s', %i, %i, %i)",
			TOTALBIZZ,BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz],BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz], BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz]
			,BizzInfo[TOTALBIZZ][bInt],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bOwner],BizzInfo[TOTALBIZZ][bName], BizzInfo[TOTALBIZZ][bPrice], BizzInfo[TOTALBIZZ][bType],BizzInfo[TOTALBIZZ][bMIcon]);
			mysql_query(string);
            return format(string, sizeof(string), "― 创建了产业,ID: %d",TOTALBIZZ),SendClientMessage(playerid, -1, string);
		}
		case D_HEAL+8:
		{
		    if(!response) return 1;
		    new idx = GetPVarInt(playerid, "PlayerBizz");
		    Q_SetPlayerPos(playerid,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
		}
		case D_HEAL+9:
		{
		    if(!response) return 1;
		    SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
      		TogglePlayerControllable(playerid, 0);
		    new idx = GetPVarInt(playerid, "PlayerBizz");
		    Q_SetPlayerPos(playerid,BizzInfo[idx][bExitx], BizzInfo[idx][bExity], BizzInfo[idx][bExitz]);
			SetPlayerInterior(playerid,BizzInfo[idx][bInt]);
			SetPlayerVirtualWorld(playerid,BizzInfo[idx][bVirtual]);
		}
		case D_HEAL+10:
		{
		    if(!response) return 1;
		    new i = GetPVarInt(playerid, "PlayerBizz");
		    switch(listitem)
		    {
		        case 0: BizzStats(playerid, i);
				case 1:
				{
				    if(BizzInfo[i][bLock] == 0) return SendServerMessage(playerid, "产业已经开始营业了!");
				    if(BizzInfo[i][bProduct] < 100 || BizzInfo[i][bLic] == 0) return SendServerMessage(playerid, "产业缺货了或者没有营业执照!");
				    BizzInfo[i][bLock] = 0;
				    BizzInfo[i][bLockTime] = 0;
				    SetBizzInt(i, "block", BizzInfo[i][bLock]);
					SetBizzInt(i, "locktime", BizzInfo[i][bLockTime]);
				    SendSyntaxMessage(playerid, "产业已经开始营业了,请随时检查产业货物以及营业执照状态!");
				    SendSyntaxMessage(playerid, "否则, 你的产业将会关门歇业!");
				}
				case 2: ShowPlayerDialog(playerid, D_HEAL+11, 1, "{1E90FF}价格", "以百分比形式输入商品价格:", "确定", "退出");
		        case 3:
				{
				    if(BizzInfo[i][bType] == 3 || BizzInfo[i][bType] == 4) ShowPlayerDialog(playerid, D_HEAL+12, 1, "{1E90FF}价格", "输入商品价格(百分比):", "确定", "退出");
				    else SendClientMessage(playerid, -1, YouCanNot);
				}
				case 4: ShowPlayerDialog(playerid, D_HEAL+16, 0, "{1E90FF}出售产业", "{ffffff}你确定你想出售你的产业吗?\n\n{FF6347}警告! 你只能收回百分之50的产业成本!", "确定", "算了");
				case 5:
				{
				    format(string,156,"{ffffff}输入您要从产业帐户中提取的金额!\n\n{FFFFFF}目前，您的产业帐户是: %d $",BizzInfo[i][bMoney]);
					ShowPlayerDialog(playerid, D_HEAL+17, DIALOG_STYLE_INPUT, "{1E90FF}提取资金", string, "确定", "返回");
				}
		    }
		}
		case D_HEAL+17:
		{
	  		if(!response) return true;
		    new price;
		    new i = GetPVarInt(playerid, "PlayerBizz");
		    if(sscanf(inputtext, "i",price))
		    {
	  	  		format(string,156,"{ffffff}输入您要从产业帐户中提取的金额!\n\n{FFFFFF}目前，您的产业帐户是: %d $",BizzInfo[i][bMoney]);
				ShowPlayerDialog(playerid, D_HEAL+17, DIALOG_STYLE_INPUT, "{1E90FF}提取资金", string, "确定", "返回");
				return true;
	    	}
			if(price < 1)
			{
	 			format(string,156,"{ffffff}输入您要从产业帐户中提取的金额!\n\n{FFFFFF}目前，您的产业帐户是: %d $",BizzInfo[i][bMoney]);
				ShowPlayerDialog(playerid, D_HEAL+17, DIALOG_STYLE_INPUT, "{1E90FF}提取资金", string, "确定", "返回");
				return true;
	    	}
			if(BizzInfo[i][bMoney] < price)
			{
	  			format(string,156,"{ffffff}产业里没有那么多钱!\n\n输入您要从产业帐户中提取的金额!\n\n{FFFFFF}目前，您的产业帐户是: %d $",BizzInfo[i][bMoney]);
				ShowPlayerDialog(playerid, D_HEAL+17, DIALOG_STYLE_INPUT, "{1E90FF提取资金", string, "确定", "返回");
				return true;
	    	}
  			BizzInfo[i][bMoney] -= price;
  			PlayerInfo[playerid][pCash] += price;
			SetBizzInt(i, "money", BizzInfo[i][bMoney]);
			format(string, sizeof(string), "― 提取出: %i 美元. 余额: %i 美元",price, BizzInfo[i][bMoney]);
			SendClientMessage(playerid, -1, string);
			OnPlayerUpdateAc(playerid);
		}
		case D_HEAL+11:
		{
  			if(!response) return 1;
		    new price, i = GetPVarInt(playerid, "PlayerBizz");
		    if(sscanf(inputtext, "i",price)) ShowPlayerDialog(playerid, D_HEAL+11, 1, "{1E90FF}价格", "输入商品价格(百分比):", "确定", "退出");
			if(price < 1 || price > 100) return ShowPlayerDialog(playerid, D_HEAL+11, 1, "{1E90FF}价格", "输入商品价格(百分比):", "确定", "退出");
			BizzInfo[i][bTill] = price;
			SetBizzInt(i, "till", price);
			format(string, sizeof(string), "― 你设置了产品的价格: 百分之 %i",price);
			SendClientMessage(playerid, -1, string);
			return 1;
		}
		case D_HEAL+12:
		{
			if(!response) return 1;
		    new price, i = GetPVarInt(playerid, "PlayerBizz");
		    if(sscanf(inputtext, "i",price)) ShowPlayerDialog(playerid, D_HEAL+12, 1, "{1E90FF}价格", "输入商品价格(百分比):", "确定", "退出");
			if(price < 0 || price > 5000) return ShowPlayerDialog(playerid, D_HEAL+12, 1, "{1E90FF}价格", "输入商品价格(百分比):", "确定", "退出");
			BizzInfo[i][bEnter] = price;
			SetBizzInt(i, "enter", price);
			format(string, sizeof(string), "― 你设置了产品的价格: 百分之 %i",price);
			SendClientMessage(playerid, -1, string);
			return 1;
		}
		case D_HEAL+13:
		{
			if(!response) return 1;
		    new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
		    switch(listitem)
		    {
		        	case 0:
					{
						if(PlayerInfo[playerid][pCash] < till*1) return SendErrorMessage(playerid," 你没有足够的钱!");
						PlayerInfo[playerid][pCash] -= till*1;
						BizzInfo[i][bMoney] += till*1;
						BizzPay[i] += till*1;
						BizzInfo[i][bProduct] -= 5;
						new randphone = 100000 + random(899999);
						PlayerInfo[playerid][pPnumber] = randphone;
						format(string, sizeof(string), "― 你买了一张新的SIM卡. 新的电话号码是: %i", randphone);
						SendClientMessage(playerid,-1, string);
						SetBizzInt(i, "money", BizzInfo[i][bMoney]);
						SetBizzInt(i, "product", BizzInfo[i][bProduct]);
						return true;
					}
					case 1:
					{
						if(PlayerInfo[playerid][pCash] < till*6) return SendErrorMessage(playerid,"你没有足够的钱!");
						BizzInfo[i][bMoney] += till*6;
						BizzPay[i] += till*6;
						BizzInfo[i][bProduct] -= 25;
						PlayerInfo[playerid][pCash] -= till*6;
						PlayerInfo[playerid][pPhoneBook] = 1;
						SendSyntaxMessage(playerid, "你买了一本电话簿。 现在你可以找出任何人的电话号码!");
						SendSyntaxMessage(playerid, "输入: /number ( ID或者玩家名称 ).");
						SetBizzInt(i, "money", BizzInfo[i][bMoney]);
						SetBizzInt(i, "product", BizzInfo[i][bProduct]);
						return true;
					}
					case 2:
					{
						if(PlayerInfo[playerid][pCash] < till*20) return SendErrorMessage(playerid,"你没有足够的钱!");
						BizzInfo[i][bMoney] += till*20;
						BizzPay[i] += till*20;
						BizzInfo[i][bProduct] -= 25;
						PlayerInfo[playerid][pCash] -= till*20;
						format(string, sizeof(string), "― 成功购买了 ( /dir )");
						SendClientMessage(playerid, -1, string);
						PlayerInfo[playerid][pDirectory] = 1;
						SetBizzInt(i, "money", BizzInfo[i][bMoney]);
						SetBizzInt(i, "product", BizzInfo[i][bProduct]);
						return true;
					}
					case 3:
					{
						if(PlayerInfo[playerid][pCash] < till*50) return SendErrorMessage(playerid,"你没有足够的钱!");
						new house = PlayerInfo[playerid][pPhousekey];
						if(house != 799)
						{
							HouseInfo[house][hHel] += 25;
							SendSyntaxMessage(playerid,"你买了25个急救包放在了家里");
							BizzInfo[i][bMoney] += till*50;
							BizzPay[i] += till*50;
							BizzInfo[i][bProduct] -= 50;
							PlayerInfo[playerid][pCash] -= till*50;
							SetBizzInt(i, "money", BizzInfo[i][bMoney]);
							SetBizzInt(i, "product", BizzInfo[i][bProduct]);
						}
						return true;
					}
					case 4:
					{
						if(PlayerInfo[playerid][pCash] < till*8) return SendErrorMessage(playerid,"你没有足够的钱!");
						BizzInfo[i][bMoney] += till*8;
						BizzPay[i] += till*8;
						BizzInfo[i][bProduct] -= 10;
						PlayerInfo[playerid][pCash] -= till*8;
						GiveWeapon(playerid, 43, 10);
						SetBizzInt(i, "money", BizzInfo[i][bMoney]);
						SetBizzInt(i, "product", BizzInfo[i][bProduct]);
						SendSyntaxMessage(playerid, "你买了一台相机");
						return true;
					}
					case 5:
					{
						if(PlayerInfo[playerid][pCash] < till*8) return SendErrorMessage(playerid,"你没有足够的钱!");
						BizzInfo[i][bMoney] += till*8;
						BizzPay[i] += till*8;
						BizzInfo[i][bProduct] -= 20;
						PlayerInfo[playerid][pCash] -= till*8;
						GiveWeapon(playerid, 14, 1);
						SetBizzInt(i, "money", BizzInfo[i][bMoney]);
						SetBizzInt(i, "product", BizzInfo[i][bProduct]);
						SendSyntaxMessage(playerid, "Вы купили цветы");
						return true;
					}
					case 6:
					{
						if(PlayerInfo[playerid][pCash] < till*1) return SendErrorMessage(playerid,"你没有足够的钱!");
						if(PlayerInfo[playerid][pOtmbI4ka] > 3) return SendErrorMessage(playerid,"你拥有最大数量的万能钥匙.");
						BizzInfo[i][bMoney] += till*1;
						BizzPay[i] += till*1;
						BizzInfo[i][bProduct] -= 5;
						PlayerInfo[playerid][pCash] -= till*1;
						SetBizzInt(i, "money", BizzInfo[i][bMoney]);
						SetBizzInt(i, "product", BizzInfo[i][bProduct]);
						PlayerInfo[playerid][pOtmbI4ka] += 1;
						SendSyntaxMessage(playerid, "你买了一把万能钥匙!");
						return true;
					}
					case 7:
					{
                        if(PlayerInfo[playerid][pCash] < till*150) return SendErrorMessage(playerid,"你没有足够的钱!");
                        if(PlayerInfo[playerid][pSkate] == 1) return SendErrorMessage(playerid,"你已经有了滑板!");
                        BizzInfo[i][bMoney] += till*150;
						BizzPay[i] += till*150;
						BizzInfo[i][bProduct] -= 50;
						PlayerInfo[playerid][pCash] -= till*150;
						SetBizzInt(i, "money", BizzInfo[i][bMoney]);
						SetBizzInt(i, "product", BizzInfo[i][bProduct]);
						PlayerInfo[playerid][pSkate] += 1;
						SendSyntaxMessage(playerid, "你买了一个滑板! ( /skate - 使用/收回 ).");
						return true;
			        }
			        case 8:
			        {
                        if(PlayerInfo[playerid][pSiga] > 0) return SendErrorMessage(playerid,"你已经有一包香烟了!");
                        ShowPlayerDialog(playerid, 7485, 2, "{1E90FF}香烟产品","{FFFFFF}中华\n玉溪\n软云\n大重九\n万宝路","选择","退出");
						return true;
			        }
					case 9:
					{
						if(PlayerInfo[playerid][pCash] < till*8) return SendErrorMessage(playerid,"你没有足够的钱!");
						if(PlayerInfo[playerid][pBalon4ik] > 5) return SendErrorMessage(playerid,"你的喷漆罐超过最大限制 ( 五个 ).");
						BizzInfo[i][bMoney] += till*8;
						BizzPay[i] += till*8;
						BizzInfo[i][bProduct] -= 20;
						PlayerInfo[playerid][pCash] -= till*8;
						SetBizzInt(i, "money", BizzInfo[i][bMoney]);
						SetBizzInt(i, "product", BizzInfo[i][bProduct]);
						PlayerInfo[playerid][pBalon4ik] += 1;
						SendSyntaxMessage(playerid, "你购买了一个喷漆罐.");
					}
					case 10:
					{
						if(PlayerInfo[playerid][pCash] < till*5) return SendErrorMessage(playerid,"你没有足够的钱!");
						if(PlayerInfo[playerid][pBint] > 2) return SendErrorMessage(playerid,"绷带数量不能超过3个.");
						BizzInfo[i][bMoney] += till*5;
						BizzPay[i] += till*5;
						BizzInfo[i][bProduct] -= 10;
						PlayerInfo[playerid][pCash] -= till*5;
						SetBizzInt(i, "money", BizzInfo[i][bMoney]);
						SetBizzInt(i, "product", BizzInfo[i][bProduct]);
						PlayerInfo[playerid][pBint] += 1;
						SendSyntaxMessage(playerid, "你购买了一个绷带 ( 使用方法 /bandage ).");
					}
					case 11:
					{
						if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
						BizzInfo[i][bMoney] += till*10;
						BizzPay[i] += till*10;
						BizzInfo[i][bProduct] -= 25;
						PlayerInfo[playerid][pCash] -= till*10;
						SetBizzInt(i, "money", BizzInfo[i][bMoney]);
						SetBizzInt(i, "product", BizzInfo[i][bProduct]);
						PlayerInfo[playerid][pCoster] = 1;
						SendSyntaxMessage(playerid, "你买了一个篝火 ( 使用方法 /coster ).");
					}
					case 12:
					{
						if(PlayerInfo[playerid][pCash] < till*50) return SendErrorMessage(playerid,"你没有足够的钱!");
						BizzInfo[i][bMoney] += till*50;
						BizzPay[i] += till*50;
						BizzInfo[i][bProduct] -= 50;
						PlayerInfo[playerid][pCash] -= till*50;
						SetBizzInt(i, "money", BizzInfo[i][bMoney]);
						SetBizzInt(i, "product", BizzInfo[i][bProduct]);
						PlayerInfo[playerid][pSerf] = 1;
						SendSyntaxMessage(playerid, "你买了一个冲浪板 ( 使用方法 /serf ).");
					}
		    }
		}
  		case 7485:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
			if(PlayerInfo[playerid][pCash] < till*15) return SendErrorMessage(playerid,"你没有足够的钱!");
            BizzInfo[i][bMoney] += till*15;
			BizzPay[i] += till*15;
			BizzInfo[i][bProduct] -= 10;
			PlayerInfo[playerid][pCash] -= till*15;
			SetBizzInt(i, "money", BizzInfo[i][bMoney]);
			SetBizzInt(i, "product", BizzInfo[i][bProduct]);
			PlayerInfo[playerid][pSiga] += 20;
			PlayerInfo[playerid][pSgf] = listitem+1;
			SendSyntaxMessage(playerid, "你买了一包香烟 ( /smoke - 抽烟 ).");
			return 1;
		}
		case D_HEAL+14:
		{
			if(!response) return 1;
		    new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill], inter = GetPlayerInterior(playerid);
            SendClientMessage(playerid, 0xFFFFFFAA, string);
		    switch(listitem)
		    {
		        case 0:
		        {
					if(PlayerInfo[playerid][pCash] < till*4) return SendErrorMessage(playerid,"你没有足够的钱!");
					GiveMoney(playerid, -till*4);
					BizzInfo[i][bMoney] += till*4;
					BizzInfo[i][bProduct] -= 50;
					BizzPay[i] += till*4;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					if(inter == 5) format(string, 90, "%s 吃了一块披萨",Name(playerid));
					if(inter == 10) format(string, 90, "%s 吃了一个汉堡",Name(playerid));
					if(inter == 9) format(string, 90, "%s 吃了一个鸡腿",Name(playerid));
					ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
					//PlayerInfo[playerid][pGolod] +=25;
                    //if(PlayerInfo[playerid][pGolod] > 100) PlayerInfo[playerid][pGolod] = 100;
                    //format(string,sizeof(string), "― Сытость пополнена до: %d", PlayerInfo[playerid][pGolod]);
                    //SendClientMessage(playerid, -1, string);
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
					EatList(playerid, i);
				}
    			case 1:
		        {
					if(PlayerInfo[playerid][pCash] < till*7) return SendErrorMessage(playerid,"你没有足够的钱!");
					GiveMoney(playerid, -till*7);
					BizzInfo[i][bMoney] += till*7;
					BizzInfo[i][bProduct] -= 50;
					BizzPay[i] += till*7;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					SetPlayerAttachedObject(playerid,0,19346,6,0.059000,0.059999,0.000000,-97.399963,0.000000,0.000000);
					if(inter == 5) format(string, 90, "%s 吃了一块披萨",Name(playerid));
					if(inter == 10) format(string, 90, "%s 吃了一个汉堡",Name(playerid));
					if(inter == 9) format(string, 90, "%s 吃了一个鸡腿",Name(playerid));
					ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
					/*PlayerInfo[playerid][pGolod] +=35;
                    if(PlayerInfo[playerid][pGolod] > 100) PlayerInfo[playerid][pGolod] = 100;
                    format(string,sizeof(string), "― Сытость пополнена до: %d", PlayerInfo[playerid][pGolod]);
                    SendClientMessage(playerid, -1, string);*/
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
					EatList(playerid, i);
				}
    			case 2:
		        {
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					GiveMoney(playerid, -till*10);
					BizzInfo[i][bMoney] += till*10;
					BizzInfo[i][bProduct] -= 50;
					BizzPay[i] += till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					if(inter == 5) format(string, 90, "%s 吃了一块披萨",Name(playerid));
					if(inter == 10) format(string, 90, "%s 吃了一个汉堡",Name(playerid));
					if(inter == 9) format(string, 90, "%s 吃了一个鸡腿",Name(playerid));
					ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
					/*PlayerInfo[playerid][pGolod] +=50;
                    if(PlayerInfo[playerid][pGolod] > 100) PlayerInfo[playerid][pGolod] = 100;
                    format(string,sizeof(string), "― Сытость пополнена до: %d", PlayerInfo[playerid][pGolod]);
                    SendClientMessage(playerid, -1, string);*/
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
					EatList(playerid, i);
				}
		    }
		}
		case D_HEAL+15:
		{
		    if(!response) return 1;
		    new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
		    switch(listitem)
		    {
		        case 0:
		        {
					if(PlayerInfo[playerid][pCash] < till*4) return SendErrorMessage(playerid,"你没有足够的钱!");
					PlayerInfo[playerid][pCash] -= till*4;
					BizzInfo[i][bMoney] += till*4;
					BizzPay[i] += till*4;
					BizzInfo[i][bProduct] -= 50;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					format(string, 90, "%s 喝了一瓶水",Name(playerid));
					ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
                    /*PlayerInfo[playerid][pGolod] +=10;
                    if(PlayerInfo[playerid][pGolod] > 100) PlayerInfo[playerid][pGolod] = 100;
                    format(string,sizeof(string), "― Сытость пополнена до: %d", PlayerInfo[playerid][pGolod]);
                    SendClientMessage(playerid, -1, string);*/
					ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
					ClubList(playerid, i);
				}
    			case 1:
		        {
					if(PlayerInfo[playerid][pCash] < till*7) return SendErrorMessage(playerid,"你没有足够的钱!");
					PlayerInfo[playerid][pCash] -= till*7;
					BizzInfo[i][bMoney] += till*7;
					BizzInfo[i][bProduct] -= 50;
					BizzPay[i] += till*7;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					format(string, 90, "%s 喝了一瓶苏打水",Name(playerid));
					ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
					/*PlayerInfo[playerid][pGolod] +=10;
                    if(PlayerInfo[playerid][pGolod] > 100) PlayerInfo[playerid][pGolod] = 100;
                    format(string,sizeof(string), "― Сытость пополнена до: %d", PlayerInfo[playerid][pGolod]);
                    SendClientMessage(playerid, -1, string);*/
					ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
					ClubList(playerid, i);
				}
    			case 2:
		        {
					if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
					PlayerInfo[playerid][pCash] -= till*10;
					BizzInfo[i][bMoney] += till*10;
					BizzInfo[i][bProduct] -= 50;
					BizzPay[i] += till*10;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					format(string, 90, "%s 喝了一瓶可口可乐",Name(playerid));
					ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
					/*PlayerInfo[playerid][pGolod] +=20;
                    if(PlayerInfo[playerid][pGolod] > 100) PlayerInfo[playerid][pGolod] = 100;
                    format(string,sizeof(string), "― Сытость пополнена до: %d", PlayerInfo[playerid][pGolod]);
                    SendClientMessage(playerid, -1, string);*/
					ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
					ClubList(playerid, i);
				}
    			case 3:
		        {
					if(PlayerInfo[playerid][pCash] < till*15) return SendErrorMessage(playerid,"你没有足够的钱!");
					PlayerInfo[playerid][pCash] -= till*15;
					BizzInfo[i][bMoney] += till*15;
					BizzInfo[i][bProduct] -= 50;
					BizzPay[i] += till*15;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					format(string, 90, "%s 喝了一杯啤酒",Name(playerid));
					ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
					/*PlayerInfo[playerid][pGolod] +=20;
                    if(PlayerInfo[playerid][pGolod] > 100) PlayerInfo[playerid][pGolod] = 100;
                    format(string,sizeof(string), "― Сытость пополнена до: %d", PlayerInfo[playerid][pGolod]);
                    SendClientMessage(playerid, -1, string);*/
					if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
					ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
					ClubList(playerid, i);
				}
    			case 4:
		        {
					if(PlayerInfo[playerid][pCash] < till*20) return SendErrorMessage(playerid,"你没有足够的钱!");
					PlayerInfo[playerid][pCash] -= till*20;
					BizzInfo[i][bMoney] += till*20;
					BizzInfo[i][bProduct] -= 50;
					BizzPay[i] += till*20;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					format(string, 90, "%s 喝了一杯伏特加",Name(playerid));
					ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
					/*PlayerInfo[playerid][pGolod] +=20;
                    if(PlayerInfo[playerid][pGolod] > 100) PlayerInfo[playerid][pGolod] = 100;
                    format(string,sizeof(string), "― Сытость пополнена до: %d", PlayerInfo[playerid][pGolod]);
                    SendClientMessage(playerid, -1, string);*/
					if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+5000);
					ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
					ClubList(playerid, i);
				}
 				case 5:
		        {
					if(PlayerInfo[playerid][pCash] < till*25) return SendErrorMessage(playerid,"你没有足够的钱!");
					PlayerInfo[playerid][pCash] -= till*25;
					BizzInfo[i][bMoney] += till*25;
					BizzPay[i] += till*25;
					BizzInfo[i][bProduct] -= 50;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
					format(string, 90, "%s 喝了一杯白兰地",Name(playerid));
					ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
					/*PlayerInfo[playerid][pGolod] +=30;
                    if(PlayerInfo[playerid][pGolod] > 100) PlayerInfo[playerid][pGolod] = 100;
                    format(string,sizeof(string), "― Сытость пополнена до: %d", PlayerInfo[playerid][pGolod]);
                    SendClientMessage(playerid, -1, string);*/
					if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+5000);
					ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
					ClubList(playerid, i);
				}
 				case 6:
		        {
					if(PlayerInfo[playerid][pCash] < till*30) return SendErrorMessage(playerid,"你没有足够的钱!");
					PlayerInfo[playerid][pCash] -= till*30;
					BizzInfo[i][bMoney] += till*30;
					BizzPay[i] += till*30;
					BizzInfo[i][bProduct] -= 50;
					SetBizzInt(i, "money", BizzInfo[i][bMoney]);
					SetBizzInt(i, "product", BizzInfo[i][bProduct]);
	    			if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+5000);
					format(string, 90, "%s 喝了一杯苦艾酒",Name(playerid));
					ProxDetectorNew(playerid, 30.0, COLOR_PURPLE, string);
					/*PlayerInfo[playerid][pGolod] +=30;
                    if(PlayerInfo[playerid][pGolod] > 100) PlayerInfo[playerid][pGolod] = 100;
                    format(string,sizeof(string), "― Сытость пополнена до: %d", PlayerInfo[playerid][pGolod]);
                    SendClientMessage(playerid, -1, string);*/
					ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
					ClubList(playerid, i);
				}
		    }
		    if(GetPlayerDrunkLevel(playerid) > 20000) SetPlayerDrunkLevel(playerid,20000);
		}
		case D_HEAL+16:
		{
		    if(!response) return 1;
		    if(GetPVarInt(playerid,"bizzProdaet")) return SendErrorMessage(playerid,"你正在和别人商量签出售产业合同!");
			new i = GetPVarInt(playerid, "PlayerBizz");
			strmid(BizzInfo[i][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
			BizzInfo[i][bLock] = 0;
			SendSyntaxMessage(playerid, "你卖掉了产业,资金将会转入到你的银行账户");
			PlayerInfo[playerid][pBank] += (BizzInfo[i][bBuyPrice] / 2 + BizzInfo[i][bMoney]);
			PlayerInfo[playerid][pBizpokup] = 0;
			BizzInfo[i][bBuyPrice] = 0;
			BizzInfo[i][bMoney] = 0;
			BizzInfo[i][bLic] = 0;
			BizzInfo[i][bEnter] = 100;
			BizzInfo[i][bTill] = 50;
			format(string, sizeof(string), "UPDATE "TABLE_BIZZ" SET owner='%s', block=%d, money=%d, lic=%d, penter=%d, till=%d, buyprice=%d WHERE id = %d",
			BizzInfo[i][bOwner], BizzInfo[i][bLock], BizzInfo[i][bMoney], BizzInfo[i][bLic], BizzInfo[i][bEnter], BizzInfo[i][bTill], BizzInfo[i][bBuyPrice],i);
			mysql_query(string);
			UpdateBizz(i);
			format(string, 32, "The busines sell");
			GameTextForPlayer(playerid, string, 3000, 5);
		}
		case D_HEAL+21:
		{
  			if(!response) return true;
		    new price;
		    if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_HEAL+21, 1, "{1E90FF}补货", "输入你需要多少美元的货物:", "确定", "返回");
			if(price < 1) return ShowPlayerDialog(playerid, D_HEAL+21, 1, "{1E90FF}补货", "输入你需要多少美元的货物:", "确定", "返回");
			if(PlayerInfo[playerid][pBank] < price) { ShowPlayerDialog(playerid, D_HEAL+21, 1, "{1E90FF}补货", "输入你需要多少美元的货物:", "确定", "返回"); return SendClientMessage(playerid, -1, YouDoNotHaveEnoughMoneyBank); }
			new i = GetPVarInt(playerid, "PlayerBizz");
   			PlayerInfo[playerid][pBank] -= price+money;
   			BizzInfo[i][bMoney] += price;
			SetBizzInt(i, "money", BizzInfo[i][bMoney]);
			format(string, sizeof(string), "―  你需要货物: %i 美元. 产业账户余额: %i 美元",price, BizzInfo[i][bMoney]);
			SendClientMessage(playerid, -1, string);
		}
		case D_HEAL+22:
		{
			if(!response) { DeletePVar(playerid, "ProductID"); return ProductList(playerid); }
			if(strcmp(ProductInfo[GetPVarInt(playerid, "ProductID")][pNamesss], Name(playerid), true) == 0) { DeletePVar(playerid, "ProductID"); ProductList(playerid); return SendErrorMessage(playerid,"你无法完成订单!"); }
			if(ProductInfo[GetPVarInt(playerid, "ProductID")][pStatus] == true) { SendServerMessage(playerid, "订单已经由某人完成!"); DeletePVar(playerid, "ProductID"); return ProductList(playerid); }
			new Float:VPos[3], i = ProductInfo[GetPVarInt(playerid, "ProductID")][pBizzid];
			format(string, sizeof(string), "―  你接受了订单 %s",ProductInfo[GetPVarInt(playerid, "ProductID")][pNamesss]);
			SendClientMessage(playerid, -1, string);
			GetPlayerPos(playerid, VPos[0], VPos[1], VPos[2]);
	    	DisablePlayerRaceCheckpoint(playerid);
	    	ProductInfo[GetPVarInt(playerid, "ProductID")][pStatus] = true;
			SetPlayerRaceCheckpoint(playerid, 1, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz], 0.0,0.0,0.0,6);
			format(string, sizeof(string), "―  已在地图上定位: %s. 距离: %.1f 米",BizzInfo[i][bName],GetDistanceBetweenPoints(VPos[0], VPos[1], VPos[2], BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]));
			SendClientMessage(playerid, -1, string);
			format(string, 50, "{9ACD32}货物: {ffffff}%i / 20000", ProductInfo[GetPVarInt(playerid, "ProductID")][pTill]);
			ProductInfo[GetPVarInt(playerid, "ProductID")][pText3D] = Create3DTextLabel(string, 0xffffffff, 0.0, 0.0, 0.0, 30.0, 0, 1);
   			Attach3DTextLabelToVehicle(ProductInfo[GetPVarInt(playerid, "ProductID")][pText3D], GetPlayerVehicleID(playerid), 0, -1.0, 0.5);
		}
		case D_HEAL+23:
		{
		    if(!response) return 1;
  		  	SetPVarInt(playerid, "ProductID", listitem+1);
  		  	format(string, 256, "{ffffff}订单号 {8D8DFF}\t\tNo.%i %s\n\n{ffffff}订单状态:\t\t{8D8DFF}%s\n{ffffff}地点:\t\t\t{8D8DFF}%s\n{ffffff}数量:\t\t{8D8DFF}%i {ffffff}产品\n{ffffff}付款:\t\t{8D8DFF}%i{ffffff} 美元",
			listitem+1, (!ProductInfo[listitem+1][pStatus]) ? ("{8D8DFF}(有效订单)") : ("{FF6347}(正在进行中)"), ProductInfo[listitem+1][pNamesss], BizzInfo[ProductInfo[listitem+1][pBizzid]][bName],ProductInfo[listitem+1][pTill], ProductInfo[listitem+1][pPrice]);
		    ShowPlayerDialog(playerid, D_HEAL+22, 0, "{1E90FF}订单", string, "接取", "返回");
		}
		case D_HEAL+24:
		{
		    if(!response) return 1;
		    new price, till, i = GetPVarInt(playerid, "PlayerBizz");
		    if(sscanf(inputtext, "p<,>ii",till,price)) return ShowPlayerDialog(playerid, D_HEAL+24, 1, "{1E90FF}产品", "{ffffff}输入产品数量和付款（用逗号分隔）:\n\n至少 {8D8DFF}50{ffffff} 个产品和至少 {8D8DFF}5000 {ffffff}美元\n\n", "接受", "退出");
			if(till < 50 || till > 20000-BizzInfo[i][bProduct])
			{
   				SendServerMessage(playerid, "数量只能在 50 - 20000!");
		 		return ShowPlayerDialog(playerid, D_HEAL+24, 1, "{1E90FF}产品", "{ffffff}输入产品数量和付款 (用逗号分隔):\n\n至少 {8D8DFF}50{ffffff} 个产品和至少 {8D8DFF}5000 {ffffff}美元\n\n", "确定", "退出");
			}
			if(price < 5000 || price > 100000)
			{
   				SendServerMessage(playerid, "价格只能在 5000 - 100000!");
				return ShowPlayerDialog(playerid, D_HEAL+24, 1, "{1E90FF}产品", "{ffffff}输入产品数量和付款 (用逗号分隔):\n\n至少 {8D8DFF}50{ffffff} 个产品和至少 {8D8DFF}5000 {ffffff}美元\n\n", "确定", "退出");
			}
			if(PlayerInfo[playerid][pBank] < price+till) { ShowPlayerDialog(playerid, D_HEAL+24, 1, "{1E90FF}产品", "{ffffff}输入产品数量和付款 (用逗号分隔):\n\n至少 {8D8DFF}50{ffffff} 个产品和至少 {8D8DFF}5000 {ffffff}美元\n\n", "确定", "退出"); return SendClientMessage(playerid, -1, YouDoNotHaveEnoughMoneyBank); }
			TOTALPRODUCT++;
			strmid(ProductInfo[TOTALPRODUCT][pNamesss],Name(playerid),0,strlen(Name(playerid)),MAX_PLAYER_NAME);
			ProductInfo[TOTALPRODUCT][pPrice] = price;
			ProductInfo[TOTALPRODUCT][pTill] = till;
			ProductInfo[TOTALPRODUCT][pBizzid] = i;
			ProductInfo[TOTALPRODUCT][pStatus] = false;
			PlayerInfo[playerid][pBank] -= price;
			format(string, sizeof(string), "―  你订购了 %i 个产品, 付款 %i 美元. 账户余额: %i 美元", till, price, PlayerInfo[playerid][pBank]);
			SendClientMessage(playerid, -1, string);
			foreach(new p: Player)
			{
			    if(!IsPlayerConnected(p) || PlayerInfo[p][pJob] != 1) continue;
			    format(YCMDstr, sizeof(YCMDstr), "―  有新的订单! %s. 使用: /plist", Name(playerid));
				SendClientMessage(p, -1, YCMDstr);
			}
		}
		case D_HEAL+26:
		{
		    if(!response) return 1;
		    new idx = GetPVarInt(playerid, "PlayerBizz");
		    if(PlayerInfo[playerid][pCash] < BizzInfo[idx][bEnter]) return SendErrorMessage(playerid,"你没有足够的钱!");
		    GiveMoney(playerid, -BizzInfo[idx][bEnter]);
		    BizzInfo[idx][bMoney] += BizzInfo[idx][bEnter];
		    BizzPay[idx] += BizzInfo[idx][bEnter];
		    SetBizzInt(idx, "money", BizzInfo[idx][bMoney]);
		    Q_SetPlayerPos(playerid,BizzInfo[idx][bExitx], BizzInfo[idx][bExity], BizzInfo[idx][bExitz]);
			SetPlayerInterior(playerid,BizzInfo[idx][bInt]);
			SetPlayerVirtualWorld(playerid,BizzInfo[idx][bVirtual]);
			return 1;
		}
		case D_JOB+55:
		{
		    if(!response) return 1;
		    new price;
		    if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, D_JOB+55, 1, "{1E90FF}票价", "输入票价:", "确定", "退出");
		    if(price < 1 || price > 100)
		    {
      			SendServerMessage(playerid, "价格限制 1 - 100!");
		        return ShowPlayerDialog(playerid, D_JOB+55, 1, "{1E90FF}票价", "输入票价:", "确定", "退出");
		    }
			SetPVarInt(playerid, "PriceBus", price);
			ShowPlayerDialog(playerid, D_JOB+56, 2, "{1E90FF}路线", "市内 - 医院\n市内 - SF市\n市内 - LV市\n农场 - SF市\n火车站 - 采石场", "选择", "退出");
		}
		case D_JOB+56:
		{
		    if(!response) return 1;
			new name[32];
			switch(listitem)
		    {
		        case 0:
				{
				    if(!IsPlayerInRangeOfPoint(playerid, 50.0,1790.5295,-1910.3073,13.3970))
					{
					    DeletePVar(playerid, "PriceBus");
						return SendErrorMessage(playerid,"你离火车站太远了! (使用 /gps > 公共场所 > LS 火车站)");
					}
					name = "市内 - 医院";
				}
		        case 1:
				{
    				if(!IsPlayerInRangeOfPoint(playerid, 40.0,-1990.5427,146.0030,27.6725))
					{
					    DeletePVar(playerid, "PriceBus");
						return SendErrorMessage(playerid,"你离火车站太远了!");
					}
					name = "市内 - SF市";
				}
		        case 2:
				{
    				if(!IsPlayerInRangeOfPoint(playerid, 30.0,2810.8474,1289.6901,10.88720))
					{
					    DeletePVar(playerid, "PriceBus");
						return SendErrorMessage(playerid,"你离火车站太远了!");
					}
					name = "市内- LV市";
				}
		        case 3:
		        {
			        if(!IsPlayerInRangeOfPoint(playerid, 50.0,1790.5295,-1910.3073,13.3970))
					{
					    DeletePVar(playerid, "PriceBus");
						return SendErrorMessage(playerid,"你离火车站太远了! (使用 /gps > 公共厕所 > LS 火车站)");
					}
					name = "农场 - SF市";
				}
		        case 4:
		        {
	                if(!IsPlayerInRangeOfPoint(playerid, 50.0,1790.5295,-1910.3073,13.3970))
					{
					    DeletePVar(playerid, "PriceBus");
						return SendErrorMessage(playerid,"你离火车站太远了!(使用 /gps > 公共厕所 > LS 火车站)");
					}
					name = "火车站 - 采石场";
				}
		    }
		    SetPVarInt(playerid, "TypeBus", listitem+1);
		    SendSyntaxMessage(playerid, "你开始了公交车司机工作,下车代表完成了任务.");
		    format(string, 128, "巴士在几秒钟内出发 (%s)",name);
		    ProxDetectorNew(playerid, 30.0, COLOR_FADE5, string);
		    format(string, 90, "%s\n{ffffff}票价: {33AAFF}%i {ffffff}美元", name, GetPVarInt(playerid, "PriceBus"));
   			BusText3D[playerid] = Create3DTextLabel( string, 0x33AAFFFF, 0.0, 0.0, 0.0, 50.0, 0, 1);
			Attach3DTextLabelToVehicle(BusText3D[playerid], GetPlayerVehicleID(playerid), 0.0, 0.0, 2.25);
			pPressed[playerid] = 0;
		 	new i = pPressed[playerid], type = GetPVarInt(playerid, "TypeBus");
		 	if(type == 1) SetPlayerRaceCheckpoint(playerid,0,BusCityLS[i][0],BusCityLS[i][1],BusCityLS[i][2],BusCityLS[i][3],BusCityLS[i][4],BusCityLS[i][5],5.0);
			if(type == 2) SetPlayerRaceCheckpoint(playerid,0,BusCitySF[i][0],BusCitySF[i][1],BusCitySF[i][2],BusCitySF[i][3],BusCitySF[i][4],BusCitySF[i][5],5.0);
            if(type == 3) SetPlayerRaceCheckpoint(playerid,0,BusCityLV[i][0],BusCityLV[i][1],BusCityLV[i][2],BusCityLV[i][3],BusCityLV[i][4],BusCityLV[i][5],5.0);
		 	if(type == 4) SetPlayerRaceCheckpoint(playerid,0,BusSchool[i][0],BusSchool[i][1],BusSchool[i][2],BusSchool[i][3],BusSchool[i][4],BusSchool[i][5],5.0);
 	 		if(type == 5) SetPlayerRaceCheckpoint(playerid,0,BusLS[i][0],BusLS[i][1],BusLS[i][2],BusLS[i][3],BusLS[i][4],BusLS[i][5],5.0);
			return 1;
		}
		case D_JOB+58:
		{
  			if(!response) { RemovePlayerFromVehicle(playerid); return 1; }
		    if(PlayerInfo[playerid][pCash] < 500) { RemovePlayerFromVehicle(playerid); return SendErrorMessage(playerid,"你没有足够的钱!"); }
		    SendSyntaxMessage(playerid, "你以500美元的价格租了一辆公共汽车 ( 使用 /route )");
		    SetPVarInt(playerid, "RentBus", GetPlayerVehicleID(playerid));
			GiveMoney(playerid, -500);
			return 1;
		}
		case D_JOB+124:
		{
    		if(!response) { RemovePlayerFromVehicle(playerid); return 1; }
	    	if(PlayerInfo[playerid][pCash] < 999) { RemovePlayerFromVehicle(playerid); return SendErrorMessage(playerid,"你没有足够的钱!"); }
		    SendSyntaxMessage(playerid, "你以1000美元的价格租了一辆车");
		    SetPVarInt(playerid, "FuelCar", GetPlayerVehicleID(playerid));
			PlayerInfo[playerid][pCash] -= 1000;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 583)
			{
	   			SetPVarInt(playerid, "FuelCarLittle", 1);
				new full;
	 			for(new i = 0; i < 5; i++)
	    		{
					if(MafiaInfo[3][mFuel][i] > 100)
					{
						full = i+1;
					}
		        }
				if(full == 0)
				{
					PlayerInfo[playerid][pCash] += GetPVarInt(playerid, "JobLittlePrice");
		  			DeletePVar(playerid, "LittleFull");
					DeletePVar(playerid, "JobLittlePrice");
					DeletePVar(playerid, "FuelCarLittle");
					RemovePlayerFromVehicle(playerid);
					return SendServerMessage(playerid, "没有燃料了,请等待!");
				}
			 	SendServerMessage(playerid, "去检查点加油");
	   			SetPVarInt(playerid, "LittleFull", full);
	   			full--;
				if(full == 0) SetPlayerRaceCheckpoint(playerid, 1, 433.7109,1580.9321,11.4922, 0.0, 0.0, 0.0, 5.0);
				if(full == 1) SetPlayerRaceCheckpoint(playerid, 1, 600.3598,1515.3052,7.8325, 0.0, 0.0, 0.0, 5.0);
				if(full == 2) SetPlayerRaceCheckpoint(playerid, 1, 578.3732,1439.7570,11.1406, 0.0, 0.0, 0.0, 5.0);
				if(full == 3) SetPlayerRaceCheckpoint(playerid, 1, 627.6626,1369.1279,11.9845, 0.0, 0.0, 0.0, 5.0);
				if(full == 4) SetPlayerRaceCheckpoint(playerid, 1, 353.2522,1317.3221,12.4766, 0.0, 0.0, 0.0, 5.0);
			}
			return 1;
		}
		case D_JOB+125:
		{
  			if(!response) return 1;
		    new price, till, i = GetPVarInt(playerid, "PlayerBizz");
		    if(sscanf(inputtext, "p<,>ii",till,price)) return ShowPlayerDialog(playerid, D_JOB+125, 1, "{1E90FF}燃料", "{ffffff}输入燃料和每升价格 (用逗号分隔):\n\n{8d8dff}1{ffffff} 升燃料等于 {8d8dff}1{ffffff} 美元\n\n", "确定", "退出");
			if(till < 50 || till > 50000-BizzInfo[i][bProduct])
			{
   				SendServerMessage(playerid, "数量限制 50 - 50000!");
				return ShowPlayerDialog(playerid, D_JOB+125, 1, "{1E90FF}燃料", "{ffffff}输入燃料和每升价格 (用逗号分隔):\n\n{8d8dff}1{ffffff} 升燃料等于 {8d8dff}1{ffffff} 美元\n\n", "确定", "退出");
			}
			if(price < 5000 || price > 100000)
			{
			    SendServerMessage(playerid, "价格限制 5000 - 100000!");
				return ShowPlayerDialog(playerid, D_JOB+125, 1, "{1E90FF}燃料", "{ffffff}输入燃料和每升价格 (用逗号分隔):\n\n{8d8dff}1{ffffff} 升燃料等于 {8d8dff}1{ffffff} 美元\n\n", "确定", "退出");
			}
			if(PlayerInfo[playerid][pBank] < price+till)
			{
				ShowPlayerDialog(playerid, D_JOB+125, 1, "{1E90FF}燃料", "{ffffff}输入燃料和每升价格 (用逗号分隔):\n\n{8d8dff}1{ffffff} 升燃料等于 {8d8dff}1{ffffff} 美元\n\n", "确定", "退出");
				return SendClientMessage(playerid, -1, YouDoNotHaveEnoughMoneyBank);
			}
			TOTALFUEL++;
			strmid(FuelInfo[TOTALFUEL][pNamesss],Name(playerid),0,strlen(Name(playerid)),MAX_PLAYER_NAME);
			FuelInfo[TOTALFUEL][pPrice] = price;
			FuelInfo[TOTALFUEL][pTill] = till;
			FuelInfo[TOTALFUEL][pBizzid] = i;
			FuelInfo[TOTALFUEL][pStatus] = false;
			PlayerInfo[playerid][pBank] -= price;
			format(YCMDstr, sizeof(YCMDstr), "―  你订购了 %i 升燃料, 付款 %i 美元. 账户余额: %i 美元", till, price, PlayerInfo[playerid][pBank]);
			SendClientMessage(playerid, -1, YCMDstr);
			for(new p = 0; p < GetMaxPlayers(); p++)
			{
			    if(!IsPlayerConnected(p) || PlayerInfo[p][pJob] != 3) continue;
			    format(YCMDstr, sizeof(YCMDstr), "―  收到了新订单 %s. 使用: /flist", Name(playerid));
				SendClientMessage(p, -1, YCMDstr);
			}
		}
		case D_JOB+126:
		{
  			if(!response) return 1;
  		  	SetPVarInt(playerid, "FuelID", listitem+1);
  		  	format(string, 256, "{ffffff}订单号 {8D8DFF}\t\tNo. %i %s\n\n{ffffff}订单状态:\t\t{8D8DFF}%s\n{ffffff}地点:\t\t\t{8D8DFF}%s\n{ffffff}数量:\t\t{8D8DFF}%i {ffffff}升燃料\n{ffffff}付款:\t\t{8D8DFF}%i{ffffff} 美元",
			listitem+1, (!FuelInfo[listitem+1][pStatus]) ? ("{8D8DFF}(有效订单)") : ("{FF6347}(正在进行中)"), FuelInfo[listitem+1][pNamesss], BizzInfo[FuelInfo[listitem+1][pBizzid]][bName],FuelInfo[listitem+1][pTill], FuelInfo[listitem+1][pPrice]);
		    ShowPlayerDialog(playerid, D_JOB+127, 0, "{1E90FF}订单", string, "接取", "返回");
		}
		case D_JOB+127:
		{
			if(!response) { DeletePVar(playerid, "FuelID"); return FuelList(playerid); }
			if(strcmp(FuelInfo[GetPVarInt(playerid, "FuelID")][pNamesss], Name(playerid), true) == 0) { DeletePVar(playerid, "FuelID"); FuelList(playerid); return SendErrorMessage(playerid,"你无法完成订单!"); }
			if(FuelInfo[GetPVarInt(playerid, "FuelID")][pStatus] == true) { SendServerMessage(playerid, "订单已由某人执行!"); DeletePVar(playerid, "FuelID"); return FuelList(playerid); }
			if(FuelInfo[GetPVarInt(playerid, "FuelID")][pTill] > tdload[2]) { SendErrorMessage(playerid,"该工厂没有足够的燃料!"); DeletePVar(playerid, "FuelID"); return FuelList(playerid); }
			new Float:VPos[3], i = FuelInfo[GetPVarInt(playerid, "FuelID")][pBizzid];
		    tdload[2]-=FuelInfo[GetPVarInt(playerid, "FuelID")][pTill];
		    SetOtherInt("tdload[2]", tdload[2]);
			format(string, 50, "工厂燃料: {FF9900}%i{ffffff} 升", tdload[2]);
	 		Update3DTextLabelText(tPickup[2], 0xFFFFFFFF, string);
	 		Update3DTextLabelText(tPickup[3], 0xFFFFFFFF, string);
	 		Update3DTextLabelText(tPickup[4], 0xFFFFFFFF, string);
	  		Update3DTextLabelText(tPickup[5], 0xFFFFFFFF, string);
	  		format(YCMDstr, sizeof(YCMDstr), "―  你接受了 %s 订单.", FuelInfo[GetPVarInt(playerid, "FuelID")][pNamesss]);
			SendClientMessage(playerid, -1, YCMDstr);
			GetPlayerPos(playerid, VPos[0], VPos[1], VPos[2]);
	    	DisablePlayerRaceCheckpoint(playerid);
	    	FuelInfo[GetPVarInt(playerid, "FuelID")][pStatus] = true;
			SetPlayerRaceCheckpoint(playerid, 1, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz], 0.0,0.0,0.0,6);
			format(YCMDstr, sizeof(YCMDstr), "―  已在地图上定位: %s. 距离: %.1f 米",BizzInfo[i][bName],GetDistanceBetweenPoints(VPos[0], VPos[1], VPos[2], BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]));
			SendClientMessage(playerid, -1, YCMDstr);
			format(string, 100, "{9ACD32}燃料: {ffffff}%i / 50000{9acd32} 升", FuelInfo[GetPVarInt(playerid, "FuelID")][pTill]);
			FuelInfo[GetPVarInt(playerid, "FuelID")][pText3D] = Create3DTextLabel(string, 0xffffffff, 0.0, 0.0, 0.0, 30.0, 0, 1);
   			Attach3DTextLabelToVehicle(FuelInfo[GetPVarInt(playerid, "FuelID")][pText3D], GetPlayerVehicleID(playerid), 0, -1.0, 2.0);

		}
		case D_JOB+128:
		{
		    if(!response) return 1;
		    new fuel;
   			new bizz = BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bTill] / 3;
		    if(sscanf(inputtext, "i",fuel)) return ShowPlayerDialog(playerid, D_JOB+128, 1,"{1E90FF}燃料", "输入燃料升数:", "确定", "退出");
		    if(fuel < 1 || fuel > 200)
		    {
				SendServerMessage(playerid, "燃料限制 1 - 200 升!");
				return ShowPlayerDialog(playerid, D_JOB+128, 1,"{1E90FF}燃料", "输入燃料升数:", "确定", "退出");
		    }
			if(fuel+Fuell[GetPlayerVehicleID(playerid)] > 200)
			{
			    format(YCMDstr, sizeof(YCMDstr), "―  不能超过 200 升.", 200-Fuell[GetPlayerVehicleID(playerid)]);
				SendClientMessage(playerid, -1, YCMDstr);
			    return ShowPlayerDialog(playerid, D_JOB+128, 1,"{1E90FF}燃料", "输入燃料升数:", "确定", "退出");
			}
			if(fuel*bizz > PlayerInfo[playerid][pCash])
			{
			    SendErrorMessage(playerid,"你没有足够的钱!");
			    return ShowPlayerDialog(playerid, D_JOB+128, 1, "{1E90FF}燃料", "输入燃料升数:", "确定", "退出");
			}
			if(fuel > BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bProduct])
			{
			    SendErrorMessage(playerid,"产业中燃料不足!");
			    return ShowPlayerDialog(playerid, D_JOB+128, 1, "{1E90FF}燃料", "输入燃料升数:", "确定", "退出");
			}
			new price = fuel*bizz;
			GiveMoney(playerid, -price);
			BizzPay[GetPVarInt(playerid, "FuelBizzID")] += price;
			BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bMoney] += price;
			BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bProduct] -= fuel;
			SetBizzInt(BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bid], "product", BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bProduct]);
			DeletePVar(playerid, "FuelBizzID");
		 	SendServerMessage(playerid, "加油中,请等待..");
			SetPVarInt(playerid, "Refueling", fuel);
			TogglePlayerControllable(playerid, false);
			ReFuelTimer[playerid] = SetTimerEx("ReFill", 500, true, "i", playerid);
			return 1;
		}
		case CHECKPOINT_HOME:
		{
			PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
			GameTextForPlayer(playerid, "~w~Is in~n~~y~House", 5000, 1);
		}
		case CHECKPOINT_CAR:
 	    {
 			PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_CAR;
			GameTextForPlayer(playerid, "~w~Is in~n~~y~Car", 5000, 1);
		}
	case 2224:
		{
			if(response)
			{
				new newcar = GetPlayerVehicleID(playerid);
				if(listitem == 0)
				{
					if(newcar >= lsnewscar[0] && newcar <= lsnewscar[5] || PlayerToPoint(30.0,playerid,77.8179,2253.7339,632.2575)) { } else { SendErrorMessage(playerid,"你不在新闻车或者新闻直升机里或者不在直播室!"); return true;}
					if(PEfir[playerid] != MAX_SLOTS)
					{
						PEfir[playerid] = MAX_SLOTS;
						format(string, sizeof(string), "%s 开始直播", Name(playerid));
						SendFamilyMessage(16,COLOR_BLUE, string);
					}
					else
					{
						SendErrorMessage(playerid,"你已经在直播了");
					}
				}
				if(listitem == 1)
				{
					if(PEfir[playerid] != 255)
					{
						PEfir[playerid] = 255;
						format(string, sizeof(string), "%s 退出了直播", Name(playerid));
						SendFamilyMessage(16,COLOR_BLUE, string);
						return true;
					}
					else
					{
						SendErrorMessage(playerid,"你没有在直播");
					}
				}
				if(listitem == 2)
				{
					format(string, sizeof(string), "%s 开始接听来自听众的电话", Name(playerid));
					SendFamilyMessage(16,COLOR_BLUE, string);
					smsls = 1;
					return true;
				}
				if(listitem == 3)
				{
					format(string, sizeof(string), "%s 完成接听听众的电话", Name(playerid));
					SendFamilyMessage(16,COLOR_BLUE, string);
					smsls = 0;
					return true;
				}
				if(listitem == 4)
				{
					if(PlayerInfo[playerid][pLeader] == 16) return ShowPlayerDialog(playerid,3002,DIALOG_STYLE_INPUT, "{1E90FF}11888的通话和短信价格", "输入价格", "确定", "退出");
				}
				if(listitem == 5)
				{
					if(PlayerInfo[playerid][pLeader] == 16) return ShowPlayerDialog(playerid,32,DIALOG_STYLE_INPUT, "{1E90FF}广告价格", "输入价格", "确定", "退出");
				}
				if(listitem == 6) { AdvertList(playerid); }
			}
			else
			{
				return true;
			}
		}
	case 70:
		{
			if(response)
			{
				for(new i = 1; i <= TotalHouse; i++)
				{
					if (PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
					{
						if (GetPlayerVirtualWorld(playerid) == i+50)
						{
							SetPlayerInterior(playerid,0);
							SetPlayerVirtualWorld(playerid,0);
							Q_SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
							PlayerInfo[playerid][pInt] = 0;
							PlayerInfo[playerid][pLocal] = 255;
							return true;
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 10022:
		{
			if(response)
			{
				format(string,sizeof(string), "{F70000}你的课程开始了. {FFFFFF}去执照中心的停车场,然后找一辆空的教练车并上车,按下 '2' 启动引擎\n{FFFFFF}接下来，你将看到设定的路线\n{FFFFFF}如果在考试过程中发生事故,则为考试失败");
				ShowPlayerDialog(playerid,10023,DIALOG_STYLE_MSGBOX, "{1E90FF}驾驶考试",string, "确定", "退出");
			}
			else
			{
				return true;
			}
		}
		case 10023:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pCash] < 4000) return SendErrorMessage(playerid,"你没有足够的钱! 需要 4.000$");
				GameTextForPlayer(playerid, "~r~-$4.000", 5000, 1);
				PlayerInfo[playerid][pCash]-= 4000;
				LessonStat[playerid] = 0;
				LessonCar[playerid] = 1;
				TakingLesson[playerid] = 1;
				SetPlayerRaceCheckpoint(playerid, 1, 1369.3864,-1653.4747,13.3828,1369.3864,-1653.4747,13.3828, 6.0);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 8004:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
				case 0: ShowPlayerDialog(playerid, 8011, 2, "{1E90FF}轮胎列表", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\nTwist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic", "确定", "返回");
				case 1: AddVehicleComponent(vehicleid,1087), PlayerPlaySound(playerid,1133,0.0,0.0,0.0), ShowPlayerDialog(playerid, 8004, 2, "{1E90FF}调整菜单", "轮胎\n液压系统\n车身\n颜色\n喷漆\n氮气 ", "选择", "返回");
				case 2:
					{
						new Car = GetPlayerVehicleID(playerid), Model = GetVehicleModel(Car);
						switch(Model)
						{
						case 559,560,561,562,565,558: ShowPlayerDialog(playerid, 8012, 2, "{1E90FF}车身", "前保险杠 X-flow\n前保险杠 Alien\n后保险杠 X-Flow\n后保险杠 Alien\n扰流板 X-Flow \n扰流板 Alien \n侧裙 X-Flow \n侧裙 Alien\n进气口 X-Flow\n进气口 Alien\n排气管 X-flow\n排气管 Alien", "选择", "返回");
						default: SendServerMessage(playerid, "你必须驾驶: Elegy, Stratum, Flash, Sultan, Uranus");
						}
					}
				case 3: ShowPlayerDialog(playerid, 8013, 2, "{1E90FF}颜色选择", "红色\n蓝色\n黄色\n绿色\n灰色\n橙色\n黑色\n白色", "选择", "返回");
				case 4: ShowPlayerDialog(playerid, 8014, 2, "{1E90FF}喷漆", "喷漆 1\n喷漆 2\n喷漆 3", "选择", "返回");
				case 5: ShowPlayerDialog(playerid, 8015, 2, "{1E90FF}氮气", "Nos 2X\nNos 5X\nNos 10X", "选择", "返回");
				}
			}
			else
			return true;
		}
	case 8011:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
				case 0: AddVehicleComponent(vehicleid,1073);
				case 1: AddVehicleComponent(vehicleid,1074);
				case 2: AddVehicleComponent(vehicleid,1076);
				case 3: AddVehicleComponent(vehicleid,1077);
				case 4: AddVehicleComponent(vehicleid,1075);
				case 5: AddVehicleComponent(vehicleid,1079);
				case 6: AddVehicleComponent(vehicleid,1078);
				case 7: AddVehicleComponent(vehicleid,1080);
				case 8: AddVehicleComponent(vehicleid,1081);
				case 9: AddVehicleComponent(vehicleid,1082);
				case 10: AddVehicleComponent(vehicleid,1083);
				case 11: AddVehicleComponent(vehicleid,1084);
				case 12: AddVehicleComponent(vehicleid,1085);
				}
				PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
				ShowPlayerDialog(playerid, 8011, 2, "{1E90FF}轮胎列表", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\nTwist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic", "确定", "返回");
			}
			else ShowPlayerDialog(playerid, 8004, 2, "{1E90FF}调整菜单", "轮胎\n液压系统\n车身\n颜色\n喷漆\n氮气 ", "选择", "返回");
		}
	case 8013:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
				case 0: ChangeVehicleColor(vehicleid, 3, 3);
				case 1: ChangeVehicleColor(vehicleid, 79, 79);
				case 2: ChangeVehicleColor(vehicleid, 65, 65);
				case 3: ChangeVehicleColor(vehicleid, 86, 86);
				case 4: ChangeVehicleColor(vehicleid, 9, 9);
				case 5: ChangeVehicleColor(vehicleid, 6, 6);
				case 6: ChangeVehicleColor(vehicleid, 0, 0);
				case 7: ChangeVehicleColor(vehicleid, 1, 1);
				}
				PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
				ShowPlayerDialog(playerid, 8013, 2, "{1E90FF}颜色选择", "红色\n蓝色\n黄色\n绿色\n灰色\n橙色\n黑色\n白色", "选择", "返回");
			}
			else ShowPlayerDialog(playerid, 8004, 2, "{1E90FF}调整菜单", "轮胎\n液压系统\n车身\n颜色\n喷漆\n氮气 ", "选择", "返回");
		}
	case 8015:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
				case 0:
					{
						AddVehicleComponent(vehicleid,1008);
						ShowPlayerDialog(playerid, 8015, 2, "{1E90FF}氮气", "Nos 2X\nNos 5X\nNos 10X", "选择", "返回");
					}
				case 1:
					{
						AddVehicleComponent(vehicleid,1009);
						ShowPlayerDialog(playerid, 8015, 2, "{1E90FF}氮气", "Nos 2X\nNos 5X\nNos 10X", "选择", "返回");
					}
				case 2:
					{
						AddVehicleComponent(vehicleid,1010);
						ShowPlayerDialog(playerid, 8015, 2, "{1E90FF}氮气", "Nos 2X\nNos 5X\nNos 10X", "选择", "返回");
					}
				}
			}
			else ShowPlayerDialog(playerid, 8004, 2, "{1E90FF}调整菜单", "轮胎\n液压系统\n车身\n颜色\n喷漆\n氮气 ", "选择", "返回");
		}
	case 8014:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				ChangeVehiclePaintjob(vehicleid,listitem+1);
				PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
				ShowPlayerDialog(playerid, 8014, 2, "{1E90FF}喷漆", "喷漆 1\n喷漆 2\n喷漆 3", "选择", "返回");
			}
			else ShowPlayerDialog(playerid, 8004, 2, "{1E90FF}调整菜单", "轮胎\n液压系统\n车身\n颜色\n喷漆\n氮气 ", "选择", "返回");
		}
	case 8012:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				new cartype = GetVehicleModel(vehicleid);
				switch(listitem)
				{
				case 0:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1172);
						case 560: AddVehicleComponent(vehicleid,1170);
						case 565: AddVehicleComponent(vehicleid,1152);
						case 559: AddVehicleComponent(vehicleid,1173);
						case 561: AddVehicleComponent(vehicleid,1157);
						case 558: AddVehicleComponent(vehicleid,1165);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "{1E90FF}车身", "前保险杠 X-flow\n前保险杠 Alien\n后保险杠 X-Flow\n后保险杠 Alien\n扰流板 X-Flow \n扰流板 Alien \n侧裙 X-Flow \n侧裙 Alien\n进气口 X-Flow\n进气口 Alien\n排气管 X-flow\n排气管 Alien", "选择", "返回");
					}
				case 1:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1171);
						case 560: AddVehicleComponent(vehicleid,1169);
						case 565: AddVehicleComponent(vehicleid,1153);
						case 559: AddVehicleComponent(vehicleid,1160);
						case 561: AddVehicleComponent(vehicleid,1155);
						case 558: AddVehicleComponent(vehicleid,1166);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "{1E90FF}车身", "前保险杠 X-flow\n前保险杠 Alien\n后保险杠 X-Flow\n后保险杠 Alien\n扰流板 X-Flow \n扰流板 Alien \n侧裙 X-Flow \n侧裙 Alien\n进气口 X-Flow\n进气口 Alien\n排气管 X-flow\n排气管 Alien", "选择", "返回");
					}
				case 2:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1148);
						case 560: AddVehicleComponent(vehicleid,1140);
						case 565: AddVehicleComponent(vehicleid,1151);
						case 559: AddVehicleComponent(vehicleid,1161);
						case 561: AddVehicleComponent(vehicleid,1156);
						case 558: AddVehicleComponent(vehicleid,1167);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "{1E90FF}车身", "前保险杠 X-flow\n前保险杠 Alien\n后保险杠 X-Flow\n后保险杠 Alien\n扰流板 X-Flow \n扰流板 Alien \n侧裙 X-Flow \n侧裙 Alien\n进气口 X-Flow\n进气口 Alien\n排气管 X-flow\n排气管 Alien", "选择", "返回");
					}
				case 3:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1149);
						case 560: AddVehicleComponent(vehicleid,1141);
						case 565: AddVehicleComponent(vehicleid,1150);
						case 559: AddVehicleComponent(vehicleid,1159);
						case 561: AddVehicleComponent(vehicleid,1154);
						case 558: AddVehicleComponent(vehicleid,1168);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "{1E90FF}车身", "前保险杠 X-flow\n前保险杠 Alien\n后保险杠 X-Flow\n后保险杠 Alien\n扰流板 X-Flow \n扰流板 Alien \n侧裙 X-Flow \n侧裙 Alien\n进气口 X-Flow\n进气口 Alien\n排气管 X-flow\n排气管 Alien", "选择", "返回");
					}
				case 4:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1146);
						case 560: AddVehicleComponent(vehicleid,1139);
						case 565: AddVehicleComponent(vehicleid,1050);
						case 559: AddVehicleComponent(vehicleid,1158);
						case 561: AddVehicleComponent(vehicleid,1160);
						case 558: AddVehicleComponent(vehicleid,1163);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "{1E90FF}车身", "前保险杠 X-flow\n前保险杠 Alien\n后保险杠 X-Flow\n后保险杠 Alien\n扰流板 X-Flow \n扰流板 Alien \n侧裙 X-Flow \n侧裙 Alien\n进气口 X-Flow\n进气口 Alien\n排气管 X-flow\n排气管 Alien", "选择", "返回");
					}
				case 5:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1147);
						case 560: AddVehicleComponent(vehicleid,1138);
						case 565: AddVehicleComponent(vehicleid,1049);
						case 559: AddVehicleComponent(vehicleid,1162);
						case 561: AddVehicleComponent(vehicleid,1058);
						case 558: AddVehicleComponent(vehicleid,1164);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "{1E90FF}车身", "前保险杠 X-flow\n前保险杠 Alien\n后保险杠 X-Flow\n后保险杠 Alien\n扰流板 X-Flow \n扰流板 Alien \n侧裙 X-Flow \n侧裙 Alien\n进气口 X-Flow\n进气口 Alien\n排气管 X-flow\n排气管 Alien", "选择", "返回");
					}
				case 6:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1041), AddVehicleComponent(vehicleid,1039);
						case 560: AddVehicleComponent(vehicleid,1031), AddVehicleComponent(vehicleid,1030);
						case 565: AddVehicleComponent(vehicleid,1052), AddVehicleComponent(vehicleid,1048);
						case 559: AddVehicleComponent(vehicleid,1070), AddVehicleComponent(vehicleid,1072);
						case 561: AddVehicleComponent(vehicleid,1057), AddVehicleComponent(vehicleid,1063);
						case 558: AddVehicleComponent(vehicleid,1093), AddVehicleComponent(vehicleid,1095);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "{1E90FF}车身", "前保险杠 X-flow\n前保险杠 Alien\n后保险杠 X-Flow\n后保险杠 Alien\n扰流板 X-Flow \n扰流板 Alien \n侧裙 X-Flow \n侧裙 Alien\n进气口 X-Flow\n进气口 Alien\n排气管 X-flow\n排气管 Alien", "选择", "返回");
					}
				case 7:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1036), AddVehicleComponent(vehicleid,1040);
						case 560: AddVehicleComponent(vehicleid,1026), AddVehicleComponent(vehicleid,1027);
						case 565: AddVehicleComponent(vehicleid,1051), AddVehicleComponent(vehicleid,1047);
						case 559: AddVehicleComponent(vehicleid,1069), AddVehicleComponent(vehicleid,1071);
						case 561: AddVehicleComponent(vehicleid,1056), AddVehicleComponent(vehicleid,1062);
						case 558: AddVehicleComponent(vehicleid,1090), AddVehicleComponent(vehicleid,1094);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "{1E90FF}车身", "前保险杠 X-flow\n前保险杠 Alien\n后保险杠 X-Flow\n后保险杠 Alien\n扰流板 X-Flow \n扰流板 Alien \n侧裙 X-Flow \n侧裙 Alien\n进气口 X-Flow\n进气口 Alien\n排气管 X-flow\n排气管 Alien", "选择", "返回");
					}
				case 8:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1035);
						case 560: AddVehicleComponent(vehicleid,1033);
						case 565: AddVehicleComponent(vehicleid,1052);
						case 559: AddVehicleComponent(vehicleid,1068);
						case 561: AddVehicleComponent(vehicleid,1061);
						case 558: AddVehicleComponent(vehicleid,1091);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "{1E90FF}车身", "前保险杠 X-flow\n前保险杠 Alien\n后保险杠 X-Flow\n后保险杠 Alien\n扰流板 X-Flow \n扰流板 Alien \n侧裙 X-Flow \n侧裙 Alien\n进气口 X-Flow\n进气口 Alien\n排气管 X-flow\n排气管 Alien", "选择", "返回");
					}
				case 9:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1038);
						case 560: AddVehicleComponent(vehicleid,1032);
						case 565: AddVehicleComponent(vehicleid,1054);
						case 559: AddVehicleComponent(vehicleid,1067);
						case 561: AddVehicleComponent(vehicleid,1055);
						case 558: AddVehicleComponent(vehicleid,1088);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "{1E90FF}车身", "前保险杠 X-flow\n前保险杠 Alien\n后保险杠 X-Flow\n后保险杠 Alien\n扰流板 X-Flow \n扰流板 Alien \n侧裙 X-Flow \n侧裙 Alien\n进气口 X-Flow\n进气口 Alien\n排气管 X-flow\n排气管 Alien", "选择", "返回");
					}
				case 10:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1037);
						case 560: AddVehicleComponent(vehicleid,1029);
						case 565: AddVehicleComponent(vehicleid,1045);
						case 559: AddVehicleComponent(vehicleid,1066);
						case 561: AddVehicleComponent(vehicleid,1059);
						case 558: AddVehicleComponent(vehicleid,1089);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "{1E90FF}车身", "前保险杠 X-flow\n前保险杠 Alien\n后保险杠 X-Flow\n后保险杠 Alien\n扰流板 X-Flow \n扰流板 Alien \n侧裙 X-Flow \n侧裙 Alien\n进气口 X-Flow\n进气口 Alien\n排气管 X-flow\n排气管 Alien", "选择", "返回");
					}
				case 11:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1034);
						case 560: AddVehicleComponent(vehicleid,1028);
						case 565: AddVehicleComponent(vehicleid,1046);
						case 559: AddVehicleComponent(vehicleid,1065);
						case 561: AddVehicleComponent(vehicleid,1064);
						case 558: AddVehicleComponent(vehicleid,1092);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "{1E90FF}车身", "前保险杠 X-flow\n前保险杠 Alien\n后保险杠 X-Flow\n后保险杠 Alien\n扰流板 X-Flow \n扰流板 Alien \n侧裙 X-Flow \n侧裙 Alien\n进气口 X-Flow\n进气口 Alien\n排气管 X-flow\n排气管 Alien", "选择", "返回");
					}
				}
			}
			else ShowPlayerDialog(playerid, 8004, 2, "{1E90FF}Т调整菜单", "轮胎\n液压系统\n车身\n颜色\n喷漆\n氮气 ", "选择", "返回");
			return true;
		}
	case 555:
		{
			if(response)
			{
				if(listitem == 0)
				{
					ShowPlayerDialog(playerid, 556, DIALOG_STYLE_INPUT, "{1E90FF}颁发驾驶执照", "输入玩家ID", "确定", "退出");
					return false;
				}
				if(listitem == 1)
				{
					ShowPlayerDialog(playerid, 557, DIALOG_STYLE_INPUT, "{1E90FF}颁发飞机执照", "输入玩家ID", "确定", "退出");
					return false;
				}
				if(listitem == 2)
				{
					ShowPlayerDialog(playerid, 558, DIALOG_STYLE_INPUT, "{1E90FF}颁发钓鱼执照", "输入玩家ID", "确定", "退出");
					return false;
				}
				if(listitem == 3)
				{
					ShowPlayerDialog(playerid, 559, DIALOG_STYLE_INPUT, "{1E90FF}颁发船只执照", "输入玩家ID", "确定", "退出");
					return false;
				}
				if(listitem == 5)
				{
					ShowPlayerDialog(playerid, 561, DIALOG_STYLE_INPUT, "{1E90FF}颁发所有执照", "输入玩家ID", "确定", "退出");
					return false;
				}
				if(listitem == 4)
				{
					ShowPlayerDialog(playerid, 560, DIALOG_STYLE_INPUT, "{1E90FF}颁发武器执照", "输入玩家ID", "确定", "退出");
					return false;
				}
				if(listitem == 6)
				{
					ShowPlayerDialog(playerid, 562, DIALOG_STYLE_INPUT, "{1E90FF}颁发营业执照", "输入玩家ID", "确定", "退出");
					return false;
				}
			}
		}
	case 556:
		{
			if(response)
			{
				new string556[255];
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				new lname[MAX_PLAYER_NAME];
				if(idd == INVALID_PLAYER_ID)
				{
					SendErrorMessage(playerid,"无效玩家!");
					return true;
				}
				if(PlayerInfo[idd][pCarLic] == 1)
				{
					SendErrorMessage(playerid,"对方已经有了驾驶执照!");
					return true;
				}
				GetPlayerName(idd, pname, sizeof(pname));
				format(string556, sizeof(string556), "你将驾驶执照颁发给了 %s[%i].",pname, idd);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string556);
				PlayerInfo[idd][pCarLic] = 1;
				GetPlayerName(playerid, lname, sizeof(lname));
				format(string556, sizeof(string556), "教练 %s 将驾驶执照颁发给了 %s[%i].",lname, pname, idd);
				SendRadioMessage(11,COLOR_LIGHTBLUE , string556);
				SendSyntaxMessage(idd, "你有了驾驶执照");
				//if(GetPVarInt(playerid,"quest_auto"))
				/*{
					PlayerInfo[playerid][pQuest_2] = 1;
					PlayerInfo[playerid][pDonatemoney] += 3;
					SendServerMessage(playerid, "Вы прошли второй этап квеста и получили 3 донат рублей ( /quest )");
					DeletePVar(playerid,"quest_auto");
				}*/
				if(PlayerInfo[playerid][pQuest_2] == 0)
				{
                    PlayerInfo[playerid][pQuest_2] = 1;
					PlayerInfo[playerid][pDonatemoney] += 3;
					SendServerMessage(playerid, "你通过了第二阶段的任务，并收到了 3 捐赠点 ( /quest )");
				}
			}
		}
	case 557:
		{
			if(response)
			{
				new string557[255];
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				new lname[MAX_PLAYER_NAME];
				if(idd == INVALID_PLAYER_ID)
				{
					SendErrorMessage(playerid,"无效玩家!");
					return true;
				}
				if(PlayerInfo[idd][pFlyLic] == 1)
				{
					SendErrorMessage(playerid,"对方已经有了飞机执照!");
					return true;
				}
				GetPlayerName(idd, pname, sizeof(pname));
				format(string557, sizeof(string557), "你将飞机执照颁发给了 %s[%i].",pname, idd);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string557);
				PlayerInfo[idd][pFlyLic] = 1;
				GetPlayerName(playerid, lname, sizeof(lname));
				format(string557, sizeof(string557), "教练 %s 将飞机执照颁发给了 %s[%i].",lname, pname, idd);
				SendRadioMessage(11,COLOR_LIGHTBLUE , string557);
				SendSyntaxMessage(idd, "你有了飞机执照");
			}
		}
	case 558:
		{
			if(response)
			{
				new string558[255];
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				new lname[MAX_PLAYER_NAME];
				if(idd == INVALID_PLAYER_ID)
				{
					SendErrorMessage(playerid,"无效玩家!");
					return true;
				}
				if(PlayerInfo[idd][pFishLic] == 1)
				{
					SendErrorMessage(playerid,"对方已经有了钓鱼执照!");
					return true;
				}
				GetPlayerName(idd, pname, sizeof(pname));
				format(string558, sizeof(string558), "你将钓鱼执照颁发给了 %s[%i].",pname, idd);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string558);
				PlayerInfo[idd][pFishLic] = 1;
				GetPlayerName(playerid, lname, sizeof(lname));
				format(string558, sizeof(string558), "教练 %s 将钓鱼执照颁发给了 %s[%i].",lname, pname, idd);
				SendRadioMessage(11,COLOR_LIGHTBLUE , string558);
				SendSyntaxMessage(idd, "你有了钓鱼执照.");
			}
		}
	case 559:
		{
			if(response)
			{
				new string559[255];
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				new lname[MAX_PLAYER_NAME];
				if(idd == INVALID_PLAYER_ID)
				{
					SendErrorMessage(playerid,"无效玩家!");
					return true;
				}
				if(PlayerInfo[idd][pBoatLic] == 1)
				{
					SendErrorMessage(playerid,"对方已经有船只执照了!");
					return true;
				}
				GetPlayerName(idd, pname, sizeof(pname));
				format(string559, sizeof(string559), "你将船只执照颁发给了 %s[%i].",pname, idd);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string559);
				PlayerInfo[idd][pBoatLic] = 1;
				GetPlayerName(playerid, lname, sizeof(lname));
				format(string559, sizeof(string559), "教练 %s 将船只执照颁发给了 %s[%i].",lname, pname, idd);
				SendRadioMessage(11,COLOR_LIGHTBLUE , string559);
				SendSyntaxMessage(idd, "你有了船只执照");
			}
		}
	case 560:
		{
			if(response)
			{
				new string560[255];
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				new lname[MAX_PLAYER_NAME];
				if(idd == INVALID_PLAYER_ID)
				{
					SendErrorMessage(playerid,"无效玩家!");
					return true;
				}
				if(PlayerInfo[idd][pGunLic] == 1)
				{
					SendErrorMessage(playerid,"对方有了武器执照!");
					return true;
				}
				GetPlayerName(idd, pname, sizeof(pname));
				format(string560, sizeof(string560), "你将武器执照颁发给了 %s[%i].",pname, idd);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string560);
				PlayerInfo[idd][pGunLic] = 1;
				GetPlayerName(playerid, lname, sizeof(lname));
				format(string560, sizeof(string560), "教练 %s 将武器执照颁发给了 %s[%i].",lname, pname, idd);
				SendRadioMessage(11,COLOR_LIGHTBLUE , string560);
				SendSyntaxMessage(idd, "你有了武器执照");
			}
		}
	case 561:
		{
			if(response)
			{
				new string561[255];
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				new lname[MAX_PLAYER_NAME];
				if(idd == INVALID_PLAYER_ID)
				{
					SendErrorMessage(playerid,"无效玩家!");
					return true;
				}
				GetPlayerName(idd, pname, sizeof(pname));
				format(string561, sizeof(string561), "你将所有执照颁发给了 %s[%i].",pname, idd);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string561);
				PlayerInfo[idd][pCarLic] = 1;
				PlayerInfo[idd][pFishLic] = 1;
				PlayerInfo[idd][pBoatLic] = 1;
				PlayerInfo[idd][pFlyLic] = 1;
				PlayerInfo[idd][pGunLic] = 1;
				GetPlayerName(playerid, lname, sizeof(lname));
				format(string561, sizeof(string561), "教练 %s 将所有执照颁发给了 %s[%i].",lname, pname, idd);
				SendRadioMessage(11,COLOR_LIGHTBLUE , string561);
				SendSyntaxMessage(idd, "你获得了所有执照");
			}
		}
	case 562:
		{
			if(response)
			{
				new string561[255];
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				new lname[MAX_PLAYER_NAME];
				if(idd == INVALID_PLAYER_ID)
				{
					SendErrorMessage(playerid,"无效玩家!");
					return true;
				}
				GetPlayerName(idd, pname, sizeof(pname));
				format(string561, sizeof(string561), "你将营业执照颁发给了 %s[%i].",pname, idd);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string561);
				GetPlayerName(playerid, lname, sizeof(lname));
				format(string561, sizeof(string561), "教练 %s 将营业执照颁发给了 %s[%i].",lname, pname, idd);
				SendRadioMessage(11,COLOR_LIGHTBLUE , string561);
				new i = GetPVarInt(idd, "PlayerBizz");
				BizzInfo[i][bLic] = 1;
				SetBizzInt(i, "lic", BizzInfo[i][bLic]);
				SendSyntaxMessage(idd, "你有了营业执照");
			}
		}
	case 22248:
		{
			if(response)
			{
				if(!IsATerra (playerid)) return    SendErrorMessage(playerid,"你不在你的基地");
				if(PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] >= 4)
				{
					if(ballasmatbi <= 0)return SendErrorMessage(playerid,"库存中没有材料");
					if(!strlen(inputtext))
					{
						format(string,sizeof(string),"从仓库中取材料");
						ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"{1E90FF}输入需要多少材料",string,"√","X");
					}
					new mati;
					mati = strval(inputtext);
					if(PlayerInfo[playerid][pMats] > 499) return SendErrorMessage(playerid,"你不能多拿 || 将你的材料先用完");
					if(mati < 1 || mati > 150)
					{
						SendErrorMessage(playerid,"限制 1 - 150");
						if(PlayerInfo[playerid][pMats] > 500) return SendErrorMessage(playerid,"你拿不下更多了");
						format(string,sizeof(string),"从仓库中取材料");
						ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"{1E90FF}输入需要多少材料",string,"√","X");
						return true;
					}
					ballasmatbi -= mati;
					PlayerInfo[playerid][pMats] += mati;
					format(string, sizeof(string), "― 你从帮派仓库拿走了 %i 材料",mati);
					SendClientMessage(playerid, -1, string);
					format(string,sizeof(string), "从帮派仓库拿走了材料");
					SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
					format(string, sizeof(string), "%s 从帮派仓库拿走了材料", Name(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return true;
				}
				if(PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pRank] >= 4)
				{
					if(groovmatbi <= 0)return SendErrorMessage(playerid, "库存中没有材料");
					if(!strlen(inputtext))
					{
						format(string,sizeof(string),"从仓库中取材料");
						ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"{1E90FF}输入需要多少材料",string,"√","X");
					}
					new mati;
					mati = strval(inputtext);
					if(PlayerInfo[playerid][pMats] > 499) return SendErrorMessage(playerid,"你不能多拿 || 将你的材料先用完");
					if(mati < 1 || mati > 150)
					{
						SendErrorMessage(playerid,"限制 1 - 150");
						format(string,sizeof(string),"从仓库中取材料");
						ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"{1E90FF}输入需要多少材料",string,"√","X");
						return true;
					}
					groovmatbi -= mati;
					PlayerInfo[playerid][pMats] += mati;
					format(string, sizeof(string), "― 你从帮派仓库中拿走了 %i 材料",mati);
					SendClientMessage(playerid, -1, string);

					format(string,sizeof(string), "从帮派仓库拿走了材料");
					SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
					format(string, sizeof(string), "%s 从帮派仓库拿走了材料", Name(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return true;
				}
				if(PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] >= 4)
				{
					if(vagosmatbi <= 0)return SendErrorMessage(playerid, "库存中没有材料");
					if(!strlen(inputtext))
					{
						format(string,sizeof(string),"从仓库中取材料");
						ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"{1E90FF}输入需要多少材料",string,"√","X");
					}
					new mati;
					mati = strval(inputtext);
					if(PlayerInfo[playerid][pMats] > 499) return SendErrorMessage(playerid,"你不能多拿 || 将你的材料先用完");
					if(mati < 1 || mati > 150)
					{
						SendErrorMessage(playerid,"限制 1 - 150");
						format(string,sizeof(string),"从仓库中取材料");
						ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"{1E90FF}输入需要多少材料",string,"√","X");
						return true;
					}
					vagosmatbi -= mati;
					PlayerInfo[playerid][pMats] += mati;
					format(string, sizeof(string), "― 你从帮派仓库中拿走了 %i 材料",mati);
					SendClientMessage(playerid, -1, string);

					format(string,sizeof(string), "从帮派仓库拿走了材料");
					SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
					format(string, sizeof(string), "%s 从帮派仓库拿走了材料", Name(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return true;
				}
				if(PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pRank] >= 4)
				{
					if(aztekmatbi <= 0)return SendErrorMessage(playerid, "库存中没有材料");
					if(!strlen(inputtext))
					{
						format(string,sizeof(string),"从仓库中取材料");
						ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"{1E90FF}输入需要多少材料",string,"√","X");
					}
					new mati;
					mati = strval(inputtext);
					if(PlayerInfo[playerid][pMats] > 499) return SendErrorMessage(playerid,"你不能多拿 || 将你的材料先用完");
					if(mati < 1 || mati > 150)
					{
						if(PlayerInfo[playerid][pMats] > 499) return SendErrorMessage(playerid,"你不能多拿 || 将你的材料先用完");
                        format(string,sizeof(string),"从仓库中取材料");
						ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"{1E90FF}输入需要多少材料",string,"√","X");
						return true;
					}
					aztekmatbi -= mati;
					PlayerInfo[playerid][pMats] += mati;
					format(string, sizeof(string), "― 你从帮派仓库中拿走了 %i 材料",mati);
					SendClientMessage(playerid, -1, string);

					format(string,sizeof(string), "从帮派仓库拿走了材料");
					SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
					format(string, sizeof(string), "%s 从帮派仓库拿走了材料", Name(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return true;
				}
				if(PlayerInfo[playerid][pMember] == 18 && PlayerInfo[playerid][pRank] >= 4)
				{
					if(rifamatbi <= 0)return SendErrorMessage(playerid, "库存中没有材料");
					if(!strlen(inputtext))
					{
						format(string,sizeof(string),"从仓库中取材料");
						ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"{1E90FF}输入需要多少材料",string,"√","X");
					}
					new mati;
					mati = strval(inputtext);
					if(PlayerInfo[playerid][pMats] > 499) return SendErrorMessage(playerid,"你不能多拿 || 将你的材料先用完");
					if(mati < 1 || mati > 150)
					{
						SendErrorMessage(playerid,"限制 1 - 150");
						format(string,sizeof(string),"从仓库中取材料");
						ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"{1E90FF}输入需要多少材料",string,"√","X");
						return true;
					}
					rifamatbi -= mati;
					PlayerInfo[playerid][pMats] += mati;
					format(string, sizeof(string), "― 你从帮派仓库中拿走了 %i 材料",mati);
					SendClientMessage(playerid, -1, string);

					format(string,sizeof(string), "从帮派仓库拿走了材料");
					SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
					format(string, sizeof(string), "%s 从帮派仓库拿走了材料", Name(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return true;
				}
			}
		}
	case 22249:
		{
			if(response)
			{
				switch(PlayerInfo[playerid][pMember])
				{
				case 15:
					{
						if(!IsATerra (playerid)) return SendErrorMessage(playerid,"你没有在基地");
						if(!strlen(inputtext))
						{
							format(string,sizeof(string),"将材料放入仓库");
							ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"{1E90FF}输入数量",string,"√","X");
						}
						new mati;
						mati = strval(inputtext);
						if(mati < 1 || mati > 1000)
						{
							SendErrorMessage(playerid,"数量限制 1 - 1000");
							format(string,sizeof(string),"将材料放入仓库");
							ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"{1E90FF}输入数量",string,"√","X");
							return true;
						}
						if(PlayerInfo[playerid][pMats] < mati) return SendErrorMessage(playerid,"你没有那么多材料!");
						if(groovmatbi  >= 50000) return SendErrorMessage(playerid,"仓库满了!");
						groovmatbi  += mati;
						PlayerInfo[playerid][pMats] -= mati;
						format(string, sizeof(string), "― 你将 %i 材料存入帮派仓库",mati);
						SendClientMessage(playerid, -1, string);

						format(string,sizeof(string), "把材料放在帮派仓库里");
						SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
						format(string, sizeof(string), "%s 把材料放在帮派仓库里", Name(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						return true;
					}
				case 12:
					{
						if(!strlen(inputtext))
						{
							format(string,sizeof(string),"将材料放入仓库");
							ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"{1E90FF}输入数量",string,"√","X");
						}
						new mati;
						mati = strval(inputtext);
						if(mati < 1 || mati > 1000)
						{
							SendErrorMessage(playerid,"数量限制 1 - 1000");
							format(string,sizeof(string),"将材料放入仓库");
							ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"{1E90FF}输入数量",string,"√","X");
							return true;
						}
						if(PlayerInfo[playerid][pMats] < mati) return SendErrorMessage(playerid,"你没有那么多材料!");
						if(ballasmatbi  >= 50000) return SendErrorMessage(playerid,"仓库满了!");
						ballasmatbi  += mati;
						PlayerInfo[playerid][pMats] -= mati;
						format(string, sizeof(string), "― 你将 %i 材料存入帮派仓库",mati);
						SendClientMessage(playerid, -1, string);

						format(string,sizeof(string), "把材料放在帮派仓库里");
						SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
						format(string, sizeof(string), "%s 把材料放在帮派仓库里", Name(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						return true;
					}
				case 13:
					{
						if(!strlen(inputtext))
						{
							format(string,sizeof(string),"将材料放入仓库");
							ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"{1E90FF}输入数量",string,"√","X");
						}
						new mati;
						mati = strval(inputtext);
						if(mati < 1 || mati > 1000)
						{
							SendErrorMessage(playerid,"数量限制 1 - 1000");
							format(string,sizeof(string),"将材料放入仓库");
							ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"{1E90FF}输入数量",string,"√","X");
							return true;
						}
						if(PlayerInfo[playerid][pMats] < mati) return SendErrorMessage(playerid,"你没有那么多材料!");
						if(vagosmatbi  >= 50000) return SendErrorMessage(playerid,"仓库满了!");
						vagosmatbi  += mati;
						PlayerInfo[playerid][pMats] -= mati;
						format(string, sizeof(string), "― 你将 %i 材料存入帮派仓库",mati);
						SendClientMessage(playerid, -1, string);

						format(string,sizeof(string), "把材料放在帮派仓库里");
						SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
						format(string, sizeof(string), "%s 把材料放在帮派仓库里", Name(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						return true;
					}
				case 17:
					{
						if(!strlen(inputtext))
						{
							format(string,sizeof(string),"将材料放入仓库");
							ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"{1E90FF}输入数量",string,"√","X");
						}
						new mati;
						mati = strval(inputtext);
						if(mati < 1 || mati > 1000)
						{
							SendErrorMessage(playerid,"数量限制 1 - 1000");
							format(string,sizeof(string),"将材料放入仓库");
							ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"{1E90FF}输入数量",string,"√","X");
							return true;
						}
						if(PlayerInfo[playerid][pMats] < mati) return SendErrorMessage(playerid,"你没有那么多材料!");
						if(aztekmatbi  >= 50000) return SendErrorMessage(playerid,"仓库满了!");
						aztekmatbi  += mati;
						PlayerInfo[playerid][pMats] -= mati;
						format(string, sizeof(string), "― 你将 %i 材料存入帮派仓库",mati);
						SendClientMessage(playerid, -1, string);

						format(string,sizeof(string), "把材料放在帮派仓库里");
						SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
						format(string, sizeof(string), "%s 把材料放在帮派仓库里", Name(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						return true;
					}
				case 18:
					{
						if(!strlen(inputtext))
						{
							format(string,sizeof(string),"将材料放入仓库");
							ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"{1E90FF}输入数量",string,"√","X");
						}
						new mati;
						mati = strval(inputtext);
						if(mati < 1 || mati > 1000)
						{
							SendErrorMessage(playerid,"数量限制 1 - 1000");
							format(string,sizeof(string),"将材料放入仓库");
							ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"{1E90FF}输入数量",string,"√","X");
							return true;
						}
						if(PlayerInfo[playerid][pMats] < mati) return SendErrorMessage(playerid,"你没有那么多材料!");
						if(rifamatbi  >= 50000) return SendErrorMessage(playerid,"仓库满了!");
						rifamatbi  += mati;
						PlayerInfo[playerid][pMats] -= mati;
						format(string, sizeof(string), "― 你将 %i 材料存入帮派仓库",mati);
						SendClientMessage(playerid, -1, string);

						format(string,sizeof(string), "把材料放在帮派仓库里");
						SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
						format(string, sizeof(string), "%s 把材料放在帮派仓库里", Name(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						return true;
					}
				}
			}
		}
	case 5522:
		{
			if(response)
			{
				new Float:tempheal;

				new giveplayer[MAX_PLAYER_NAME];
				GetPlayerHealth(playerid,tempheal);

				GetPlayerName(HealOffer[playerid], giveplayer, sizeof(giveplayer));
				if(tempheal >= 100.0) return SendServerMessage(HealOffer[playerid], "这个人很健康!");
				if(PlayerInfo[playerid][pCash] < HealPrice[playerid]) return SendServerMessage(HealOffer[playerid], "病人没有足够的钱!");
				PlayerInfo[HealOffer[playerid]][pCash] += HealPrice[playerid];
				PlayerInfo[playerid][pCash] -= HealPrice[playerid];
				PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~g~+100hp~n~~r~-$%i", HealPrice[playerid]);
				GameTextForPlayer(playerid, string, 5000, 1);
				format(string, sizeof(string), "~g~+100hp~n~~g~+$%i", HealPrice[playerid]);
				GameTextForPlayer(HealOffer[playerid], string, 5000, 1);
				SetPlayerHealthAC(playerid, 99.0);
				PlayerInfo[playerid][pHP] = 99;
				PlayerStoned[playerid] = 0;
				startaddiction[playerid] = 0;
				PlayerInfo[playerid][pNarcoLomka] = 0;
				return true;
			}
			else
			{
				return true;
			}
		}
	case 6623:
	    {
	        if(response)
	        {
	        	ShowPlayerDialog(playerid,6622,DIALOG_STYLE_MSGBOX, "{1E90FF}律师服务", "选择付款方式:", "现金", "银行");
			}
	    }
	case 6622:
		{

			new giveplayer[MAX_PLAYER_NAME];

			GetPlayerName(FreeOffer[playerid], giveplayer, sizeof(giveplayer));
			if(response)
			{
				if(PlayerInfo[playerid][pCash] < FreePrice[playerid])
				{
					SendErrorMessage(FreeOffer[playerid], "被告没有足够的钱!");
					SendErrorMessage(playerid,"你没有足够的钱!");
					return true;
				}
				PlayerInfo[FreeOffer[playerid]][pCash] += FreePrice[playerid];
				PlayerInfo[playerid][pCash] -= FreePrice[playerid];
				format(string, sizeof(string), "― 律师 %s 将你保释出来了,花费了 %i $!",giveplayer, FreePrice[playerid]);
				SendClientMessage(playerid, -1,string);
				format(string, sizeof(string), "― 你将 %s 保释出来了,花费了 %i $!",Name(playerid), FreePrice[playerid]);
				SendClientMessage(FreeOffer[playerid], -1,string);
				SetPlayerInterior(playerid, 0);
				Q_SetPlayerPos(playerid,-1561.2036,481.8062,7.1797);
				SetPlayerFacingAngle(playerid, 95.0636);
				PlayerInfo[playerid][pJailTime] = 0;
				PlayerInfo[playerid][pJailed] = 0;
				format(string, sizeof(string), "~g~Freedom");
				WantedLevel[playerid] = 0;
				WantedTime[playerid] = 0;
				PlayerInfo[playerid][pWantedLevel] = 0;
				WantedPoints[playerid] = 0;
				SetPlayerWantedLevel(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				GameTextForPlayer(playerid, string, 5000, 1);
				return true;
			}
			else
			{
				if(PlayerInfo[playerid][pBank] < FreePrice[playerid])
				{
			 		SendErrorMessage(FreeOffer[playerid], "被告没有足够的钱!");
					SendErrorMessage(playerid,"你没有足够的钱!");
					return true;
				}
				PlayerInfo[FreeOffer[playerid]][pCash] += FreePrice[playerid];
				PlayerInfo[playerid][pBank] -= FreePrice[playerid];
				format(string, sizeof(string), "― 律师 %s 将你保释出来了,花费了 %i $!",giveplayer, FreePrice[playerid]);
				SendClientMessage(playerid, -1,string);
				format(string, sizeof(string), "― 你将 %s 保释出来了,花费 %i $!",Name(playerid), FreePrice[playerid]);
				SendClientMessage(FreeOffer[playerid], -1,string);
				SetPlayerInterior(playerid, 0);
				Q_SetPlayerPos(playerid,-1561.2036,481.8062,7.1797);
				SetPlayerFacingAngle(playerid, 95.0636);
				PlayerInfo[playerid][pJailTime] = 0;
				PlayerInfo[playerid][pJailed] = 0;
				format(string, sizeof(string), "~g~Freedom");
				WantedLevel[playerid] = 0;
				WantedTime[playerid] = 0;
				PlayerInfo[playerid][pWantedLevel] = 0;
				WantedPoints[playerid] = 0;
				SetPlayerWantedLevel(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				GameTextForPlayer(playerid, string, 5000, 1);
				return true;
			}
		}
	case 12:
		{
			if(response)
			{
				PEfir[playerid] = MAX_SLOTS;
				Pefir[playerid] = 0;
				new rulesdialogg[1324];
				format(rulesdialogg,sizeof(rulesdialogg), "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
				RulesMSGG[0],RulesMSGG[1],RulesMSGG[2],RulesMSGG[3],RulesMSGG[4],RulesMSGG[5],RulesMSGG[6],RulesMSGG[7],RulesMSGG[8],RulesMSGG[9],RulesMSGG[10],RulesMSGG[11],RulesMSGG[12],RulesMSGG[13],RulesMSGG[14],RulesMSGG[15],RulesMSGG[16],RulesMSGG[17],RulesMSGG[18],RulesMSGG[19],RulesMSGG[20],RulesMSGG[21]);
				ShowPlayerDialog(playerid,13,DIALOG_STYLE_MSGBOX, "{1E90FF}服务器规则:", rulesdialogg, "我同意", "退出");
				return true;
			}
			else
			{
		 		SendServerMessage(playerid, "要退出游戏，请使用 /q");
				GKick(playerid);
			}
		}
	case 13:
		{
			if(response)
			{
				//ShowPlayerDialog(playerid, 1945, DIALOG_STYLE_INPUT, "{FFFFFF}Электронная почта", "\n{ff0000}ВНИМАНИЕ: {FFFFFF}Вводите реальный свой Email адрес.\n{ffa500}Если вы забудите пароль на него будет выслан новый пароль", "Далее", "Пропуск");
				format(YCMDstr, sizeof(YCMDstr), "UPDATE `"TABLE_ACCOUNT"` SET `pLogin`='1' WHERE `Name` = '%s'",Name(playerid));
				mysql_query(YCMDstr);
				TogglePlayerControllable(playerid, 1);
				SetPVarInt(playerid, "SpawnRegPl", gettime()+1);
				SpawnPlayer(playerid);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 1947:
		{
			if(response)
			{
				if(!strlen(inputtext)) return true;
				strmid(GolosName,inputtext,0,strlen(inputtext),255);
				format(string,sizeof(string),"输入3个标题.\n例子: Test.Test2.Test3");
				ShowPlayerDialog(playerid,1946,DIALOG_STYLE_INPUT, "{1E90FF}创建投票",string, "确定", "退出");
			}
		}
	case 1948:
		{
			if(response)
			{
				Golosa[listitem]++;
				SendSyntaxMessage(playerid,"谢谢！ 你的投票被计算在内");
			}
		}
	case 1949:
		{
			if(response)
			{
				new text[6][64];
				if(!strlen(inputtext)) return true;
				else if(strfind(inputtext,".", true) >= 1)
				{
					Golosa[0] = 0;
					Golosa[1] = 0;
					Golosa[2] = 0;
					Golosa[3] = 0;
					Golosa[4] = 0;
					split(inputtext,text,'.');
					strmid(GolosText4,text[0],0,strlen(text[0]),255);
					strmid(GolosText5,text[1],0,strlen(text[1]),255);
					foreach(new i : Player)
					{
						format(string,sizeof(string),"%s\n%s\n%s\n%s\n%s",GolosText1,GolosText2,GolosText3,GolosText4,GolosText5);
						ShowPlayerDialog(i, 1948, DIALOG_STYLE_LIST,GolosName,string, "选择", "");
					}
				}
			}
		}
	case 1946:
		{
			if(response)
			{
				new text2[6][64];
				if(!strlen(inputtext)) return true;
				else if(strfind(inputtext,".", true) >= 2)
				{
					Golosa[0] = 0;
					Golosa[1] = 0;
					Golosa[2] = 0;
					Golosa[3] = 0;
					Golosa[4] = 0;
					split(inputtext,text2,'.');
					strmid(GolosText1,text2[0],0,strlen(text2[0]),255);
					strmid(GolosText2,text2[1],0,strlen(text2[1]),255);
					strmid(GolosText3,text2[2],0,strlen(text2[2]),255);
					format(string,sizeof(string),"输入3个标题.\n例子: Test.Test2.Test3");
					ShowPlayerDialog(playerid,1949,DIALOG_STYLE_INPUT, "{1E90FF}创建投票",string, "确定", "退出");
				}
				else
				{
					SendErrorMessage(playerid,"需要3个标题.");
				}
			}
		}
	case 9500:
		{
			if(!response) DeletePVar(playerid,"Licenses");
			if(GetPVarInt(playerid,"Licenses") == 1)
			{
                if(PlayerInfo[playerid][pCash] < 5000) return SendErrorMessage(playerid,"你没有足够的钱!");
				PlayerInfo[playerid][pCash] -= GetPVarInt(playerid,"MoneyLicenses");
				PlayerInfo[GetPVarInt(playerid,"PlayerSell")][pCash] += GetPVarInt(playerid,"MoneyLicenses")/70;
				format(string, sizeof(string), "― 玩家 %s 获得了驾驶执照.",Name(playerid));
				SendClientMessage(GetPVarInt(playerid,"PlayerSell"), -1, string);
				PlayerInfo[playerid][pCarLic] = 1;
				SendSyntaxMessage(playerid, "您已获得驾驶执照.");
				if(GetPVarInt(playerid,"quest_auto"))
				{
					PlayerInfo[playerid][pQuest_2] = 1;
					PlayerInfo[playerid][pDonatemoney] += 3;
					SendServerMessage(playerid, "你通过了第二阶段的任务，并收到了 3 捐赠点 ( /quest )");
					DeletePVar(playerid,"quest_auto");
				}
				foreach(new i : Player)
				{
					if(PlayerInfo[i][pMember] == 11)
					{
						if(PlayerInfo[i][pRank] == 8) PlayerInfo[i][pCash]+=GetPVarInt(playerid,"MoneyLicenses")/95;
						else if(PlayerInfo[i][pRank] == 9) PlayerInfo[i][pCash]+=GetPVarInt(playerid,"MoneyLicenses")/92;
						else if(PlayerInfo[i][pRank] == 10) PlayerInfo[i][pCash]+=GetPVarInt(playerid,"MoneyLicenses")/90;
					}
				}
			}
			else if(GetPVarInt(playerid,"Licenses") == 2)
			{
                if(PlayerInfo[playerid][pCash] < 10000) return SendErrorMessage(playerid,"你没有足够的钱!");
				PlayerInfo[playerid][pCash] -= 10000;
				PlayerInfo[GetPVarInt(playerid,"PlayerSell")][pCash] += 10000/70;
				format(string, sizeof(string), "― 玩家 %s 获得了飞机执照.",Name(playerid));
				SendClientMessage(GetPVarInt(playerid,"PlayerSell"), -1, string);
				PlayerInfo[playerid][pFlyLic] = 1;
				SendSyntaxMessage(playerid, "您已获得飞机执照.");
				foreach(new i : Player)
				{
					if(PlayerInfo[i][pMember] == 11)
					{
						if(PlayerInfo[i][pRank] == 8) PlayerInfo[i][pCash]+=10000/95;
						else if(PlayerInfo[i][pRank] == 9) PlayerInfo[i][pCash]+=10000/92;
						else if(PlayerInfo[i][pRank] == 10) PlayerInfo[i][pCash]+=10000/90;
					}
				}
			}
			else if(GetPVarInt(playerid,"Licenses") == 3)
			{
                if(PlayerInfo[playerid][pCash] < 2000) return SendErrorMessage(playerid,"你没有足够的钱!");
				PlayerInfo[playerid][pCash]-= 2000;
				PlayerInfo[GetPVarInt(playerid,"PlayerSell")][pCash]+=2000/70;
				format(string, sizeof(string), "― 玩家 %s 获得了钓鱼执照.",Name(playerid));
				SendClientMessage(GetPVarInt(playerid,"PlayerSell"), -1, string);
				PlayerInfo[playerid][pFishLic] = 1;
				SendSyntaxMessage(playerid, "您已获得钓鱼执照.");
				foreach(new i : Player)
				{
					if(PlayerInfo[i][pMember] == 11)
					{
						if(PlayerInfo[i][pRank] == 8) PlayerInfo[i][pCash]+=2000/95;
						else if(PlayerInfo[i][pRank] == 9) PlayerInfo[i][pCash]+=2000/92;
						else if(PlayerInfo[i][pRank] == 10) PlayerInfo[i][pCash]+=2000/90;
					}
				}
			}
			else if(GetPVarInt(playerid,"Licenses") == 4)
			{
                if(PlayerInfo[playerid][pCash] < 5000) return SendErrorMessage(playerid,"你没有足够的钱!");
				PlayerInfo[playerid][pCash]-=5000;
				PlayerInfo[GetPVarInt(playerid,"PlayerSell")][pCash]+=5000/70;
				format(string, sizeof(string), "― 玩家 %s 获得了船只执照.",Name(playerid));
				SendClientMessage(GetPVarInt(playerid,"PlayerSell"), -1, string);
				PlayerInfo[playerid][pBoatLic] = 1;
				SendSyntaxMessage(playerid, "您已获得船只执照.");
				foreach(new i : Player)
				{
					if(PlayerInfo[i][pMember] == 11)
					{
						if(PlayerInfo[i][pRank] == 8) PlayerInfo[i][pCash]+=5000/95;
						else if(PlayerInfo[i][pRank] == 9) PlayerInfo[i][pCash]+=5000/92;
						else if(PlayerInfo[i][pRank] == 10) PlayerInfo[i][pCash]+=5000/90;
					}
				}
			}
			else if(GetPVarInt(playerid,"Licenses") == 5)
			{
                if(PlayerInfo[playerid][pCash] < 20000) return SendErrorMessage(playerid,"你没有足够的钱!!");
				PlayerInfo[playerid][pCash]-=20000;
				PlayerInfo[GetPVarInt(playerid,"PlayerSell")][pCash]+=20000/70;
				format(string, sizeof(string), "― 玩家 %s 获得了武器执照.",Name(playerid));
				SendClientMessage(GetPVarInt(playerid,"PlayerSell"), -1, string);
				PlayerInfo[playerid][pGunLic] = 1;
				SendSyntaxMessage(playerid, "您已获得武器执照.");
				foreach(new i : Player)
				{
					if(PlayerInfo[i][pMember] == 11)
					{
						if(PlayerInfo[i][pRank] == 8) PlayerInfo[i][pCash]+=20000/85;
						else if(PlayerInfo[i][pRank] == 9) PlayerInfo[i][pCash]+=20000/65;
						else if(PlayerInfo[i][pRank] == 10) PlayerInfo[i][pCash]+=20000/50;
					}
				}
			}
			else if(GetPVarInt(playerid,"Licenses") == 6)
			{
                if(PlayerInfo[playerid][pLevel] < 2) return SendErrorMessage(playerid,"你的等级必须大于 2");
                if(PlayerInfo[playerid][pCash] < 30000) return SendErrorMessage(playerid,"你没有足够的钱!!");
				PlayerInfo[playerid][pCash]-=30000;
				PlayerInfo[GetPVarInt(playerid,"PlayerSell")][pCash]+=30000/70;
				format(string, sizeof(string), "― 玩家 %s 获得了营业执照.",Name(playerid));
				SendClientMessage(GetPVarInt(playerid,"PlayerSell"), -1, string);
				SendSyntaxMessage(playerid, "您已获得营业执照.");
				foreach(new i : Player)
				{
					if(PlayerInfo[i][pMember] == 11)
					{
						if(PlayerInfo[i][pRank] == 8) PlayerInfo[i][pCash]+=30000/95;
						else if(PlayerInfo[i][pRank] == 9) PlayerInfo[i][pCash]+=30000/92;
						else if(PlayerInfo[i][pRank] == 10) PlayerInfo[i][pCash]+=30000/90;
					}
				}
				new i = GetPVarInt(playerid, "PlayerBizz");
				BizzInfo[i][bLic] = 1;
				SetBizzInt(i, "lic", BizzInfo[i][bLic]);
			}
			DeletePVar(playerid,"PlayerSell");
			DeletePVar(playerid,"Licenses");
		}
	case 7777:
		{
			if(response)
			{
				new string556[100];
				if(listitem == 0)
				{
				    if(!ProxDetectorS(5.0, playerid, ChosenPlayer[playerid])) return SendErrorMessage(playerid,"距离太远了.");
					if(PlayerInfo[ChosenPlayer[playerid]][pCarLic] == 1) return SendErrorMessage(playerid,"对方已经有驾驶执照了!");
					if(PlayerInfo[ChosenPlayer[playerid]][pLevel] <= 2) SetPVarInt(ChosenPlayer[playerid], "MoneyLicenses",5000);
					else if(PlayerInfo[ChosenPlayer[playerid]][pLevel] <= 5) SetPVarInt(ChosenPlayer[playerid], "MoneyLicenses",8000);
					else if(PlayerInfo[ChosenPlayer[playerid]][pLevel] <= 15) SetPVarInt(ChosenPlayer[playerid], "MoneyLicenses",10000);
					else SetPVarInt(ChosenPlayer[playerid], "MoneyLicenses",10000);
					SetPVarInt(ChosenPlayer[playerid], "Licenses",1);
					format(string,sizeof(string),"教练 %s 为你提供了 %i $ 的驾驶执照\n你买吗?",Name(playerid),GetPVarInt(ChosenPlayer[playerid], "MoneyLicenses"));
					ShowPlayerDialog(ChosenPlayer[playerid], 9500, DIALOG_STYLE_MSGBOX, "{1E90FF}出售执照:",string, "立即购买", "退出");
					return true;
				}
				else if(listitem == 1)
				{
				    if(!ProxDetectorS(5.0, playerid, ChosenPlayer[playerid])) return SendErrorMessage(playerid,"距离太远了.");
					if(PlayerInfo[ChosenPlayer[playerid]][pFlyLic] == 1) return SendErrorMessage(playerid,"对方已经有飞机执照了!");
					SetPVarInt(ChosenPlayer[playerid], "Licenses",2);
					format(string,sizeof(string),"教练 %s为你提供了 10000 $ 的飞机执照\n你买吗?",Name(playerid));
					ShowPlayerDialog(ChosenPlayer[playerid], 9500, DIALOG_STYLE_MSGBOX, "{1E90FF}出售执照:",string, "立即购买", "退出");
					return true;
				}
				else if(listitem == 2)
				{
				    if(!ProxDetectorS(5.0, playerid, ChosenPlayer[playerid])) return SendErrorMessage(playerid,"距离太远了.");
					if(PlayerInfo[ChosenPlayer[playerid]][pFishLic] == 1) return SendErrorMessage(playerid,"对方已经有了钓鱼执照!");
					SetPVarInt(ChosenPlayer[playerid], "Licenses",3);
					format(string,sizeof(string),"教练 %s 为你提供了 2000 $ 的钓鱼执照\n你买吗?",Name(playerid));
					ShowPlayerDialog(ChosenPlayer[playerid], 9500, DIALOG_STYLE_MSGBOX, "{1E90FF}出售执照:",string, "立即购买", "退出");
				}
				else if(listitem == 3)
				{
				    if(!ProxDetectorS(5.0, playerid, ChosenPlayer[playerid])) return SendErrorMessage(playerid,"距离太远了.");
					if(PlayerInfo[ChosenPlayer[playerid]][pBoatLic] == 1) return SendErrorMessage(playerid,"对方已经有了船只执照!");
					SetPVarInt(ChosenPlayer[playerid], "Licenses",4);
					format(string,sizeof(string),"教练 %s 为你提供了 5000 $ 的船只执照\n你买吗?",Name(playerid));
					ShowPlayerDialog(ChosenPlayer[playerid], 9500, DIALOG_STYLE_MSGBOX, "{1E90FF}出售执照:",string, "立即购买", "退出");
					return true;
				}
				else if(listitem == 4)
				{
				    if(!ProxDetectorS(5.0, playerid, ChosenPlayer[playerid])) return SendErrorMessage(playerid,"距离太远了.");
					if(PlayerInfo[ChosenPlayer[playerid]][pGunLic] == 1) return	SendErrorMessage(playerid,"对方已经有了武器执照!");
					SetPVarInt(ChosenPlayer[playerid], "Licenses",5);
					format(string,sizeof(string),"教练 %s 为你提供了 20.000 $ 的武器执照\n你买吗?",Name(playerid));
					ShowPlayerDialog(ChosenPlayer[playerid], 9500, DIALOG_STYLE_MSGBOX, "{1E90FF}出售执照:",string, "立即购买", "退出");
					return true;
				}
				else  if(listitem == 5)
				{
				    if(!ProxDetectorS(5.0, playerid, ChosenPlayer[playerid])) return SendErrorMessage(playerid,"距离太远了.");
				    if(GetPlayerBizz(ChosenPlayer[playerid]) == 0) return SendErrorMessage(playerid,"对方已经有了营业执照!");
					SetPVarInt(ChosenPlayer[playerid], "Licenses",6);
					format(string,sizeof(string),"教练 %s 为你提供了 30.000 $ 的营业执照\n你买吗?",Name(playerid));
					ShowPlayerDialog(ChosenPlayer[playerid], 9500, DIALOG_STYLE_MSGBOX, "{1E90FF}出售执照:",string, "立即购买", "退出");
					return true;
				}
				else  if(listitem == 6)
				{
				    if(!ProxDetectorS(5.0, playerid, ChosenPlayer[playerid])) return SendErrorMessage(playerid,"距离太远了.");
					if(TakingLesson[ChosenPlayer[playerid]] == 1) return SendErrorMessage(playerid,"该玩家已经开始上课了!");
					format(string556, sizeof(string556), "― 开始 %s 的课程.",Name(ChosenPlayer[playerid]));
					SendClientMessage(playerid, -1, string556);
					TakingLesson[ChosenPlayer[playerid]] = 1;
				 	SendServerMessage(ChosenPlayer[playerid], "教练开始了你的课程");
					return true;
				}
				else if(listitem == 7)
				{
				    if(!ProxDetectorS(5.0, playerid, ChosenPlayer[playerid])) return SendErrorMessage(playerid,"距离太远了.");
					if(TakingLesson[ChosenPlayer[playerid]] == 0) return SendErrorMessage(playerid,"这个玩家还没有上课!");
					format(string556, sizeof(string556), "― 你完成了 %s 的课程.",Name(ChosenPlayer[playerid]));
					SendClientMessage(playerid, -1, string556);
					TakingLesson[ChosenPlayer[playerid]] = 0;
				 	SendServerMessage(ChosenPlayer[playerid], "教练完成了你的课程");
					return true;
				}
			}
			else
			{
				DeletePVar(ChosenPlayer[playerid],"PlayerSell");
				return true;
			}
		}
	case 7779:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:	ShowPlayerDialog(playerid, 100, DIALOG_STYLE_INPUT, "{1E90FF}选择驾驶执照", "输入玩家ID", "确定", "退出");
				case 1:	ShowPlayerDialog(playerid, 103, DIALOG_STYLE_INPUT, "{1E90FF}选择飞机执照", "输入玩家ID", "确定", "退出");
				case 2: ShowPlayerDialog(playerid, 104, DIALOG_STYLE_INPUT, "{1E90FF}选择钓鱼执照", "输入玩家ID", "确定", "退出");
				case 3:	ShowPlayerDialog(playerid, 105, DIALOG_STYLE_INPUT, "{1E90FF}选择船只执照", "输入玩家ID", "确定", "退出");
				case 4:	ShowPlayerDialog(playerid, 106, DIALOG_STYLE_INPUT, "{1E90FF}选择武器执照", "输入玩家ID", "确定", "退出");
				case 5:	ShowPlayerDialog(playerid, 108, DIALOG_STYLE_INPUT, "{1E90FF}选择毒品", "输入玩家ID", "确定", "退出");
				case 6:	ShowPlayerDialog(playerid, 109, DIALOG_STYLE_INPUT, "{1E90FF}选择武器", "输入玩家ID", "确定", "退出");
				case 7: ShowPlayerDialog(playerid, 110, DIALOG_STYLE_INPUT, "{1E90FF}选择材料", "输入玩家ID", "确定", "退出");
				}
			}
			else
			{
				return true;
			}
		}
	case 100:
		{
			if(response)
			{
				new string556[255];
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SendErrorMessage(playerid,"无效ID!");
				if(!ProxDetectorS(8.0, playerid, idd)) return	SendErrorMessage(playerid,"距离太远了!");
				GetPlayerName(idd, pname, sizeof(pname));


				format(string, sizeof(string), "― %s 没收了你的驾驶执照.", Name(playerid));
				SendClientMessage(idd, -1, string);
				PlayerInfo[idd][pCarLic] = 0;
				format(string556, sizeof(string556), "― 你没收了 %s 的驾驶执照.",pname,idd);
				SendClientMessage(playerid, -1, string556);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 103:
		{
			if(response)
			{
				new string556[255];
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SendErrorMessage(playerid,"无效ID!");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendErrorMessage(playerid,"距离太远了!");
				GetPlayerName(idd, pname, sizeof(pname));


				format(string, sizeof(string), "― %s 没收了你的飞机执照", Name(playerid));
				SendClientMessage(idd, -1, string);
				PlayerInfo[idd][pFlyLic] = 0;
				format(string556, sizeof(string556), "― 你没收了 %s 的飞机执照.",pname,idd);
				SendClientMessage(playerid, -1, string556);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 104:
		{
			if(response)
			{
				new string556[255];
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SendErrorMessage(playerid,"无效ID!");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendErrorMessage(playerid,"距离太远了!");
				GetPlayerName(idd, pname, sizeof(pname));


				format(string, sizeof(string), "― %s 没收了你的钓鱼执照", Name(playerid));
				SendClientMessage(idd, -1, string);
				PlayerInfo[idd][pBoatLic] = 0;
				format(string556, sizeof(string556), "― 你没收了 %s 的钓鱼执照.",pname,idd);
				SendClientMessage(playerid, -1, string556);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 105:
		{
			if(response)
			{
				new string556[255];
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SendErrorMessage(playerid,"无效ID!");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendErrorMessage(playerid,"距离太远了!");
				GetPlayerName(idd, pname, sizeof(pname));


				format(string, sizeof(string), "― %s 没收了你的钓鱼执照", Name(playerid));
				SendClientMessage(idd, -1, string);
				PlayerInfo[idd][pFishLic] = 0;
				format(string556, sizeof(string556), "― 你没收了 %s 的钓鱼执照.",pname,idd);
				SendClientMessage(playerid, -1, string556);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 106:
		{
			if(response)
			{
				new string556[255];
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SendErrorMessage(playerid,"无效ID!");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendErrorMessage(playerid,"距离太远了!");
				GetPlayerName(idd, pname, sizeof(pname));


				format(string, sizeof(string), "― %s 没收了你的武器执照", Name(playerid));
				SendClientMessage(idd, -1, string);
				PlayerInfo[idd][pGunLic] = 0;
				format(string556, sizeof(string556), "― 你没收了 %s 的武器执照.",pname,idd);
				SendClientMessage(playerid, -1, string556);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 108:
		{
			if(response)
			{
				new string556[255];
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SendErrorMessage(playerid,"无效ID!");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendErrorMessage(playerid,"距离太远了!");
				GetPlayerName(idd, pname, sizeof(pname));


				format(string, sizeof(string), "― %s 没收了你的毒品", Name(playerid));
				SendClientMessage(idd, -1, string);
				PlayerInfo[idd][pDrugs] = 0;
				format(string556, sizeof(string556), "― 你没收了 %s 的毒品.",pname,idd);
				SendClientMessage(playerid, -1, string556);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 109:
		{
			if(response)
			{
				new string556[255];
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SendErrorMessage(playerid,"无效ID!");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendErrorMessage(playerid,"距离太远了!");
				GetPlayerName(idd, pname, sizeof(pname));


				format(string, sizeof(string), "― %s 没收了你的武器", Name(playerid));
				SendClientMessage(idd, -1, string);
				DelGun(idd);
				format(string556, sizeof(string556), "― 你没收了 %s 的武器.",pname,idd);
				SendClientMessage(playerid, -1, string556);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 110:
		{
			if(response)
			{
				new string556[255];
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SendErrorMessage(playerid,"无效ID!");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendErrorMessage(playerid,"距离太远了!");
				GetPlayerName(idd, pname, sizeof(pname));


				format(string, sizeof(string), "― %s 没收了你的材料", Name(playerid));
				SendClientMessage(idd, -1, string);
				PlayerInfo[idd][pMats] = 0;
				format(string556, sizeof(string556), "― 你没收了 %s 的材料.",pname,idd);
				SendClientMessage(playerid, -1, string556);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 9956:
		{
			if(response)
			{
				if(listitem == 0)
				{
					new online = 0;
					foreach(new i : Player)
					{
						if(PlayerInfo[i][pMember] == 4)
						{
							online++;
						}
					}
					if(online == 0)
					{
				 		SendServerMessage(playerid, "目前没有值班医生!");
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
						return true;
					}
					format(string, sizeof(string), "调度员: 一个人需要医疗帮助! {FFFFFF}( 使用: /accept medic, 接听电话 )");
					SendRadioMessage(4, COLOR_RED, string);
					SendRadioMessage(22, COLOR_RED, string);
				 	SendServerMessage(playerid, "调度员: 您的消息已发送，等待接听电话");
					MedicCall = playerid;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return true;
				}
				else if(listitem == 1)
				{
					if(Police < 1)
					{
				 		SendServerMessage(playerid, "目前没有值班警察!");
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
						return true;
					}
					format(string, sizeof(string), "调度员: 一个人需要警察的帮助. {FFFFFF}( 使用: /accept police, 接听电话 )");
					SendRadioMessage(1, COLOR_RED, string);
					SendRadioMessage(10, COLOR_RED, string);
					SendRadioMessage(21, COLOR_RED, string);
				 	SendServerMessage(playerid, "调度员: 您的消息已发送，等待接听电话");
					PoliceCall = playerid;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return true;
				}
				else if(listitem == 2)
				{
					new name[24];GetPlayerName(playerid, name, 24);
					if(TaxiJobStarted[playerid]) return SendServerMessage(playerid, "你不能叫出租车.");
					if(!PlayerCalledTaxi[playerid])
					{
						PlayerCalledTaxi[playerid] = true;
						SendSyntaxMessage(playerid, "你打电话叫出租车. 在原地等出租车到来.");
						SendSyntaxMessage(playerid, "再次输入 /call 取消呼叫.");
						format(string, sizeof(string), "― [订单列表] {F0F000}玩家 {EDEDB2}%s {F0F000}呼叫了出租车. 地点: {EDEDB2}%s", name, GetPlayerZone(playerid));
						foreach(new i : Player)
						{
							if(IsPlayerConnected(i) && TaxiJobStarted[i]) SendClientMessage(i, -1, string);
						}
					}
					else
					{
						PlayerCalledTaxi[playerid] = false;
						SendSyntaxMessage(playerid, "你取消了出租车电话.");
						format(string, sizeof(string), "― [订单列表] {D4D400}玩家 {E3E37D}%s {D4D400}取消了出租车订单!", name);
						foreach(new i : Player)
						{
							if(IsPlayerConnected(i) && TaxiJobStarted[i])
							{
								SendClientMessage(i, -1, string);
								RemovePlayerMapIcon(i, playerid);
							}
						}
					}
				}
				else if(listitem == 3)
				{
    				MehanON[playerid] = true;
				    new Mehans;
				    format(YCMDstr, sizeof(YCMDstr), "― [订单列表] {F0F000}玩家 {EDEDB2}%s[%i] {F0F000}需要汽修工. 地点: {EDEDB2}%s", pName, playerid, GetPlayerZone(playerid));
					foreach(new i : Player)
					{
   						if(IsPlayerConnected(i))
			    		{
       						if(PlayerInfo[i][pJob] == 6)
			        		{
             					SendClientMessage(i, -1, YCMDstr);
								SendServerMessage(i,"{73B461}接到电话之后,接受订单请输入 /mechanic [id]");
								Mehans ++;
      						}
    					}
					}
					if(Mehans > 0) SendServerMessage(playerid,"所有在线汽修工已经接到了你的电话");
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				}
			}
			else
			{
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			}
			return true;
		}
	case 5454:
		{
			if(response)
			{
				if(listitem == 0)
				{
					new giveplayer[MAX_PLAYER_NAME];
					SendClientMessage(playerid, COLOR_GREENYELLOW, "在线律师:");
					foreach(new i : Player)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerInfo[i][pMember] == 7 && PlayerInfo[i][pRank] == 2)
							{
								GetPlayerName(i, giveplayer, sizeof(giveplayer));
								format(string, 256, "― 律师: %s (电话号码 %i)", giveplayer, PlayerInfo[i][pPnumber]);
								SendClientMessage(playerid, -1, string);
							}
						}
					}
				}
				else if(listitem == 1)
				{
					new giveplayer[MAX_PLAYER_NAME];
					SendClientMessage(playerid, COLOR_GREENYELLOW, "在线教官:");
					foreach(new i : Player)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerInfo[i][pMember] == 11)
							{
								GetPlayerName(i, giveplayer, sizeof(giveplayer));
								format(string, 256, "― 教官: %s (电话 %i)", giveplayer, PlayerInfo[i][pPnumber]);
								SendClientMessage(playerid, -1, string);
							}
						}
					}
				}
				else if(listitem == 2)
				{
					new giveplayer[MAX_PLAYER_NAME];
					SendClientMessage(playerid, COLOR_GREENYELLOW, "在线医生:");
					foreach(new i : Player)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerInfo[i][pMember] == 4 || PlayerInfo[i][pMember] == 33)
							{
								GetPlayerName(i, giveplayer, sizeof(giveplayer));
								format(string, 256, "― 医生: %s (电话号码 %i)", giveplayer, PlayerInfo[i][pPnumber]);
								SendClientMessage(playerid, -1, string);
							}
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
	case 8240:
		{
			if(response)
			{
				SetPlayerInterior(playerid,7);
				SetPlayerVirtualWorld(playerid, 15);
				Q_SetPlayerPos(playerid,302.3128,-140.9305,1004.0625);
				SetPlayerFacingAngle(playerid, 318.5262);
				return true;
			}
			else
			{
				SetPlayerInterior(playerid, 0);
				Q_SetPlayerPos(playerid,2278.3853,2460.9187,38.6837);
				SetPlayerFacingAngle(playerid, 357.9236);
				return true;
			}
		}
	case 8241:
		{
			if(response)
			{
				SetPlayerInterior(playerid,7);
				SetPlayerVirtualWorld(playerid, 15);
				Q_SetPlayerPos(playerid,302.3128,-140.9305,1004.0625);
				SetPlayerFacingAngle(playerid, 318.5262);
				return true;
			}
			else
			{
				SetPlayerInterior(playerid, 0);
				Q_SetPlayerPos(playerid,2294.0447,2468.8052,10.8203);
				SetPlayerFacingAngle(playerid, 90.8629);
				return true;
			}
		}
	case 2013:
		{
			if(response)
			{
				if(listitem == 0)
				{
					if(yakuzamats <= 50)return SendErrorMessage(playerid, "库存中没有材料!");
					gun = 24; ammo = 50;
					yakuzamats -= 70;
					SetOtherInt("yakuzamats", yakuzamats);
				}
				else if(listitem == 1)
				{
					if(yakuzamats <= 50)return SendErrorMessage(playerid, "库存中没有材料!");
					gun = 25; ammo = 15;
					yakuzamats -= 50;
					SetOtherInt("yakuzamats", yakuzamats);
				}
				else if(listitem == 2)
				{
					if(yakuzamats <= 50)return SendErrorMessage(playerid, "库存中没有材料!");
					gun = 33; ammo = 10;
					yakuzamats -= 100;
					SetOtherInt("yakuzamats", yakuzamats);
				}
				else if(listitem == 3)
				{
					if(yakuzamats <= 50)return SendErrorMessage(playerid, "库存中没有材料!");
					gun = 31; ammo = 100;
					yakuzamats -= 500;
					SetOtherInt("yakuzamats", yakuzamats);
				}
				else if(listitem == 4)
				{
					if(yakuzamats <= 50)return SendErrorMessage(playerid, "库存中没有材料!");
					gun = 30; ammo = 100;
					yakuzamats -= 500;
					SetOtherInt("yakuzamats", yakuzamats);
				}
				else if(listitem == 5)
				{
					if(yakuzamats <= 50)return SendErrorMessage(playerid, "库存中没有材料!");
					gun = 29; ammo = 200;
					yakuzamats -= 400;
					SetOtherInt("yakuzamats", yakuzamats);
				}
				else if(listitem == 6)
				{
					if(yakuzamats <= 50)return SendErrorMessage(playerid, "库存中没有材料!");
					gun = 23; ammo = 100; yakuzamats -= 100;
     				SetOtherInt("yakuzamats", yakuzamats);
				}

				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				format(string, 256, "― 你从仓库拿走了武器");
				SendClientMessage(playerid, -1, string);

				format(string, sizeof(string), "%s 从仓库拿走了武器", Name(playerid));
				ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 2014:
		{
			if(response)
			{
				if(listitem == 0)
				{
					if(lcnmats <= 50) return  SendErrorMessage(playerid, "库存中没有材料!");
					gun = 24; ammo = 50; lcnmats -= 70;
					SetOtherInt("lcnmats", lcnmats);
				}
				else if(listitem == 1)
				{
					if(lcnmats <= 50)  return  SendErrorMessage(playerid, "库存中没有材料!");
					gun = 25; ammo = 15; lcnmats -= 50;
					SetOtherInt("lcnmats", lcnmats);
				}
				else if(listitem == 2)
				{
					if(lcnmats <= 50)  return  SendErrorMessage(playerid, "库存中没有材料!");
					gun = 33; ammo = 10; lcnmats -= 100;
					SetOtherInt("lcnmats", lcnmats);
				}
				else if(listitem == 3)
				{
					if(lcnmats <= 50)  return  SendErrorMessage(playerid, "库存中没有材料!");
					gun = 31; ammo = 100; lcnmats -= 500;
					SetOtherInt("lcnmats", lcnmats);
				}
				else if(listitem == 4)
				{
					if(lcnmats <= 50)  return  SendErrorMessage(playerid, "库存中没有材料!");
					gun = 30; ammo = 100; lcnmats -= 500;
					SetOtherInt("lcnmats", lcnmats);
				}
				else if(listitem == 5)
				{
					if(lcnmats <= 50)  return  SendErrorMessage(playerid, "库存中没有材料!");
					gun = 29; ammo = 200; lcnmats -= 400;
					SetOtherInt("lcnmats", lcnmats);
				}
				else if(listitem == 6)
				{
					if(lcnmats <= 50)  return  SendErrorMessage(playerid, "库存中没有材料!");
					gun = 23; ammo = 100; lcnmats -= 100;
					SetOtherInt("lcnmats", lcnmats);
				}

				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				format(string, 256, "― 你从仓库拿走了武器");
				SendClientMessage(playerid, -1, string);

				format(string, sizeof(string), "%s 从仓库拿走了武器", Name(playerid));
				ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 2015:
		{
			if(response)
			{
				if(listitem == 0)
				{
					if(rmmats <= 50)  return  SendErrorMessage(playerid, "库存中没有材料!");
					gun = 24; ammo = 50; rmmats -= 70;
					SetOtherInt("rmmats", rmmats);
				}
				else if(listitem == 1)
				{
					if(rmmats <= 50)  return  SendErrorMessage(playerid, "库存中没有材料!");
					gun = 25; ammo = 15; rmmats -= 50;
					SetOtherInt("rmmats", rmmats);
				}
				else if(listitem == 2)
				{
					if(rmmats <= 50)  return  SendErrorMessage(playerid, "库存中没有材料!");
					gun = 33; ammo = 10; rmmats -= 100;
					SetOtherInt("rmmats", rmmats);
				}
				else if(listitem == 3)
				{
					if(rmmats <= 50)  return  SendErrorMessage(playerid, "库存中没有材料!");
					gun = 31; ammo = 100; rmmats -= 500;
					SetOtherInt("rmmats", rmmats);
				}
				else if(listitem == 4)
				{
					if(rmmats <= 50)  return  SendErrorMessage(playerid, "库存中没有材料!");
					gun = 30; ammo = 100; rmmats -= 500;
					SetOtherInt("rmmats", rmmats);
				}
				else if(listitem == 5)
				{
					if(rmmats <= 50)  return  SendErrorMessage(playerid, "库存中没有材料!");
					gun = 29; ammo = 200; rmmats -= 400;
					SetOtherInt("rmmats", rmmats);
				}
				else if(listitem == 6)
				{
					if(rmmats <= 50)  return  SendErrorMessage(playerid, "库存中没有材料!");
					gun = 23; ammo = 100; rmmats -= 100;
					SetOtherInt("rmmats", rmmats);
				}

				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				format(string, 256, "― 你从仓库拿走了武器");
				SendClientMessage(playerid, -1, string);

				format(string, sizeof(string), "%s 从仓库拿走了武器", Name(playerid));
				ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else
			{
				return true;
			}
		}
		case 76:
		{
		    if(response)
			{
				PlayerInfo[playerid][pMember] = GetPVarInt(playerid, "InvitePlayer");
				DeletePVar(playerid, "InvitePlayer");
				PlayerInfo[playerid][pRank] = 1;
				switch(PlayerInfo[playerid][pMember])
				{
					case 1: InviteSkin[playerid] = 265;
					case 2: InviteSkin[playerid] = 286;
					case 3: InviteSkin[playerid] = 71;
					case 4: InviteSkin[playerid] = 70, PlayerInfo[playerid][pJobHeal] = 1;
					case 5: InviteSkin[playerid] = 223;
					case 6: InviteSkin[playerid] = 120;
					case 7: InviteSkin[playerid] = 57;
					case 8: InviteSkin[playerid] = 194;
					case 9: InviteSkin[playerid] = 265;
					case 11: InviteSkin[playerid] = 59;
					case 12: InviteSkin[playerid] = 102;
					case 13: InviteSkin[playerid] = 108;
					case 14: InviteSkin[playerid] = 111;
					case 15: InviteSkin[playerid] = 106;
					case 16: InviteSkin[playerid] = 250;
					case 17: InviteSkin[playerid] = 114;
					case 18: InviteSkin[playerid] = 173;
					case 19: InviteSkin[playerid] = 287;
					case 20: InviteSkin[playerid] = 265;
				}
				SetPlayerStraps(playerid);
				PlayerInfo[playerid][pModel] = InviteSkin[playerid];
				forma[playerid] = 0;
				SelectCharPlace[playerid] = 0;
				CharPrice[playerid] = 0;
				SelectCharID[playerid] = 0;
				SelectChar[playerid] = 0;
				SetPlayerSkin(playerid, InviteSkin[playerid]);
				SetPlayerToTeamColor(playerid);
			}
			else
			{
				return true;
			}
		}
	case 22833:
		{
			if(!response) return true;
		    switch(listitem)
		    {
				case 0:
				{
				    PlayerInfo[playerid][pRank] = 7;
				    PlayerInfo[playerid][pMember] = 1;
				    SetPlayerStraps(playerid);
					PlayerInfo[playerid][pModel] = 265;
					forma[playerid] = 0;
					SelectCharPlace[playerid] = 0;
					CharPrice[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
					SetPlayerSkin(playerid, 265);
					SetPlayerToTeamColor(playerid);
				}
			    case 1:
				{
                    PlayerInfo[playerid][pRank] = 7;
				    PlayerInfo[playerid][pMember] = 7;
				    SetPlayerStraps(playerid);
					PlayerInfo[playerid][pModel] = 57;
					forma[playerid] = 0;
					SelectCharPlace[playerid] = 0;
					CharPrice[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
					SetPlayerSkin(playerid, 57);
					SetPlayerToTeamColor(playerid);
				}
				case 2:
				{
                    PlayerInfo[playerid][pRank] = 7;
				    PlayerInfo[playerid][pMember] = 8;
				    SetPlayerStraps(playerid);
					PlayerInfo[playerid][pModel] = 194;
					forma[playerid] = 0;
					SelectCharPlace[playerid] = 0;
					CharPrice[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
					SetPlayerSkin(playerid, 194);
					SetPlayerToTeamColor(playerid);
				}
				case 3:
				{
                    PlayerInfo[playerid][pRank] = 7;
				    PlayerInfo[playerid][pMember] = 2;
				    SetPlayerStraps(playerid);
					PlayerInfo[playerid][pModel] = 286;
					forma[playerid] = 0;
					SelectCharPlace[playerid] = 0;
					CharPrice[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
					SetPlayerSkin(playerid, 286);
					SetPlayerToTeamColor(playerid);
				}
				case 4:
				{
                    PlayerInfo[playerid][pRank] = 7;
				    PlayerInfo[playerid][pMember] = 19;
				    SetPlayerStraps(playerid);
					PlayerInfo[playerid][pModel] = 287;
					forma[playerid] = 0;
					SelectCharPlace[playerid] = 0;
					CharPrice[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
					SetPlayerSkin(playerid, 287);
					SetPlayerToTeamColor(playerid);
				}
				case 5:
				{
                    PlayerInfo[playerid][pRank] = 7;
				    PlayerInfo[playerid][pMember] = 3;
				    SetPlayerStraps(playerid);
					PlayerInfo[playerid][pModel] = 71;
					forma[playerid] = 0;
					SelectCharPlace[playerid] = 0;
					CharPrice[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
					SetPlayerSkin(playerid, 71);
					SetPlayerToTeamColor(playerid);
				}
				case 6:
				{
                    PlayerInfo[playerid][pRank] = 7;
				    PlayerInfo[playerid][pMember] = 4;
				    SetPlayerStraps(playerid);
					PlayerInfo[playerid][pModel] = 70;
					forma[playerid] = 0;
					SelectCharPlace[playerid] = 0;
					CharPrice[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
					SetPlayerSkin(playerid, 70);
					SetPlayerToTeamColor(playerid);
				}
				case 7:
				{
                    PlayerInfo[playerid][pRank] = 7;
				    PlayerInfo[playerid][pMember] = 11;
				    SetPlayerStraps(playerid);
					PlayerInfo[playerid][pModel] = 59;
					forma[playerid] = 0;
					SelectCharPlace[playerid] = 0;
					CharPrice[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
					SetPlayerSkin(playerid, 59);
					SetPlayerToTeamColor(playerid);
				}
				case 8:
				{
                    PlayerInfo[playerid][pRank] = 7;
				    PlayerInfo[playerid][pMember] = 16;
				    SetPlayerStraps(playerid);
					PlayerInfo[playerid][pModel] = 250;
					forma[playerid] = 0;
					SelectCharPlace[playerid] = 0;
					CharPrice[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
					SetPlayerSkin(playerid, 250);
					SetPlayerToTeamColor(playerid);
				}
				case 9:
				{
                    PlayerInfo[playerid][pRank] = 7;
				    PlayerInfo[playerid][pMember] = 5;
				    SetPlayerStraps(playerid);
					PlayerInfo[playerid][pModel] = 223;
					forma[playerid] = 0;
					SelectCharPlace[playerid] = 0;
					CharPrice[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
					SetPlayerSkin(playerid, 223);
					SetPlayerToTeamColor(playerid);
				}
				case 10:
				{
                    PlayerInfo[playerid][pRank] = 7;
				    PlayerInfo[playerid][pMember] = 14;
				    SetPlayerStraps(playerid);
					PlayerInfo[playerid][pModel] = 111;
					forma[playerid] = 0;
					SelectCharPlace[playerid] = 0;
					CharPrice[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
					SetPlayerSkin(playerid, 111);
					SetPlayerToTeamColor(playerid);
				}
				case 11:
				{
                    PlayerInfo[playerid][pRank] = 7;
				    PlayerInfo[playerid][pMember] = 6;
				    SetPlayerStraps(playerid);
					PlayerInfo[playerid][pModel] = 120;
					forma[playerid] = 0;
					SelectCharPlace[playerid] = 0;
					CharPrice[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
					SetPlayerSkin(playerid, 120);
					SetPlayerToTeamColor(playerid);
				}
			    case 12:
				{
                    PlayerInfo[playerid][pRank] = 7;
				    PlayerInfo[playerid][pMember] = 18;
				    SetPlayerStraps(playerid);
					PlayerInfo[playerid][pModel] = 173;
					forma[playerid] = 0;
					SelectCharPlace[playerid] = 0;
					CharPrice[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
					SetPlayerSkin(playerid, 173);
					SetPlayerToTeamColor(playerid);
				}
				case 13:
				{
                    PlayerInfo[playerid][pRank] = 7;
				    PlayerInfo[playerid][pMember] = 12;
				    SetPlayerStraps(playerid);
					PlayerInfo[playerid][pModel] = 102;
					forma[playerid] = 0;
					SelectCharPlace[playerid] = 0;
					CharPrice[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
					SetPlayerSkin(playerid, 102);
					SetPlayerToTeamColor(playerid);
				}
				case 14:
				{
                    PlayerInfo[playerid][pRank] = 7;
				    PlayerInfo[playerid][pMember] = 15;
				    SetPlayerStraps(playerid);
					PlayerInfo[playerid][pModel] = 106;
					forma[playerid] = 0;
					SelectCharPlace[playerid] = 0;
					CharPrice[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
					SetPlayerSkin(playerid, 106);
					SetPlayerToTeamColor(playerid);
				}
				case 15:
				{
                    PlayerInfo[playerid][pRank] = 7;
				    PlayerInfo[playerid][pMember] = 17;
				    SetPlayerStraps(playerid);
					PlayerInfo[playerid][pModel] = 17;
					forma[playerid] = 0;
					SelectCharPlace[playerid] = 0;
					CharPrice[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
					SetPlayerSkin(playerid, 114);
					SetPlayerToTeamColor(playerid);
				}
				case 16:
				{
                    PlayerInfo[playerid][pRank] = 7;
				    PlayerInfo[playerid][pMember] = 13;
				    SetPlayerStraps(playerid);
					PlayerInfo[playerid][pModel] = 108;
					forma[playerid] = 0;
					SelectCharPlace[playerid] = 0;
					CharPrice[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
					SetPlayerSkin(playerid, 108);
					SetPlayerToTeamColor(playerid);
				}
				case 17:
				{
                    PlayerInfo[playerid][pRank] = 7;
				    PlayerInfo[playerid][pMember] = 20;
				    SetPlayerStraps(playerid);
					PlayerInfo[playerid][pModel] = 300;
					forma[playerid] = 0;
					SelectCharPlace[playerid] = 0;
					CharPrice[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
					SetPlayerSkin(playerid, 108);
					SetPlayerToTeamColor(playerid);
				}
				case 18:
				{
                    PlayerInfo[playerid][pRank] = 7;
				    PlayerInfo[playerid][pMember] = 9;
				    SetPlayerStraps(playerid);
					PlayerInfo[playerid][pModel] = 300;
					forma[playerid] = 0;
					SelectCharPlace[playerid] = 0;
					CharPrice[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
					SetPlayerSkin(playerid, 108);
					SetPlayerToTeamColor(playerid);
				}
			}
		}
	case 8816:
		{
			if(response)
			{
				new summa;
				if(!strlen(inputtext))
				{
					format(string,sizeof(string), "您的银行帐户余额: %i $.\n输入您想要的金额", PlayerInfo[playerid][pBank]);
					ShowPlayerDialog(playerid,8816,DIALOG_STYLE_INPUT, "{1E90FF}存款",string, "确定", "退出");
				}
				summa = strval(inputtext);
				if(PlayerInfo[playerid][pCash] < summa) return SendErrorMessage(playerid,"你没有足够的钱!");
				if(summa < 1 || summa > 1000000) { SendErrorMessage(playerid,"限制 1 - 1000000 $!"); return true; }
				SendClientMessage(playerid, COLOR_SALMON, "---------===[ 银行流水单 ]===---------");
				format(string, sizeof(string), "旧余额: %i $", PlayerInfo[playerid][pBank]);
				SendClientMessage(playerid, COLOR_GREEN, string);
				PlayerInfo[playerid][pCash] -=summa;
				PlayerInfo[playerid][pBank] += summa;
				format(string, sizeof(string), "存款金额: %i $",summa);
				SendClientMessage(playerid, COLOR_GREY, string);
				format(string, sizeof(string), "新余额: %i $", PlayerInfo[playerid][pBank]);
				SendClientMessage(playerid, COLOR_GREY, string);
				OnPlayerUpdateAc(playerid);
				return true;
			}
		}
	case 8814:
		{
			if(response)
			{
				new summa;
				if(!strlen(inputtext))
				{
					format(string,sizeof(string), "您的银行帐户余额: %i $\n输入您想要的金额", PlayerInfo[playerid][pBank]);
					ShowPlayerDialog(playerid,8814,DIALOG_STYLE_INPUT, "{1E90FF}提款",string, "确定", "退出");
				}
				summa = strval(inputtext);
				if(PlayerInfo[playerid][pBank] < summa) return SendErrorMessage(playerid,"你没有足够的钱!");
				if(summa < 1 || summa > 1000000) { SendErrorMessage(playerid,"限制 1 - 1000000$"); return true; }
				SendClientMessage(playerid, COLOR_SALMON, "---------===[ 银行流水单 ]===---------");
				format(string, sizeof(string), "旧余额: %i $", PlayerInfo[playerid][pBank]);
				SendClientMessage(playerid, COLOR_GREEN, string);
				PlayerInfo[playerid][pCash] +=summa;
				PlayerInfo[playerid][pBank] -= summa;
				format(string, sizeof(string), "提款金额: %i $",summa);
				SendClientMessage(playerid, COLOR_GRAD4, string);
				format(string, sizeof(string), "新余额: %i $", PlayerInfo[playerid][pBank]);
				SendClientMessage(playerid, -1, string);
				OnPlayerUpdateAc(playerid);
				return true;
			}
		}
	case 8454:
		{
			if(response)
			{


				if(PlayerInfo[playerid][pCash] < strlen(ReportQ[playerid])*addd[0]) return SendErrorMessage(playerid,"你没有足够的钱!");
				if(TOTALADVERT[0] >= 15) return SendErrorMessage(playerid,"广告列表已满. 稍后尝试投递广告.");
				PlayerInfo[playerid][pCash] -= strlen(ReportQ[playerid])*addd[0];
				FracBank[0] += strlen(ReportQ[playerid])*addd[0];
				SetOtherInt("FracBank[0]", FracBank[0]);
				TOTALADVERT[0] ++;
				AdvertInfo[TOTALADVERT[0]][0][adPhone] = PlayerInfo[playerid][pPnumber];
				strmid(AdvertInfo[TOTALADVERT[0]][0][adText],ReportQ[playerid],0,128,128);
				strmid(AdvertInfo[TOTALADVERT[0]][0][adName],Name(playerid),0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
				format(string,sizeof(string), "~r~-$%d", strlen(ReportQ[playerid])*addd[0]);
				GameTextForPlayer(playerid, string, 5000, 1);
				SendSyntaxMessage(playerid, "您的广告将在验证后提交");
				format(YCMDstr, sizeof(YCMDstr), "编辑委员会收到了新的广告!");
				SendFamilyMessage(16,COLOR_BLUE, YCMDstr);
			}
			else
			{
				return true;
			}
		}
	case 8904:
		{
			if(response)
			{
				if(listitem == 0) { money = 500; }
				else if(listitem == 1) { money = 1000; }
				else if(listitem == 2) { money = 5000; }
				else if(listitem == 3) { money = 10000; }
				else if(listitem == 4) { money = 20000; }
				else if(listitem == 5) { money = 50000; }
				else if(listitem == 6) { money = 100000; }
				if (money > PlayerInfo[playerid][pBank])
				{
					ShowPlayerDialog(playerid, 10010, DIALOG_STYLE_MSGBOX, "{1E90FF}自动取款机", "您的帐户资金不足!", "关闭", "");
					return true;
				}
				PlayerInfo[playerid][pCash] += money;
				PlayerInfo[playerid][pBank] = PlayerInfo[playerid][pBank]-money;
				format(string, sizeof(string), "― 你从账户提款: %i $. 余额: %i $", money,PlayerInfo[playerid][pBank]);
				SendClientMessage(playerid, -1, string);
				format(string, sizeof(string), "~b~+%i", money);
				GameTextForPlayer(playerid, string, 3000, 1);
				return true;
			}
		}
	case 9522:
		{
			if(response)
			{
				if(!strlen(inputtext))
				{
					format(string,sizeof(string), "手机账户: %i $\n输入您要在手机上存入的金额",PlayerInfo[playerid][pMobile]);
					ShowPlayerDialog(playerid,9522,DIALOG_STYLE_INPUT,"{1E90FF}传奇电信公司",string,"选择","退出");
				}
				new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 7000)
				{
					SendErrorMessage(playerid, "限制 1 - 7.000 $");
					format(string,sizeof(string), "手机账户: %i $\n输入您要在手机上存入的金额",PlayerInfo[playerid][pMobile]);
					ShowPlayerDialog(playerid,9522,DIALOG_STYLE_INPUT,"{1E90FF}传奇电信公司",string,"确定","退出");
					return true;
				}
				if(PlayerInfo[playerid][pCash] < moneys) return	SendErrorMessage(playerid,"你没有足够的钱!");
				if(PlayerInfo[playerid][pMobile] >= 7000) return SendErrorMessage(playerid,"手机账户上已经有了 7000$!");
				PlayerInfo[playerid][pCash] -= moneys;
				PlayerInfo[playerid][pMobile] += moneys;
				format(string, sizeof(string), "― 金额 %i $", moneys);
				SendClientMessage(playerid, -1, string);
				SendSyntaxMessage(playerid, "交易已接受!");
				format(string, sizeof(string), "― {90EE90}你的消息: {FFFF00}你的手机账户充值了 %i $. {90EE90}发件人: 传奇电信公司", moneys);
				SendClientMessage(playerid, -1, string);
				format(string,sizeof(string), "存入手机账户");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 9523:
		{
			new bouse = PlayerInfo[playerid][pPhousekey];
			if(response)
			{
				if(!strlen(inputtext))
				{
					format(string,sizeof(string), "输入您要存入帐户的金额");
					ShowPlayerDialog(playerid,9523,DIALOG_STYLE_INPUT,"{1E90FF}房屋账户",string,"确定","退出");
				}
				new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 70000)
				{
			 		SendServerMessage(playerid, "限制 1$ - 70.000$");
					format(string,sizeof(string), "输入您要存入帐户的金额");
					ShowPlayerDialog(playerid,9523,DIALOG_STYLE_INPUT,"{1E90FF}房屋账户",string,"确定","退出");
					return true;
				}
				if(HouseInfo[bouse][hTakings]+moneys > 70000) return SendErrorMessage(playerid,"房屋账户已经有了 70.000 $");
				if(PlayerInfo[playerid][pBank] < moneys) return SendErrorMessage(playerid,"你的银行中没有那么多钱!");
				PlayerInfo[playerid][pBank] -= moneys;
				HouseInfo[bouse][hTakings] += moneys;
				format(string, sizeof(string), "― 你将 %i $ 存入到了房屋账户. 房屋账户: %i $", moneys,HouseInfo[bouse][hTakings]);
				SendClientMessage(playerid, -1, string);
				format(string,sizeof(string), "存入房屋账户");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				OnPlayerUpdateAc(playerid);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 5032:
		{

			new house = PlayerInfo[playerid][pPhousekey];
			if(response)
			{
				for(new h = 1; h <= TotalHouse; h++)
				{
					HouseInfo[house][hHel] = 0;
					HouseInfo[house][hLock] = 0;
					HouseInfo[house][hOwned] = 0;
					HouseInfo[house][hVec] = 0;
					HouseInfo[house][hTakings] = 0;
					HouseInfo[house][hDeagle] = 0;
					HouseInfo[house][hShotgun] = 0;
					HouseInfo[house][hM4] = 0;
					HouseInfo[house][hAK47] = 0;
					HouseInfo[house][hDrugs] = 0;
					HouseInfo[house][hMaterials] = 0;

					strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
					PlayerInfo[playerid][pCash] += HouseInfo[house][hValue];
					format(string, sizeof(string), "― 房子卖了 %i $", HouseInfo[house][hValue]);
					SendClientMessage(playerid, -1, string);
					format(string, sizeof(string), "现金获得: %i", PlayerInfo[playerid][pCash]);
					SendClientMessage(playerid, -1, string);
					PlayerInfo[playerid][pPhousekey] = 799;
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid, 0);
					Q_SetPlayerPos(playerid,HouseInfo[house][hEntrancex],HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez]);
					PlayerInfo[playerid][pInt] = 0;
					foreach(Player,i)
                    {
					    if(PlayerInfo[i][pPhousekey2] == house)
					    {
						    new name[64];
						    PlayerInfo[i][pPhousekey2] = 799;
						    GetPlayerName(i,name,sizeof(name));
						    SendServerMessage(i, "你租的房屋被业主出售了.");
						    format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pPhousekey2 = '799' WHERE Name = '%s'",name);
					    }
	                }
					BuyHouse(house);
					SaveProperty(house);
					OnPlayerUpdateAc(playerid);
					return true;
				}
			}
			else
			{
				return true;
			}
		}
	case 9298:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pCash] <= 59999)
				{
					SendErrorMessage(playerid,"你没有足够的钱!");
					return true;
				}
				switch(PlayerInfo[playerid][pMember])
				{
					case 5: lcnmats = 50000, SetOtherInt("lcnmats", lcnmats),SendSyntaxMessage(playerid, "你以 60000 美元的价格购买了 50000 材料"), PlayerInfo[playerid][pCash] -= 60000;
					case 6: yakuzamats = 50000, SetOtherInt("yakuzamats", yakuzamats),SendSyntaxMessage(playerid, "你以 60000 美元的价格购买了 50000 材料"), PlayerInfo[playerid][pCash] -= 160000;
					case 14: rmmats = 50000, SetOtherInt("rmmats", rmmats),SendSyntaxMessage(playerid, "你以 60000 美元的价格购买了 50000 材料"), PlayerInfo[playerid][pCash] -= 60000;
				}
			}
			else
			{
				return true;
			}
			return true;
		}
	case 1541:
		{
			if(response)
			{
				new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z,Float:Angle; GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle); GetPlayerPos(ChosenPlayer[playerid],PX,PY,PZ);
				new ClickedPlayerName[MAX_PLAYER_NAME]; GetPlayerName(ChosenPlayer[playerid],ClickedPlayerName,24);
				if(listitem == 0)
				{
					ShowStats(playerid,ChosenPlayer[playerid]);
				}
				new Float:plocx,Float:plocy,Float:plocz;
				new Float:xx,Float:yy,Float:zz;
				GetPlayerPos(playerid, plocx, plocy, plocz);
				GetPlayerPos(ChosenPlayer[playerid], xx, yy, zz);
				if(listitem == 1)
				{
					if(PlayerInfo[playerid][pAdministration228] >=1)
					{
						Q_SetPlayerPos(playerid,xx,yy+2, zz);
						SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(ChosenPlayer[playerid]));
						SetPlayerInterior(playerid, GetPlayerInterior(ChosenPlayer[playerid]));
					}
				}
				if(listitem == 2)
				{
					if(PlayerInfo[playerid][pAdministration228] >= 1)
					{
						Q_SetPlayerPos(ChosenPlayer[playerid],plocx,plocy+2, plocz);
						SendServerMessage(ChosenPlayer[playerid], "管理员传送了你.");
						return true;
					}
				}
				if(listitem == 3)
				{
					if(PlayerInfo[ChosenPlayer[playerid]][pMuted] == 0)
					{
						format(string, sizeof(string), "管理员: %s 禁言了 %s",ClickedPlayerName, Name(playerid));
					 	SendClientMessageToAll(COLOR_LIGHTRED, string);
						PlayerInfo[ChosenPlayer[playerid]][pMuteTime] = 300;
						PlayerInfo[ChosenPlayer[playerid]][pMuted] = 1;
						return true;
					}
					else
					{
						format(string, sizeof(string), "管理员: %s 解除了 %s 的禁言", Name(playerid),ClickedPlayerName );
					 	SendClientMessageToAll(COLOR_LIGHTRED, string);
						PlayerInfo[ChosenPlayer[playerid]][pMuteTime] = 0;
						PlayerInfo[ChosenPlayer[playerid]][pMuted] = 0;
						return true;
					}
				}
			}
			else
			{
				return true;
			}
		}
	case 7724:
		{
			if(response)
			{
				if(listitem == 0)
				{
					SetPlayerFacingAngle(playerid, 181.6046);
					SetPlayerCameraPos(playerid,338.6618,1573.9758,29.3534);
					SetPlayerCameraLookAt(playerid,338.6618,1573.9758,29.3534);
					TogglePlayerControllable(playerid, 0);
					return true;
				}
				else if(listitem == 1)
				{
					SetPlayerFacingAngle(playerid, 170.0947);
					SetPlayerCameraPos(playerid,-61.5420,1612.7935,24.2544);
					SetPlayerCameraLookAt(playerid,-61.5420,1612.7935,24.2544);
					TogglePlayerControllable(playerid, 0);
					return true;
				}
				else if(listitem == 2)
				{
					SetPlayerFacingAngle(playerid, 115.7203);
					SetPlayerCameraPos(playerid,121.2786,1942.5219,29.0367);
					SetPlayerCameraLookAt(playerid,121.2786,1942.5219,29.0367);
					TogglePlayerControllable(playerid, 0);
					return true;
				}
				else if(listitem == 3)
				{
					SetPlayerFacingAngle(playerid, 319.3263);
					SetPlayerCameraPos(playerid,277.4582,2024.3215,26.3999);
					SetPlayerCameraLookAt(playerid,277.4582,2024.3215,26.3999);
					TogglePlayerControllable(playerid, 0);
					return true;
				}
			 	SendServerMessage(playerid, "/cameraoff");
				SetPlayerVirtualWorld(playerid, 0);
			}
			else
			{
				return true;
			}
		}
		case 7998:
		{
			if(response)
	    	{
				if(!strcmp(inputtext, "1",true))
	    		{
		   			if(PlayerInfo[playerid][pDonatemoney] < 50) return SendErrorMessage(playerid,"你没有50捐赠点");
		   			PlayerInfo[playerid][pWarns] = 0;
					PlayerInfo[playerid][punWarnstime] = 0;
					PlayerInfo[playerid][punWarns] = 0;
		   			PlayerInfo[playerid][pDonatemoney] -= 50;
		   			OnPlayerUpdateAc(playerid);
		   			SendSyntaxMessage(playerid, "你花费了 {00FF00}'50' {FFFFFF}捐赠点清除了警告");
				}
				if(!strcmp(inputtext, "2",true))
	    		{
		   			if(PlayerInfo[playerid][pDonatemoney] < 10) return SendErrorMessage(playerid,"你没有10捐赠点");
		   			PlayerInfo[playerid][pZakonp] += 25;
		   			PlayerInfo[playerid][pDonatemoney] -= 10;
		   			OnPlayerUpdateAc(playerid);
		   			SendSyntaxMessage(playerid, "你购买了 25 合法点,花费了 {00FF00}'10' {FFFFFF}捐赠点");
				}
				if(!strcmp(inputtext, "3",true))
	    		{
		   			if(PlayerInfo[playerid][pDonatemoney] < 20) return SendErrorMessage(playerid,"你没有20捐赠点");
		   			PlayerInfo[playerid][pAddiction] = 0;
		   			PlayerInfo[playerid][pNarcoLomka] = 0;
		   			PlayerInfo[playerid][pDonatemoney] -= 20;
		   			OnPlayerUpdateAc(playerid);
		   			SendSyntaxMessage(playerid, "你移除了毒瘾,花费了 {00FF00}'20' {FFFFFF}捐赠点");
				}
				if(!strcmp(inputtext, "4",true))
	    		{
		   			if(PlayerInfo[playerid][pDonatemoney] < 90) return SendErrorMessage(playerid,"你没有90捐赠点");
		   			PlayerInfo[playerid][pMats] += 5000;
		   			DollahScoreUpdate(playerid);
		   			PlayerInfo[playerid][pDonatemoney] -= 90;
		   			OnPlayerUpdateAc(playerid);
		   			SendSyntaxMessage(playerid, "你购买了 5000 材料,花费了 {00FF00}'90' {FFFFFF}捐赠点");
				}
				if(!strcmp(inputtext, "5",true))
	    		{
		   			if(PlayerInfo[playerid][pDonatemoney] < 10) return SendErrorMessage(playerid,"你没有10捐赠点");
		   			if(PlayerInfo[playerid][pLeader] >= 1) return SendErrorMessage(playerid,"你不能退出");
		   			PlayerInfo[playerid][pMember] = 0;
		   			PlayerInfo[playerid][pInFrac] = 0;
					PlayerInfo[playerid][pRank] = 0;
					PlayerInfo[playerid][pLeader] = 0;
					SetPlayerArmourAC(playerid,0);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar][0]);
		   			PlayerInfo[playerid][pDonatemoney] -= 10;
		   			OnPlayerUpdateAc(playerid);
		   			SendSyntaxMessage(playerid, "你退出了,花费了 {00FF00}'10' {FFFFFF}捐赠点");
				}
				if(!strcmp(inputtext, "6",true))
	    		{
		   			if(PlayerInfo[playerid][pDonatemoney] < 60) return SendErrorMessage(playerid,"你没有60捐赠点");
		   			PlayerInfo[playerid][pGunSkill][0] = 100;
		   			PlayerInfo[playerid][pGunSkill][1] = 100;
		   			PlayerInfo[playerid][pGunSkill][2] = 100;
		   			PlayerInfo[playerid][pGunSkill][3] = 100;
		   			PlayerInfo[playerid][pGunSkill][4] = 100;
		   			PlayerInfo[playerid][pGunSkill][5] = 100;
		   			PlayerInfo[playerid][pDonatemoney] -= 25;
		   			OnPlayerUpdateAc(playerid);
		   			SendSyntaxMessage(playerid, "你的所有武器技能已达到100,花费了 {00FF00}'25' {FFFFFF}捐赠点");
				}
				if(!strcmp(inputtext, "7",true))
	    		{
		   			if(PlayerInfo[playerid][pDonatemoney] < 10) return SendErrorMessage(playerid,"你没有10捐赠点");
		   			PlayerInfo[playerid][pAddiction] += 1000;
		   			PlayerInfo[playerid][pDonatemoney] -= 10;
		   			OnPlayerUpdateAc(playerid);
		   			SendSyntaxMessage(playerid, "你增加了 1000 毒瘾,花费了 {00FF00}'10' {FFFFFF}捐赠点");
				}
				if(!strcmp(inputtext, "8",true))
	    		{
		   			if(PlayerInfo[playerid][pDonatemoney] < 5) return SendErrorMessage(playerid,"你没有5人民币");
					if(PlayerInfo[playerid][pWantedLevel] > 0)
					{
						SetPlayerWantedLevel(playerid,WantedLevel[playerid] -= 1);
						WantedLevel[playerid] -= 1;
						PlayerInfo[playerid][pWantedLevel] -=1;
						PlayerInfo[playerid][pDonatemoney] -= 5;
						SendSyntaxMessage(playerid, "你清除了一个通缉等级,花费了 {00FF00}'5' {FFFFFF}捐赠点");
					}
				}
				if(!strcmp(inputtext, "9",true))
	    		{
		   			if(PlayerInfo[playerid][pDonatemoney] < 150) return SendErrorMessage(playerid,"你没有150捐赠点");
		   			ShowPlayerDialog(playerid,7996,DIALOG_STYLE_INPUT,"{1E90FF}捐赠菜单","{ffffff}输入皮肤ID,然后点击 {00FF00}'确定'\n","确定","退出");
				}
				if(!strcmp(inputtext, "10",true))
	    		{
 		    		new str[300],sctring[350];
					format(str,sizeof(str),"\n{FFFFFF}请输入编号,然后点击 {00FF00}'确定':{FFFFFF}\n\n\n\t1. VIP 青铜 - {00FF00}50 人民币\n");
					strcat(sctring,str);
					format(str,sizeof(str),"{FFFFFF}\t2. VIP 白银 - {00FF00}150 人民币\n\t{FFFFFF}3. VIP 黄金 - {00FF00}300 人民币\n");
					strcat(sctring,str);
					ShowPlayerDialog(playerid,7995,DIALOG_STYLE_INPUT,"{1E90FF}捐赠菜单",sctring,"确定","退出");
	                return true;
				}
			}
		}
		case 7995:
		{
		    if(response)
	    	{
				if(!strcmp(inputtext, "1",true))
	 			{
	 			    if(PlayerInfo[playerid][pDonatemoney] < 50) return SendErrorMessage(playerid, "你没有50捐赠点");
	 			    if(PlayerInfo[playerid][pLevel] == 1 && PlayerInfo[playerid][pExp] < 3) return SendErrorMessage(playerid, " 你需要游戏3个小时才能购买VIP");
	 			    PlayerInfo[playerid][pDonateRank] = 1;
	 			    PlayerInfo[playerid][pDonatemoney] -= 50;
	 			    OnPlayerUpdateAc(playerid);
	 			    SendSyntaxMessage(playerid,"提示: {00FF00}'/viphelp'");
	 			    SendSyntaxMessage(playerid, "你购买了 VIP 青铜,花费了 {00FF00}'50' {FFFFFF}捐赠点");
				}
				if(!strcmp(inputtext, "2",true))
	 			{
	 			    if(PlayerInfo[playerid][pDonatemoney] < 150) return SendErrorMessage(playerid, "你没有150捐赠点");
	 			    if(PlayerInfo[playerid][pLevel] == 1 && PlayerInfo[playerid][pExp] < 3) return SendErrorMessage(playerid, " 你需要游戏3个小时才能购买VIP");
	 			    PlayerInfo[playerid][pDonateRank] = 2;
	 			    PlayerInfo[playerid][pDonatemoney] -= 150;
	 			    OnPlayerUpdateAc(playerid);
	 			    SendSyntaxMessage(playerid,"提示: {00FF00}'/viphelp'");
	 			    SendSyntaxMessage(playerid, "你购买了 VIP 白银,花费了 {00FF00}'150' {FFFFFF}捐赠点");
				}
				if(!strcmp(inputtext, "3",true))
	 			{
	 			    if(PlayerInfo[playerid][pDonatemoney] < 300) return SendErrorMessage(playerid, "你没有300捐赠点");
	 			    if(PlayerInfo[playerid][pLevel] == 1 && PlayerInfo[playerid][pExp] < 3) return SendErrorMessage(playerid, " 你需要游戏3个小时才能购买VIP");
	 			    PlayerInfo[playerid][pDonateRank] = 3;
	 			    PlayerInfo[playerid][pDonatemoney] -= 300;
	 			    OnPlayerUpdateAc(playerid);
	 			    SendSyntaxMessage(playerid,"提示: {00FF00}'/viphelp'");
	 			    SendSyntaxMessage(playerid, "你购买了 VIP 黄金,花费了 {00FF00}'300' {FFFFFF}捐赠点");
				}
			}
		}
		case 7997:
		{
		    if(response)
	    	{
				if(!strlen(inputtext))
				{
					ShowPlayerDialog(playerid,7997,DIALOG_STYLE_INPUT,"{1E90FF}捐赠菜单","{ffffff}输入车辆ID,然后点击 {00FF00}'确定'\n","确定","退出");
				}
				new car = strval(inputtext);
				if(car < 400 || car > 600)
				{
					SendErrorMessage(playerid, "车辆ID限制 400 - 600");
					ShowPlayerDialog(playerid,7997,DIALOG_STYLE_INPUT,"{1E90FF}捐赠菜单","{ffffff}输入车辆ID,然后点击 {00FF00}'确定'\n","确定","退出");
					return true;
				}
				if(car == 425 || car == 447 || car == 406 || car == 476 || car == 512 || car == 432 || car == 519 || car == 548 || car == 553 || car == 486 || car == 564 || car == 520 || car == 577 || car == 584 || car == 590 || car == 591 || car == 592 || car == 594)
				{
					SendErrorMessage(playerid, "此车辆被服务器拒绝购买");
					ShowPlayerDialog(playerid,7997,DIALOG_STYLE_INPUT,"{1E90FF}购买车辆","{ffffff}输入车辆ID,然后点击 {00FF00}'确定'\n","确定","退出");
					return true;
				}
				if(PlayerInfo[playerid][pRub] < 50) return SendErrorMessage(playerid, "你没有足够的人民币");
				PlayerInfo[playerid][pCar] = car;
				PlayerInfo[playerid][pRub] -= 50;
				PlayerInfo[playerid][pProcents] = 100;
				if(caridhouse[playerid] != -1)
				{
					DestroyVehicle(caridhouse[playerid]);
					caridhouse[playerid] = -1;
				}
    			SendSyntaxMessage(playerid, "你的车将停在停车场,为你的爱车找一个停车的地方 ( /park )");
				new randik = random(sizeof(gparkcar));
				PlayerInfo[playerid][dCarx] = gparkcar[randik][0];
				PlayerInfo[playerid][dCary] = gparkcar[randik][1];
				PlayerInfo[playerid][dCarz] = gparkcar[randik][2];
				PlayerInfo[playerid][dCarc] = gparkcar[randik][3];
				caridhouse[playerid] = CreateVehicle(PlayerInfo[playerid][pCar], PlayerInfo[playerid][dCarx], PlayerInfo[playerid][dCary], PlayerInfo[playerid][dCarz], PlayerInfo[playerid][dCarc] , PlayerInfo[playerid][pColor][0] ,PlayerInfo[playerid][pColor][1], 86400);
                Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelcar];
				OnPlayerUpdateAc(playerid);
				SendSyntaxMessage(playerid, "你购买了一辆车,花费了 {00FF00}'50' {FFFFFF}人民币");
				return true;
			}
		}
		case 7996:
		{
		    if(response)
	    	{
				if(!strlen(inputtext))
				{
					ShowPlayerDialog(playerid,7996,DIALOG_STYLE_INPUT,"{1E90FF}捐赠菜单","{ffffff}输入皮肤ID,然后点击 {00FF00}'确定'\n","确定","退出");
				}
				new kolvo;
				kolvo = strval(inputtext);
				if(kolvo == 74)
				{
					SendErrorMessage(playerid,"CJ皮肤不能够使用!");
					ShowPlayerDialog(playerid,7996,DIALOG_STYLE_INPUT,"{1E90FF}捐赠菜单","{ffffff}输入皮肤ID,然后点击 {00FF00}'确定'\n","确定","退出");
					return true;
				}
				if(kolvo < 1 || kolvo > 299)
				{
					SendErrorMessage(playerid, "{6A5ACD}皮肤ID限制 1 - 299");
					ShowPlayerDialog(playerid,7996,DIALOG_STYLE_INPUT,"{1E90FF}捐赠菜单","{ffffff}输入皮肤ID,然后点击 {00FF00}'确定'\n","确定","退出");
					return true;
				}
				PlayerInfo[playerid][pChar][0] = kolvo;
				SetPlayerSkin(playerid,PlayerInfo[playerid][pChar][0]);
				PlayerInfo[playerid][pDonatemoney] -= 150;
				OnPlayerUpdateAc(playerid);
				SendSyntaxMessage(playerid, "你购买了皮肤,花费了 {00FF00}'150' {FFFFFF}捐赠点");
				return true;
			}
		}
		case 22842:
        {
			if(response)
            {
                switch(listitem)
                {
                    case 0:
                    {
                        static body[1000];
                        body[0] = EOS;
                        new name[24], activation,result1[200];
                        format(YCMDstr,sizeof(YCMDstr), "SELECT * FROM `promocodes`");
                        mysql_query(YCMDstr);
                        mysql_store_result();
                        new tmp[24];
                        mysql_real_escape_string(name, tmp);
                        body = "名称\t\t激活\n";
                        for(new i=0; i<mysql_num_rows(); i++)
                        {
                            if(mysql_fetch_row_format(result1))
                            {
                                sscanf(result1,"p<|>s[24]d", name, activation);
                                format(YCMDstr, sizeof(YCMDstr), "%s\t\t%d\n", name, activation);
                                strcat(body, YCMDstr);
                            }
                        }
                        ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}促销代码清单", body, "退出", "返回");
                        mysql_free_result();
                    }
                    case 1:
                    {
                        ShowPlayerDialog(playerid, 22843, DIALOG_STYLE_INPUT, "{FFFFFF}添加促销代码", "输入促销代码名称", "提交", "返回");
                    }
                    case 2:
                    {
                        ShowPlayerDialog(playerid, 22844, DIALOG_STYLE_INPUT, "{FFFFFF}删除促销代码", "输入促销代码名称", "删除", "返回");
                    }
                }
            }
        }
	case 22843:
        {
			if(response)
            {
                new tmp[24];
                mysql_real_escape_string(inputtext, tmp);
                new sqlq[150];
                format(sqlq, sizeof(sqlq), "SELECT * FROM `promocodes` WHERE `name` = '%s'", tmp);
                mysql_query(sqlq);
                mysql_store_result();
                if(mysql_num_rows()) return SendErrorMessage(playerid, "这个促销代码已经存在.");
                static sql[1000];
                sql[0] = EOS;
                new st[100];
                if(strlen(inputtext) > 24) return SendErrorMessage(playerid, "促销代码最多24个字符!");
                format(sql, sizeof(sql), "INSERT INTO `promocodes` (`name`, `activation`) VALUES ('%s', '0')", tmp);
                mysql_query(sql);
                format(st, sizeof(st), "添加了促销代码 %s", tmp);
                SendClientMessage(playerid, 0x00FF00AA, st);
            }
        }
    case 22844:
        {
			if(response)
            {
                new tmp[24];
                mysql_real_escape_string(inputtext, tmp);
                new sqlq[150];
                format(sqlq, sizeof(sqlq), "SELECT * FROM `promocodes` WHERE `name` = '%s'", tmp);
                mysql_query(sqlq);
                mysql_store_result();
                if(!mysql_num_rows()) return SendErrorMessage(playerid, "此促销代码不存在!");
                static sql[1000];
                sql[0] = EOS;
                new st[100];
                format(sql, sizeof(sql), "DELETE FROM `promocodes` WHERE `name` = '%s'", tmp);
                mysql_query(sql);
                format(st, sizeof(st), "删除了促销代码 %s", tmp);
                SendClientMessage(playerid, 0x00FF00AA, st);
            }
        }
    case 22845:
        {
			if(response)
            {
                new tmp[24];
                mysql_real_escape_string(inputtext, tmp);
                new sqlq[150];
                format(sqlq, sizeof(sqlq), "SELECT * FROM `promocodes` WHERE `name` = '%s'", tmp);
                mysql_query(sqlq);
                mysql_store_result();
                if(!mysql_num_rows()) return SendErrorMessage(playerid, "此促销代码不存在!");
                new sql[250];
                format(sql, sizeof(sql), "SELECT `activation` FROM `promocodes` WHERE `name` = '%s'", tmp);
                mysql_query(sql);
                mysql_store_result();
                static sql2[1000];
                sql2[0] = EOS;
                format(sql2, sizeof(sql2), "UPDATE `promocodes` SET `activation` = `activation` + 1 WHERE `name` = '%s'", tmp);
                mysql_query(sql2);
				SendServerMessage(playerid, "发给您的促销代码:");
				SendServerMessage(playerid, "100.000$ / 所有技能 100 % / +1 游戏等级 / 100 捐赠点 / 文凭.");
                PlayerInfo[playerid][pGunSkill][0] = 1000;
		   		PlayerInfo[playerid][pGunSkill][1] = 1000;
		   		PlayerInfo[playerid][pGunSkill][2] = 1000;
		   		PlayerInfo[playerid][pGunSkill][3] = 1000;
		   		PlayerInfo[playerid][pGunSkill][4] = 1000;
		   		PlayerInfo[playerid][pGunSkill][5] = 1000;
				PlayerInfo[playerid][pCash] += 100000;
				PlayerInfo[playerid][pLevel] += 1;
				PlayerInfo[playerid][pDonatemoney] += 100;
                PlayerInfo[playerid][Promo] = 1;
				PlayerInfo[playerid][pDiplom] = 1;
				DollahScoreUpdate(playerid);
            }
        }
		case 7999:
		{
	    	if(response)
	    	{
	    		if(!strcmp(inputtext, "1",true))
	    		{
	    		    new str[300],sctring[1000];
			     	format(str,sizeof(str),"\n{FFFFFF}输入所需操作的编号，然后按 {00FF00}'确定':\n\n\n");
			     	strcat(sctring,str);
			     	format(str,sizeof(str),"\t{CD5C5C}1. {DEB887}清除警告 - {FFB90F}50 捐赠点\n\t{CD5C5C}2. {DEB887}获得 25 合法点 - {FFB90F}10 捐赠点\n");
			     	strcat(sctring,str);
			     	format(str,sizeof(str),"\t{CD5C5C}3. {DEB887}消除毒瘾 - {FFB90F}20 捐赠点\n\t{CD5C5C}4. {DEB887}购买 5000 材料 - {FFB90F}90 捐赠点 \n");
			     	strcat(sctring,str);
			     	format(str,sizeof(str),"\t{CD5C5C}5. {DEB887}退出组织 - {FFB90F}10 捐赠点\n\t{CD5C5C}6. {DEB887}所有武器技能达到 100 - {FFB90F}25 捐赠点\n");
	    	 		strcat(sctring,str);
			     	format(str,sizeof(str),"\t{CD5C5C}7. {DEB887}增加 1000 毒瘾 - {FFB90F}10 捐赠点\n\t{CD5C5C}8. {DEB887}消除一个通缉 - {FFB90F}5 捐赠点\n");
			     	strcat(sctring,str);
			     	format(str,sizeof(str),"\t{CD5C5C}9. {DEB887}购买任何皮肤 - {FFB90F}10 捐赠点\n");
			     	strcat(sctring,str);
			     	format(str,sizeof(str),"\t{CD5C5C}10. {DEB887}购买 VIP\n\t");
			     	strcat(sctring,str);
			     	ShowPlayerDialog(playerid,7998,DIALOG_STYLE_INPUT,"{1E90FF}捐赠菜单",sctring,"确定","退出");
	                return true;
				}
				if(!strcmp(inputtext, "2",true))
				{
	                format(YCMDstr,sizeof(YCMDstr),"比例: 1捐赠点/1.000$\n在您的帐户中: %d 捐赠点\n{8B658B}请输入兑换数量\n",PlayerInfo[playerid][pDonatemoney]);
				    ShowPlayerDialog(playerid, 22810, DIALOG_STYLE_INPUT, "{1E90FF}兑换游戏币", YCMDstr, "确定.", "退出");
				}
  			}
		}
    case 22810:
		{
		    if(response)
			{
				new amount = strval(inputtext);
				if(amount < 1 || amount > 50000)
				{
                    format(string,sizeof(string),"比例: 1捐赠点/1.000$\n在您的账户中: %d 捐赠点\n{8B658B}请输入兑换数量\n{FF0000}金额限制 1 - 50000!\n",PlayerInfo[playerid][pDonatemoney]);
					ShowPlayerDialog(playerid, 22810, DIALOG_STYLE_INPUT, "{1E90FF}兑换游戏币", string, "确定.", "退出");
					return 0;
				}
				new price = amount*1000;
				if(PlayerInfo[playerid][pDonatemoney] < amount)
				{
                    format(string,sizeof(string),"比例: 1捐赠点/1.000$\n在您的账户中: %d 捐赠点\n{8B658B}请输入兑换数量\n{FF0000}你没有那么多捐赠点!\n",PlayerInfo[playerid][pDonatemoney]);
					ShowPlayerDialog(playerid, 22810, DIALOG_STYLE_INPUT, "{1E90FF}兑换游戏币", string, "确定.", "退出");
					return 0;
				}
				PlayerInfo[playerid][pCash] += price;
				PlayerInfo[playerid][pDonatemoney] -= amount;
				OnPlayerUpdateAc(playerid);
				format(string, sizeof(string), "― 你成功用 {ccff00}%d 捐赠点兑换了{ccff00}%d $",amount, price);
				SendClientMessage(playerid, COLOR_TEAL, string);
			}
			return 1;
		}
	case 3725:
		{
			if(response)
			{
				if(listitem == 0)
				{
					for(new h = 1; h <= TotalHouse; h++)
					{
						if(HouseInfo[h][hOwned] == 1)
						{
							HouseInfo[h][hOwned] = 0;
							SendServerMessage(playerid, "所有房屋都卖了");
							strmid(HouseInfo[h][hOwner], "The State", 0, strlen("The State"), 255);
							foreach(Player,i)
                            {
					            if(PlayerInfo[i][pPhousekey2] == h)
					            {
						            new name[64];
						            PlayerInfo[i][pPhousekey2] = 799;
						            GetPlayerName(i,name,sizeof(name));
					                SendServerMessage(i, "你租的房屋被业主出售给了国家.");
						            format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pPhousekey2 = '799' WHERE Name = '%s'",name);
                                }
	                        }
							BuyHouse(h);
							format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pPhousekey = '799'");
							mysql_query(YCMDstr);
							SaveProperty(h);
						}
					}
					return true;
				}
				else if(listitem == 1)
				{
					ShowPlayerDialog(playerid, 2725, DIALOG_STYLE_LIST, "{1E90FF}选择一个内饰", " [1] 木制风格\n [2] 大理石材质\n [3] 宫殿\n [4] 正常风格\n [5] 普通木材质\n [6] 普通风格[2]\n [7] 桃花心木\n [8] 普通风格[3]\n [9] 便宜的款式", "选择", "关闭");
					return true;
				}
				else if(listitem == 2)
				{
					ShowPlayerDialog(playerid, 15624, DIALOG_STYLE_LIST, "{1E90FF}选择一个内饰", " [1] C级内饰\n [2] A级内饰\n [3] S级内饰\n [4] D级内饰\n [5] D级内饰\n [6] N级内饰\n [7] S级内饰\n [8] D级内饰\n [9] D级内饰\n [10] D级内饰\n [11] A级内饰\n [12] N级内饰\n[A] 疯狗别墅内饰", "选择", "关闭");
					return true;
				}

			}
			return true;
		}
	case 2725:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:	ShowPlayerDialog(playerid, 2726, DIALOG_STYLE_INPUT, "{1E90FF}木制风格", "输入房屋ID", "确定", "退出");
				case 1:	ShowPlayerDialog(playerid, 2727, DIALOG_STYLE_INPUT, "{1E90FF}大理石材质", "输入房屋ID", "确定", "退出");
				case 2: ShowPlayerDialog(playerid, 2728, DIALOG_STYLE_INPUT, "{1E90FF}宫殿", "输入房屋ID", "确定", "退出");
				case 3:	ShowPlayerDialog(playerid, 2729, DIALOG_STYLE_INPUT, "{1E90FF}正常风格", "输入房屋ID", "确定", "退出");
				case 4:	ShowPlayerDialog(playerid, 2730, DIALOG_STYLE_INPUT, "{1E90FF}普通木材质", "输入房屋ID", "确定", "退出");
				case 5: ShowPlayerDialog(playerid, 2731, DIALOG_STYLE_INPUT, "{1E90FF}普通风格[2]", "输入房屋ID", "确定", "退出");
				case 6:	ShowPlayerDialog(playerid, 2732, DIALOG_STYLE_INPUT, "{1E90FF}桃花心木", "输入房屋ID", "确定", "退出");
				case 7: ShowPlayerDialog(playerid, 2733, DIALOG_STYLE_INPUT, "{1E90FF}普通风格[3]", "输入房屋ID", "确定", "退出");
				case 8: ShowPlayerDialog(playerid, 2734, DIALOG_STYLE_INPUT, "{1E90FF}便宜的款式", "输入房屋ID", "确定", "退出");
				}
			}
			else
			{
				return true;
			}
		}
	case 15624:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: ShowPlayerDialog(playerid, 2735, DIALOG_STYLE_INPUT, "{1E90FF}C级内饰", "输入房屋ID", "确定", "退出");
				case 1: ShowPlayerDialog(playerid, 2736, DIALOG_STYLE_INPUT, "{1E90FF}A级内饰", "输入房屋ID", "确定", "退出");
				case 2: ShowPlayerDialog(playerid, 2737, DIALOG_STYLE_INPUT, "{1E90FF}S级内饰", "输入房屋ID", "确定", "退出");
				case 3: ShowPlayerDialog(playerid, 2738, DIALOG_STYLE_INPUT, "{1E90FF}D级内饰", "输入房屋ID", "确定", "退出");
				case 4: ShowPlayerDialog(playerid, 2739, DIALOG_STYLE_INPUT, "{1E90FF}D级内饰", "输入房屋ID", "确定", "退出");
				case 5: ShowPlayerDialog(playerid, 2740, DIALOG_STYLE_INPUT, "{1E90FF}N级内饰", "输入房屋ID", "确定", "退出");
				case 6: ShowPlayerDialog(playerid, 2741, DIALOG_STYLE_INPUT, "{1E90FF}S级内饰", "输入房屋ID", "确定", "退出");
				case 7: ShowPlayerDialog(playerid, 2742, DIALOG_STYLE_INPUT, "{1E90FF}D级内饰", "输入房屋ID", "确定", "退出");
				case 8: ShowPlayerDialog(playerid, 2743, DIALOG_STYLE_INPUT, "{1E90FF}D级内饰", "输入房屋ID", "确定", "退出");
				case 9: ShowPlayerDialog(playerid, 2744, DIALOG_STYLE_INPUT, "{1E90FF}D级内饰", "输入房屋ID", "确定", "退出");
				case 10: ShowPlayerDialog(playerid, 2745, DIALOG_STYLE_INPUT, "{1E90FF}A级内饰", "输入房屋ID", "确定", "退出");
				case 11: ShowPlayerDialog(playerid, 2746, DIALOG_STYLE_INPUT, "{1E90FF}N级内饰", "输入房屋ID", "确定", "退出");
				case 12: ShowPlayerDialog(playerid, 2747, DIALOG_STYLE_INPUT, "{1E90FF}疯狗的别墅内饰", "输入房屋ID", "确定", "退出");
				}
			}
			else
			{
				return true;
			}
		}
	case 2726:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 4;
				HouseInfo[house][hExitx] = -261.9759;
				HouseInfo[house][hExity] = 1456.8844;
				HouseInfo[house][hExitz] = 1084.3672;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
	case 2727:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 6;
				HouseInfo[house][hExitx] = 234.1571;
				HouseInfo[house][hExity] = 1064.9569;
				HouseInfo[house][hExitz] = 1084.2104;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
	case 2728:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 5;
				HouseInfo[house][hExitx] = 140.9131;
				HouseInfo[house][hExity] = 1367.9713;
				HouseInfo[house][hExitz] = 1083.8621;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
	case 2729:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 5;
				HouseInfo[house][hExitx] = 22.7783;
				HouseInfo[house][hExity] = 1404.9600;
				HouseInfo[house][hExitz] = 1084.4297;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
	case 2730:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 10;
				HouseInfo[house][hExitx] = 23.8334;
				HouseInfo[house][hExity] = 1340.4812;
				HouseInfo[house][hExitz] = 1084.3750;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
	case 2731:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 4;
				HouseInfo[house][hExitx] = 261.0654;
				HouseInfo[house][hExity] = 1284.2991;
				HouseInfo[house][hExitz] = 1080.2578;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
	case 2732:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 2;
				HouseInfo[house][hExitx] = 491.0190;
				HouseInfo[house][hExity] = 1399.0691;
				HouseInfo[house][hExitz] = 1080.2578;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
	case 2733:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 2;
				HouseInfo[house][hExitx] = 225.9761;
				HouseInfo[house][hExity] = 1239.9126;
				HouseInfo[house][hExitz] = 1082.1406;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
	case 2734:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 10;
				HouseInfo[house][hExitx] = 2261.3103;
				HouseInfo[house][hExity] = -1136.4467;
				HouseInfo[house][hExitz] = 1050.6328;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
	case 2735:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 5;
				HouseInfo[house][hExitx] = 22.7405;
				HouseInfo[house][hExity] = 1404.3799;
				HouseInfo[house][hExitz] = 1084.4297;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
	case 2736:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 5;
				HouseInfo[house][hExitx] = 140.2206;
				HouseInfo[house][hExity] = 1367.2734;
				HouseInfo[house][hExitz] = 1083.8612;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
	case 2737:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 6;
				HouseInfo[house][hExitx] = 234.1562;
				HouseInfo[house][hExity] = 1064.9047;
				HouseInfo[house][hExitz] = 1084.2106;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
	case 2738:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 6;
				HouseInfo[house][hExitx] = -68.8618;
				HouseInfo[house][hExity] = 1352.2183;
				HouseInfo[house][hExitz] = 1080.2109;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
	case 2739:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 8;
				HouseInfo[house][hExitx] = -42.6081;
				HouseInfo[house][hExity] = 1406.5001;
				HouseInfo[house][hExitz] = 1084.4297;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
	case 2740:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 6;
			    HouseInfo[house][hExitx] = 344.7035;
				HouseInfo[house][hExity] = 304.9266;
				HouseInfo[house][hExitz] = 999.1484;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
	case 2741:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 5;
				HouseInfo[house][hExitx] = 1298.9363;
				HouseInfo[house][hExity] = -795.4872;
				HouseInfo[house][hExitz] = 1084.0078;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
	case 2742:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 2;
				HouseInfo[house][hExitx] = 2467.7708;
				HouseInfo[house][hExity] = -1698.2811;
				HouseInfo[house][hExitz] = 1013.5078;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
	case 2743:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 8;
				HouseInfo[house][hExitx] = 2807.6252;
				HouseInfo[house][hExity] = -1173.2600;
				HouseInfo[house][hExitz] = 1025.5703;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
	case 2744:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 5;
				HouseInfo[house][hExitx] = 318.6064;
				HouseInfo[house][hExity] = 1115.7708;
				HouseInfo[house][hExitz] = 1083.8828;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
	case 2745:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 12;
				HouseInfo[house][hExitx] = 2324.3367;
				HouseInfo[house][hExity] = -1148.6296;
				HouseInfo[house][hExitz] = 1050.7101;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
	case 2746:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 10;
				HouseInfo[house][hExitx] = 421.7613;
				HouseInfo[house][hExity] = 2536.4836;
				HouseInfo[house][hExitz] = 10.0000;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
		case 2747:
		{
			if(response)
			{
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 5;
				HouseInfo[house][hExitx] = 1299.14;
				HouseInfo[house][hExity] = -794.77;
				HouseInfo[house][hExitz] = 1084.00;
				SendServerMessage(playerid, "房子的内饰改变了");
			}
			return true;
		}
	case 2091:
		{
			if(!response) return true;
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 2091, DIALOG_STYLE_INPUT, "{1E90FF}密码", "{ffffff}请输入一个复杂的密码:", "确定", "退出");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 15) return ShowPlayerDialog(playerid, 2091, DIALOG_STYLE_MSGBOX, "{1E90FF}信息", "{FF6347}密码长度必须介于6到15个字符之间", "关闭", "");
			for(new i = strlen(inputtext); i != 0; --i)
			switch(inputtext[i])
			{
			case '#', ' ': return ShowPlayerDialog(playerid, 2091, DIALOG_STYLE_MSGBOX, "{1E90FF}消息", "{00FF21}您输入的密码包含非法字符.\n 重新输入一个复杂的密码!", "关闭", "");
			}
			new s_string[128];
            format(s_string, sizeof(s_string), "%s", inputtext);
            PlayerTextDrawSetString(playerid, RegName[playerid][0], s_string);
			SendSyntaxMessage(playerid, "您输入了密码!");
			strmid(reg_pass[playerid], inputtext, 0, strlen(inputtext), 48);
			SetPVarInt(playerid, "SelectRegPass", 1);
		}
	case 8462:
		{
			if(response)
			{
				for(new i = 1; i <= TotalHouse; i++)
				{
					if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
					{
						if(PlayerInfo[playerid][pPhousekey] == i || PlayerInfo[playerid][pPhousekey2] == i || HouseInfo[i][hLock] == 0)
						{
							SetPlayerInterior(playerid,HouseInfo[i][hInt]);
							SetPlayerVirtualWorld(playerid,i+50);
							Q_SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
							PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
							PlayerInfo[playerid][pLocal] = i;
							return true;
						}
						else
						{
							GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 20012:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						callcmd::ahelp(playerid,"");
					}
				case 1:
					{
						ShowPlayerDialog(playerid,1116,DIALOG_STYLE_LIST,"{1E90FF}娱乐","1.开始团队战斗","选择","返回");
					}
				case 2:
					{
						ShowPlayerDialog(playerid,4385,DIALOG_STYLE_LIST, "{1E90FF}天气表", "{FFFFFF}[1]- 晴朗的天气\n[2]- 天气很晴朗\n[3]- 雷暴\n[4]- 阴和雾\n[5]- 阴沉而多雨\n[6]- 沙暴 \n[7]- 有雾和绿色\n[8]- 淡橙色\n[9]- 新鲜的蓝颜色 \n[10]- 有雾和灰色 \n[11]- 深棕色 \n[12]- 粉红色的天空", "选择", "退出");
					}
				case 3:
					{
						callcmd::atune(playerid,"");
					}
				case 4:
					{
						new playersip[32];
						new stringus[128];
						new countmute = 0;
						foreach(new i : Player)
						{
							GetPlayerIp(i,playersip,sizeof(playersip));
							if(!strcmp(playersip, playersip) && strcmp(playersip,"255.255.255.255",false) != 0)
							{
								new num_players_on_ip = GetNumberThisIP(playersip);
								if(num_players_on_ip > 1)
								{
									format(stringus, 256, "― [%i] %s | IP %s", i,Name(i),playersip);
									SendClientMessage(playerid, -1, stringus);
									countmute++;
								}
							}
						}
						format(string, sizeof(string), "― {FFA500}[IP 城域网]{FFFFFF} 目前与相同的IP玩家: {FFA500}%i!", countmute);
						SendClientMessage(playerid, -1, string);
					}
				case 5:
					{
						callcmd::warnmans(playerid,"");
					}
				case 6:
					{
						callcmd::mutelist(playerid,"");
					}
				case 7:
					{
      					callcmd::vipmans(playerid,"");
					}
				case 8:
					{
						if(Rucovod(playerid)) return ShowPlayerDialog(playerid, 22842, DIALOG_STYLE_LIST, "{6ab6df}促销代码", "1. 促销代码清单\n2. 添加促销代码\n3. 删除促销代码", "选择", "返回");
    					/*{
							ShowPlayerDialog(playerid, 22842, DIALOG_STYLE_LIST, "{6ab6df}促销代码", "1. 促销代码清单\n2. 添加促销代码\n3. 删除促销代码", "选择", "返回");
						}*/
					}
				}
			}
		}
    case 1116:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
				    if(DeathmatchONRound == 1) return SendErrorMessage(playerid,"战斗已经开始!");
	                StartDeathmatchRound();
				}
			}
			return true;
		}
	case 4385:
		{
			if(response)
			{
				if(listitem == 0)
				{
					SetWeather(2);
					SendSyntaxMessage(playerid, "天气变了!");
				}
				else if(listitem == 1)
				{
					SetWeather(11);
					SendSyntaxMessage(playerid, "天气变了!");
				}
				else if(listitem == 2)
				{
					SetWeather(8);
					SendSyntaxMessage(playerid, "天气变了!");
				}
				else if(listitem == 3)
				{
					SetWeather(9);
					SendSyntaxMessage(playerid, "天气变了!");
				}
				else if(listitem == 4)
				{
					SetWeather(14);
					SendSyntaxMessage(playerid, "天气变了!");
				}
				else if(listitem == 5)
				{
					SetWeather(19);
					SendSyntaxMessage(playerid, "天气变了!");
				}
				else if(listitem == 6)
				{
					SetWeather(20);
					SendSyntaxMessage(playerid, "天气变了!");
				}
				else if(listitem == 7)
				{
					SetWeather(23);
					SendSyntaxMessage(playerid, "天气变了!");
				}
				else if(listitem == 8)
				{
					SetWeather(27);
					SendSyntaxMessage(playerid, "天气变了!");
				}
				else if(listitem == 9)
				{
					SetWeather(30);
					SendSyntaxMessage(playerid, "天气变了!");
				}
				else if(listitem == 10)
				{
					SetWeather(33);
					SendSyntaxMessage(playerid, "天气变了!");
				}
				else if(listitem == 11)
				{
					SetWeather(34);
					SendSyntaxMessage(playerid, "天气变了!");
				}
			}
			else
			{
				return true;
			}
		}
	case 20011:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if(PlayerInfo[playerid][pAdministration228] >= 1)
						{
							ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}管理员指令", "{FFFFFF}/astats /tp /mark /gotomark /prison /a /mute /mutelist\n/pm /wp /re /alogin /hp /geton /gm /request", "关闭", "");
						}
					}
				case 1:
					{
						if(PlayerInfo[playerid][pAdministration228] >= 2)
						{
							ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}管理员指令", "{FFFFFF}/sethp /kick /ainvite /ftp /gg /getstats /g /skin /alock /gethere\n/sp /unprison ", "关闭", "");
						}
					}
				case 2:
					{
						if(PlayerInfo[playerid][pAdministration228] >= 3)
						{
							ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}管理员指令", "{FFFFFF}/demorgan  /object /awarehouse\n/forceskin /auninvite /mtp /spcar /agiverank", "关闭", "");
						}
					}
				case 3:
					{
						if(PlayerInfo[playerid][pAdministration228] >= 4)
						{
							ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}管理员指令", "{FFFFFF} /warn /timeskin /log /unbanip /agetip\n/getleader /spveh /ip /offwarn", "关闭", "");
						}
					}
				case 4:
					{
						if(PlayerInfo[playerid][pAdministration228] >= 5)
						{
							ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}管理员指令", "{FFFFFF}/veh /delveh /ban /racego /brace /paint /vipmans\n/warnmans /offban /givegun /unban", "关闭", "");
						}
					}
				case 5:
					{
						if(PlayerInfo[playerid][pAdministration228] >= 6)
						{
							ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}管理员指令", "{FFFFFF}/freazy /agl /house /setmats", "关闭", "");
						}
					}
				case 6:
					{
						if(PlayerInfo[playerid][pAdministration228] >= 7)
						{
							ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}管理员指令", "{FFFFFF}/obj /im /abalance", "关闭", "");
						}
					}
				case 7:
					{
						if(PlayerInfo[playerid][pAdministration228] >= 8)
						{
							ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}管理员指令", "{FFFFFF}/offleader /lwarn /unlwarn /ipban /gzcolor /reloadbans /fuelbanks", "关闭", "");
						}
					}
				case 8:
					{
						if(PlayerInfo[playerid][pAdministration228] >= 9)
						{
							ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}管理员指令", "{FFFFFF} /aveh /dveh /suval /makesupport /fuelcars /sban", "关闭", "");
						}
					}
				case 9:
					{
						if(PlayerInfo[playerid][pAdministration228] >= 1)
						{
							ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}组织ID", "{FFFFFF} 1-LSPD, 2-FBI, 3-监狱 SA, 4-医院, 5-LCN, 6-山口组, 7-政府, 8-大学, 9-SFPD, 11-驾驶学校.\n 12-巴拉斯, 13-瓦戈斯, 14-14K, 15-格罗夫, 16-媒体, 17-阿兹特克, 18-俄罗斯黑手党, 19-军队 SA, 20 - LVPD.", "关闭", "");
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
	case 10025:
		{
			if(response)
			{
			    new stringCMD[1600];
				switch(listitem)
				{

				case 0:
					{
						stringCMD = "\0";		strcat(stringCMD, "{66CC00}/promocode {FFFFFF}- 输入促销代码\n");
				    	strcat(stringCMD, "{66CC00}/id {FFFFFF}- 玩家搜索\n");
				    	strcat(stringCMD, "{66CC00}/time {FFFFFF}- 查看时间\n");
				    	strcat(stringCMD, "{66CC00}/quest {FFFFFF}- 任务\n");
				    	strcat(stringCMD, "{66CC00}/skill {FFFFFF}- 查看技能\n");
				    	strcat(stringCMD, "{66CC00}/setspawn {FFFFFF}- 设置出生地\n");
				    	strcat(stringCMD, "{66CC00}/smoke {FFFFFF}- 抽烟\n");
				    	strcat(stringCMD, "{66CC00}/dgun {FFFFFF}- 扔掉武器\n");
				    	strcat(stringCMD, "{66CC00}/pgun {FFFFFF}- 捡起武器\n");
				    	strcat(stringCMD, "{66CC00}/healme {FFFFFF}- 使用急救包\n");
        				strcat(stringCMD, "{66CC00}/ad {FFFFFF}- 提交广告\n");
				    	strcat(stringCMD, "{66CC00}/pay {FFFFFF}- 付钱\n");
				    	strcat(stringCMD, "{66CC00}/play {FFFFFF}- 使用 MP3\n");
				    	strcat(stringCMD, "{66CC00}/leave {FFFFFF}- 离开组织\n");
				    	strcat(stringCMD, "{66CC00}/supports {FFFFFF}- 查看在线辅导员\n");
				    	strcat(stringCMD, "{66CC00}/gps {FFFFFF}- 导航\n");
				    	strcat(stringCMD, "{66CC00}/leaders {FFFFFF}- 在线领导人\n");
				    	strcat(stringCMD, "{66CC00}/pass {FFFFFF}- 显示身份证\n");
				    	strcat(stringCMD, "{66CC00}/lic {FFFFFF}- 显示执照\n");
				    	strcat(stringCMD, "{66CC00}/showmed {FFFFFF}- 显示医疗卡\n");
				    	strcat(stringCMD, "{66CC00}/divorce {FFFFFF}- 离婚\n");
				    	strcat(stringCMD, "{66CC00}/anim {FFFFFF}- 动作列表\n");
				    	strcat(stringCMD, "{66CC00}/drugs {FFFFFF}- 使用毒品\n");
				    	strcat(stringCMD, "{66CC00}/wedding {FFFFFF}- 伸出你的手和心\n");
				    	strcat(stringCMD, "{66CC00}/dir {FFFFFF}- \n");
				    	strcat(stringCMD, "{66CC00}/number {FFFFFF}- 查看玩家手机号码\n");
				    	strcat(stringCMD, "{66CC00}/fstyle {FFFFFF}- 改变战斗风格\n");
				    	strcat(stringCMD, "{66CC00}/accept {FFFFFF}- 接受\n");
				    	strcat(stringCMD, "{66CC00}/eject {FFFFFF}- 从车里移除玩家\n");
				    	strcat(stringCMD, "{66CC00}/sellsim {FFFFFF}- 出售SIM卡\n");
				    	strcat(stringCMD, "{66CC00}/skate {FFFFFF}- 滑板\n");
				    	strcat(stringCMD, "{66CC00}/vipiska {FFFFFF}- 退房\n");
				    	strcat(stringCMD, "{66CC00}/park {FFFFFF}- 泊车\n");
				    	strcat(stringCMD, "{66CC00}/diplom {FFFFFF}- 展示文凭\n");
				    	strcat(stringCMD, "{66CC00}/serf {FFFFFF}- 冲浪\n");
				    	strcat(stringCMD, "{66CC00}/coster {FFFFFF}- 篝火\n");
						strcat(stringCMD, "{66CC00}/quitjob {FFFFFF}- 辞职");
				    	ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}主要指令", stringCMD, "关闭", "");
						return true;
					}
				case 1:
					{
						stringCMD = "\0";
				    	strcat(stringCMD, "{66CC00}/o {FFFFFF}- 全服聊天\n");
				    	strcat(stringCMD, "{66CC00}/gov {FFFFFF}- 政府公告\n");
				    	strcat(stringCMD, "{66CC00}/f {FFFFFF}- 组织聊天\n");
				    	strcat(stringCMD, "{66CC00}/fb {FFFFFF}- 组织聊天\n");
				    	strcat(stringCMD, "{66CC00}/r {FFFFFF}- 对讲机\n");
				    	strcat(stringCMD, "{66CC00}/rb {FFFFFF}- 对讲机\n");
				    	strcat(stringCMD, "{66CC00}/s {FFFFFF}- 大声喊\n");
				    	strcat(stringCMD, "{66CC00}/m {FFFFFF}- 扩音器\n");
				    	strcat(stringCMD, "{66CC00}/d {FFFFFF}- 政府聊天\n");
				    	strcat(stringCMD, "{66CC00}/w {FFFFFF}- 耳语\n");
				    	strcat(stringCMD, "{66CC00}/todo {FFFFFF}- 短语*行动\n");
				    	strcat(stringCMD, "{66CC00}/do {FFFFFF}- 环境\n");
				    	strcat(stringCMD, "{66CC00}/try {FFFFFF}- 尝试\n");
				    	strcat(stringCMD, "{66CC00}/me {FFFFFF}- 动作");
				    	ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}聊天指令", stringCMD, "关闭", "");
						return true;
					}
				case 2:
					{
						stringCMD = "\0";
						strcat(stringCMD, "{66CC00}/call {FFFFFF}- 拨打电话\n");
						strcat(stringCMD, "{66CC00}/sms {FFFFFF}- 发送短信\n");
						strcat(stringCMD, "{66CC00}/p {FFFFFF}- 接电话\n");
						strcat(stringCMD, "{66CC00}/h {FFFFFF}- 挂电话\n");
						strcat(stringCMD, "{66CC00}/togphone {FFFFFF}- 开机/关机");
						ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}手机指令", stringCMD, "关闭", "");
						return true;
					}
				case 3:
					{
					    switch(PlayerInfo[playerid][pJob])
						{
							case 2: SendSyntaxMessage(playerid,"[出租车司机]: 租出租车 ( /gps )");
			    			case 1: SendServerMessage(playerid, "[送货员]: {9ACD32}/plist");
						    case 3: SendServerMessage(playerid, "[送油司机]: {9acd32}/flist");
						    case 4: SendServerMessage(playerid, "[公交车司机]: {9acd32}/route");
						    case 5: SendServerMessage(playerid, "[矿工]: {9acd32}/start");
						    case 6: SendServerMessage(playerid, "[汽修工]: {9acd32}/refill /repair /mcontract /trailer /untrailer");
							case 7: SendServerMessage(playerid, "[卡车司机]: {9acd32}/loadgruz /tskill");
							case 8: SendServerMessage(playerid, "[偷车贼]: {9acd32}/jackcar /dropcar /askill");
							case 9: SendServerMessage(playerid, "[教练]: {9acd32}/startfight");
							case 10: SendServerMessage(playerid, "[长途巴士司机]: {9acd32}/getmrace - 要求票价 /racecash - 票价的价格 /race - 开始路线");
			    		}
						if(IsACop(playerid))
						{
        					stringCMD = "\0";
        					strcat(stringCMD, "{66CC00}/su {FFFFFF}- 通缉\n");
        					strcat(stringCMD, "{66CC00}/arrest {FFFFFF}- 监禁\n");
        					strcat(stringCMD, "{66CC00}/wanted {FFFFFF}- 通缉列表\n");
        					strcat(stringCMD, "{66CC00}/cuff {FFFFFF}- 手铐\n");
        					strcat(stringCMD, "{66CC00}/tazer {FFFFFF}- 电击枪\n");
        					strcat(stringCMD, "{66CC00}/ftazer {FFFFFF}- 电击枪\n");
        					strcat(stringCMD, "{66CC00}/fstat {FFFFFF}- 查看资料\n");
        					strcat(stringCMD, "{66CC00}/frisk {FFFFFF}- 搜身\n");
        					strcat(stringCMD, "{66CC00}/take {FFFFFF}- 没收\n");
        					strcat(stringCMD, "{66CC00}/spikes {FFFFFF}- 地上钉刺\n");
        					strcat(stringCMD, "{66CC00}/find {FFFFFF}- 找人\n");
        					strcat(stringCMD, "{66CC00}/ram {FFFFFF}- 破门而入\n");
        					strcat(stringCMD, "{66CC00}/warehouse {FFFFFF}- 仓库状态\n");
        					strcat(stringCMD, "{66CC00}/ticket {FFFFFF}- 罚单\n");
        					strcat(stringCMD, "{66CC00}/givecopkeys {FFFFFF}- 给钥匙ч\n");
        					strcat(stringCMD, "{66CC00}/mdc {FFFFFF}- MDC数据库\n");
        					strcat(stringCMD, "{66CC00}/cput {FFFFFF}- 扣押车辆\n");
        					strcat(stringCMD, "{66CC00}/ceject {FFFFFF}- 从车内移除\n");
        					strcat(stringCMD, "{66CC00}/showudost {FFFFFF}- 出示证件\n");
        					strcat(stringCMD, "{66CC00}/pull {FFFFFF}- 拖车\n");
        					strcat(stringCMD, "{66CC00}/radar {FFFFFF}- 安装雷达");
        					ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}FBI/警察", stringCMD, "关闭", "");
						}
						else if(IsAArm(playerid))
						{
							stringCMD = "\0";
							strcat(stringCMD, "{66CC00}/fstat {FFFFFF}- 查看资料\n");
							strcat(stringCMD, "{66CC00}/caska {FFFFFF}- 戴上头盔\n");
							strcat(stringCMD, "{66CC00}/caskaoff {FFFFFF}- 取下头盔\n");
							strcat(stringCMD, "{66CC00}/gov {FFFFFF}- 政府频道\n");
							strcat(stringCMD, "{66CC00}/warehouse {FFFFFF}- 仓库状态\n");
							strcat(stringCMD, "{66CC00}/members {FFFFFF}- 在线成员\n");
							strcat(stringCMD, "{66CC00}/carm {FFFFFF}- 装载材料\n");
							strcat(stringCMD, "{66CC00}/camera {FFFFFF}- 相机\n");
							strcat(stringCMD, "{66CC00}/cameraoff {FFFFFF}- 关闭相机");
							ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}军队/监狱", stringCMD, "关闭", "");
							return true;
						}
						else if(PlayerInfo[playerid][pMember] == 2)
						{
                            stringCMD = "\0";
                            strcat(stringCMD, "{66CC00}/demote {FFFFFF}- 踢出一名人员\n");
                            strcat(stringCMD, "{66CC00}/tazerall {FFFFFF}- 电击枪\n");
                            strcat(stringCMD, "{66CC00}/find {FFFFFF}- 找人\n");
                            strcat(stringCMD, "{66CC00}/fstat {FFFFFF}- 查看资料");
							ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}FBI", stringCMD, "关闭", "");
						}
						else if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 33 || PlayerInfo[playerid][pLeader] == 33)
						{
                            stringCMD = "\0";
                            strcat(stringCMD, "{66CC00}/fstat {FFFFFF}- 查看资料\n");
                            strcat(stringCMD, "{66CC00}/heal {FFFFFF}- 治疗\n");
                            strcat(stringCMD, "{66CC00}/gov {FFFFFF}- 政府频道\n");
                            strcat(stringCMD, "{66CC00}/sethealcost {FFFFFF}- 设定治疗价格\n");
                            strcat(stringCMD, "{66CC00}/healaddict {FFFFFF}- 举行会议");
							ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}医院", stringCMD, "关闭", "");
						}
						else if(IsAMafia(playerid))
						{
                            stringCMD = "\0";
                            strcat(stringCMD, "{66CC00}/fstat {FFFFFF}- 查看资料\n");
                            strcat(stringCMD, "{66CC00}/mask {FFFFFF}- 面具\n");
                            strcat(stringCMD, "{66CC00}/bizlist {FFFFFF}- 产业列表\n");
                            strcat(stringCMD, "{66CC00}/setdebt {FFFFFF}- 提供屋顶\n");
                            strcat(stringCMD, "{66CC00}/mydebts {FFFFFF}- 屋顶\n");
                            strcat(stringCMD, "{66CC00}/warehouse {FFFFFF}- 仓库状态\n");
                            strcat(stringCMD, "{66CC00}/getgun {FFFFFF}- 从仓库拿武器\n");
                            strcat(stringCMD, "{66CC00}/debtors {FFFFFF}- 被保护人\n");
                            strcat(stringCMD, "{66CC00}/tie {FFFFFF}- 捆绑\n");
                            strcat(stringCMD, "{66CC00}/untie {FFFFFF}- 解绑\n");
                            strcat(stringCMD, "{66CC00}/mafiabank {FFFFFF}- 存款\n");
                            strcat(stringCMD, "{66CC00}/mafiawithdraw {FFFFFF}- 提款\n");
                            strcat(stringCMD, "{66CC00}/mafiabalance {FFFFFF}- 查看余额\n");
                            strcat(stringCMD, "{66CC00}/materials buy {FFFFFF}- 材料购买\n");
                            strcat(stringCMD, "{66CC00}/mafiawar {FFFFFF}- 开始产业战争\n");
                            strcat(stringCMD, "{66CC00}/materials put {FFFFFF}- 放入材料\n");
                            strcat(stringCMD, "{66CC00}/changeskin {FFFFFF}- 修改皮肤\n");
                            strcat(stringCMD, "{66CC00}/close {FFFFFF}- 打开或者关闭仓库\n");
                            strcat(stringCMD, "{66CC00}/input {FFFFFF}- 提出来放到后备箱\n");
                            strcat(stringCMD, "{66CC00}/unput {FFFFFF}- 从后备箱里拿出\n");
                            strcat(stringCMD, "{66CC00}/place {FFFFFF}- 租一张床\n");
                            strcat(stringCMD, "{66CC00}/makegun {FFFFFF}- 制作武器\n");
							ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}黑手党", stringCMD, "关闭", "");
						}
						else if (PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
						{
                            stringCMD = "\0";
                            strcat(stringCMD, "{66CC00}/r {FFFFFF}- 对讲机\n");
                            strcat(stringCMD, "{66CC00}/rb {FFFFFF}- 对讲机\n");
                            strcat(stringCMD, "{66CC00}/free {FFFFFF}- 律师\n");
                            strcat(stringCMD, "{66CC00}/fstat {FFFFFF}- 查看资料\n");
                            strcat(stringCMD, "{66CC00}/economy {FFFFFF}- 经济管理\n");
                            strcat(stringCMD, "{66CC00}/tazer {FFFFFF}- 电击枪\n");
                            strcat(stringCMD, "{66CC00}/demote {FFFFFF}- 踢出一名人员\n");
                            strcat(stringCMD, "{66CC00}/changeskin {FFFFFF}- 修改皮肤");
							ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}政府", stringCMD, "关闭", "");
						}
						else if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
						{
                            stringCMD = "\0";
                            strcat(stringCMD, "{66CC00}/news {FFFFFF}- 发送新闻\n");
                            strcat(stringCMD, "{66CC00}/fstat {FFFFFF}- 查看资料\n");
                            strcat(stringCMD, "{66CC00}/l {FFFFFF}- 直播\n");
                            strcat(stringCMD, "{66CC00}/newsbank {FFFFFF}- 账户状态\n");
                            strcat(stringCMD, "{66CC00}/newswithdraw {FFFFFF}- 提款\n");
                            strcat(stringCMD, "{66CC00}/lyes {FFFFFF}- 接电话\n");
                            strcat(stringCMD, "{66CC00}/n {FFFFFF}- 菜单\n");
                            strcat(stringCMD, "{66CC00}/editad {FFFFFF}- 编辑菜单\n");
                            strcat(stringCMD, "{66CC00}/loff {FFFFFF}- 关闭直播");
							ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}大众传媒", stringCMD, "关闭", "");
						}
						else if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
						{
                            stringCMD = "\0";
                            strcat(stringCMD, "{66CC00}/take {FFFFFF}- 没收\n");
                            strcat(stringCMD, "{66CC00}/duty {FFFFFF}- 上班\n");
                            strcat(stringCMD, "{66CC00}/fstat {FFFFFF}- 查看资料\n");
                            strcat(stringCMD, "{66CC00}TAB {FFFFFF}- 单击玩家可颁发执照");
       						ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}驾驶学校", stringCMD, "关闭", "");
						}
						else if(IsAuniver(playerid))
						{
						    stringCMD = "\0";
						    strcat(stringCMD, "{66CC00}/f {FFFFFF}- 组织聊天频道\n");
						    strcat(stringCMD, "{66CC00}/fb {FFFFFF}- 组织聊天频道\n");
						    strcat(stringCMD, "{66CC00}/fstat {FFFFFF}- 查看资料\n");
						    strcat(stringCMD, "{66CC00}/givediplom {FFFFFF}- 给文凭");
						    ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}大学", stringCMD, "关闭", "");
						}
						else if(IsAGang(playerid))
						{
                            stringCMD = "\0";
                            strcat(stringCMD, "{66CC00}/f {FFFFFF}- 组织聊天频道\n");
                            strcat(stringCMD, "{66CC00}/fb {FFFFFF}- 组织聊天频道\n");
                            strcat(stringCMD, "{66CC00}/makegun {FFFFFF}- 制作武器\n");
                            strcat(stringCMD, "{66CC00}/selldrugs {FFFFFF}- 出售毒品\n");
                            strcat(stringCMD, "{66CC00}/capture {FFFFFF}- 抢夺地盘\n");
                            strcat(stringCMD, "{66CC00}/gtemp {FFFFFF}- 地盘ID\n");
                            strcat(stringCMD, "{66CC00}/unloading {FFFFFF}- 卸下材料\n");
                            strcat(stringCMD, "{66CC00}/get guns {FFFFFF}- 从仓库拿武器\n");
                            strcat(stringCMD, "{66CC00}/escape {FFFFFF}- 用钥匙\n");
                            strcat(stringCMD, "{66CC00}/getekey {FFFFFF}- 钥匙ID\n");
                            strcat(stringCMD, "{66CC00}/fstat {FFFFFF}- 查看资料\n");
                            strcat(stringCMD, "{66CC00}/gbank {FFFFFF}- 查看余额\n");
                            strcat(stringCMD, "{66CC00}/gbankput {FFFFFF}- 存款\n");
                            strcat(stringCMD, "{66CC00}/gbankwithdraw {FFFFFF}- 提款\n");
                            strcat(stringCMD, "{66CC00}/robhouse {FFFFFF}- 抢劫房屋\n");
                            strcat(stringCMD, "{66CC00}/mask {FFFFFF}- 面具\n");
                            strcat(stringCMD, "{66CC00}/materials put {FFFFFF}- 放入材料到仓库\n");
                            strcat(stringCMD, "{66CC00}/close {FFFFFF}- 打开或关闭仓库\n");
                            strcat(stringCMD, "{66CC00}/lowrider {FFFFFF}- 掠夺者之战");
							ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}帮派", stringCMD, "关闭", "");
						}
					}
				case 4:
					{
						if (PlayerInfo[playerid][pLeader] >= 1)
						{
							stringCMD = "\0";
							strcat(stringCMD, "{66CC00}/mvig {FFFFFF}- 发出谴责\n");
							strcat(stringCMD, "{66CC00}/munvig {FFFFFF}- 除去谴责\n");
							strcat(stringCMD, "{66CC00}/invite {FFFFFF}- 邀请\n");
							strcat(stringCMD, "{66CC00}/uninvite {FFFFFF}- 踢出\n");
							strcat(stringCMD, "{66CC00}/giverank {FFFFFF}- 设置阶级\n");
							strcat(stringCMD, "{66CC00}/lpanel {FFFFFF}- 领导人版面\n");
							strcat(stringCMD, "{66CC00}/fstat {FFFFFF}- 查看资料\n");
							strcat(stringCMD, "{66CC00}/changeskin {FFFFFF}- 修改皮肤");
							ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}领导人", stringCMD, "关闭", "");
						}
						else
						{
							SendErrorMessage(playerid, "仅适用于组织领导者!");
						}
					}
				case 5:
					{
						stringCMD = "\0";
						strcat(stringCMD, "{66CC00}/hpanel {FFFFFF}- 房屋版面\n");
						strcat(stringCMD, "{66CC00}/buyhouse {FFFFFF}- 购买房屋\n");
						strcat(stringCMD, "{66CC00}/exit 或者 ALT {FFFFFF}- 离开房屋\n");
						strcat(stringCMD, "{66CC00}/healme {FFFFFF}- 治愈自己\n");
						strcat(stringCMD, "{66CC00}/sellyourhome {FFFFFF}- 出售房屋");
						ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}房屋", stringCMD, "关闭", "");
					}
					case 6:
					{
						stringCMD = "\0";
						strcat(stringCMD, "{66CC00}/bpanel {FFFFFF}- 产业版面\n");
						strcat(stringCMD, "{66CC00}/buybizz {FFFFFF}- 购买产业\n");
						strcat(stringCMD, "{66CC00}/binfo {FFFFFF}- 产业信息\n");
						strcat(stringCMD, "{66CC00}/fuel {FFFFFF}- 订购燃料\n");
						strcat(stringCMD, "{66CC00}/product {FFFFFF}- 订购产品\n");
						strcat(stringCMD, "{66CC00}/sellbizzto {FFFFFF}- 出售产业");
						ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}产业", stringCMD, "关闭", "");
					}
					case 7:
					{
						stringCMD = "\0";
						strcat(stringCMD, "{66CC00}Y {FFFFFF}- 车辆管理\n");
						strcat(stringCMD, "{66CC00}N {FFFFFF}- 开启或者关闭车辆\n");
						strcat(stringCMD, "{66CC00}/fixcar {FFFFFF}- 刷新车辆\n");
						strcat(stringCMD, "{66CC00}/fill {FFFFFF}- 加油\n");
						strcat(stringCMD, "{66CC00}/sellcar {FFFFFF}- 出售车辆\n");
						strcat(stringCMD, "{66CC00}/sellcarto {FFFFFF}- 出售车辆给玩家\n");
						strcat(stringCMD, "{66CC00}/get fuel {FFFFFF}- 买燃料罐\n");
						strcat(stringCMD, "{66CC00}/carpass {FFFFFF}- 显示文件\n");
						strcat(stringCMD, "{66CC00}/park {FFFFFF}- 泊车\n");
						strcat(stringCMD, "{66CC00}/findcar {FFFFFF}- 找车");
						ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}车辆", stringCMD, "关闭", "");
					}
				case 8:
					{
						stringCMD = "\0";
						strcat(stringCMD, "{66CC00}/balance {FFFFFF}- 查看余额\n");
						strcat(stringCMD, "{66CC00}/withdraw {FFFFFF}- 提款\n");
						strcat(stringCMD, "{66CC00}/bank {FFFFFF}- 存款\n");
						strcat(stringCMD, "{66CC00}/transfer {FFFFFF}- 转账\n");
						strcat(stringCMD, "{66CC00}/returnmoney {FFFFFF}- 收租金");
						ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}银行", stringCMD, "关闭", "");
					}
				}
			}
		}
	case 2001:
		{
			if(response == 1)
			{
				switch(listitem)
				{
		        case 0:	SetPlayerColor(playerid, 0xFFFFFF20);
		        case 1: SetPlayerColor(playerid, 0x0000FFAA);
		        case 2: SetPlayerColor(playerid, 0x313131AA);
		        case 3: SetPlayerColor(playerid, 0x46BBAA00);
		        case 4: SetPlayerColor(playerid, 0xFF6666AA);
	            case 5: SetPlayerColor(playerid, 0x993366AA);
	            case 6: SetPlayerColor(playerid, 0xBB0000AA);
		        case 7: SetPlayerColor(playerid, 0xccff00AA);
		        case 8: SetPlayerColor(playerid, 0xA85400AA);
		        case 9: SetPlayerColor(playerid, 0x0000FFAA);
		        case 11: SetPlayerColor(playerid, 0x139BECFF);
	       	    case 12: SetPlayerColor(playerid, 0xCC00FFAA);
		        case 13: SetPlayerColor(playerid, 0xffff00AA);
		        case 14: SetPlayerColor(playerid, 0x007575AA);
		        case 15: SetPlayerColor(playerid, 0x009900AA);
		        case 16: SetPlayerColor(playerid, 0xFF6600AA);
		        case 17: SetPlayerColor(playerid, 0x00CCFFAA);
		        case 18: SetPlayerColor(playerid, 0x6666FFAA);
		        case 19: SetPlayerColor(playerid, 0xA85400AA);
		        case 20: SetPlayerColor(playerid, 0x0000FFAA);
				}
			}
			else
			{
				return true;
			}
		}
	case 9653:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1)
				{
					switch(listitem)
					{
					case 0:
						{
							SendSyntaxMessage(playerid, "去采石场!");
							SetPlayerCheckpoint(playerid,690.2257,831.7106,-30.1706,8.0);
							MatsArmyCar[playerid]=20;
							return true;
						}
					case 1:
						{
							if(!PlayerToPoint(10.0,playerid,334.9307,1962.9658,17.6406)) return	SendErrorMessage(playerid,"你没有在指定地点!");
							new tmpcar = GetPlayerVehicleID(playerid);
							if(MatHaul[tmpcar-gunscar[0]][mLoad] <= 0) return SendErrorMessage(playerid,"在车里里没有武器!");
							armmatbi += MatHaul[tmpcar-gunscar[0]][mLoad];
							SetOtherInt("armmatbi", armmatbi);
							MatHaul[tmpcar-gunscar[0]][mLoad] =0;
							format(string, sizeof(string), "武器卸下了,在后备箱: %i/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
							SendClientMessage(playerid, -1, string);
							return true;
						}
					case 2:
						{
							SetPlayerCheckpoint(playerid,-1329.4108,471.9849,7.1875,6.0);
							SendServerMessage(playerid, "地图上的标记以红色标记的形式表示");
							MatsArmyCar[playerid]=151;
							return true;
						}
					case 3:
						{
							SetPlayerCheckpoint(playerid,-1329.1432,472.1004,7.1875,6.0);
							SendServerMessage(playerid,"地图上的标记以红色标记的形式表示");
							MatsArmyCar[playerid]=21;
							return true;
						}
					case 4:
						{
							SetPlayerCheckpoint(playerid,1529.6000,-1691.2000,13.3828,6.0);
							SendServerMessage(playerid,"地图上的标记以红色标记的形式表示");
							MatsArmyCar[playerid]=31;
							return true;
						}
					case 5:
						{
							SetPlayerCheckpoint(playerid,-533.4788,2589.9780,53.4154,6.0);
							SendServerMessage(playerid,"地图上的标记以红色标记的形式表示");
							MatsArmyCar[playerid]=24;
							return true;
						}
					case 6:
						{
							SetPlayerCheckpoint(playerid,-1607.2913,683.5955,-5.2422,6.0);
							SendServerMessage(playerid,"地图上的标记以红色标记的形式表示");
							MatsArmyCar[playerid]=35;
							return true;
						}
					case 7:
						{
							SetPlayerCheckpoint(playerid,2292.0837,2458.9941,10.8203,6.0);
							SendServerMessage(playerid,"地图上的标记以红色标记的形式表示");
							MatsArmyCar[playerid]=150;
							return true;
						}
					case 8:
						{
							new listitems[] = " [1] 卸载 - 巴拉斯\n [2] 卸载 - 瓦戈斯\n [3] 卸载 - 格罗夫\n [4] 卸载 - 阿兹特克\n [5] 卸载 - 14K";
							ShowPlayerDialog(playerid, 3232, DIALOG_STYLE_LIST, "{1E90FF}捆扎材料帮派", listitems, "选择", "退出");
							return true;
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
	case 3233:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1)
				{
					switch(listitem)
					{
					case 1:
						{
							SetPlayerCheckpoint(playerid,681.5627,-473.9190,16.5363,10.0);
							SendServerMessage(playerid,"地图上的标记以红色标记的形式表示");
							MatsArmyCar[playerid]=61;
							return true;
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
	case 3232:
		{
			if(response)
			{
				if (PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1)
				{
					switch(listitem)
					{
					case 0:
						{
							SetPlayerCheckpoint(playerid,2115.2783,-1174.4742,24.2653,6.0);
							SendServerMessage(playerid,"地图上的标记以红色标记的形式表示");
							MatsArmyCar[playerid]=100;
							return true;
						}
					case 1:
						{
							SetPlayerCheckpoint(playerid,2795.7639,-1619.4196,10.9219,6.0);
							SendServerMessage(playerid,"地图上的标记以红色标记的形式表示");
							MatsArmyCar[playerid]=101;
							return true;
						}
					case 2:
						{
							SetPlayerCheckpoint(playerid,2489.2656,-1670.0692,13.3359,6.0);
							SendServerMessage(playerid,"地图上的标记以红色标记的形式表示");
							MatsArmyCar[playerid]=102;
							return true;
						}
					case 3:
						{
							SetPlayerCheckpoint(playerid,1806.0304,-2111.7974,13.3828,6.0);
							SendServerMessage(playerid,"地图上的标记以红色标记的形式表示");
							MatsArmyCar[playerid]=103;
							return true;
						}
					case 4:
						{
							SetPlayerCheckpoint(playerid,2731.1697,-1944.5652,13.5469,6.0);
							SendServerMessage(playerid,"地图上的标记以红色标记的形式表示");
							MatsArmyCar[playerid]=104;
							return true;
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
	case 9943:
		{
			if(response)
			if(PlayerInfo[playerid][pRub] < 25) return SendErrorMessage(playerid,"你没有25人民币");
			if(PlayerInfo[playerid][pLevel] == 1 && PlayerInfo[playerid][pExp] < 3) return SendErrorMessage(playerid,"你需要玩游戏3个小时");
			{
				if(!strlen(inputtext)) return ShowPlayerDialog(playerid,9943,DIALOG_STYLE_INPUT, "{1E90FF}申请昵称更改", "写一个新的昵称", "确定", "返回");
				format(WantNickChange[playerid],MAX_PLAYER_NAME, "%s",inputtext);
				format(YCMDstr,sizeof(YCMDstr),"SELECT `Name` FROM `"TABLE_ACCOUNT"` WHERE Name='%s'",WantNickChange[playerid]);
				mysql_query(YCMDstr);
				mysql_store_result();
				if(mysql_fetch_row_format(YCMDstr)) return SendErrorMessage(playerid,"该昵称已存在"), mysql_free_result();
				if(PlayerInfo[playerid][pLevel] < 3) return SendErrorMessage(playerid, "你的等级小于3.");
				if(GetPlayerBizz(playerid) == 1) return SendErrorMessage(playerid,"无法更改名称 (你需要先出售你的产业! )");
				ChangeName(playerid, WantNickChange[playerid]);
				PlayerInfo[playerid][pRub] -=25;
				SendSyntaxMessage(playerid, "你修改了昵称,花费了 {00FF00}'25' {FFFFFF}人民币");
				return true;
			}
		}
	case 9624:
		{
			if(!response) return true;
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 9624, DIALOG_STYLE_INPUT, "{1E90FF}邮箱验证", "{FFFFFF}已将一封信发送到您的电子邮件地址\n在下面输入框内输入验证码.\n\n窗口化进行游戏 'ALT+ENTER'.\n\n如果迟迟没有收到验证码邮件,请确认你输入的邮箱,或者与管理员联系\n等待输入验证码.", "确定", "退出");
			if(strval(inputtext) != GetPVarInt(playerid, "RegCode")) return ShowPlayerDialog(playerid, 9624, DIALOG_STYLE_MSGBOX, "{1E90FF}信息", "输入的验证码无效!", "重新输入", "");
            PlayerInfo[playerid][pEmailpod] = 1;
            OnPlayerUpdateAc(playerid);
			SendSyntaxMessage(playerid,"成功绑定了 E-mail! (现在你可以通过邮箱找回密码: 传奇RPG)");
        }
	case 9625:
	    {
			if(!response) return true;
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 9625, DIALOG_STYLE_INPUT, "{1E90FF}邮箱验证", "{FFFFFF}输入有效的电子邮件地址.\n\n你可以通过邮箱找回游戏密码.\n\n{ffcc00}将发送一份电子邮件验证码到你的邮箱\n输入正确的验证码后将继续注册.\n\n确保输入正确的邮箱地址.", "确定", "退出");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 48) return ShowPlayerDialog(playerid, 9625, DIALOG_STYLE_MSGBOX, "{1E90FF}信息", "{FF0000}邮箱的长度应为6到48个字符.", "关闭", "");
            format(YCMDstr, sizeof(YCMDstr), "SELECT * FROM `"TABLE_ACCOUNT"` WHERE pEmail = '%s'",inputtext);
	        mysql_query(YCMDstr);
	        mysql_store_result();
	        if(mysql_fetch_row_format(YCMDstr)) ShowPlayerDialog(playerid, 9625, DIALOG_STYLE_MSGBOX, "{1E90FF}信息", "{FF0000}此邮箱已经连接到其他账户.", "关闭", "");
	        else
	        {
                new kent[512];
                SetPVarInt(playerid, "RegCode", random(10000));
                strmid(PlayerInfo[playerid][pEmail], inputtext, 0, strlen(inputtext), 48);
		        format(kent, sizeof(kent), "您好, 亲爱的 %s!\n\n您的验证码: %d\n\n感谢您注册 Legendary Role Play Game!", Name(playerid), GetPVarInt(playerid, "RegCode"));
		        SendMail(PlayerInfo[playerid][pEmail], "admin@samp-pawn.cn", "Legendary Role Play Game", "Legendary Role Play Game", kent);
		        ShowPlayerDialog(playerid, 9624, DIALOG_STYLE_INPUT, "{1E90FF}邮箱验证", "{FFFFFF}已将一封信发送到您的电子邮件地址\n在下面输入框内输入验证码.\n\n窗口化进行游戏 'ALT+ENTER'.\n\n如果迟迟没有收到验证码邮件,请确认你输入的邮箱,或者与管理员联系\n等待输入验证码.", "确定", "退出");
	        }
	        mysql_free_result();
        }
	case 9627:
	    {
  			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][pEmailpod] == 1) return SendErrorMessage(playerid,"该账户已经绑定了邮箱.");
						{
			    			//ShowPlayerDialog(playerid, 9625, DIALOG_STYLE_INPUT, "{1E90FF}邮箱验证", "{FFFFFF}输入有效的电子邮件地址.\n\n你可以通过邮箱找回密码\n\n{ffcc00}将发送一封邮件验证码到你的邮箱\n在下一个窗口继续注册.\n\n确保输入正确的电子邮件地址.", "确定", "退出");
			    			SendErrorMessage(playerid, "邮箱验证暂未完善!");
		    			}
					}
					case 1:
					{
   						if(PlayerInfo[playerid][pKeylog] == 1)
						{
				    		SendServerMessage(playerid, "您已成功停用安全码");
				    		strmid(PlayerInfo[playerid][pSuperKey], "None", 0, strlen("None"), 255);
				    		PlayerInfo[playerid][pKeylog] = 0;
				    		return 1;
						}
       					if(!strcmp(PlayerInfo[playerid][pSuperKey], "None", true))
						{
							ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{FF6F00}安全码", "{FFFFFF}安全码是您的个人最重要的密码，您必须记住.\n如果没有安全码，您将无法进行身份验证.\n\n1. 安全码必须包含5位数字.\n2. 最好不要包含生日日期\n3. 在安全码中使用复杂的数字组合.", "确定", "");
    					}
		    			for(new i = 0, cindex = 0; i < sizeof(Captcha); i++)
						{
							if(i == 0)
							{
								Captcha[i] = CreatePlayerTextDraw(playerid, 321.0, 80.0, "SECURITY CODE:");
								PlayerTextDrawUseBox(playerid, Captcha[i], 1);
								PlayerTextDrawBoxColor(playerid, Captcha[i], 0x000000AA);
								PlayerTextDrawTextSize(playerid, Captcha[i], 800.0, 200.0);
  							}
							if(i == 1)
							{
  								Captcha[i] = CreatePlayerTextDraw(playerid, 321.0, 303.0, "-----");
     							PlayerTextDrawUseBox(playerid, Captcha[i], 1);
								PlayerTextDrawBoxColor(playerid, Captcha[i], 0x000000AA);
								PlayerTextDrawTextSize(playerid, Captcha[i], 800.0, 200.0);
  							}
							if(i > 1)
							{
  								format(string, sizeof(string), "%c", TextArray[i - 2]);
								if(i >= 2) Captcha[i] = CreatePlayerTextDraw(playerid, 280.0 + (41.0 * cindex), 130.0, string);
								if(i == 5) cindex = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 280.0 + (41.0 * cindex), 171.0, string);
 								if(i > 5) Captcha[i] = CreatePlayerTextDraw(playerid, 280.0 + (41.0 * cindex), 171.0, string);
								if(i == 8) cindex = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 280.0 + (41.0 * cindex), 212.0, string);
								if(i > 8) Captcha[i] = CreatePlayerTextDraw(playerid, 280.0 + (41.0 * cindex), 212.0, string);
								if(i == 11) cindex = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 321.5 + (41.0 * cindex), 253.0, string);
								if(i > 11) Captcha[i] = CreatePlayerTextDraw(playerid, 321.5 + (41.0 * cindex), 253.0, string);
								PlayerTextDrawUseBox(playerid, Captcha[i], 1);
			    				PlayerTextDrawBoxColor(playerid, Captcha[i], 102);
			    				PlayerTextDrawTextSize(playerid, Captcha[i], 29.0, 29.0);
			    				PlayerTextDrawSetSelectable(playerid, Captcha[i], 1);
			    				cindex++;
        					}
	    					PlayerTextDrawLetterSize(playerid, Captcha[i], 0.50, 2.5);
							PlayerTextDrawAlignment(playerid, Captcha[i], 2);
							PlayerTextDrawSetOutline(playerid, Captcha[i], 1);
							PlayerTextDrawShow(playerid, Captcha[i]);
							SelectTextDraw(playerid, 0xFDE39DFF);
						}
   					}
				}
			}
		}
	case 9973:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						gFam[playerid] = 1;
					 	SendServerMessage(playerid, "家族聊天断开了!");
					}
					case 1:
					{
						gFam[playerid] = 0;
	 					SendServerMessage(playerid, "查看已启用的家族聊天!");
					}
					case 2:
					{
						ShowPlayerDialog(playerid,8843,DIALOG_STYLE_LIST, "{1E90FF}选择性别菜单", "[0] 男性\n[1] 女性", "选择", "返回");
				 	}
				 	case 3:
					{
						new clearc;
						while(clearc++ < 99)
						SendClientMessage(playerid, -1, " ");
					}
					case 4:
					{
	                    if(!GetPVarInt(playerid,"ShowName"))
					    {
					        foreach(new i: Player) ShowPlayerNameTagForPlayer(playerid, i, false);
						    SetPVarInt(playerid,"ShowName",true);
					    }
				        else
					    {
					        foreach(new i: Player) ShowPlayerNameTagForPlayer(playerid, i, true);
						    DeletePVar(playerid,"ShowName");
					    }
					}
				}
			}
		}
	case 8843:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						PlayerInfo[playerid][pSex] = 1;
						SendSyntaxMessage(playerid,"您将性别更改为男性");
						return true;
					}
				case 1:
					{
						PlayerInfo[playerid][pSex] = 2;
						SendSyntaxMessage(playerid,"您将性别更改为女性");
						return true;
					}
				}
			}
		}
	case 2934:
		{
		    new ip[20];
			GetPlayerIp(playerid,ip,20);
			if(response)
			{
				if(!strlen(inputtext)) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{1E90FF}管理员授权", "{FFE4E1}输入管理员授权密码\n\n密码必须包字母和数字\n限制6到15个字符", "登录", "退出");
				if(!strcmp(PlayerInfo[playerid][pDostup],inputtext, false))
				{
					if(PlayerInfo[playerid][pAdministration228] <= 0) return SendErrorMessage(playerid,"你不是管理员!");
					dostup[playerid] = 1;
					format(string, sizeof(string), "{F0FFF0}― 管理员 %s[%i], %i 级管理员, 登陆了. IP: %s",Name(playerid),playerid,PlayerInfo[playerid][pAdministration228],ip);
					ABroadCast(-1, string, 1);
					for(new i;i<10;i++) TextDrawShowForPlayer(playerid, CheatText[i]);
				}
				else
				{
					format(string, sizeof(string), "{ff0000}― 注意:{F0FFF0} 管理员 %s, 输入了错误的密码. 他的 IP: %s",Name(playerid),ip);
					ABroadCast(-1, string, 1);
				}
				return true;
			}
			else
			{
				format(string, sizeof(string), "{ff0000}― 注意:{F0FFF0} 管理员 %s, 输入管理员密码时单击取消按钮. 他的 IP: %s",Name(playerid),ip);
				ABroadCast(-1, string, 1);
			}
		}
	}
	while(strfind(inputtext, "%s",true)!=-1)
	{
		strdel(inputtext,strfind(inputtext, "%s",true),strfind(inputtext, "%s",true)+2);
	}
	return true;
}

publics: OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
 	if(JobFarm[playerid] == true)
	{
		if(IsPlayerAttachedObjectSlotUsed(playerid,4))
		{
  			TextDrawFarm[playerid] = 0;
  			clicktd[playerid] = false;
    		ApplyAnimation(playerid, "OTB", "wtchrace_lose", 4.0999, 0, 1, 1, 1, 1, 0);
     		switch(random(4))
  	  		{
     			case 0: SetPlayerCheckpoint(playerid,-318.1014,-1378.0062,10.9144,1.0);
       			case 1: SetPlayerCheckpoint(playerid,-319.2519,-1401.7625,13.5333,1.0);
         		case 2: SetPlayerCheckpoint(playerid,-301.7332,-1424.6324,14.2088,1.0);
          		case 3: SetPlayerCheckpoint(playerid,-270.9319,-1401.2894,11.3363,1.0);
     		}
     		SendErrorMessage(playerid,"Вы уронили куст!");
     		if(IsPlayerAttachedObjectSlotUsed(playerid,4)) RemovePlayerAttachedObject(playerid,4);
    	}
 	}
    GodCar[playerid] = vehicleid;
    StatusAirTP[playerid] = GetTickCount();
    if(IsPlayerInAnyVehicle(playerid))
	{
		GetVehiclePos(CarID[playerid],AC_Air[playerid][0],AC_Air[playerid][1],AC_Air[playerid][2]);
	}
	else
	{
		GetPlayerPos(playerid,AC_Air[playerid][0],AC_Air[playerid][1],AC_Air[playerid][2]);
	}
	if(GetVehicleModel(vehicleid)!=570 && GetVehicleModel(vehicleid)!=449)
	{
		new Float:x,Float:y,Float:z;
		GetVehiclePos(vehicleid,x,y,z);
		if(!IsPlayerInRangeOfPoint(playerid,20,x,y,z) && SpeedVehicle(vehicleid)<130) return SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Vehicle Cheat #9 )"),GKick(playerid);
	}
    UseEnter[playerid] = true;
    IDVEH[playerid]= vehicleid;
	if(GetPVarInt(playerid,"YEAH") == 1)
	{
		SendSyntaxMessage(playerid, "你到达了目的地");
		SetPVarInt(playerid,"YEAH",0);
		DeletePVar(playerid,"Spongebob");
		DeletePVar(playerid,"Mario");
		DeletePVar(playerid,"SpiderPig");
		DeletePVar(playerid, "GPSID");
		DisablePlayerRaceCheckpoint(playerid);
	}
	if(!ispassenger)
	{
	    if(IsVehicleOccupiedEx(vehicleid))
	    {
     		GameTextForPlayer(playerid, "~r~~h~CAR IS USED", 2000, 4);
  			ClearAnimations(playerid, true);
     		return 1;
	    }
	}
	if(IsLocked[vehicleid] == 1)
	{
		GameTextForPlayer(playerid,"~w~VEHICLE ~r~LOCKED", 5000, 3);
	}
	SetVehicleParamsForPlayer(vehicleid, playerid, 0, gCarLock[vehicleid]);
	Refueling[playerid] = 0;
	time_zcar = gettime();
	return true;
}
publics: OnPlayerDisconnect(playerid, reason)
{
    if(Player3DText[playerid] != Text3D:-1)
	{
    	DestroyDynamic3DTextLabel(Player3DText[playerid]);
    	Player3DText[playerid] = Text3D:-1;
	}
    if(VehID[playerid] > 0)
    {
        DestroyVehicle(VehID[playerid]);
        VehID[playerid] = 0;
    }
	if(block[playerid] == 1)
	{
		DestroyDynamicObject(ObjectShip[playerid]);
		DestroyDynamicArea(Ships[playerid]);
	}
    if(SurfPlayerUse[playerid] != -1) DestroySurfboard(SurfPlayerUse[playerid]);
	if(GetPVarInt(playerid,"fire_use") >= 1)
	{
		for(new oject = FireObject[playerid][0];oject < (FireObject[playerid][1]+1);oject++)
		{
			DestroyDynamicObject(oject);
		}
		DestroyDynamicArea(FireSphere[playerid]);
		FireSphere[playerid] = -1;
	}
	for(new i;i<5; i++)
	{
 		PlayerTextDrawDestroy(playerid,JobStats[playerid][i]);
	}
	DeletePVar(playerid,"VodolazStart");
	DeletePVar(playerid,"VodolazZP");
	DeletePVar(playerid,"VodolazOxygen");
	DeletePVar(playerid,"VodolazGruzPicked");
	DeletePVar(playerid,"VodolazOxygenTimer");
	if(GetPVarInt(playerid, "learnobject") == 1)
	{
	    SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "", 0, 140, "Arial", 24, 0, -1, 0, 1);
		DestroyPlayerObject(playerid, LearnObject[playerid]);
		KillTimer(LearnTimer[playerid]);
		LearnObject[playerid] = 0;
	}
	for(new i;i<10;i++)
	{
	    if(ChetInfo[i][cheatid1]==playerid)
		{
			TextDrawSetString(CheatText[i], "-1");
			Cheat1 ++;
			if(Cheat1 > 9) Cheat1 = 0;
		}
 	}
	Delete3DTextLabel(Damage[playerid]);
    TextDrawDestroy(heal44[playerid]);
	if(PlayerRacing[playerid] != 0)
	{
		DisablePlayerRaceCheckpoint(playerid);
		RaceCP[playerid] = 0;
		chet[playerid] = 0;
		PlayerRacing[playerid] = 0;
		RacingPlayers -= 1;
		return true;
	}
	if(InTuning[playerid] != 0)
	{
	    stotuning = 0;
	}
	if(duel_system == 1)
 	{
  		if(getplayerid == playerid)
    	{
     		new name[MAX_PLAYER_NAME];
       		GetPlayerName(getplayerid, name, sizeof(name));
         	format(YCMDstr, sizeof(YCMDstr), "― 决斗结束了! 对手 %s 退出游戏", name);
          	SendClientMessage(setplayerid, -1, YCMDstr);
           	PlayerInfo[setplayerid][pCash] += duel_sum*2;
            Q_SetPlayerPos(setplayerid,2171.7788,-1677.2714,15.0859);
            ResetPlayerWeapons(setplayerid);
            TextDrawHideForPlayer(setplayerid, Box_1);
            TextDrawHideForPlayer(getplayerid, Box_1);
            TextDrawHideForPlayer(setplayerid, Box_2);
            TextDrawHideForPlayer(getplayerid, Box_2);
            TextDrawHideForPlayer(setplayerid, System);
            TextDrawHideForPlayer(getplayerid, System);
            TextDrawHideForPlayer(setplayerid, Aga);
            TextDrawHideForPlayer(getplayerid, Aga);
            TextDrawHideForPlayer(setplayerid, Aga2);
            TextDrawHideForPlayer(getplayerid, Aga2);
            TextDrawHideForPlayer(setplayerid, Time);
            TextDrawHideForPlayer(getplayerid, Time);
            duel_map = "";
            duel_weapon = "";
            duel_map_num = 0;
            duel_weapon_num = 0;
            duel_sum = 0;
            getplayerid = 0;
            setplayerid = 0;
            duel_system = 0;
            duel_second = 0;
            duel_minute = 0;
            duel_gkiller = 0;
            duel_skiller = 0;
            duelzanyat = 0;
       	}
        if(setplayerid == playerid)
        {
        	new name[MAX_PLAYER_NAME];
         	GetPlayerName(setplayerid, name, sizeof(name));
          	format(YCMDstr, sizeof(YCMDstr), "― 决斗结束了! 对手 %s 退出游戏", name);
           	SendClientMessage(getplayerid, -1, YCMDstr);
            PlayerInfo[getplayerid][pCash] += duel_sum*2;
            Q_SetPlayerPos(getplayerid,2171.7788,-1677.2714,15.0859);
            ResetPlayerWeapons(getplayerid);
            TextDrawHideForPlayer(setplayerid, Box_1);
            TextDrawHideForPlayer(getplayerid, Box_1);
            TextDrawHideForPlayer(setplayerid, Box_2);
            TextDrawHideForPlayer(getplayerid, Box_2);
            TextDrawHideForPlayer(setplayerid, System);
            TextDrawHideForPlayer(getplayerid, System);
            TextDrawHideForPlayer(setplayerid, Aga);
            TextDrawHideForPlayer(getplayerid, Aga);
            TextDrawHideForPlayer(setplayerid, Aga2);
            TextDrawHideForPlayer(getplayerid, Aga2);
            TextDrawHideForPlayer(setplayerid, Time);
            TextDrawHideForPlayer(getplayerid, Time);
            duel_map = "";
            duel_weapon = "";
            duel_map_num = 0;
            duel_weapon_num = 0;
            duel_sum = 0;
            getplayerid = 0;
            setplayerid = 0;
            duel_system = 0;
            duel_second = 0;
            duel_minute = 0;
            duel_gkiller = 0;
            duel_skiller = 0;
            duelzanyat = 0;
    	}
    }
	if(KostiName[playerid] != INVALID_PLAYER_ID)
	{
		SendErrorMessage(KostiName[playerid],"对方离开了游戏");
		KostiMoney[KostiName[playerid]] = 0;
		ZapretDice[KostiName[playerid]] = 0;
		KostiName[KostiName[playerid]] = INVALID_PLAYER_ID;
		KostiName[playerid] = INVALID_PLAYER_ID;
	}
    if(KostiName[playerid]!= INVALID_PLAYER_ID) Predlog[KostiName[playerid]]=0;
	foreach(new i: Player)
	{
		if(GetPlayerState(i) == PLAYER_STATE_SPECTATING && gSpectateID[i] == playerid)
		{
			StopRecon(i);
			GameTextForPlayer(i,"~r~SPEC: PANEL IS OFF", 5000, 3);
			SpecPanelClose(i);
			CancelSelectTextDraw(i);
		}
	}
   	if(GetPVarInt(playerid,"krstop") == 1)
	{
		KillTimer(TimerP);
	}
    if(GetPVarInt(playerid, "dCancelInfoCasino1"))
	{
		for(new i; i < 14; i++)
  		{
    		PlayerTextDrawDestroy(playerid,gInfoCasino[i]);
    	}
	}
    if(SlotTimer[playerid] != -1) KillTimer(SlotTimer[playerid]);
	if(GetPVarInt(playerid, "StartCasino"))
	{
		ExitPlayerFromSlotMachine(playerid);
	 	HideSlotsForPlayer(playerid);
	}
	if(isPlayingBasketBall(playerid))
	{
		exitBBallGame(playerid);
		SetPVarInt(playerid, "BrosilBBall", 0);
		SetPVarInt(playerid, "ExitBBall", 0);
	}
	JobCarTime[playerid] = 0;
	LessonCar[playerid] = 0;
	LessonStat[playerid] = 0;
	TakingLesson[playerid] = 0;
	RemovePlayerFromVehicle(playerid);
    X777[playerid] = 0; Y777[playerid] = 0; Z777[playerid]=0;
    PlayerInfo[playerid][pAreaskut] = 0;
    if(PlayerDeathmatch[playerid] == 1)
	{
	    DeathmatchPlayers -= 1;
	    PlayerDeathmatch[playerid] = 0;
	    DeathmatchAmout[0]--;
	    new str1[20];
        format(str1, sizeof(str1),"TEAM RED: %d",DeathmatchAmout[0]);
	    TextDrawSetString(Tdboi[1], str1);
	}
	if(PlayerDeathmatch[playerid] == 2)
	{
	    DeathmatchPlayers -= 1;
	    PlayerDeathmatch[playerid] = 0;
	    DeathmatchAmout[1]--;
	    new str2[20];
        format(str2, sizeof(str2),"TEAM BLUE: %d",DeathmatchAmout[1]);
	    TextDrawSetString(Tdboi[2], str2);
	}
	PlayerDeathmatch2[playerid] = 0;
    PlayerTextDrawDestroy(playerid,Trenia[playerid]);
	if(Trenag[playerid]==1) { EndKach(playerid,1); }
	if(Trenag[playerid]==2) { EndKach(playerid,2); }
	if(Trenag[playerid]==3) { EndKach(playerid,3); }
	if(Trenag[playerid]==4) { EndKach(playerid,4); }
	if(GFID1 == playerid || GFID2 == playerid)
	{
        TotalFight=0;
        PlayerInfo[playerid][pCash]+=fightM;
		PlayerInfo[fightSID[playerid]][pCash]+=fightM;
		SendErrorMessage(playerid,"战斗中有人离开了游戏，战斗中断.");
		SendErrorMessage(fightSID[playerid],"战斗中有人离开了游戏，战斗中断.");
		GFID1=INVALID_PLAYER_ID; GFID1=INVALID_PLAYER_ID;
		fightM=0; UpdateFighText();
	}
    PlayerKartingboat[playerid] = 0;

    for(new t; t != 6; t++) PlayerTextDrawDestroy(playerid, VehInfo[playerid][t]);

	PlayerTextDrawDestroy(playerid, VehInfo[playerid][0]);
	PlayerTextDrawDestroy(playerid, VehInfo[playerid][1]);
	PlayerTextDrawDestroy(playerid, VehInfo[playerid][2]);
	PlayerTextDrawDestroy(playerid, VehInfo[playerid][3]);
	PlayerTextDrawDestroy(playerid, VehInfo[playerid][4]);
	PlayerTextDrawDestroy(playerid, VehInfo[playerid][5]);

    KillTimer(STimer[playerid]);
    if(GetPVarInt(playerid, "FaggioRent"))
    {
        DestroyVehicle(GetPVarInt(playerid, "FaggioRent"));
        DeletePVar(playerid, "FaggioRent");
    }
    if(PlayerCuffed[playerid] != 0)
    {
        PlayerInfo[playerid][pMestoJail] = 1;
        PlayerInfo[playerid][pJailed] = 1;
        PlayerInfo[playerid][pJailTime] = 600*WantedLevel[playerid]+1800;
        format(YCMDstr,sizeof(YCMDstr),"{BF00BF}― 玩家 {80BF00}%s {BF00BF}被捕 (监禁 30 分钟)",Name(playerid));
        SendClientMessageToAll(-1,YCMDstr);
    }
	if(PlayerKarting[playerid]) {
		KartingPlayers --;
		PlayerKarting[playerid] = 0;
	}
    for(new t; t != 1; t++) PlayerTextDrawDestroy(playerid, RegName[playerid][t]);
    KillTimer(GetPVarInt(playerid, "PlayerTimer"));
	ResetCarInfo(playerid);
	IsConnected{playerid} = 0;
	if(GetPVarInt(playerid, "PriceBus") > 0)
	{
	    PlayerInfo[playerid][pCash] += GetPVarInt(playerid, "BusMoney");
		Delete3DTextLabel(BusText3D[playerid]);
		DeletePVar(playerid, "RentBus");
	}
	if(GetPVarInt(playerid,"YEAH") == 1)
	{
		DisablePlayerRaceCheckpoint(playerid);
		SetPVarInt(playerid,"YEAH",0);
		DeletePVar(playerid,"Spongebob");
		DeletePVar(playerid,"Mario");
		DeletePVar(playerid,"SpiderPig");
		DeletePVar(playerid, "GPSID");
	}
	OnPlayerUpdateAc(playerid);
	PicCP[playerid] = 0;
	new string[228];
	if(caridhouse[playerid] != -1)
	{
		PlayerInfo[playerid][pFuelcar] = Fuell[caridhouse[playerid]];
		DestroyVehicle(caridhouse[playerid]);
		caridhouse[playerid] = -1;
	}
	if(PlayerInfo[playerid][pLevel] > 0)
	{
		new weap1, ammo1, weap2, ammo2, weap3, ammo3, weap4, ammo4, weap5, ammo5, weap6, ammo6, weap7, ammo7, weap8, ammo8, weap9, ammo9, weap10, ammo10, weap11, ammo11;
		GetPlayerWeaponData(playerid,1,weap1,ammo1);
		GetPlayerWeaponData(playerid,2,weap2,ammo2);
		GetPlayerWeaponData(playerid,3,weap3,ammo3);
		GetPlayerWeaponData(playerid,4,weap4,ammo4);
		GetPlayerWeaponData(playerid,5,weap5,ammo5);
		GetPlayerWeaponData(playerid,6,weap6,ammo6);
		GetPlayerWeaponData(playerid,7,weap7,ammo7);
		GetPlayerWeaponData(playerid,8,weap8,ammo8);
		GetPlayerWeaponData(playerid,9,weap9,ammo9);
		GetPlayerWeaponData(playerid,10,weap10,ammo10);
		GetPlayerWeaponData(playerid,11,weap11,ammo11);
		PlayerInfo[playerid][pSlot][0] = weap1,PlayerInfo[playerid][pSlotammo][0] = ammo1/2;
		PlayerInfo[playerid][pSlot][1] = weap2,PlayerInfo[playerid][pSlotammo][1] = ammo2/2;
		PlayerInfo[playerid][pSlot][2] = weap3,PlayerInfo[playerid][pSlotammo][2] = ammo3/2;
		PlayerInfo[playerid][pSlot][3] = weap4,PlayerInfo[playerid][pSlotammo][3] = ammo4/2;
		PlayerInfo[playerid][pSlot][4] = weap5,PlayerInfo[playerid][pSlotammo][4] = ammo5/2;
		PlayerInfo[playerid][pSlot][5] = weap6,PlayerInfo[playerid][pSlotammo][5] = ammo6/2;
		PlayerInfo[playerid][pSlot][6] = weap7,PlayerInfo[playerid][pSlotammo][6] = ammo7/2;
		PlayerInfo[playerid][pSlot][7] = weap8,PlayerInfo[playerid][pSlotammo][7] = ammo8/2;
		PlayerInfo[playerid][pSlot][8] = weap9,PlayerInfo[playerid][pSlotammo][8] = ammo9/2;
		PlayerInfo[playerid][pSlot][9] = weap10,PlayerInfo[playerid][pSlotammo][9] = ammo10/2;
		PlayerInfo[playerid][pSlot][10] = weap11,PlayerInfo[playerid][pSlotammo][10] = ammo11/2;
	}
	new year, month,day;
	zips[playerid] = 0;
	format(WantNickChange[playerid],MAX_PLAYER_NAME, "");
	getdate(year, month, day);
	new hour, minute, second;
	gettime(hour, minute, second);
	if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
	format(string, sizeof(string), "UPDATE "TABLE_ACCOUNT" SET pVhoddata = '%i',pVhodMes = '%i',pVhodchas = '%i',pVhodminute = '%i' WHERE Name = '%s'",day,month,hour,minute,Name(playerid));
	mysql_query(string);
	if(SelectChar[playerid] == 255)
	{
		SetPlayerSkin(playerid, OldSkin[playerid]);
		PlayerInfo[playerid][pChar][0] = OldSkin[playerid];
		SelectChar[playerid] = 0;
	}
	robh[playerid] = false;
	Flood[playerid] = 0;
	Floods[playerid] = 0;
	SelectCharPlace[playerid] = 0;
	CharPrice[playerid] = 0;
	SelectCharID[playerid] = 0;
	SelectChar[playerid] = 0;
	if(PlayerInfo[playerid][pAdministration228] > 0 || dostup[playerid] == 1)
	{
		dostup[playerid] = 0;
		format(string, sizeof(string), "― 管理员 %s[%i], %i 级管理员,离开游戏.",Name(playerid),playerid,PlayerInfo[playerid][pAdministration228]);
		ABroadCast(-1, string, 1);
	}
	umer[playerid] = 0;
	PlayerPaintballing[playerid] = 0;
	SetPVarInt(playerid, "UnSurfCar", 0);
	arenda[playerid] = 0;
	arendajob1[playerid] = 0;
	arendajobe[playerid] = 0;
	chet[playerid] = 0;
	PlayerInfo[playerid][pDrugtime] = 0;
	proverkaforma[playerid] = 0;
	usegruz[playerid] = 0;
	keys[playerid] = 0;
	SetPlayerSkills(playerid);
	CharPrice[playerid] = 0;
	SelectCharID[playerid] = 0;
	SelectChar[playerid] = 0;
	PlayerInfo[playerid][pLogin] = 0;
	format(YCMDstr, sizeof(YCMDstr), "UPDATE `"TABLE_ACCOUNT"` SET `pLogin`='0' WHERE `Name` = '%s'",Name(playerid));
	mysql_query(YCMDstr);
	return true;
}

publics: SetPlayerWeapons(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pSlot][0] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][0], PlayerInfo[playerid][pSlotammo][0]);
		}
		if(PlayerInfo[playerid][pSlot][1] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][1], PlayerInfo[playerid][pSlotammo][1]);
		}
		if(PlayerInfo[playerid][pSlot][2] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][2], PlayerInfo[playerid][pSlotammo][2]);
		}
		if(PlayerInfo[playerid][pSlot][3] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][3], PlayerInfo[playerid][pSlotammo][3]);
		}
		if(PlayerInfo[playerid][pSlot][4] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][4], PlayerInfo[playerid][pSlotammo][4]);
		}
		if(PlayerInfo[playerid][pSlot][5] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][5], PlayerInfo[playerid][pSlotammo][5]);
		}
		if(PlayerInfo[playerid][pSlot][6] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][6], PlayerInfo[playerid][pSlotammo][6]);
		}
		if(PlayerInfo[playerid][pSlot][7] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][7], PlayerInfo[playerid][pSlotammo][7]);
		}
		if(PlayerInfo[playerid][pJailed] < 1)
		{
			if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
			{
				GiveWeapon(playerid, 2, 1);
			}
			if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
			{
				GiveWeapon(playerid, 8, 1);
			}
			if(PlayerInfo[playerid][pMember] == 7)
			{
				GiveWeapon(playerid, 24, 15);
				SetPlayerArmourAC(playerid, 100);
			}
			if(PlayerInfo[playerid][pMember] == 8 && PlayerInfo[playerid][pRank] == 2)
			{
				GiveWeapon(playerid, 24, 15);
				SetPlayerArmourAC(playerid, 100);
			}
			if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
			{
				GiveWeapon(playerid, 3, 1);
			}
			if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
			{
				GiveWeapon(playerid, 5, 1);
			}
			if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)
			{
				GiveWeapon(playerid, 5, 1);
			}
			if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
			{
				GiveWeapon(playerid, 1, 1);
			}
			if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
			{
				GiveWeapon(playerid, 5, 1);
			}
			if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
			{
				GiveWeapon(playerid, 43, 30);
			}
			if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
			{
				GiveWeapon(playerid, 5, 1);
			}
			if(PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18)
			{
				GiveWeapon(playerid, 5, 1);
			}
		}
	}
	return true;
}

publics: SetPlayerSpawn(playerid)
{
	if(PlayerInfo[playerid][pLogin] == 0) return SendErrorMessage(playerid,"请登录!"), GKick(playerid);
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerPaintballing[playerid] != 0)
		{
		    if(PaintballRab == 1)
		    {
				new rand;
				DelGun(playerid);
				ResetPlayerWeapons(playerid);
				new rands = random(sizeof(paintgun));
				GiveWeapon(playerid, paintgun[rands], 250);
				rand = random(sizeof(PaintballSpawns));
				SetPlayerHealthAC(playerid, 100);
				PlayerInfo[playerid][pHP] = 100;
				Q_SetPlayerPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
				SetPlayerInterior(playerid,10);
				SetPlayerVirtualWorld(playerid,0);
				SetPlayerColor(playerid, COLOR_REDD);
				return 1;
			}
		}
		if(GetPVarInt(playerid, "SelectRegSkin") == 1)
	    {
            SetPlayerInterior(playerid,18);
            SetPlayerVirtualWorld(playerid,random(50));
		    Q_SetPlayerPos(playerid,153.9429,-83.7120,1001.8047);
		    SetPlayerFacingAngle(playerid, 270.3508);
		    SetPlayerCameraPos(playerid,157.9043,-83.5023,1001.8047);
		    SetPlayerCameraLookAt(playerid,156.4974,-83.5346,1001.8047);
		    for(new i = 0; i < 6; i++) TextDrawShowForPlayer(playerid, RegSkin[i]);
    		SelectTextDraw(playerid, 0xAFAFAFAA);
			TogglePlayerControllable(playerid,0);
            SetPlayerHealthAC(playerid, 100.0);
			PlayerInfo[playerid][pHP] = 100;
			PlayerInfo[playerid][pCash] = 100;
            SetPlayerSkin(playerid, 184);
            return true;
        }
        if(PlayerDeathmatch[playerid] > 0 && DeathmatchRound == 1)
        {
            DeathmatchPlayers -= 1;
            PlayerDeathmatch[playerid] = 0;
            PlayerInfo[playerid][pBolnicad] = 0;
            return true;
        }
        if(PlayerDeathmatch[playerid] != 0 && DeathmatchRound == 0)
	    {
            SetPlayerArmourAC(playerid, 0);
	        SetPlayerHealthAC(playerid, 100);
	        PlayerInfo[playerid][pHP] = 100;
            DelGun(playerid);
	        ResetPlayerWeapons(playerid);
            CP[playerid] = 0;
            DisablePlayerCheckpoint(playerid);
            PlayerInfo[playerid][pBolnicad] = 0;
            if(PlayerDeathmatch[playerid] == 1)
	        {
	            GiveWeapon(playerid, 24, 90);
   		        if(TeamMap == 1)
  			    {
	                new rand;
	                rand = random(sizeof(DeathmatchSpawnsRed));
	                Q_SetPlayerPos(playerid, DeathmatchSpawnsRed[rand][0], DeathmatchSpawnsRed[rand][1], DeathmatchSpawnsRed[rand][2]);
			        SetPlayerInterior(playerid, 10);
		            PlayerInfo[playerid][pInt] = 10;
		            PlayerInfo[playerid][pBolnicad] = 0;
	            }
			    else if(TeamMap == 2)
			    {
   			        new rand;
		            rand = random(sizeof(DeathmatchSpawnsRed2));
			        Q_SetPlayerPos(playerid, DeathmatchSpawnsRed2[rand][0], DeathmatchSpawnsRed2[rand][1], DeathmatchSpawnsRed2[rand][2]);
			        SetPlayerInterior(playerid, 0);
	                PlayerInfo[playerid][pInt] = 0;
	                PlayerInfo[playerid][pBolnicad] = 0;
			    }
			    else if(TeamMap == 3)
			    {
      		        new rand;
		   	        rand = random(sizeof(DeathmatchSpawnsRed2MAP));
			        Q_SetPlayerPos(playerid, DeathmatchSpawnsRed2MAP[rand][0], DeathmatchSpawnsRed2MAP[rand][1], DeathmatchSpawnsRed2MAP[rand][2]);
			        SetPlayerInterior(playerid, 0);
	                PlayerInfo[playerid][pInt] = 0;
	                PlayerInfo[playerid][pBolnicad] = 0;
			    }
			    else if(TeamMap == 4)
			    {
      		        new rand;
		   	        rand = random(sizeof(DeathmatchSpawnsRed2MAP2));
			        Q_SetPlayerPos(playerid, DeathmatchSpawnsRed2MAP2[rand][0], DeathmatchSpawnsRed2MAP2[rand][1], DeathmatchSpawnsRed2MAP2[rand][2]);
			        SetPlayerInterior(playerid, 0);
 	                PlayerInfo[playerid][pInt] = 0;
 	                PlayerInfo[playerid][pBolnicad] = 0;
				}
      	        SetPlayerSkin(playerid, 264);
                SetPlayerColor(playerid,Cvet_1);
 		    }
 		    if(PlayerDeathmatch[playerid] == 2)
	        {
      	        GiveWeapon(playerid, 24, 90);
      	        if(TeamMap == 1)
      		    {
      		        new rand;
	    	        rand = random(sizeof(DeathmatchSpawnsBlue));
			        Q_SetPlayerPos(playerid, DeathmatchSpawnsBlue[rand][0], DeathmatchSpawnsBlue[rand][1], DeathmatchSpawnsBlue[rand][2]);
			        SetPlayerInterior(playerid, 10);
	                PlayerInfo[playerid][pInt] = 10;
	                PlayerInfo[playerid][pBolnicad] = 0;
		    	}
		    	else if(TeamMap == 2)
			    {
   			        new rand;
		   	        rand = random(sizeof(DeathmatchSpawnsBlue2));
			        Q_SetPlayerPos(playerid, DeathmatchSpawnsBlue2[rand][0], DeathmatchSpawnsBlue2[rand][1], DeathmatchSpawnsBlue2[rand][2]);
			        SetPlayerInterior(playerid, 0);
		            PlayerInfo[playerid][pInt] = 0;
		            PlayerInfo[playerid][pBolnicad] = 0;
			    }
			    else if(TeamMap == 3)
			    {
      		        new rand;
		   	        rand = random(sizeof(DeathmatchSpawnsBlue2MAP));
			        Q_SetPlayerPos(playerid, DeathmatchSpawnsBlue2MAP[rand][0], DeathmatchSpawnsBlue2MAP[rand][1], DeathmatchSpawnsBlue2MAP[rand][2]);
			        SetPlayerInterior(playerid, 0);
	                PlayerInfo[playerid][pInt] = 0;
	                PlayerInfo[playerid][pBolnicad] = 0;
			    }
			    else if(TeamMap == 4)
			    {
      		        new rand;
		   	        rand = random(sizeof(DeathmatchSpawnsBlue2MAP2));
			        Q_SetPlayerPos(playerid, DeathmatchSpawnsBlue2MAP2[rand][0], DeathmatchSpawnsBlue2MAP2[rand][1], DeathmatchSpawnsBlue2MAP2[rand][2]);
			        SetPlayerInterior(playerid, 0);
  	                PlayerInfo[playerid][pInt] = 0;
	                PlayerInfo[playerid][pBolnicad] = 0;
			    }
      	        SetPlayerSkin(playerid, 285);
      	        SetPlayerColor(playerid,Cvet_5);
 		    }
            SetPlayerVirtualWorld(playerid, 69);
            return true;
        }
        if(PlayerInfo[playerid][pBolnicad] == 1)
        {
            SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
            TogglePlayerControllable(playerid, 0);
            if(PlayerInfo[playerid][pMember] > 0) SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
            if(PlayerInfo[playerid][pMember] <= 0) SetPlayerSkin(playerid, PlayerInfo[playerid][pChar][0]);
            WantedLevel[playerid] = PlayerInfo[playerid][pWantedLevel];
            DollahScoreUpdate(playerid);
            SetPlayerSkills(playerid);
            InitLockDoors(playerid);
            SetPlayerToTeamColor(playerid);
            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerArmourAC(playerid,0);
            ResetPlayerWeapons(playerid);
            SetPlayerHealthAC(playerid, 10+random(50));
	        new rand = random(sizeof(BolkaSpawns));
            Q_SetPlayerPos(playerid, BolkaSpawns[rand][0], BolkaSpawns[rand][1], BolkaSpawns[rand][2]);
            PlayerInfo[playerid][pBolnica] = 0;
            SetPlayerStraps(playerid);
            PicCP[playerid] = 0;
			CP[playerid] = 0;
            new Bolnicadialog[] = "{FFFFFF}你好!你在 'SA' 市医院.\n{20B2AA}你需要治疗. (靠近病床,输入 /hospital)";
            ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}医生",Bolnicadialog,"确定","");
            return true;
        }
 		SetPlayerToTeamColor(playerid);
		DollahScoreUpdate(playerid);
		SetPlayerHealthAC(playerid, PlayerInfo[playerid][pHP]);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 0);
		if(PlayerInfo[playerid][pHP] > 100) PlayerInfo[playerid][pHP] = 100;
		if(PlayerInfo[playerid][pWantedLevel] >= 1) SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWantedLevel]), WantedPoints[playerid]++;
		if(PlayerInfo[playerid][pJailed] == 1)
		{
			if(PlayerInfo[playerid][pMestoJail] == 1)
			{
		        SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
                TogglePlayerControllable(playerid, 0);
                SetPlayerVirtualWorld(playerid, 16);
			    SetPlayerInterior(playerid, 0);
                new rand;
   	            rand = random(sizeof(Spawntyrmasa));
                Q_SetPlayerPos(playerid, Spawntyrmasa[rand][0], Spawntyrmasa[rand][1], Spawntyrmasa[rand][2]);
				PlayerInfo[playerid][pBolnicad] = 0;
				return true;
			}
			if(PlayerInfo[playerid][pMestoJail] == 2)
			{
		        SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
                TogglePlayerControllable(playerid, 0);
                SetPlayerVirtualWorld(playerid, 16);
			    SetPlayerInterior(playerid, 0);
                new rand;
   	            rand = random(sizeof(Spawntyrmasa));
                Q_SetPlayerPos(playerid, Spawntyrmasa[rand][0], Spawntyrmasa[rand][1], Spawntyrmasa[rand][2]);
				PlayerInfo[playerid][pBolnicad] = 0;
				return true;
			}
			if(PlayerInfo[playerid][pMestoJail] == 3)
			{
		        SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
                TogglePlayerControllable(playerid, 0);
                SetPlayerVirtualWorld(playerid, 16);
			    SetPlayerInterior(playerid, 0);
                new rand;
   	            rand = random(sizeof(Spawntyrmasa));
                Q_SetPlayerPos(playerid, Spawntyrmasa[rand][0], Spawntyrmasa[rand][1], Spawntyrmasa[rand][2]);
				PlayerInfo[playerid][pBolnicad] = 0;
				return true;
			}
		}
		else if(PlayerInfo[playerid][pJailed] == 4)
		{
		    SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
            TogglePlayerControllable(playerid, 0);
			SetPlayerInterior(playerid, 7);
			SetPlayerVirtualWorld(playerid, 30);
			Q_SetPlayerPos(playerid,774.2896,-76.2518,1000.6538);
			PlayerInfo[playerid][pBolnicad] = 0;
			return true;
		}
		if(PlayerInfo[playerid][pPhousekey] != 799)
		{
			if(PlayerInfo[playerid][pSpawnChange])
			{
                new house = PlayerInfo[playerid][pPhousekey];
				SetPlayerInterior(playerid,HouseInfo[house][hInt]);
				Q_SetPlayerPos(playerid, HouseInfo[house][hExitx], HouseInfo[house][hExity],HouseInfo[house][hExitz]);
				PlayerInfo[playerid][pLocal] = house;
				PlayerInfo[playerid][pInt] = HouseInfo[house][hInt];
				SetPlayerVirtualWorld(playerid, house+50);
				umer[playerid] = 0;
				return true;
			}
		}
		if(PlayerInfo[playerid][pPhousekey2] != 799)
		{
			if(PlayerInfo[playerid][pSpawnChange])
			{
                new house = PlayerInfo[playerid][pPhousekey2];
				SetPlayerInterior(playerid,HouseInfo[house][hInt]);
				Q_SetPlayerPos(playerid, HouseInfo[house][hExitx], HouseInfo[house][hExity],HouseInfo[house][hExitz]);
				PlayerInfo[playerid][pLocal] = house;
				PlayerInfo[playerid][pInt] = HouseInfo[house][hInt];
				SetPlayerVirtualWorld(playerid, house+50);
				umer[playerid] = 0;
				return true;
			}
		}
		switch(PlayerInfo[playerid][pMember])
		{
			case 1:
			{
				SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
                TogglePlayerControllable(playerid, 0);
				SetPlayerInterior(playerid, 0);
				Q_SetPlayerPos(playerid, 1553.8885,-1652.2020,2110.5356);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);
				return true;
			}
			case 2:
			{
                SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
                TogglePlayerControllable(playerid, 0);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 58);
			 	Q_SetPlayerPos(playerid, 980.4495,67.2359,1001.9500);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerFacingAngle(playerid, 87.8174);
				return true;
			}
			case 3:
			{
                SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
                TogglePlayerControllable(playerid, 0);
				SetPlayerInterior(playerid, 0);
				Q_SetPlayerPos(playerid, -1469.4570,438.4957,26.1969);
				SetPlayerFacingAngle(playerid, 3.8562);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);
				return 1;
			}
			case 4:
			{
				if(PlayerInfo[playerid][pJobHeal] == 1)
				{
                    SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
                    TogglePlayerControllable(playerid, 0);
					SetPlayerInterior(playerid, 0);
					Q_SetPlayerPos(playerid, 1152.1605,-1302.2560,1001.9739);
					SetPlayerFacingAngle(playerid, 109.0788);
				}
				return 1;
			}
			case 7:
			{
				SetPlayerInterior(playerid, 0);
				Q_SetPlayerPos(playerid, -490.9694,323.0765,2004.5859);
				SetPlayerFacingAngle(playerid, 182.7769);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);
				SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
    			TogglePlayerControllable(playerid, 0);
				return 1;
			}
			case 8:
			{
				SetPlayerInterior(playerid, 0);
				Q_SetPlayerPos(playerid, 28.0192,0.1151,1200.7729);
				SetPlayerFacingAngle(playerid, 90.180);
				SetPlayerVirtualWorld(playerid, 0);
				SetTimerEx("UnFreezePlayer", 6000, false, "i", playerid);
  				TogglePlayerControllable(playerid, 0);
				return 1;
			}
			case 9:
			{
				SetPlayerInterior(playerid, 10);
				Q_SetPlayerPos(playerid, 221.2526,111.5752,1010.2118);
				SetPlayerFacingAngle(playerid, 268.9050);
				PlayerInfo[playerid][pInt] = 10;
				return 1;
			}
			case 11:
			{
			    SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
                TogglePlayerControllable(playerid, 0);
				Q_SetPlayerPos(playerid, 1407.7733,-1668.1418,13.6859);
				SetPlayerFacingAngle(playerid, 359.7218);
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);
				return 1;
			}
			case 16:
			{
			    SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
                TogglePlayerControllable(playerid, 0);
				SetPlayerInterior(playerid, 0);
				Q_SetPlayerPos(playerid, 76.0396,2240.6492,632.2675);
				SetPlayerFacingAngle(playerid, 2.0000);
				SetPlayerVirtualWorld(playerid, 1);
				lNews[playerid] = 0;
				return 1;
			}
			case 19:
			{
				if(forma[playerid] == 1)
				{
				    SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
                    TogglePlayerControllable(playerid, 0);
					SetPlayerSkin(playerid, 252);
					SetPlayerInterior(playerid, 0);
					Q_SetPlayerPos(playerid, -1815.8416,2975.6077,1514.3453);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerVirtualWorld(playerid, 57);
					return true;
				}
				SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
                TogglePlayerControllable(playerid, 0);
				SetPlayerInterior(playerid, 0);
				Q_SetPlayerPos(playerid, -1815.8416,2975.6077,1514.3453);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 57);
				SetPlayerStraps(playerid);
				return true;
			}
			case 20:
			{
				SetPlayerInterior(playerid, 3);
				Q_SetPlayerPos(playerid, 211.3636,184.3113,1003.0313);
				SetPlayerFacingAngle(playerid, 174.3579);
				PlayerInfo[playerid][pInt] = 122;
				SetPlayerVirtualWorld(playerid, 122);
				return true;
			}
			case 33:
			{
				SetPlayerInterior(playerid, 15);
				SetPlayerVirtualWorld(playerid, 5);
				Q_SetPlayerPos(playerid, 372.0985,-53.2946,1076.4708);
				SetPlayerFacingAngle(playerid, 90.0000);
				return true;
			}
			case 5:
			{
			    SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
                TogglePlayerControllable(playerid, 0);
				SetPlayerInterior(playerid, 0);
				Q_SetPlayerPos(playerid, 951.1161,102.1748,1001.2659);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);
				return true;
			}
			case 6:
			{
                SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
                TogglePlayerControllable(playerid, 0);
				SetPlayerInterior(playerid, 0);
				Q_SetPlayerPos(playerid, 274.0898,225.5657,3340.9299);
				SetPlayerVirtualWorld(playerid, 0);
				return true;
			}
			case 12:
			{
				Q_SetPlayerPos(playerid, -722.1823,2424.8528,1500.9778);
				SetPlayerFacingAngle(playerid, 100);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				return true;
			}
			case 13:
			{
			    SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
                TogglePlayerControllable(playerid, 0);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerFacingAngle(playerid, 263.0497);
				Q_SetPlayerPos(playerid, 2781.5593,-1635.5283,10.9139);
				PlayerInfo[playerid][pInt] = 0;
				return true;
			}
			case 14:
			{
				SetPlayerInterior(playerid, 5);
				Q_SetPlayerPos(playerid, 1265.7104,-793.7453,1084.0078);
				PlayerInfo[playerid][pInt] = 5;
				SetPlayerVirtualWorld(playerid, 1);
				return true;
			}
			case 15:
			{
                SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
                TogglePlayerControllable(playerid, 0);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				Q_SetPlayerPos(playerid,  2486.7405,-1637.6354,14.2259);
				SetPlayerFacingAngle(playerid, 90.90);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);
				return true;
			}
			case 17:
			{
                SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
                TogglePlayerControllable(playerid, 0);
				SetPlayerFacingAngle(playerid, 180.180);
				Q_SetPlayerPos(playerid,1997.1699,1339.8756,632.0948);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid, 0);
				return true;
			}
			case 18:
			{
                SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
                TogglePlayerControllable(playerid, 0);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				Q_SetPlayerPos(playerid, 2742.1770,-1765.3320,1117.2770);
				RemovePlayerAttachedObject(playerid, 1);
				PlayerInfo[playerid][pInt] = 0;
				return true;
			}
		}
		//if(PlayerInfo[playerid][pLevel] > 0 && PlayerInfo[playerid][pLevel] <= 2)
		/*if(PlayerInfo[playerid][pLevel] > 0)
		{
			Q_SetPlayerPos(playerid,2043.4955,-2021.4524,14.0345);
			SetPlayerFacingAngle(playerid, 92.531);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
            TogglePlayerControllable(playerid, 0);
        }
 		if(PlayerInfo[playerid][pLevel] >= 3 && PlayerInfo[playerid][pLevel] <= 5)
		{
			Q_SetPlayerPos(playerid,2043.4955,-2021.4524,14.0345);
			SetPlayerFacingAngle(playerid, 92.531);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
            TogglePlayerControllable(playerid, 0);
        }
        if(PlayerInfo[playerid][pLevel] >= 6 && PlayerInfo[playerid][pLevel] <= 9)
		{
			Q_SetPlayerPos(playerid,2043.4955,-2021.4524,14.03457);
			SetPlayerFacingAngle(playerid, 92.531);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
            TogglePlayerControllable(playerid, 0);
        }*/
        if(PlayerInfo[playerid][pLevel] >= 1 && PlayerInfo[playerid][pLevel] <= 9999)
		{
			Q_SetPlayerPos(playerid,2043.4955,-2021.4524,14.0345);
			SetPlayerFacingAngle(playerid, 92.531);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
            TogglePlayerControllable(playerid, 0);
        }
       	if(PlayerInfo[playerid][pQuest] == 1)
		{
 			new rand = random(sizeof(gRandomPlayerSpawns));
			Q_SetPlayerPos(playerid, gRandomPlayerSpawns[rand][0], gRandomPlayerSpawns[rand][1], gRandomPlayerSpawns[rand][2]);
  			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
			TogglePlayerControllable(playerid, 0);
		}
    }
	return true;
}

publics: OnVehicleDeath(vehicleid, killerid)
{
	if(Indicators_xqz[vehicleid][2]) DestroyObject(Indicators_xqz[vehicleid][2]), DestroyObject(Indicators_xqz[vehicleid][3]),DestroyObject(Indicators_xqz[vehicleid][5]),Indicators_xqz[vehicleid][2]=0;
	if(Indicators_xqz[vehicleid][0]) DestroyObject(Indicators_xqz[vehicleid][0]), DestroyObject(Indicators_xqz[vehicleid][1]),DestroyObject(Indicators_xqz[vehicleid][4]),Indicators_xqz[vehicleid][0]=0;
    foreach(new i : Player)
	{
	    if(IsPlayerConnected(i) && GetPlayerRentTaxi[i] == vehicleid)
		{
	 		SendServerMessage(i, "你的工作车辆被毁了!");
	  		SetPVarInt(i, "OnPlayerExitCar", 0);
			GetPlayerRentTaxi[i] = INVALID_VEHICLE_ID;
			TaxiJobStarted[i] = false;
			PlayerTaxiStarted[i] = false;
			foreach(new d : Player)
			{
	    		if(IsPlayerConnected(d) && PlayerCalledTaxi[d]) RemovePlayerMapIcon(i, d);
	  		}
			break;
    	}
	}
	return 1;
}

publics: OnPlayerDeath(playerid, killerid, reason)
{
    for(new i; i < 3; i++) TextDrawHideForPlayer(playerid, GPSEnabled[i]);
    InfoSkate[playerid][sActive] = false;
	if(GetPVarInt(playerid,"fire_use") >= 1)
	{
		SetPVarInt(playerid,"fire_use",0);
		for(new oject = FireObject[playerid][0];oject < (FireObject[playerid][1]+1);oject++)
		{
			DestroyDynamicObject(oject);
		}
		DestroyDynamicArea(FireSphere[playerid]);
		FireSphere[playerid] = -1;
	}
	if(GetPVarInt(playerid,"INCAROK") > 0)
	{
 		TogglePlayerSpectating(playerid, 0);
		TextDrawHideForPlayer(playerid,CheckSobClosed);
        TogglePlayerControllable(playerid, 1);
		DestroyDynamic3DTextLabel(Player3DTextIn[playerid]);
 		SetPVarInt(playerid,"INCAROK",0);
   		VehicleInfo[GetPVarInt(playerid,"INCAROK")][vInputID] = 0;
	}
	DeletePVar(playerid,"VodolazOxygenTimer");
	SetPVarInt(playerid,"VodolazStart",0);
	DeletePVar(playerid,"VodolazZP");
	DeletePVar(playerid,"VodolazOxygen");
	DeletePVar(playerid,"VodolazGruzPicked");
	RemovePlayerMapIcon(playerid, 0);
	for(new i;i<5; i++)
	{
		PlayerTextDrawHide(playerid,JobStats[playerid][i]);
	}
	if(GetPVarInt(playerid, "learnobject") == 1)
	{
	    SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "", 0, 140, "Arial", 24, 0, -1, 0, 1);
		DestroyPlayerObject(playerid, LearnObject[playerid]);
		KillTimer(LearnTimer[playerid]);
		LearnObject[playerid] = 0;
	}
	if(killerid != INVALID_PLAYER_ID)
	{
 		FloodKill{killerid}++;
 		if(FloodKill{killerid} > 3)
		{
			SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Kill Flood  #1)"),GKick(playerid);
	 		return 1;
    	}
   	}
    Spawn[playerid] = false;
	if(killerid != INVALID_PLAYER_ID)
 	{
  		if(!IsPlayerInAnyVehicle(killerid))
		{
  			if(!IsPlayerInRangeOfPlayer(150.0, playerid, killerid) && GetPlayerWeapon(killerid) == 0) SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Kill Flood #2 )"),GKick(playerid);
		}
	}
    TextDrawHideForPlayer(playerid,heal44[playerid]);
    Update3DTextLabelText(Damage[playerid],COLOR_BLUE," ");
 	if(duel_system == 1)
    {
        if(killerid == setplayerid || killerid == getplayerid)
        {
            if(killerid == getplayerid)
            {
                duel_gkiller++;
                new name[MAX_PLAYER_NAME];
                GetPlayerName(getplayerid, name, sizeof(name));
                SendSyntaxMessage(getplayerid,"你杀死了对手");
                PlayerInfo[setplayerid][pBolnicad] = 0;
                SpawnPlayer(setplayerid);
            }
            if(killerid == setplayerid)
            {
                duel_skiller++;
                new name[MAX_PLAYER_NAME];
                GetPlayerName(setplayerid, name, sizeof(name));
                SendSyntaxMessage(setplayerid,"你杀死了对手");
                PlayerInfo[getplayerid][pBolnicad] = 0;
                SpawnPlayer(getplayerid);
            }
        }
    }
	if(PlayerInfo[playerid][pMaskON]>0)
	{
 		PlayerInfo[playerid][pMaskON]=0;
 		SetPlayerToTeamColor(playerid);
	}
	if(isPlayingBasketBall(playerid))
	{
		exitBBallGame(playerid);
		SetPVarInt(playerid, "BrosilBBall", 0);
		SetPVarInt(playerid, "ExitBBall", 0);
	}
	if(IsAGang(killerid) && IsAGang(playerid) && killerid != INVALID_PLAYER_ID)
	{
		for(new i; i < TOTALGZ; i++)
		{
			if(GZInfo[i][ZoneOnBattle] == 1)
			{
				if(PlayerInfo[killerid][pMember] != PlayerInfo[playerid][pMember])
				{
					if(PlayerInfo[killerid][pMember] == GZInfo[i][gNapad] || PlayerInfo[killerid][pMember] == GZInfo[i][gFrakVlad])
					{
						if(PlayerInfo[playerid][pMember] == GZInfo[i][gNapad] || PlayerInfo[playerid][pMember] == GZInfo[i][gFrakVlad])
						{
							SendDead(PlayerInfo[killerid][pMember],PlayerInfo[playerid][pMember],killerid,playerid,reason);
							CountOnZone[PlayerInfo[killerid][pMember]]++;
							SetPVarInt(killerid,"killed_shot", GetPVarInt(killerid,"killed_shot")+1);
							break;
						}
					}
				}
			}
		}
	}
    PlayerPlaySound(playerid, 30803, 0.0, 0.0, 0.0);
    ashlem[playerid] = 0;
    if(PlayerInfo[playerid][pJailed] == 1)
    {
        PlayerInfo[playerid][pBolnicad] = 0;
        return true;
    }
    PlayerInfo[playerid][pBolnicad] = 1 && PlayerInfo[playerid][pMember] == 0;
	if(Trenag[playerid] == 1) { SendSyntaxMessage(playerid,"您完成乐课程."); EndKach(playerid,1); }
	if(Trenag[playerid] == 2) { SendSyntaxMessage(playerid,"您完成乐课程."); EndKach(playerid,2); }
	if(Trenag[playerid] == 3) { SendSyntaxMessage(playerid,"您完成乐课程."); EndKach(playerid,3); }
	if(Trenag[playerid] == 4) { SendSyntaxMessage(playerid,"您完成乐课程."); EndKach(playerid,4); }
	if(fightSID[playerid] != INVALID_PLAYER_ID && GoFight == 1)
	{
        format(YCMDstr, sizeof(YCMDstr), "―  决斗败北!!!失去: $%d.",fightM);
		SendClientMessage(playerid, -1, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), "―  决斗胜利!!!赚取: $%d.",fightM*2);
		SendClientMessage(fightSID[playerid], -1, YCMDstr);
        PlayerInfo[fightSID[playerid]][pCash] += fightM*2;
        fightM = 0; TotalFight = 0; GoFight = 0;
	    UpdateFighText();
	    SpawnPlayer(fightSID[playerid]);
	    SpawnPlayer(fightID[playerid]);
	    fightID[playerid] = INVALID_PLAYER_ID;
	    fightSID[playerid] = INVALID_PLAYER_ID;
	    fightID[fightSID[playerid]] = INVALID_PLAYER_ID;
	    fightSID[fightSID[playerid]] = INVALID_PLAYER_ID;
	    GFID1 = INVALID_PLAYER_ID; GFID2 = INVALID_PLAYER_ID;
	    return true;
	}
    new Float:pPosX, Float:pPosY, Float:pPosZ;
    for(new i_slot = 0, gun, ammo; i_slot != 12; i_slot++)
    {
        GetPlayerWeaponData(playerid, i_slot, gun, ammo);
        if(gun != 0 && ammo != 0) CreateDroppedGun(gun, ammo, pPosX+random(2)-random(2), pPosY+random(2)-random(2), pPosZ);
    }
	if(PlayerDeathmatch[playerid] != 0 && DeathmatchRound == 0)
    {
        if(PlayerDeathmatch[killerid] != PlayerDeathmatch[playerid])
	    {
            new Float:health;
            GetPlayerHealth(killerid, health);
            if(health < 100)
	        {
                GiveWeapon(killerid, 24, 30);
			    SetPlayerHealthAC(killerid, health + 25.0);
			    GameTextForPlayer(killerid, "~r~+1 kill~n~~g~+25 hp~n~~w~+30 patr", 2000, 4);
	        }
	        else
			{
			    GiveWeapon(killerid, 24, 30);
			    SetPlayerHealthAC(killerid, health + 25.0);
			    GameTextForPlayer(killerid, "~r~+1 kill~n~~g~+25 hp~n~~w~+30 patr", 2000, 4);
			}
        }
	    if(PlayerDeathmatch[playerid] == 1)
        {
		    if(PlayerDeathmatch[killerid] != 1)
			{
                new str1[6];
                DeathmatchKill[1]++;
	            format(str1, sizeof(str1),"%d",DeathmatchKill[1]);
		        TextDrawSetString(Tdboi[4], str1);
		        PlayerInfo[killerid][pBolnicad] = 0;
            }
        }
        if(PlayerDeathmatch[playerid] == 2)
        {
            if(PlayerDeathmatch[killerid] != 2)
			{
                new str2[6];
	            DeathmatchKill[0]++;
                format(str2, sizeof(str2),"%d",DeathmatchKill[0]);
                TextDrawSetString(Tdboi[3], str2);
                PlayerInfo[killerid][pBolnicad] = 0;
            }
        }
        return true;
    }
    if(PlayerPaintballing[playerid] != 0)
	{
	    if(PaintballRab == 1)
	    {
	        PlayerPaintballDeaths[playerid] += 1;
	        PlayerInfo[playerid][pBolnicad] = 0;
	        if(killerid == playerid)
			{
				return true;
			}
			PlayerPaintballKills[killerid] += 1;
			PlayerInfo[playerid][pBolnicad] = 0;
			if(PlayerPaintballKills[killerid] > PaintballWinnerKills)
			{
				PaintballWinner = killerid;
				PaintballWinnerKills = PlayerPaintballKills[killerid];
				PlayerInfo[playerid][pBolnicad] = 0;
				foreach(new i : Player)
				{
					if(PlayerPaintballing[i] != 0)
					{
						format(YCMDstr, sizeof(YCMDstr), "{ff0000}― [PB]: {FFFFFF} %s 胜利!!! {ffa500}%d {FFFFFF}杀人数.",Name(killerid),PaintballWinnerKills);
						SendClientMessage(i, -1, YCMDstr);
					}
				}
			}
		}
		return true;
	}
	if(GetPVarInt(playerid, "Noun") > 0)
 	{
 	    if(GetPVarInt(playerid, "NounObjID") > 0)
 	    {
    		DestroyObject(NounObject[GetPVarInt(playerid, "NounObjID")]);
			if(GetPVarInt(playerid, "NounObjID") < 10) NounObject[GetPVarInt(playerid, "NounObjID")] = CreateObject(3930,560.3654+random(10),840.2457+random(75),-44.00700073,0.00000000,0.00000000,0.00000000);
			else NounObject[GetPVarInt(playerid, "NounObjID")] = CreateObject(3930,615.3654+random(55),815.2457+random(65),-43.6009,0.00000000,0.00000000,0.00000000);
            DeletePVar(playerid, "NounObjID");
 	    }
 		DeletePVar(playerid, "Noun");
		DeletePVar(playerid, "OldMinerSkin");
		DeletePVar(playerid, "MinerKG");
		DeletePVar(playerid, "MinerKG_One");
	 	DisablePlayerRaceCheckpoint(playerid);
	}
	if(GetPVarInt(playerid,"YEAH") == 1)
	{
		DisablePlayerRaceCheckpoint(playerid);
		SetPVarInt(playerid,"YEAH",0);
		DeletePVar(playerid,"Spongebob");
		DeletePVar(playerid,"Mario");
		DeletePVar(playerid,"SpiderPig");
		DeletePVar(playerid, "GPSID");
	}
	TextDrawHideForPlayer(playerid, DRAP);
	PlayerHealth[playerid] = 100;
	PlayerInfo[playerid][pHP] = 100;
	SetPlayerHealthAC(playerid, PlayerHealth[playerid]);
	new name[MAX_PLAYER_NAME];
	zips[playerid] = 0;
	PlayerInfo[playerid][pSlot][0] = 0;
	PlayerInfo[playerid][pSlot][1] = 0;
	PlayerInfo[playerid][pSlot][2] = 0;
	PlayerInfo[playerid][pSlot][3] = 0;
	PlayerInfo[playerid][pSlot][4] = 0;
	PlayerInfo[playerid][pSlot][5] = 0;
	PlayerInfo[playerid][pSlot][6] = 0;
	PlayerInfo[playerid][pSlot][7] = 0;
	PlayerInfo[playerid][pSlot][8] = 0;
	PlayerInfo[playerid][pSlot][9] = 0;
	PlayerInfo[playerid][pSlot][10] = 0;
	PlayerInfo[playerid][pSlotammo][0] = 0;
	PlayerInfo[playerid][pSlotammo][1] = 0;
	PlayerInfo[playerid][pSlotammo][2] = 0;
	PlayerInfo[playerid][pSlotammo][3] = 0;
	PlayerInfo[playerid][pSlotammo][4] = 0;
	PlayerInfo[playerid][pSlotammo][5] = 0;
	PlayerInfo[playerid][pSlotammo][6] = 0;
	PlayerInfo[playerid][pSlotammo][7] = 0;
	PlayerInfo[playerid][pSlotammo][8] = 0;
	PlayerInfo[playerid][pSlotammo][9] = 0;
	PlayerInfo[playerid][pSlotammo][10] = 0;
	RemovePlayerAttachedObject(playerid,1);
	RemovePlayerAttachedObject(playerid,2);
	RemovePlayerAttachedObject(playerid,3);
	RemovePlayerAttachedObject(playerid,4);
	RemovePlayerAttachedObject(playerid,0);
	arenda[playerid] = 0;
	usegruz[playerid] = 0;
	usemats[playerid] = 0;
	if(SelectChar[playerid] == 255)
	{
		SetPlayerSkin(playerid, OldSkin[playerid]);
		PlayerInfo[playerid][pChar][0] = OldSkin[playerid];
		SelectChar[playerid] = 0;
	}
	new weaponid;
	new gunname[25];
	GetWeaponName(weaponid, gunname, sizeof(gunname));
	PlayerInfo[playerid][pDrugtime] = 0;
	forma[playerid] = 0;
	proverkaforma[playerid] = 0;
	new Float:px,Float:py,Float:pz;
	GetPlayerName(playerid, name, sizeof(name));
	PlayerInfo[playerid][pLocal] = 255;
	if(IsPlayerInAnyVehicle(playerid))
	{
		RemovePlayerFromVehicle(playerid);
	}
	GetPlayerPos(playerid, px, py, pz);
	DisablePlayerCheckpoint(playerid);
	keys[playerid] = 0;
	if(PlayerInfo[playerid][pMember] == 0)
	{
		umer[playerid] = 1;
	}
	LiveOfferls[playerid] = MAX_SLOTS;
	TalkingLivels[playerid] = 255;
	Tel[playerid] = 255;
	SetPVarInt(playerid, "UnSurfCar", 0);
	if(killerid != INVALID_PLAYER_ID)
 	{
		if(!IsACop(killerid) && !IsAGang(killerid) && !IsAArm(killerid))
  		{
  		    if(!IsPlayerInRangeOfPoint(playerid,100,407.2613,2503.5266,16.4844))
  		    {
				if(PlayerInfo[killerid][pZakonp] > 1) PlayerInfo[killerid][pZakonp] --; PlayerInfo[killerid][pKills] += 1;
				if(PlayerInfo[killerid][pWantedLevel] < 6) PlayerInfo[killerid][pWantedLevel] += 1; SetPlayerWantedLevel(killerid,WantedLevel[killerid] += 1);
				SendClientMessage(killerid,COLOR_YELLOW,"― 你被列入了通缉名单! 原因: 袭击/谋杀");
				format(YCMDstr,sizeof(YCMDstr),"― 你当前的统计等级: %d",PlayerInfo[killerid][pWantedLevel]);
				SendClientMessage(killerid,COLOR_YELLOW,YCMDstr);
				format(YCMDstr,sizeof(YCMDstr),"[对讲机]: %s[%d] 被通缉了! | 原因: 杀人 | 通缉等级: %d",Name(killerid),killerid,PlayerInfo[killerid][pWantedLevel]);
				SendRadioMessage(1, TEAM_BLUE_COLOR, YCMDstr);
			}
 		}
	}
	if(gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
	{
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
	}
	new caller = Mobile[playerid];
	if(caller != MAX_SLOTS)
	{
		if(caller < MAX_SLOTS)
		{
	 		SendServerMessage(caller, "连接中断.");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = MAX_SLOTS;
		}
		Mobile[playerid] = MAX_SLOTS;
		CellTime[playerid] = 0;
	}
	new killer[MAX_PLAYER_NAME];
	GetPlayerName(killerid, killer, sizeof(killer));
	if(IsAGang(killerid))
	{
		if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
		{
			for(new i = 1; i <= TOTALGZ; i++)
			{
				if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
				{
					if(PlayerInfo[playerid][pMember] == 19 && forma[killerid] == 0)
					{
						forma[killerid] = 1;
						PlayerInfo[playerid][pModel] = 252;
						SendSyntaxMessage(playerid, "你丢弃了军装");
						SendSyntaxMessage(killerid, "你被军队踢出 ( /switchskin )");
						PlayerInfo[killerid][pZakonp] -= 1;
						SpawnPlayer(playerid);
					}
				}
			}
		}
	}
	if(IsAGang(killerid))
	{
		if(IsACop(playerid))
		{
			if(PlayerInfo[playerid][pMember] != 2 || PlayerInfo[playerid][pLeader] != 2)
			{
				for(new i =1;i<=TOTALGZ;i++)
				{
					if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
					{
						keys[killerid] += 1;
						SendSyntaxMessage(playerid, "你丢失了监控的钥匙!");
						SendSyntaxMessage(killerid, "你从警察身上取下了监控钥匙 ( /escape )");
						PlayerInfo[killerid][pZakonp] -= 1;
					}
				}
			}
		}
	}
	if(gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
	{
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
	}
	DisablePlayerCheckpoint(playerid);
	return true;
}

publics: OnPlayerSpawn(playerid)
{
	if(JobFarm[playerid] == true)
	{
		DisablePlayerCheckpoint(playerid);
		Farm[playerid] = 0;
  		JobFarm[playerid] = false;
  		TextDrawFarm[playerid] = 0;
  		if(IsPlayerAttachedObjectSlotUsed(playerid,4)) RemovePlayerAttachedObject(playerid,4);
  		TextDrawHideForPlayer(playerid, FarmJob[0]);
  		TextDrawHideForPlayer(playerid, FarmJob[1]);
  		TextDrawHideForPlayer(playerid, FarmJob[2]);
  		TextDrawHideForPlayer(playerid, FarmJob[3]);
  		TextDrawHideForPlayer(playerid, FarmJob[4]);
  		TextDrawHideForPlayer(playerid, FarmJob[5]);
  		TextDrawHideForPlayer(playerid, FarmJob[6]);
  		CancelSelectTextDraw(playerid);
 		SendErrorMessage(playerid,"农民的工作被打断了. 你没有赚钱 !");
	}
/*	if(GetType(AccInvInfo[playerid][AccSlot[playerid]]) == 2)
 	{
       	new skinF = GetPlayerSkin(playerid);
        SetPlayerAttachedObject(playerid, 2, AccInvInfo[playerid][AccSlot[playerid]], 2, SkinOffSet[skinF][0], SkinOffSet[skinF][1], SkinOffSet[skinF][2], SkinOffSet[skinF][3], SkinOffSet[skinF][4], SkinOffSet[skinF][5], SkinOffSet[skinF][6], SkinOffSet[skinF][6], SkinOffSet[skinF][6]);
	}
    else
  	{
       	new typehatF = GetType(AccInvInfo[playerid][AccSlot[playerid]]);
        SetPlayerAttachedObject(playerid, 3, AccInvInfo[playerid][AccSlot[playerid]], 2, AccAngle[typehatF][0], 0.03, 0.0, AccAngle[typehatF][1], AccAngle[typehatF][2], AccAngle[typehatF][3]);
   	}*/
    DamagWarn{playerid} = 0;
    Spawn[playerid] = true;
    StatusAirTP[playerid] = GetTickCount();
    if(IsPlayerInAnyVehicle(playerid))
	{
		GetVehiclePos(CarID[playerid],AC_Air[playerid][0],AC_Air[playerid][1],AC_Air[playerid][2]);
	}
	else
	{
		GetPlayerPos(playerid,AC_Air[playerid][0],AC_Air[playerid][1],AC_Air[playerid][2]);
	}
    DelGun(playerid);
    PlayerInfo[playerid][pWork] = 0;
	if(PlayerInfo[playerid][pLogin] == 0) return SendErrorMessage(playerid,"你必须登录!"), GKick(playerid);
    KillTimer(STimer[playerid]);
    ashlem[playerid] = 0;
	SetPlayerWeapons(playerid);
	if(PlayerInfo[playerid][pMember] > 0) SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
	if(PlayerInfo[playerid][pMember] <= 0) SetPlayerSkin(playerid, PlayerInfo[playerid][pChar][0]);
	WantedLevel[playerid] = PlayerInfo[playerid][pWantedLevel];
	DollahScoreUpdate(playerid);
	SetPlayerSkills(playerid);
	SetPlayerSpawn(playerid);
	InitLockDoors(playerid);
	dinamicash[playerid] = CreateDynamicCP(1410.4180,-1668.3036,13.6859,1.5, 0, 0, playerid,5.0);
	time_lspawn = gettime();
	return true;
}

publics: OnPlayerEnterCheckpoint(playerid)
{
	if(OnReic[playerid] >= 2 && OnReic[playerid] <= 31)
	{
		SetPVarInt(playerid,"avtobusid",GetPlayerVehicleID(playerid));
		if(GetPVarInt(playerid,"avtobusid") == 0 || GetVehicleModel(GetPlayerVehicleID(playerid)) != 418) return SendServerMessage(playerid,"你不在巴士上");
	}
	if(OnReic[playerid]==2)
	{
		OnReic[playerid] = 3;
		Zarabotok[playerid] += 200;
		DisablePlayerCheckpoint(playerid);
		ost[1] = SetPlayerCheckpoint(playerid,1779.1481,-1728.9985,13.4758,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==3)
	{
		SendServerMessage(playerid,"等待10秒钟然后继续前进");
		OnReic[playerid]=4;
		Zarabotok[playerid] += 200;
		DisablePlayerCheckpoint(playerid);
		ost[2] = SetPlayerCheckpoint(playerid,1548.2910,-1728.7615,13.4760,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==4)
	{
		SendServerMessage(playerid,"等待10秒钟然后继续前进");
		OnReic[playerid]=5;
		Zarabotok[playerid] += 200;
		DisablePlayerCheckpoint(playerid);
		ost[3] = SetPlayerCheckpoint(playerid,1612.3464,-1330.1355,17.3934,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==5)
	{
		SendServerMessage(playerid,"等待10秒钟然后继续前进");
		OnReic[playerid]=6;
		Zarabotok[playerid] += 400;
		DisablePlayerCheckpoint(playerid);
		ost[4] = SetPlayerCheckpoint(playerid,1441.4835,-1030.1251,23.7492,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==6)
	{
		SendServerMessage(playerid,"等待10秒钟然后继续前进");
		OnReic[playerid]=7;
		Zarabotok[playerid] += 250;
		DisablePlayerCheckpoint(playerid);
		ost[5] = SetPlayerCheckpoint(playerid,1193.0847,-1344.4342,13.4927,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==7)
	{
		SendServerMessage(playerid,"等待10秒钟然后继续前进");
		OnReic[playerid]=8;
		Zarabotok[playerid] += 250;
		DisablePlayerCheckpoint(playerid);
		ost[6] = SetPlayerCheckpoint(playerid,710.3423,-1391.6857,13.5352,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==8)
	{
		SendServerMessage(playerid,"等待10秒钟然后继续前进");
		OnReic[playerid]=9;
		Zarabotok[playerid] += 250;
		DisablePlayerCheckpoint(playerid);
		ost[7] = SetPlayerCheckpoint(playerid,406.3640,-1471.2299,30.9416,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==9)
	{
		SendServerMessage(playerid,"等待10秒钟然后继续前进");
		OnReic[playerid]=10;
		Zarabotok[playerid] += 250; // 2k
		DisablePlayerCheckpoint(playerid);
		ost[8] = SetPlayerCheckpoint(playerid,383.9613,-2040.2288,7.9292,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==10)
	{
		SendServerMessage(playerid,"终点, 输入 /race 55 返回 ( 钱已经转给了你 ).");
		OnReic[playerid]= 0;
		PlayerInfo[playerid][pCash] += Zarabotok[playerid];
		Zarabotok[playerid] =0;
		RaceBus[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==12)
	{
		SendServerMessage(playerid,"等待10秒钟然后继续前进");
		OnReic[playerid]=13;
		DisablePlayerCheckpoint(playerid);
		ost[10] = SetPlayerCheckpoint(playerid,454.5985,-1509.1143,30.9148,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==13)
	{
		SendServerMessage(playerid,"等待10秒钟然后继续前进");
		OnReic[playerid]=14;
		Zarabotok[playerid] += 300;
		DisablePlayerCheckpoint(playerid);
		ost[11] = SetPlayerCheckpoint(playerid,728.6478,-1409.0177,13.4573,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==14)
	{
		SendServerMessage(playerid,"等待10秒钟然后继续前进");
		OnReic[playerid]=15;
		Zarabotok[playerid] += 400;
		DisablePlayerCheckpoint(playerid);
		ost[12] = SetPlayerCheckpoint(playerid,1220.5160,-1409.2909,13.2458,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==15)
	{
		SendServerMessage(playerid,"等待10秒钟然后继续前进");
		OnReic[playerid]=16;
		Zarabotok[playerid] += 500;
		DisablePlayerCheckpoint(playerid);
		ost[13] = SetPlayerCheckpoint(playerid,1446.2965,-1037.4871,23.7496,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==16)
	{
		SendServerMessage(playerid,"等待10秒钟然后继续前进");
		OnReic[playerid]=17;
		Zarabotok[playerid] += 500;
		DisablePlayerCheckpoint(playerid);
		ost[14] = SetPlayerCheckpoint(playerid,1573.0186,-1307.0331,17.2764,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==17)
	{
		SendServerMessage(playerid,"等待10秒钟然后继续前进");
		OnReic[playerid]=18;
		Zarabotok[playerid] += 500;
		DisablePlayerCheckpoint(playerid);
		ost[14] = SetPlayerCheckpoint(playerid,1489.1472,-1735.9417,13.4754,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==18)
	{
		SendServerMessage(playerid,"等待10秒钟然后继续前进");
		OnReic[playerid]=19;
		Zarabotok[playerid] += 500; // 3k
		DisablePlayerCheckpoint(playerid);
		ost[14] = SetPlayerCheckpoint(playerid,1762.5830,-1858.3102,13.5074,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==19)
	{
		SendServerMessage(playerid,"终点, 输入 /race 5 返回 ( 钱已经转给了你 ).");
		OnReic[playerid]=0;
		DisablePlayerCheckpoint(playerid);
		PlayerInfo[playerid][pCash] += Zarabotok[playerid];
		Zarabotok[playerid] = 0;
		SetPVarInt(playerid,"avtobusid",GetPlayerVehicleID(playerid));
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==20)
	{
		Zarabotok[playerid] += 200;
		SendClientMessage(playerid,COLOR_LIGHTRED,"等待10秒钟，然后移动到下一个点");
		OnReic[playerid]=19;
		DisablePlayerCheckpoint(playerid);
		ost[15] = SetPlayerCheckpoint(playerid,1393.0784,-1779.3207,13.6095,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==21)
	{
		Zarabotok[playerid] += 200;
		SendClientMessage(playerid,COLOR_LIGHTRED,"等待10秒钟，然后移动到下一个点");
		OnReic[playerid]=22;
		DisablePlayerCheckpoint(playerid);
		ost[16] = SetPlayerCheckpoint(playerid,1561.9222,-1596.3685,13.5942,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==22)
	{
		Zarabotok[playerid] += 600;
		SendClientMessage(playerid,COLOR_LIGHTRED,"等待10秒钟，然后移动到下一个点");
		OnReic[playerid]=23;
		DisablePlayerCheckpoint(playerid);
		ost[17] = SetPlayerCheckpoint(playerid,1816.7343,-1685.7841,13.5900,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==23)
	{
		Zarabotok[playerid] += 500;
		SendClientMessage(playerid,COLOR_LIGHTRED,"等待10秒钟，然后移动到下一个点");
		OnReic[playerid]=24;
		DisablePlayerCheckpoint(playerid);
		ost[18] = SetPlayerCheckpoint(playerid,2060.7688,-1928.0590,13.5916,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==24)
	{
		Zarabotok[playerid] += 250;
		SendClientMessage(playerid,COLOR_LIGHTRED,"等待10秒钟，然后移动到下一个点");
		OnReic[playerid]=25;
		DisablePlayerCheckpoint(playerid);
		ost[19] = SetPlayerCheckpoint(playerid,1957.5504,-2128.4673,13.5963,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==25)
	{
		Zarabotok[playerid] += 250;
		SendClientMessage(playerid,COLOR_LIGHTRED,"等待10秒钟，然后移动到下一个点");
		OnReic[playerid]=26;
		DisablePlayerCheckpoint(playerid);
		ost[20] = SetPlayerCheckpoint(playerid,1736.1047,-2287.2407,13.5812,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==26)
	{
		Zarabotok[playerid] += 300;
		SendClientMessage(playerid,COLOR_LIGHTRED,"等待10秒钟，然后移动到下一个点");
		OnReic[playerid]=27;
		DisablePlayerCheckpoint(playerid);
		ost[21] = SetPlayerCheckpoint(playerid,1710.2740,-2197.8381,13.5076,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==27)
	{
		Zarabotok[playerid] += 300;
		SendClientMessage(playerid,COLOR_LIGHTRED,"等待10秒钟，然后移动到下一个点");
		OnReic[playerid]=28;
		DisablePlayerCheckpoint(playerid);
		ost[22] = SetPlayerCheckpoint(playerid,1965.0579,-1994.7773,13.5148,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==28)
	{
		Zarabotok[playerid] += 400;
		SendClientMessage(playerid,COLOR_LIGHTRED,"等待10秒钟，然后移动到下一个点");
		OnReic[playerid]=29;
		DisablePlayerCheckpoint(playerid);
		ost[23] = SetPlayerCheckpoint(playerid,1825.6672,-1853.8748,13.6067,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==29)
	{
		Zarabotok[playerid] += 300;
		SendClientMessage(playerid,COLOR_LIGHTRED,"等待10秒钟，然后移动到下一个点");
		OnReic[playerid]=30;
		DisablePlayerCheckpoint(playerid);
		ost[24] = SetPlayerCheckpoint(playerid,1649.7631,-1867.9119,13.5978,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==30)
	{
		Zarabotok[playerid] += 300;
		SendClientMessage(playerid,COLOR_LIGHTRED,"等待10秒钟，然后移动到下一个点");
		OnReic[playerid]=31;
		DisablePlayerCheckpoint(playerid);
		ost[25] = SetPlayerCheckpoint(playerid,1241.1096,-1827.6798,13.5431,10);
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	if(OnReic[playerid]==31) // 4k
	{
		format(YCMDstr,sizeof(YCMDstr),"终点火车站, 赚取了 %d, 把公共汽车放在停车场并开始新的路线",Zarabotok[playerid]);
		SendClientMessage(playerid,-1,YCMDstr);
		OnReic[playerid]=0;
		PlayerInfo[playerid][pCash] += Zarabotok[playerid];
		RaceBus[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
		Zarabotok[playerid] = 0;
		SetPVarInt(playerid,"avtobusid",GetPlayerVehicleID(playerid));
		SetPVarInt(playerid,"JdatTime",11);
		return 1;
	}
	// работа фермер
    if(PlayerToPoint(1.0, playerid,-318.1014,-1378.0062,10.9144))
    {
 		if(JobFarm[playerid] == true)
        {
	    	ClearAnimations(playerid);
	    	clicktd[playerid] = true;
	    	DisablePlayerCheckpoint(playerid);
	    	TogglePlayerControllable(playerid, 0);
	    	TextDrawShowForPlayer(playerid, FarmJob[0]);
	    	TextDrawShowForPlayer(playerid, FarmJob[1]);
	    	TextDrawShowForPlayer(playerid, FarmJob[2]);
	    	TextDrawShowForPlayer(playerid, FarmJob[3]);
	    	TextDrawShowForPlayer(playerid, FarmJob[4]);
	    	TextDrawShowForPlayer(playerid, FarmJob[5]);
	    	TextDrawShowForPlayer(playerid, FarmJob[6]);
        	SelectTextDraw(playerid, 0xA3B4C5FF);
	    	ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,0,0);
	    }
	    return 1;
    }
    if(PlayerToPoint(1.0, playerid, -319.2519,-1401.7625,13.5333))
    {
        if(JobFarm[playerid] == true)
        {
            clicktd[playerid] = true;
	    	ClearAnimations(playerid);
	    	DisablePlayerCheckpoint(playerid);
	    	TogglePlayerControllable(playerid, 0);
	    	TextDrawShowForPlayer(playerid, FarmJob[0]);
	    	TextDrawShowForPlayer(playerid, FarmJob[1]);
	    	TextDrawShowForPlayer(playerid, FarmJob[2]);
	    	TextDrawShowForPlayer(playerid, FarmJob[3]);
	    	TextDrawShowForPlayer(playerid, FarmJob[4]);
	    	TextDrawShowForPlayer(playerid, FarmJob[5]);
	    	TextDrawShowForPlayer(playerid, FarmJob[6]);
        	SelectTextDraw(playerid, 0xA3B4C5FF);
	    	ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,0,0);
	    }
	    return 1;
    }
    if(PlayerToPoint(1.0, playerid, -301.7332,-1424.6324,14.2088))
    {
        if(JobFarm[playerid] == true)
        {
            clicktd[playerid] = true;
	    	ClearAnimations(playerid);
	    	DisablePlayerCheckpoint(playerid);
	    	TogglePlayerControllable(playerid, 0);
	    	TextDrawShowForPlayer(playerid, FarmJob[0]);
	    	TextDrawShowForPlayer(playerid, FarmJob[1]);
	    	TextDrawShowForPlayer(playerid, FarmJob[2]);
	    	TextDrawShowForPlayer(playerid, FarmJob[3]);
	    	TextDrawShowForPlayer(playerid, FarmJob[4]);
	    	TextDrawShowForPlayer(playerid, FarmJob[5]);
	    	TextDrawShowForPlayer(playerid, FarmJob[6]);
        	SelectTextDraw(playerid, 0xA3B4C5FF);
	    	ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,0,0);
	    }
	    return 1;
    }
    if(PlayerToPoint(1.0, playerid,-270.9319,-1401.2894,11.3363))
    {
        if(JobFarm[playerid] == true)
        {
            clicktd[playerid] = true;
	    	ClearAnimations(playerid);
	    	DisablePlayerCheckpoint(playerid);
	    	TogglePlayerControllable(playerid, 0);
	    	TextDrawShowForPlayer(playerid, FarmJob[0]);
	    	TextDrawShowForPlayer(playerid, FarmJob[1]);
	    	TextDrawShowForPlayer(playerid, FarmJob[2]);
	    	TextDrawShowForPlayer(playerid, FarmJob[3]);
	    	TextDrawShowForPlayer(playerid, FarmJob[4]);
	    	TextDrawShowForPlayer(playerid, FarmJob[5]);
	    	TextDrawShowForPlayer(playerid, FarmJob[6]);
        	SelectTextDraw(playerid, 0xA3B4C5FF);
	    	ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,0,0);
	    }
	    return 1;
    }
    if(PlayerToPoint(1.0, playerid,-372.6919,-1428.2528,25.7266) && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
    {
        if(JobFarm[playerid] == true)
        {
			Farm[playerid] += 1;
			TextDrawFarm[playerid] = 0;
			switch(random(4))
	        {
	            case 0: SetPlayerCheckpoint(playerid,-318.1014,-1378.0062,10.9144,1.0);
            	case 1: SetPlayerCheckpoint(playerid,-319.2519,-1401.7625,13.5333,1.0);
            	case 2: SetPlayerCheckpoint(playerid,-301.7332,-1424.6324,14.2088,1.0);
            	case 3: SetPlayerCheckpoint(playerid,-270.9319,-1401.2894,11.3363,1.0);
	        }
	     	format(YCMDstr,sizeof(YCMDstr),"你把灌木带到了仓库. 交付总额 {1E90FF}%d 根.",Farm[playerid]);
	 		SendClientMessage(playerid,-1, YCMDstr);
	 		ApplyAnimation(playerid,"PED","IDLE_tired",4.1,1,0,0,0,2500);
	 		if(IsPlayerAttachedObjectSlotUsed(playerid,4)) RemovePlayerAttachedObject(playerid,4);
	 		tdload[1] += 50;
			SetOtherInt("tdload[1]", tdload[1]);
			format(YCMDstr, 126, "仓库: {FF9900}%i", tdload[1]);
  			Update3DTextLabelText(tnarksklad[0], 0xFFFFFFFF, YCMDstr);
		    return 1;
		 }
    }
	new string[100];
	new tmpcar = GetPlayerVehicleID(playerid);
	if(VertMats[playerid]==1)
	{
		if(vertmatbi >= 10000)
		{
			format(string, sizeof(string), "― 直升机装载");
			SendClientMessage(playerid, -1, string);
			SendSyntaxMessage(playerid,"将材料带到SW底座");
			VertMats[playerid]=2;
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid,334.5107,1994.6956,17.6406,10);
			return true;
		}
		vertmatbi += 10000;
		format(string, sizeof(string), "― 材料装载中！ 直升机中的材料: %i/10000", vertmatbi);
		SendClientMessage(playerid, -1, string);
		SendSyntaxMessage(playerid,"将材料带到SW底座");
		VertMats[playerid]=2;
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,334.5107,1994.6956,17.6406,10);
	}
	new vehicleid = GetPlayerVehicleID(playerid);
	if(PlayerTaxiStarted[playerid] && IsTaxiCar(vehicleid))
	{
	    DisablePlayerCheckpoint(GetPlayerCarPass(playerid));
		DisablePlayerCheckpoint(playerid);
		TogglePlayerControllable(playerid, false);
		TogglePlayerControllable(playerid, true);
		PlayerService[GetPlayerCarPass(playerid)] = playerid;
		RemovePlayerFromVehicle(GetPlayerCarPass(playerid));
		ShowPlayerDialog(GetPlayerCarPass(playerid), TAXI_DIALOG+4, DIALOG_STYLE_LIST, "{1E90FF}服务评价", "\
		+ 超赞\n+ 很好\n+ 不怎么好\n+ 极差", "选择", "退出");
		SendSyntaxMessage(playerid,"到达了目的地.");
		SendSyntaxMessage(GetPlayerCarPass(playerid), "到达了目的地.");
		PlayerInfo[playerid][pCash] += GetPriceTaxi(playerid);
		PlayerInfo[GetPlayerCarPass(playerid)][pCash] -= GetPriceTaxi(playerid);
		format(string, sizeof(string), "~g~+%d$", GetPriceTaxi(playerid));
		GameTextForPlayer(playerid, string, 1000, 1);
		format(string, sizeof(string), "~r~-%d$", GetPriceTaxi(playerid));
		GameTextForPlayer(GetPlayerCarPass(playerid), string, 1000, 1);
		PlayerTaxiStarted[playerid] = false;
	}
	if(VertMats[playerid]==2)
	{
		if(armmatbi >= 49999)
		{
			format(string, sizeof(string), "― 仓库已满!");
			SendClientMessage(playerid, -1, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		vertmatbi -= 10000;
		armmatbi += 10000;
		SetOtherInt("armmatbi", armmatbi);
		format(string, sizeof(string), "― 材料交付! 直升机中的材料: %i/10000", vertmatbi);
		SendClientMessage(playerid, -1, string);
		format(string, sizeof(string), "― 直升机中的材料 %i/100000", armmatbi);
		SendClientMessage(playerid, -1, string);
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid]=0;
		VertMats[playerid]=0;

	}
	if(GetPVarInt(playerid, "Nom") == 1)
	{
		new Float:health;
		GetVehicleHealth(GetPlayerVehicleID(playerid),health);
		if(GetPlayerVehicleID(playerid) != caridhouse[playerid]) return SendErrorMessage(playerid,"你没有开车!");
		if(health >= 850)
		{
			DeletePVar(playerid, "Nom");
			DisablePlayerCheckpoint(playerid);
			SendSyntaxMessage(playerid,"回去警察局看看检查结果.");
			SetPVarInt(playerid, "navto", 1);
		}
		else return SendErrorMessage(playerid,"技术检查失败.你开车开得不够好.");
		return true;
	}
	if(PlayerInfo[playerid][pWork] == 11 && IsPlayerInRangeOfPoint(playerid, 3.0, 1059.5696,-345.3574,73.9922))
	{
	    if(!PlayerInfo[playerid][pGraffityStop]) return SendErrorMessage(playerid, "你的盒子是空的");
	    DisablePlayerCheckpoint(playerid);
	    RemovePlayerAttachedObject(playerid,0);
	    ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
	    PlayerInfo[playerid][pGraffityID] += 175;
	    SendServerMessage(playerid,"― 你把一盒苹果放在仓库里.");
	    SetPVarInt(playerid,"MinerCount", 0);
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	    SetPlayerAttachedObject(playerid,0,1356,6,0.166000,-0.045999,0.073999,89.099990,-9.800000,105.999992,0.550999,0.520999,0.517999);
	    PlayerInfo[playerid][pGraffityStop] = 0;
     	ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
	}
	if(GetPlayerInterior(playerid) == 1 && GetPlayerVirtualWorld(playerid) == 0)
    {
        if(!GetPVarInt(playerid, "parashuts")) return SendErrorMessage(playerid, "教练: 你忘了带降落伞了");
        ShowPlayerDialog(playerid, 1500, DIALOG_STYLE_LIST, "{1E90FF}跳伞俱乐部", "1. 从600米的高度跳跃\t{9C65FF}150$\n{FFFFFF}2. 从1000米的高度跳跃\t{9C65FF}300$\n{FFFFFF}3. 从2000米的高度跳跃\t{9C65FF}450$", "选择", "退出");
        SetPlayerCheckpoint(playerid,3.8362,22.9921,1199.6012, 1);
        DisablePlayerCheckpoint(playerid);
    }
   	if(PlayerToPoint(10,playerid,-1549.0081,122.8916,3.1145))
	{
        if(VehiclePlayer(GetPlayerVehicleID(playerid)) == -1) return SendErrorMessage(playerid,"这辆车没有车主,不能驾驶.");
        if(!IsPlayerInAnyVehicle(playerid)) return SendErrorMessage(playerid,"你没有开车.");
        if(GetPlayerVehicleID(playerid) == caridhouse[playerid]) return SendErrorMessage(playerid,"你正在开车!");
		new randommoney;
		DisablePlayerCheckpoint(playerid);
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		switch(PlayerInfo[playerid][pAutoSkill])
		{
		case 0..19: { PlayerInfo[playerid][pAutoTime] = 1500; randommoney = Random(1000, 2000);  }
		case 20: { PlayerInfo[playerid][pAutoTime] = 1400; randommoney = Random(2000, 3000); SendSyntaxMessage(playerid,"恭喜, 你提高了偷车贼的技能. ( /askill )"); }
		case 21..39: { PlayerInfo[playerid][pAutoTime] = 1300; randommoney = Random(3000, 4000); }
		case 40: { PlayerInfo[playerid][pAutoTime] = 1200; randommoney = Random(4000, 5000); SendSyntaxMessage(playerid,"恭喜, 你提高了偷车贼的技能. ( /askill )"); }
		case 41..59: { PlayerInfo[playerid][pAutoTime] = 1000; randommoney = Random(5000, 6000); }
		case 60: { PlayerInfo[playerid][pAutoTime] = 900; randommoney = Random(6000, 7000); SendSyntaxMessage(playerid,"恭喜, 你提高了偷车贼的技能. ( /askill )"); }
		case 61..79: { PlayerInfo[playerid][pAutoTime] = 800; randommoney = Random(7000, 8000); }
		case 80: { PlayerInfo[playerid][pAutoTime] = 700; randommoney = Random(8000, 9000); SendSyntaxMessage(playerid,"恭喜, 你提高了偷车贼的技能. ( /askill )"); }
		case 81..120: { PlayerInfo[playerid][pAutoTime] = 500; randommoney = Random(9000, 10000); }
		}
		PlayerInfo[playerid][pAutoSkill]++;
		PlayerInfo[playerid][pCash] += randommoney;
		format(YCMDstr, sizeof(YCMDstr), "― 车辆卖了 %d $.", randommoney);
		SendClientMessage(playerid,COLOR_GREEN,YCMDstr);
	}
   	if(PlayerToPoint(5.0, playerid,-1907.4185,-1715.0089,21.7500))
	{
		new vehicle = GetPlayerVehicleID(playerid);
		if(!IsTrailerAttachedToVehicle(vehicle))
		{
			SendErrorMessage(playerid,"你没有挂车!");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		SetTimerEx("minertimer3",1000,0,"%d",playerid);
	}
	if(PlayerToPoint(5.0, playerid,2402.0471,-2617.7300,13.6641))
	{
		new vehicle = GetPlayerVehicleID(playerid);
		if(!IsTrailerAttachedToVehicle(vehicle))
		{
			SendErrorMessage(playerid,"你没有挂车!");
			Gruzz[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
		}
		else
		{
			if(Gruzz[playerid] == 0) return SendErrorMessage(playerid,"你没有货物!");
			if(GetPVarInt(playerid,"metalgruz")>gettime()) return SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Teleport Pickup )"),GKick(playerid);
	        if(PlayerInfo[playerid][pTruckSkill] <= 10000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}初学者\n{BDB76B}获得100卡车司机经验, 你的经验: {98FB98}%d/10000\n{BDB76B}获得运费: {98FB98}5000$",PlayerInfo[playerid][pTruckSkill]);
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 5000;
		        PlayerInfo[playerid][pTruckSkill] += 100;
	        }
	        else if(PlayerInfo[playerid][pTruckSkill] <= 50000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}老司机\n{BDB76B}获得100卡车司机经验, 你的经验: {98FB98}%d/50000\n{BDB76B}获得运费: {98FB98}10.000$",PlayerInfo[playerid][pTruckSkill]);
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 10000;
		        PlayerInfo[playerid][pTruckSkill] += 100;
	        }
	        else if(PlayerInfo[playerid][pTruckSkill] >= 50000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}卡车司机之王\n{BDB76B}你的经验: {98FB98}最大经验\n{BDB76B}获得运费: {98FB98}15.000$");
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 15000;
	        }
			Gruzz[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
		}
	}
	if(PlayerToPoint(5.0, playerid,269.2492,1411.8657,10.4638))
	{
		new vehicle = GetPlayerVehicleID(playerid);
		if(!IsTrailerAttachedToVehicle(vehicle))
		{
			SendErrorMessage(playerid,"你没有挂车!");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		SetTimerEx("minertimer2",1000,0,"%d",playerid);
	}
	if(PlayerToPoint(5.0, playerid,-2031.5731,176.2253,28.8359))
	{
        new vehicle = GetPlayerVehicleID(playerid);
		if(!IsTrailerAttachedToVehicle(vehicle))
		{
			SendErrorMessage(playerid,"你没有挂车!");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		SetTimerEx("minertimer1",1000,0,"%d",playerid);
	}
	if(PlayerToPoint(5.0, playerid,1898.3387,-1335.0132,13.5469))
	{
		new vehicle = GetPlayerVehicleID(playerid);
		if(!IsTrailerAttachedToVehicle(vehicle))
		{
			SendErrorMessage(playerid,"你没有挂车!");
			Gruzz[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
		}
		else
		{
			if(Gruzz[playerid] == 0) return SendErrorMessage(playerid,"你没有货物!");
			if(GetPVarInt(playerid,"metalgruz")>gettime()) return SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Teleport Pickup )"),GKick(playerid);
	        if(PlayerInfo[playerid][pTruckSkill] <= 10000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}初学者\n{BDB76B}获得200卡车司机经验, 你的经验: {98FB98}%d/10000\n{BDB76B}获得运费: {98FB98}5000$",PlayerInfo[playerid][pTruckSkill]);
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 5000;
		        PlayerInfo[playerid][pTruckSkill] += 200;
	        }
	        else if(PlayerInfo[playerid][pTruckSkill] <= 50000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}老司机\n{BDB76B}获得200卡车司机经验, 你的经验: {98FB98}%d/50000\n{BDB76B}获得运费: {98FB98}5000$",PlayerInfo[playerid][pTruckSkill]);
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 10000;
		        PlayerInfo[playerid][pTruckSkill] += 200;
	        }
	        else if(PlayerInfo[playerid][pTruckSkill] >= 50000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}卡车司机之王\n{BDB76B}你的经验: {98FB98}最大经验\n{BDB76B}获得运费: {98FB98}15.000$");
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 15000;
	        }
			Gruzz[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			DeletePVar(playerid,"dalnaboirab");
		}
	}
	if(PlayerToPoint(5.0, playerid,-513.2533,-551.2796,25.5234))
	{
		new vehicle = GetPlayerVehicleID(playerid);
		if(!IsTrailerAttachedToVehicle(vehicle))
		{
			SendErrorMessage(playerid,"你没有挂车!");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		SetTimerEx("minertimer",1000,0,"%d",playerid);
	}
	if(PlayerToPoint(5.0, playerid,2692.3853,-2467.9915,13.6452))
	{
		new vehicle = GetPlayerVehicleID(playerid);
		if(!IsTrailerAttachedToVehicle(vehicle))
		{
			SendErrorMessage(playerid,"你没有挂车!");
			Gruzz[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
		}
		else
		{
			if(Gruzz[playerid] == 0) return SendErrorMessage(playerid,"你没有货物!");
			if(GetPVarInt(playerid,"metalgruz")>gettime()) return SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Teleport Pickup )"),GKick(playerid);
	        if(PlayerInfo[playerid][pTruckSkill] <= 10000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}初学者\n{BDB76B}获得300卡车司机经验, 你的经验: {98FB98}%d/10000\n{BDB76B}获得运费: {98FB98}5000$",PlayerInfo[playerid][pTruckSkill]);
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 5000;
		        PlayerInfo[playerid][pTruckSkill] += 300;
	        }
	        else if(PlayerInfo[playerid][pTruckSkill] <= 50000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}老司机\n{BDB76B}获得300卡车司机经验, 你的经验: {98FB98}%d/50000\n{BDB76B}获得运费: {98FB98}5000$",PlayerInfo[playerid][pTruckSkill]);
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 10000;
		        PlayerInfo[playerid][pTruckSkill] += 300;
	        }
	        else if(PlayerInfo[playerid][pTruckSkill] >= 50000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}卡车司机之王\n{BDB76B}你的经验: {98FB98}最大经验\n{BDB76B}获得运费: {98FB98}15.000$");
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 15000;
	        }
	        DeletePVar(playerid,"dalnaboirab");
			Gruzz[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
		}
	}
	if(PlayerToPoint(5.0, playerid,-2259.2686,2386.6211,4.9892))
	{
		new vehicle = GetPlayerVehicleID(playerid);
		if(!IsTrailerAttachedToVehicle(vehicle))
		{
			SendErrorMessage(playerid,"你没有挂车!");
			Gruzz[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
		}
		else
		{
			if(Gruzz[playerid] == 0) return SendErrorMessage(playerid,"你没有货物!");
			if(GetPVarInt(playerid,"metalgruz")>gettime()) return SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Teleport Pickup )"),GKick(playerid);
	        if(PlayerInfo[playerid][pTruckSkill] <= 10000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}初学者\n{BDB76B}获得400卡车司机经验, 你的经验: {98FB98}%d/10000\n{BDB76B}获得运费: {98FB98}5000$",PlayerInfo[playerid][pTruckSkill]);
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 5000;
		        PlayerInfo[playerid][pTruckSkill] += 400;
	        }
	        else if(PlayerInfo[playerid][pTruckSkill] <= 50000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}老司机\n{BDB76B}获得400卡车司机经验, 你的经验: {98FB98}%d/50000\n{BDB76B}获得运费: {98FB98}5000$",PlayerInfo[playerid][pTruckSkill]);
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 10000;
		        PlayerInfo[playerid][pTruckSkill] += 400;
	        }
	        else if(PlayerInfo[playerid][pTruckSkill] >= 50000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}卡车司机之王\n{BDB76B}你的经验: {98FB98}最大经验\n{BDB76B}获得运费: {98FB98}15.000$");
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 15000;
	        }
			Gruzz[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			DeletePVar(playerid,"dalnaboirab");
		}
	}
	if(PlayerToPoint(5.0, playerid,81.7488,1916.0846,17.6612))
	{
		new vehicle = GetPlayerVehicleID(playerid);
		if(!IsTrailerAttachedToVehicle(vehicle))
		{
			SendErrorMessage(playerid,"你没有挂车!");
			Gruzz[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
		}
		else
		{
			if(Gruzz[playerid] == 0) return SendErrorMessage(playerid,"你没有货物!");
			if(GetPVarInt(playerid,"metalgruz")>gettime()) return SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Teleport Pickup )"),GKick(playerid);
	        if(PlayerInfo[playerid][pTruckSkill] <= 10000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}初学者\n{BDB76B}获得500卡车司机经验, 你的经验: {98FB98}%d/10000\n{BDB76B}获得运费: {98FB98}5000$",PlayerInfo[playerid][pTruckSkill]);
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 5000;
		        PlayerInfo[playerid][pTruckSkill] += 500;
	        }
	        else if(PlayerInfo[playerid][pTruckSkill] <= 50000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}老司机\n{BDB76B}获得500卡车司机经验, 你的经验: {98FB98}%d/50000\n{BDB76B}获得运费: {98FB98}5000$",PlayerInfo[playerid][pTruckSkill]);
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 10000;
		        PlayerInfo[playerid][pTruckSkill] += 500;
	        }
	        else if(PlayerInfo[playerid][pTruckSkill] >= 50000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}卡车司机之王\n{BDB76B}你的经验: {98FB98}最大经验\n{BDB76B}获得运费: {98FB98}15.000$");
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 15000;
	        }
			Gruzz[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			DeletePVar(playerid,"dalnaboirab");
		}
	}
	if(PlayerToPoint(5.0, playerid,-2313.6519,-159.4345,35.3203))
	{
		new vehicle = GetPlayerVehicleID(playerid);
		if(!IsTrailerAttachedToVehicle(vehicle))
		{
			SendErrorMessage(playerid,"你没有挂车!");
			Gruzz[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
		}
		else
		{
			if(Gruzz[playerid] == 0) return SendErrorMessage(playerid,"你没有货物!");
			if(GetPVarInt(playerid,"metalgruz")>gettime()) return SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Teleport Pickup )"),GKick(playerid);
	        if(PlayerInfo[playerid][pTruckSkill] <= 10000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}初学者\n{BDB76B}获得200卡车司机经验, 你的经验: {98FB98}%d/10000\n{BDB76B}获得运费: {98FB98}5000$",PlayerInfo[playerid][pTruckSkill]);
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 5000;
		        PlayerInfo[playerid][pTruckSkill] += 200;
	        }
	        else if(PlayerInfo[playerid][pTruckSkill] <= 50000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}老司机\n{BDB76B}获得200卡车司机经验, 你的经验: {98FB98}%d/50000\n{BDB76B}获得运费: {98FB98}5000$",PlayerInfo[playerid][pTruckSkill]);
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 10000;
		        PlayerInfo[playerid][pTruckSkill] += 200;
	        }
	        else if(PlayerInfo[playerid][pTruckSkill] >= 50000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}卡车司机之王\n{BDB76B}你的经验: {98FB98}最大经验\n{BDB76B}获得运费: {98FB98}15.000$");
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 15000;
	        }
			Gruzz[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			DeletePVar(playerid,"dalnaboirab");
		}
	}
	if(PlayerToPoint(5.0, playerid,-2143.9102,-442.5511,35.3359))
	{
		new vehicle = GetPlayerVehicleID(playerid);
		if(!IsTrailerAttachedToVehicle(vehicle))
		{
			SendErrorMessage(playerid,"你没有挂车!");
			Gruzz[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
		}
		else
		{
			if(Gruzz[playerid] == 0) return SendErrorMessage(playerid,"你没有货物!");
			if(GetPVarInt(playerid,"metalgruz")>gettime()) return SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Teleport Pickup )"),GKick(playerid);
	        if(PlayerInfo[playerid][pTruckSkill] <= 10000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}初学者\n{BDB76B}获得300卡车司机经验, 你的经验: {98FB98}%d/10000\n{BDB76B}获得运费: {98FB98}5000$",PlayerInfo[playerid][pTruckSkill]);
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 5000;
		        PlayerInfo[playerid][pTruckSkill] += 300;
	        }
	        else if(PlayerInfo[playerid][pTruckSkill] <= 50000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}老司机\n{BDB76B}获得300卡车司机经验, 你的经验: {98FB98}%d/50000\n{BDB76B}获得运费: {98FB98}5000$",PlayerInfo[playerid][pTruckSkill]);
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 10000;
		        PlayerInfo[playerid][pTruckSkill] += 300;
	        }
	        else if(PlayerInfo[playerid][pTruckSkill] >= 50000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}卡车司机之王\n{BDB76B}你的经验: {98FB98}最大经验\n{BDB76B}获得运费: {98FB98}15.000$");
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 15000;
	        }
			Gruzz[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			DeletePVar(playerid,"dalnaboirab");
		}
	}
	if(PlayerToPoint(5.0, playerid,-2667.4343,272.8874,4.3359))
	{
		new vehicle = GetPlayerVehicleID(playerid);
		if(!IsTrailerAttachedToVehicle(vehicle))
		{
			SendErrorMessage(playerid,"你没有挂车!");
			Gruzz[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
		}
		else
		{
			if(Gruzz[playerid] == 0) return SendErrorMessage(playerid,"你没有货物!");
			if(GetPVarInt(playerid,"metalgruz")>gettime()) return SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Teleport Pickup )"),GKick(playerid);
	        if(PlayerInfo[playerid][pTruckSkill] <= 10000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}初学者\n{BDB76B}获得400卡车司机经验, 你的经验: {98FB98}%d/10000\n{BDB76B}获得运费: {98FB98}5000$",PlayerInfo[playerid][pTruckSkill]);
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 5000;
		        PlayerInfo[playerid][pTruckSkill] += 400;
	        }
	        else if(PlayerInfo[playerid][pTruckSkill] <= 50000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}老司机\n{BDB76B}获得400卡车司机经验, 你的经验: {98FB98}%d/50000\n{BDB76B}获得运费: {98FB98}5000$",PlayerInfo[playerid][pTruckSkill]);
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 10000;
		        PlayerInfo[playerid][pTruckSkill] += 400;
	        }
	        else if(PlayerInfo[playerid][pTruckSkill] >= 50000)
	        {
		        format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}卡车司机之王\n{BDB76B}你的经验: {98FB98}最大经验\n{BDB76B}获得运费: {98FB98}15.000$");
		        ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 货物运达 <",YCMDstr,"关闭","");
		        PlayerInfo[playerid][pCash] += 15000;
	        }
			Gruzz[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			DeletePVar(playerid,"dalnaboirab");
		}
	}
	if(GetPVarInt(playerid,"Otnesti") == 1)
	{
		Dobivat[playerid] = 1;
		DisablePlayerCheckpoint(playerid);
		RemovePlayerAttachedObject(playerid,4);
		ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 1);
		SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000);
		SetPVarInt(playerid,"Otnesti",0);
		tdload[0] += 250;
		SetOtherInt("tdload[0]", tdload[0]);
		format(string, 126, "― 材料库存: {FF9900}%i{ffffff} 公斤", tdload[0]);
  		Update3DTextLabelText(tPickup[0], 0xFFFFFFFF, string);
    	Update3DTextLabelText(tPickup[1], 0xFFFFFFFF, string);
		SendClientMessage(playerid, -1, string);
		return true;
	}
	if(CP[playerid] == 500)
	{
		SendSyntaxMessage(playerid, "获得奖励: 2000 $");
		PlayerInfo[playerid][pCash] += 2000;
		DisablePlayerCheckpoint(playerid);
		CP[playerid] = 0;
	}
	if(MatsArmyCar[playerid] == 20)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] >= 5000 || tdload[0] <= 1000)
		{
			SendErrorMessage(playerid,"卡车已满或库存不够材料");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] += 5000;
		format(string, sizeof(string), "― 材料装载! 卡车容量 %i/5000 公斤.", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, -1,string);
		SendServerMessage(playerid,"输入: /carm 提供材料.");
		DisablePlayerCheckpoint(playerid);
		tdload[0] -= 5000;
		SetOtherInt("tdload[0]", tdload[0]);
		format(string, 150, "― 材料库存: {FF9900}%i{ffffff} 公斤", tdload[0]);
  		Update3DTextLabelText(tPickup[0], 0xFFFFFFFF, string);
    	Update3DTextLabelText(tPickup[1], 0xFFFFFFFF, string);
		SendClientMessage(playerid, -1, string);
	}
	if(MatsArmyCar[playerid] == 35)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || sfpdmats >= 99999)
		{
			DisablePlayerCheckpoint(playerid);
			SendErrorMessage(playerid, "你的卡车是空的或者SFPD仓库已满!");
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		sfpdmats += 5000;
		SetOtherInt("sfpdmats", sfpdmats);
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "― 材料交付! 卡车容量: %i/5000 公斤", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, -1, string);
		format(string, sizeof(string), "― SFPD仓库: %i/100000", sfpdmats);
		SendClientMessage(playerid, -1, string);
		CP[playerid] = 0;

	}
	if(MatsArmyCar[playerid] == 150)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || lvpdmats >= 99999)
		{
			DisablePlayerCheckpoint(playerid);
			SendErrorMessage(playerid, "你的卡车是空的或者LVPD仓库已满!");
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		lvpdmats += 5000;
		SetOtherInt("lvpdmats", lvpdmats);
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "― 材料交付! 卡车容量: %i/5000 公斤", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, -1, string);
		format(string, sizeof(string), "― LVPD仓库: %i/100000", lvpdmats);
		SendClientMessage(playerid, -1, string);

	}
	if(MatsArmyCar[playerid] == 100)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || ballasmatbi >= 99999)
		{
			format(string, sizeof(string), "―你的卡车是空的或者巴拉斯仓库已满!");
			SendClientMessage(playerid, -1, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		ballasmatbi += 5000;
		SetOtherInt("ballasmatbi", ballasmatbi);
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "― 材料交付! 卡车容量: %i/5000 公斤", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, -1, string);
		format(string, sizeof(string), "― 巴拉斯仓库: %i/100000", ballasmatbi);
		SendClientMessage(playerid, -1, string);

	}
	if(MatsArmyCar[playerid] == 101)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || vagosmatbi >= 99999)
		{
			format(string, sizeof(string), "― 你的卡车是空的或者瓦戈斯仓库已满!");
			SendClientMessage(playerid, -1, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		vagosmatbi += 5000;
		SetOtherInt("vagosmatbi", vagosmatbi);
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "― 材料交付! 卡车容量: %i/5000 公斤", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, -1, string);
		format(string, sizeof(string), "― 瓦戈斯仓库: %i/100000", vagosmatbi);
		SendClientMessage(playerid, -1, string);

	}
	if(MatsArmyCar[playerid] == 102)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || groovmatbi >= 99999)
		{
			format(string, sizeof(string), "― 你的卡车是空的或者格罗夫仓库已满!");
			SendClientMessage(playerid, -1, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		groovmatbi += 5000;
		SetOtherInt("groovmatbi", groovmatbi);
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "― 材料交付! 卡车容量: %i/5000 公斤", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, -1, string);
		format(string, sizeof(string), "― 格罗夫仓库: %i/100000", groovmatbi);
		SendClientMessage(playerid, -1, string);

	}
	if(MatsArmyCar[playerid] == 103)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || aztekmatbi >= 99999)
		{
			format(string, sizeof(string), "― 你的卡车是空的或者阿兹特克仓库已满!");
			SendClientMessage(playerid, -1, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		aztekmatbi += 5000;
		SetOtherInt("aztekmatbi", aztekmatbi);
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "― 材料交付! 卡车容量: %i/5000 公斤", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, -1, string);
		format(string, sizeof(string), "― 阿兹特克仓库: %i/100000", aztekmatbi);
		SendClientMessage(playerid, -1, string);

	}
	if(MatsArmyCar[playerid] == 104)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || rifamatbi >= 99999)
		{
			format(string, sizeof(string), "― 你的卡车是空的或者14K仓库已满!");
			SendClientMessage(playerid, -1, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		rifamatbi += 5000;
		SetOtherInt("rifamatbi", rifamatbi);
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "― 材料交付! 卡车容量: %i/5000 公斤", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, -1, string);
		format(string, sizeof(string), "― 14K仓库: %i/100000", rifamatbi);
		SendClientMessage(playerid, -1, string);

	}
	if(MatsArmyCar[playerid] == 31)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || lspdmatbi >= 99999)
		{
			DisablePlayerCheckpoint(playerid);
			SendErrorMessage(playerid, "你的卡车是空的或者LSPD仓库已满!");
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		lspdmatbi += 5000;
		SetOtherInt("lspdmatbi", lspdmatbi);
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid]=0;
		format(string, sizeof(string), "― 材料交付! 卡车容量: %i/5000 公斤", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, -1, string);
		format(string, sizeof(string), "― LSPD仓库: %i/100000", lspdmatbi);
		SendClientMessage(playerid, -1, string);

	}
	if(MatsArmyCar[playerid] == 24)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || fbimats >= 99999)
		{
			DisablePlayerCheckpoint(playerid);
			SendErrorMessage(playerid, "你的卡车是空的或者FBI仓库已满!");
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		fbimats += 5000;
		SetOtherInt("fbimats", fbimats);
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "― 材料交付! 卡车容量: %i/5000 公斤", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, -1, string);
		format(string, sizeof(string), "― FBI仓库: %i/100000", fbimats);
		SendClientMessage(playerid, -1, string);

	}
	if(MatsArmyCar[playerid] == 21)
	{
	    if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0)
		{
			DisablePlayerCheckpoint(playerid);
			SendErrorMessage(playerid, "你的卡车是空的!");
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		armmatsf += 5000;
		SetOtherInt("armmatsf", armmatsf);
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "― 材料交付! 卡车容量: %i/5000 公斤", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, -1, string);
		format(string, sizeof(string), "― SA监狱仓库: %i/100000", armmatsf);
		SendClientMessage(playerid, -1, string);

	}
	if(CP[playerid] == 123)
	{
		DisablePlayerCheckpoint(playerid);
		SendServerMessage(playerid, "输入 /sloading 装载");
		CP[playerid] = 0;
	}
	if(IsPlayerInDynamicCP(playerid, dinamicash[playerid]))
	{
		if(PlayerInfo[playerid][pCarLic] == 1) return SendErrorMessage(playerid,"您已经拥有驾驶执照"), PicCP[playerid] = 0, DisablePlayerCheckpoint(playerid);
		new avtosdacha[512];
		format(avtosdacha,sizeof(avtosdacha), "{FFBF00}欢迎来到执照中心.\n{FFFFFF}驾驶执照的价格是 {FFBF00}4.000$\n{FFFFFF}同意吗?");
		ShowPlayerDialog(playerid,10022,DIALOG_STYLE_MSGBOX, "{1E90FF}驾驶考试",avtosdacha, "我同意", "退出");
		return true;
	}
/*	if(PicCP[playerid]==2)
	{
		ShowPlayerDialog(playerid, 10098, DIALOG_STYLE_LIST, "{1E90FF}Устройство на работу", "{FFFFFF}Водитель автобуса {FFBF00}[с двух лет]\n{FFFFFF}Таксист {FFBF00}[с двух лет]\n{FFFFFF}Водитель маршрутки {FFBF00}[с трёх лет]\n{FFFFFF}Бульдозер {FFBF00}[с трёх лет]\n{FFFFFF}Механик {FFBF00}[с трёх лет]\n{FFFFFF}Развозчик продуктов {FFBF00}[с четырёх лет]\n{FFFFFF}Развозчик топлива {FFBF00}[с четырёх лет]\n{FFFFFF}Тренер {FFBF00}[с пяти лет]\n{FFFFFF}Дальнобойщик {FFBF00}[с шести лет]", "Да", "Нет");
        DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
		return true;
	}*/
	if(PicCP[playerid]==3)
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SendErrorMessage(playerid,"你不在车里!");
		ShowPlayerDialog(playerid, 10075, DIALOG_STYLE_MSGBOX, "{1E90FF}送货员", "{FFFFFF}你送什么?", "燃料", "产品货物");
		DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
		return true;
	}
	if(CP[playerid] == 500)
	{
		PlayerInfo[playerid][pCash] += 600;
		CP[playerid] = 0;
		format(string, sizeof(string), "~g~+600");
		GameTextForPlayer(playerid, string, 5000, 1);
		DisablePlayerCheckpoint(playerid);
	}
	return true;
}

publics: OnPlayerLeaveCheckpoint(playerid)
{
	return true;
}

stock GoniGo()
{
	RaceGo++;
	new string[128];
	if(RaceGo == 120)
	{
		foreach(new i: Player)
		{
		    if(PlayerRacing[i] != 0)
		    {
				if(RacingPlayers < 2)
				{
					format(string, sizeof(string), "由于参加人数不足，比赛被取消!");
					OOCOff(0x73B461FF,string);
					EndingRaceRound = 1;
					PlayerRacing[i] = 0;
					RacingPlayers = 0;
					Timer[12] = 0;
					return true;
				}
				format(string, sizeof(string), "1");
				GameTextForPlayer(i, string, 1000, 3);
				new rand;
				rand = random(sizeof(RaceSpawns));
				new gRacecar = CreateVehicle(539, RaceSpawns[rand][0],RaceSpawns[rand][1],RaceSpawns[rand][2],RaceSpawns[rand][3], -1, -1, 600);
				SendSyntaxMessage(i, "做好准备! 不要离开车");
				Fuell[GetPlayerVehicleID(i)] = 200;
				PutPlayerInVeh(i, gRacecar, 0);
				rand = random(sizeof(RaceSpawns));
				Fuell[gRacecar] = 200;
				UnLockCar(gRacecar);
				IsLocked[gRacecar] = 0;
				TogglePlayerControllable(i, 0);
				AddVehicleComponent(GetPlayerVehicleID(i), 1010);
				SetPlayerInterior(i,0);
				racecars[gRacecar] = 2;
			}
		}
	}
	if(RaceGo == 122)
	{
		foreach(new i: Player)
		{
		    if(PlayerRacing[i] != 0)
		    {
				GameTextForPlayer(i, "2", 1000, 3);
			}
		}
	}
	if(RaceGo == 124)
	{
		foreach(new i: Player)
		{
		    if(PlayerRacing[i] != 0)
		    {
				GameTextForPlayer(i, "3", 1000, 3);
			}
		}
	}
	if(RaceGo == 126)
	{
		FirstRaceWinner = MAX_SLOTS;
		SecondRaceWinner = MAX_SLOTS;
		ThirdRaceWinner = MAX_SLOTS;
		ThoRaceWinner = MAX_SLOTS;
		FiveRaceWinner = MAX_SLOTS;
		SixRaceWinner = MAX_SLOTS;
		SevenRaceWinner = MAX_SLOTS;
		EightRaceWinner = MAX_SLOTS;
		NineRaceWinner = MAX_SLOTS;
		TenRaceWinner = MAX_SLOTS;
		foreach(new i: Player)
		{
			if(PlayerRacing[i] != 0)
			{
				RaceCP[i] = 10;
				GameTextForPlayer(i, "~r~GO! GO! GO!", 5000, 3);
				PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
				chet[i] += 1;
				SetPlayerRaceCheckpoint(i,1,race[0][0],race[0][1],race[0][2], race[1][0],race[1][1],race[1][2],8.0);
				TogglePlayerControllable(i, 1);
				GetVehicleParamsEx(GetPlayerVehicleID(i),engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(GetPlayerVehicleID(i) ,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
				zavodis[GetPlayerVehicleID(i)] = 1;
				DisableRemoteVehicleCollisions(i, 1);
				PlayerRemen[i] = 1;
			}
		}
		EndingRaceRound = 1;
		format(string, sizeof(string), "警告! 史诗般的比赛开始了.");
		OOCOff(0x73B461FF,string);
	}
	if(RaceGo == 400)
	{
		foreach(new i: Player)
		{
			if(PlayerRacing[i] != 0)
			{
 				if(racecars[i] == 2) DestroyVehicle(i);
  				racecars[i] = 0;
				RaceCP[i] = 0;
				DisablePlayerRaceCheckpoint(i);
				PlayerRacing[i] = 0;
				SetPlayerInterior(i, 0);
				chet[i] = 0;
				Q_SetPlayerPos(i,1554.4183,34.3577,24.1525);
				SetPlayerFacingAngle(i, 39.0413);
				DisableRemoteVehicleCollisions(i, 0);
			}
		}
		Timer[12] = 0;
		RaceGo = 0;
		RacingPlayers = 0;
		format(string, sizeof(string), "警告! 比赛结束了. (( 获奖者名单: /racelist ))");
		OOCOff(0x73B461FF,string);
	}
	return true;
}

stock EnableGPSForPlayer(playerid, Float:x, Float:y, Float:z)
{
	SetPlayerRaceCheckpoint(playerid, 1, Float:x, Float:y, Float:z, Float:x, Float:y, Float:z, 2.0);
	for(new i; i < 3; i++) TextDrawShowForPlayer(playerid, GPSEnabled[i]);
	return true;
}

stock IsaDobicha(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid,1.8,-410.2065,-1111.7118,709.7258) || IsPlayerInRangeOfPoint(playerid,1.8,-415.1285,-1105.1957,708.8172) || IsPlayerInRangeOfPoint(playerid,1.8,-404.3821,-1112.4978,710.8118) || IsPlayerInRangeOfPoint(playerid,1.8,-401.9700,-1113.4198,710.5230) ||
			IsPlayerInRangeOfPoint(playerid,1.8,-405.8677,-1116.3458,714.4255) || IsPlayerInRangeOfPoint(playerid,1.8,-415.0963,-1108.9023,708.8756) || IsPlayerInRangeOfPoint(playerid,1.8,-418.6321,-1106.6111,712.6619) || IsPlayerInRangeOfPoint(playerid,1.8,-419.8203,-1104.0121,713.2066)) {return true;}
	return false;
}

stock RemovePlayerWeaponn(playerid, weaponid){
	new plyWeapons[12] = 0;
	new plyAmmo[12] = 0;
	for(new sslot = 0; sslot != 12; sslot++){
		new wep, ammo;
		GetPlayerWeaponData(playerid, sslot, wep, ammo);
		if(wep != weaponid && ammo != 0) GetPlayerWeaponData(playerid, sslot, plyWeapons[sslot], plyAmmo[sslot]);}
	ResetPlayerWeapons(playerid);
	for(new sslot = 0; sslot != 12; sslot++) if(plyAmmo[sslot] != 0) GiveWeapon(playerid, plyWeapons[sslot], plyAmmo[sslot]);
	return true;}

publics: OnPlayerEnterRaceCheckpoint(playerid)
{
	new string[100];
	DisablePlayerRaceCheckpoint(playerid);
	if(GetPVarInt(playerid, "Noun") == 1 && GetPlayerState(playerid) == 2 && GetVehicleModel(GetPlayerVehicleID(playerid)) == 486)
	{
 		AttachObjectToVehicle(NounObject[GetPVarInt(playerid, "NounObjID")], GetPlayerVehicleID(playerid), 0.0, 3.0, -0.75, 0.0, 0.0, 0.0);
 		SendSyntaxMessage(playerid, "把它带到仓库");
		new randcheck = random(3);
		if(randcheck == 2) SetPlayerRaceCheckpoint(playerid, 1, 696.6295,842.6615,-27.1744, 0.0,0.0,0.0,4);
		else SetPlayerRaceCheckpoint(playerid, 1, 685.0774,821.7922,-27.1739, 0.0,0.0,0.0,4);
		SetPVarInt(playerid, "Noun", 2);
		SetPVarInt(playerid, "MinerKG_One", random(60) + 41);
		SetPVarInt(playerid,"metal",gettime()+20);
		return 1;
 	}
 	if(GetPVarInt(playerid, "Noun") == 2 && GetPlayerState(playerid) == 2 && GetVehicleModel(GetPlayerVehicleID(playerid)) == 486)
	{
	    if(GetPVarInt(playerid,"metal")>gettime()) return SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Teleport Pickup )"),GKick(playerid);
 		SetPVarInt(playerid,"metal",gettime()+30);
		SetPVarInt(playerid, "MinerKG", GetPVarInt(playerid, "MinerKG") + GetPVarInt(playerid, "MinerKG_One"));
        format(YCMDstr, sizeof(YCMDstr), "―  你带了 {33AA33}%i{ffffff} 公斤. 总共: {33AA33}%i{ffffff} 公斤", GetPVarInt(playerid, "MinerKG_One"), GetPVarInt(playerid, "MinerKG"));
		SendClientMessage(playerid, -1, YCMDstr);
		tdload[0] += GetPVarInt(playerid, "MinerKG_One");
		SetOtherInt("tdload[0]", tdload[0]);
		DeletePVar(playerid, "MinerKG_One");
		format(string, 150, "材料库存: {FF9900}%i{ffffff} 公斤", tdload[0]);
  		Update3DTextLabelText(tPickup[0], 0xFFFFFFFF, string);
    	Update3DTextLabelText(tPickup[1], 0xFFFFFFFF, string);
		DestroyObject(NounObject[GetPVarInt(playerid, "NounObjID")]);
		if(GetPVarInt(playerid, "NounObjID") < 10) NounObject[GetPVarInt(playerid, "NounObjID")] = CreateObject(3930,560.3654+random(10),840.2457+random(75),-44.00700073,0.00000000,0.00000000,0.00000000);
		else NounObject[GetPVarInt(playerid, "NounObjID")] = CreateObject(3930,615.3654+random(55),815.2457+random(65),-43.6009,0.00000000,0.00000000,0.00000000);
    	SetPVarInt(playerid, "Noun", 1);
		new randobj = random(19);
		new Float:X, Float:Y, Float:Z;
		GetObjectPos(NounObject[randobj], X, Y, Z);
		SetPVarInt(playerid, "NounObjID", randobj);
		SetPlayerRaceCheckpoint(playerid, 1, X, Y, Z, 0.0,0.0,0.0,3);
		return 1;
 	}
	if(GetPVarInt(playerid,"YEAH") == 1)
	{
		SendSyntaxMessage(playerid, "你到达了目的地");
		SetPVarInt(playerid,"YEAH",0);
		DeletePVar(playerid,"Spongebob");
		DeletePVar(playerid,"Mario");
		DeletePVar(playerid,"SpiderPig");
		DeletePVar(playerid, "GPSID");
		DisablePlayerRaceCheckpoint(playerid);
	}
	for(new i; i < 3; i++) TextDrawHideForPlayer(playerid, GPSEnabled[i]);
	DisablePlayerRaceCheckpoint(playerid);
	if(PlayerKartingboat[playerid]) {
	    PlayerKartingboat[playerid] ++;
	    switch(PlayerKartingboat[playerid]) {
	        case 1:SetPlayerRaceCheckpoint(playerid, 0, 372.6215,-2166.6262,-0.4999, 168.1488,-2128.3801,-0.7075, 10.0);
	        case 2:SetPlayerRaceCheckpoint(playerid, 0, 168.1488,-2128.3801,-0.7075, 49.4223,-1945.6768,-0.4924, 10.0);
	        case 3:SetPlayerRaceCheckpoint(playerid, 0, 49.4223,-1945.6768,-0.4924, 39.7481,-1683.4797,-0.5976, 10.0);
	        case 4:SetPlayerRaceCheckpoint(playerid, 0, 39.7481,-1683.4797,-0.5976, 48.2513,-1474.5718,-0.4210, 10.0);
	        case 5:SetPlayerRaceCheckpoint(playerid, 0, 48.2513,-1474.5718,-0.4210, 56.8319,-1250.1213,-0.5596, 10.0);
	        case 6:SetPlayerRaceCheckpoint(playerid, 0, 56.8319,-1250.1213,-0.5596, 63.2744,-1072.3219,-0.4328, 10.0);
	        case 7:SetPlayerRaceCheckpoint(playerid, 0, 63.2744,-1072.3219,-0.4328, 14.6301,-918.3254,-0.5679, 10.0);
	        case 8:SetPlayerRaceCheckpoint(playerid, 0, 14.6301,-918.3254,-0.5679, -139.4142,-840.8426,-0.5021, 10.0);
	        case 9:SetPlayerRaceCheckpoint(playerid, 0, -139.4142,-840.8426,-0.5021, -70.3925,-637.3599,-0.5437, 10.0);
	        case 10:SetPlayerRaceCheckpoint(playerid, 0, -70.3925,-637.3599,-0.5437, 109.2982,-444.7122,-0.5225, 10.0);
	        case 11:SetPlayerRaceCheckpoint(playerid, 0, 109.2982,-444.7122,-0.5225, 246.9173,-393.4613,-0.5280, 10.0);
	        case 12:SetPlayerRaceCheckpoint(playerid, 0, 246.9173,-393.4613,-0.5280, 377.8209,-291.6188,-0.5592, 10.0);
	        case 13:SetPlayerRaceCheckpoint(playerid, 0, 377.8209,-291.6188,-0.5592, 579.8343,-237.0975,-0.5203, 10.0);
	        case 14:SetPlayerRaceCheckpoint(playerid, 0, 579.8343,-237.0975,-0.5203, 751.2774,-181.6726,-0.5546, 10.0);
	        case 15:SetPlayerRaceCheckpoint(playerid, 0, 751.2774,-181.6726,-0.5546, 1004.0144,-114.6687,-0.5712, 10.0);
	        case 16:SetPlayerRaceCheckpoint(playerid, 0, 1004.0144,-114.6687,-0.5712, 1241.2179,-168.5115,-0.6148, 10.0);
	        case 17:SetPlayerRaceCheckpoint(playerid, 0, 1241.2179,-168.5115,-0.6148, 1394.5497,-289.0078,1.5669, 10.0);
	        case 18:SetPlayerRaceCheckpoint(playerid, 1, 1394.5497,-289.0078,1.5669, 0,0,0, 10.0);

	        case 19: {
	            if(KartingPlayersboat == 0){
	                SendSyntaxMessage(playerid, "恭喜! 你获得冠军,奖金 30 000 $");
					GiveMoney(playerid,30000);
	            }
	            else if(KartingPlayersboat == 1){
	                SendSyntaxMessage(playerid, "恭喜! 你获得第二名, 奖金 20 000 $");
					GiveMoney(playerid,20000);
	            }
	            else if(KartingPlayersboat == 2){
	                SendSyntaxMessage(playerid, "恭喜! 你获得第三名, 奖金 10 000 $");
					GiveMoney(playerid,10000);
	            }
	            strmid(racenameboat[KartingPlayers], Name(playerid), 0, MAX_PLAYER_NAME, MAX_PLAYER_NAME);
	            KartingPlayersboat ++;
	            new carn = GetPlayerVehicleID(playerid);
	            DestroyVehicle(carn);
	            racecarr[carn] = 0;
				SetPlayerInterior(playerid, 0);
				Q_SetPlayerPos(playerid,535.7850,-1812.5391,6.5713);
				SetPlayerFacingAngle(playerid, 276.8938);
				PlayerKartingboat[playerid] = 0;
	        }
		}
	}
	if(GetPVarInt(playerid, "PriceBus") > 0)
	{
		new type = GetPVarInt(playerid, "TypeBus"), e_type, name[32];
		switch(GetPVarInt(playerid, "TypeBus"))
  		{
		    case 1: name = "市内-医院";
		    case 2: name = "市内-SF市";
		    case 3: name = "市内-LV市";
		    case 4: name = "农场-SF市";
		    case 5: name = "火车站-采石场";
  		}
		if(type == 1)
		{
			if(pPressed[playerid] == 13 || pPressed[playerid] == 20 || pPressed[playerid] == 25 || pPressed[playerid] == 31 || pPressed[playerid] == 37 || pPressed[playerid] == 45 || pPressed[playerid] == 55 || pPressed[playerid] == 63  || pPressed[playerid] == 70)
			{
			    if(GetPVarInt(playerid, "BusStop") == 0)
			    {
			    	SetPVarInt(playerid, "TimeBus", 11);
			    	format(string, 128, "巴士在几秒钟内出发 (%s)",name);
			    	ProxDetectorNew(playerid, 30.0, COLOR_FADE5, string);
		    	}
		    	else
		    	{
  					if(pPressed[playerid] == 70) pPressed[playerid] = 0;
	  				else pPressed[playerid]++;
					new i = pPressed[playerid];
     				SetPlayerRaceCheckpoint(playerid,0,BusCityLS[i][0],BusCityLS[i][1],BusCityLS[i][2],BusCityLS[i][3],BusCityLS[i][4],BusCityLS[i][5],5.0);
		    	    SetPVarInt(playerid, "BusStop", 0);
		    	}
			}
			else
			{
				pPressed[playerid]++;
				SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 35);
				if(pPressed[playerid] == 13 || pPressed[playerid] == 20 || pPressed[playerid] == 25 || pPressed[playerid] == 31 || pPressed[playerid] == 37 || pPressed[playerid] == 45 || pPressed[playerid] == 55 || pPressed[playerid] == 63 || pPressed[playerid] == 70) e_type = 1;
				else e_type = 0;
				new i = pPressed[playerid];
				SetPlayerRaceCheckpoint(playerid,e_type,BusCityLS[i][0],BusCityLS[i][1],BusCityLS[i][2],BusCityLS[i][3],BusCityLS[i][4],BusCityLS[i][5],5.0);
			}
		}
		if(type == 2)
		{
			if(pPressed[playerid] == 3 || pPressed[playerid] == 10 || pPressed[playerid] == 20 || pPressed[playerid] == 32 || pPressed[playerid] == 35 || pPressed[playerid] == 40 || pPressed[playerid] == 46 || pPressed[playerid] == 53 || pPressed[playerid] == 56)
			{
			    if(GetPVarInt(playerid, "BusStop") == 0)
			    {
			    	SetPVarInt(playerid, "TimeBus", 11);
			    	format(string, 128, "巴士在几秒钟内出发 (%s)",name);
			    	ProxDetectorNew(playerid, 30.0, COLOR_FADE5, string);
		    	}
		    	else
		    	{
  					if(pPressed[playerid] == 56) pPressed[playerid] = 0;
	  				else pPressed[playerid]++;
					new i = pPressed[playerid];
     				SetPlayerRaceCheckpoint(playerid,0,BusCitySF[i][0],BusCitySF[i][1],BusCitySF[i][2],BusCitySF[i][3],BusCitySF[i][4],BusCitySF[i][5],5.0);
		    	    SetPVarInt(playerid, "BusStop", 0);
		    	}
			}
			else
			{
				pPressed[playerid]++;
				SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 40);
				if(pPressed[playerid] == 3 || pPressed[playerid] == 10 || pPressed[playerid] == 20 || pPressed[playerid] == 32 || pPressed[playerid] == 35 || pPressed[playerid] == 40 || pPressed[playerid] == 46 || pPressed[playerid] == 53 || pPressed[playerid] == 56) e_type = 1;
				else e_type = 0;
				new i = pPressed[playerid];
				SetPlayerRaceCheckpoint(playerid,e_type,BusCitySF[i][0],BusCitySF[i][1],BusCitySF[i][2],BusCitySF[i][3],BusCitySF[i][4],BusCitySF[i][5],5.0);
			}
		}
		if(type == 3)
		{
			if(pPressed[playerid] == 7 || pPressed[playerid] == 10 || pPressed[playerid] == 18 || pPressed[playerid] == 24 || pPressed[playerid] == 32 || pPressed[playerid] == 39 || pPressed[playerid] == 51 || pPressed[playerid] == 64 || pPressed[playerid] == 71  || pPressed[playerid] == 79)
			{
			    if(GetPVarInt(playerid, "BusStop") == 0)
			    {
			    	SetPVarInt(playerid, "TimeBus", 11);
			    	format(string, 128, "巴士在几秒钟内出发 (%s)",name);
			    	ProxDetectorNew(playerid, 30.0, COLOR_FADE5, string);
		    	}
		    	else
		    	{
  					if(pPressed[playerid] == 79) pPressed[playerid] = 0;
	  				else pPressed[playerid]++;
					new i = pPressed[playerid];
     				SetPlayerRaceCheckpoint(playerid,0,BusCityLV[i][0],BusCityLV[i][1],BusCityLV[i][2],BusCityLV[i][3],BusCityLV[i][4],BusCityLV[i][5],5.0);
		    	    SetPVarInt(playerid, "BusStop", 0);
		    	}
			}
			else
			{
				pPressed[playerid]++;
				SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 45);
				if(pPressed[playerid] == 7 || pPressed[playerid] == 10 || pPressed[playerid] == 18 || pPressed[playerid] == 24 || pPressed[playerid] == 32 || pPressed[playerid] == 39 || pPressed[playerid] == 51 || pPressed[playerid] == 64 || pPressed[playerid] == 71 || pPressed[playerid] == 79) e_type = 1;
				else e_type = 0;
				new i = pPressed[playerid];
				SetPlayerRaceCheckpoint(playerid,e_type,BusCityLV[i][0],BusCityLV[i][1],BusCityLV[i][2],BusCityLV[i][3],BusCityLV[i][4],BusCityLV[i][5],5.0);
			}
		}
		if(type == 4)
		{
			if(pPressed[playerid] == 11 || pPressed[playerid] == 23 || pPressed[playerid] == 57 || pPressed[playerid] == 88 || pPressed[playerid] == 101 || pPressed[playerid] == 112)
			{
			    if(GetPVarInt(playerid, "BusStop") == 0)
			    {
			    	SetPVarInt(playerid, "TimeBus", 11);
			    	format(string, 128, "巴士在几秒钟内出发 (%s)",name);
			    	ProxDetectorNew(playerid, 30.0, COLOR_FADE5, string);
		    	}
		    	else
		    	{
  					if(pPressed[playerid] == 112) pPressed[playerid] = 0;
	  				else pPressed[playerid]++;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,0,BusSchool[i][0],BusSchool[i][1],BusSchool[i][2],BusSchool[i][3],BusSchool[i][4],BusSchool[i][5],5.0);
		    	    SetPVarInt(playerid, "BusStop", 0);
		    	}
			}
			else
			{
				pPressed[playerid]++;
				SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 50);
				if(pPressed[playerid] == 11 || pPressed[playerid] == 23 || pPressed[playerid] == 57 || pPressed[playerid] == 88 || pPressed[playerid] == 101 || pPressed[playerid] == 112) e_type = 1;
				else e_type = 0;
				new i = pPressed[playerid];
				SetPlayerRaceCheckpoint(playerid,e_type,BusSchool[i][0],BusSchool[i][1],BusSchool[i][2],BusSchool[i][3],BusSchool[i][4],BusSchool[i][5],5.0);
			}
		}
		if(type == 5)
		{
			if(pPressed[playerid] == 9 || pPressed[playerid] == 46 || pPressed[playerid] == 81  || pPressed[playerid] == 91)
			{
			    if(GetPVarInt(playerid, "BusStop") == 0)
			    {
			    	SetPVarInt(playerid, "TimeBus", 11);
			    	format(string, 128, "巴士在几秒钟内出发 (%s)",name);
			    	ProxDetectorNew(playerid, 30.0, COLOR_FADE5, string);
		    	}
		    	else
		    	{
  					if(pPressed[playerid] == 91) pPressed[playerid] = 0;
	  				else pPressed[playerid]++;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,0,BusLS[i][0],BusLS[i][1],BusLS[i][2],BusLS[i][3],BusLS[i][4],BusLS[i][5],5.0);
		    	    SetPVarInt(playerid, "BusStop", 0);
		    	}
			}
			else
			{
				pPressed[playerid]++;
				SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 55);
				if(pPressed[playerid] == 9 || pPressed[playerid] == 46 || pPressed[playerid] == 81 || pPressed[playerid] == 91) e_type = 1;
				else e_type = 0;
				new i = pPressed[playerid];
				SetPlayerRaceCheckpoint(playerid,e_type,BusLS[i][0],BusLS[i][1],BusLS[i][2],BusLS[i][3],BusLS[i][4],BusLS[i][5],5.0);
			}
		}
	}
	if(GetPVarInt(playerid, "FuelCarLittle") == 1)
	{
	    new i = GetPVarInt(playerid, "LittleFull") - 1;
	    MafiaInfo[3][mFuel][i] -= 100;
     	format(MafiaInfo[3][mFuels], 128, "%i, %i, %i, %i, %i", MafiaInfo[3][mFuel][0],
     	MafiaInfo[3][mFuel][1], MafiaInfo[3][mFuel][2], MafiaInfo[3][mFuel][3], MafiaInfo[3][mFuel][4]);
	    SetMafiaStr(3, "fuel", MafiaInfo[3][mFuels]);
    	format(string, 50, "井里的燃料: {FF9900}%i{ffffff} 升", MafiaInfo[3][mFuel][i]);
    	Update3DTextLabelText(tPickup[6+i], 0xffffffff, string);
		DeletePVar(playerid, "LittleFull");
		SetPVarInt(playerid, "FuelCarLittle", 2);
		new rand = random(5);
		if(rand == 0 || rand == 1) SetPlayerRaceCheckpoint(playerid,1,248.3731,1371.2498,10.5859, 0.0, 0.0, 0.0,5.0);
		if(rand == 2) SetPlayerRaceCheckpoint(playerid,1,246.3248,1343.8315,10.5859, 0.0, 0.0, 0.0,5.0);
		if(rand == 3) SetPlayerRaceCheckpoint(playerid,1,246.5734,1395.7122,10.5859, 0.0, 0.0, 0.0,5.0);
		if(rand == 4 || rand == 5) SetPlayerRaceCheckpoint(playerid,1,247.4168,1420.3143,10.5859, 0.0, 0.0, 0.0,5.0);
		SendServerMessage(playerid, "按照检查点卸载货物");
		return 1;
	}
	if(GetPVarInt(playerid, "FuelCarLittle") == 2)
	{
	    if(GetPVarInt(playerid,"metalFull")>gettime()) return SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Teleport Pickup )"),GKick(playerid);
	    tdload[2]+=100;
	    SetOtherInt("tdload[2]", tdload[2]);
	    SetPVarInt(playerid, "FuelCarLittle", 1);
		format(string, 50, "工厂燃料: {FF9900}%i{ffffff} 升", tdload[2]);
 		Update3DTextLabelText(tPickup[2], 0xFFFFFFFF, string);
 		Update3DTextLabelText(tPickup[3], 0xFFFFFFFF, string);
 		Update3DTextLabelText(tPickup[4], 0xFFFFFFFF, string);
  		Update3DTextLabelText(tPickup[5], 0xFFFFFFFF, string);
		new full;
		for(new i = 0; i < 5; i++)
  		{
			if(MafiaInfo[3][mFuel][i] > 100) full = i+1;
   		}
		if(full == 0)
		{
  			PlayerInfo[playerid][pCash] += GetPVarInt(playerid, "JobLittlePrice");
	    	DeletePVar(playerid, "LittleFull");
			DeletePVar(playerid, "JobLittlePrice");
  			DeletePVar(playerid, "FuelCarLittle");
			RemovePlayerFromVehicle(playerid);
			return SendErrorMessage(playerid, "井里没有燃料，等等!");
		}
		SetPVarInt(playerid, "JobLittlePrice", GetPVarInt(playerid, "JobLittlePrice") + 250);
		format(YCMDstr, sizeof(YCMDstr), "―  你交付了 {ffffff}100 {ffff00}升燃料. 工厂燃料: {ffffff}%i {ffff00}升", tdload[2]);
		SendClientMessage(playerid, -1, YCMDstr);
  		SetPVarInt(playerid, "LittleFull", full);
  		full--;
		if(full == 0) SetPlayerRaceCheckpoint(playerid, 1, 433.7109,1580.9321,11.4922, 0.0, 0.0, 0.0, 5.0);
		if(full == 1) SetPlayerRaceCheckpoint(playerid, 1, 600.3598,1515.3052,7.8325, 0.0, 0.0, 0.0, 5.0);
		if(full == 2) SetPlayerRaceCheckpoint(playerid, 1, 578.3732,1439.7570,11.1406, 0.0, 0.0, 0.0, 5.0);
		if(full == 3) SetPlayerRaceCheckpoint(playerid, 1, 627.6626,1369.1279,11.9845, 0.0, 0.0, 0.0, 5.0);
		if(full == 4) SetPlayerRaceCheckpoint(playerid, 1, 353.2522,1317.3221,12.4766, 0.0, 0.0, 0.0, 5.0);
		return 1;

	}
	if(GetPVarInt(playerid, "FuelID") > 0)
	{
		if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return SendErrorMessage(playerid, "你没有挂车!");
	    new i = FuelInfo[GetPVarInt(playerid, "FuelID")][pBizzid], playerd;
		Delete3DTextLabel(FuelInfo[GetPVarInt(playerid, "FuelID")][pText3D]);
		BizzInfo[i][bProduct] += FuelInfo[GetPVarInt(playerid, "FuelID")][pTill];
		PlayerInfo[playerid][pCash] += FuelInfo[GetPVarInt(playerid, "FuelID")][pPrice] / 2;
		format(YCMDstr, sizeof(YCMDstr), "―  你交付了 %i 产品货物到 %s (%s)", FuelInfo[GetPVarInt(playerid, "FuelID")][pTill], BizzInfo[i][bName], FuelInfo[GetPVarInt(playerid, "FuelID")][pNamesss]);
		SendClientMessage(playerid, -1, YCMDstr);
		sscanf(FuelInfo[GetPVarInt(playerid, "FuelID")][pNamesss], "u", playerd);
		if(IsPlayerConnected(playerd))
		{
		    SendClientMessage(playerd, 0x006699FF, "[ - - - - - - - - - - - - - - - - - - - - - ]");
		    SCMF(playerid,COLOR_FSERVER,"―  送货员 {ffffff}%s {006699}将你的燃料送到了", Name(playerid));
		    SCMF(playerid,COLOR_FSERVER,"―  数量: {ffffff}%i {006699}升", FuelInfo[GetPVarInt(playerid, "FuelID")][pTill]);
		    SCMF(playerid,COLOR_FSERVER,"―  付款: {ffffff}%i {006699}美元", FuelInfo[GetPVarInt(playerid, "FuelID")][pPrice]);
		    SendClientMessage(playerd, 0x006699FF, "[ - - - - - - - - - - - - - - - - - - - - - ]");
		}
        foreach(new p : Player)
		{
		    if(!IsPlayerConnected(p) || GetPVarInt(p, "FuelID") == 0) continue;
		    if(GetPVarInt(p, "FuelID") > GetPVarInt(playerid, "FuelID")) SetPVarInt(p, "FuelID", GetPVarInt(p, "FuelID") - 1);
		}
		for(new p = GetPVarInt(playerid, "FuelID"); p <= TOTALPRODUCT - 1; p++)
		{
			strmid(FuelInfo[p][pNamesss],FuelInfo[p+1][pNamesss],0,strlen(FuelInfo[p+1][pNamesss]),MAX_PLAYER_NAME);
			FuelInfo[p][pBizzid] = FuelInfo[p+1][pBizzid];
			FuelInfo[p][pPrice] = FuelInfo[p+1][pPrice];
			FuelInfo[p][pTill] = FuelInfo[p+1][pTill];
			FuelInfo[p][pStatus] = FuelInfo[p+1][pStatus];
			FuelInfo[p][pText3D] = FuelInfo[p+1][pText3D];
	 	}
		TOTALFUEL--;
	    DeletePVar(playerid, "FuelID");
    	DisablePlayerRaceCheckpoint(playerid);
	}
	if(GetPVarInt(playerid, "ProductID") > 0)
	{
	    new i = ProductInfo[GetPVarInt(playerid, "ProductID")][pBizzid], playerd;
		Delete3DTextLabel(ProductInfo[GetPVarInt(playerid, "ProductID")][pText3D]);
		BizzInfo[i][bProduct] += ProductInfo[GetPVarInt(playerid, "ProductID")][pTill];
		PlayerInfo[playerid][pCash] += ProductInfo[GetPVarInt(playerid, "ProductID")][pPrice];
		format(YCMDstr, sizeof(YCMDstr), "―  你交付了 %i 产品货物到  %s (%s)", ProductInfo[GetPVarInt(playerid, "ProductID")][pTill], BizzInfo[i][bName], ProductInfo[GetPVarInt(playerid, "ProductID")][pNamesss]);
		SendClientMessage(playerid, -1, YCMDstr);
		sscanf(ProductInfo[GetPVarInt(playerid, "ProductID")][pNamesss], "u", playerd);
		if(IsPlayerConnected(playerd))
		{
		    SendClientMessage(playerd, 0x006699FF, "[ - - - - - - - - - - - - - - - - - - - - - ]");
		    SCMF(playerid,COLOR_FSERVER,"―  送货员 {ffffff}%s {006699}将你的货物送到了", Name(playerid));
			SCMF(playerid,COLOR_FSERVER,"―  数量: {ffffff}%i {006699}产品", ProductInfo[GetPVarInt(playerid, "ProductID")][pTill]);
			SCMF(playerid,COLOR_FSERVER,"―  付款: {ffffff}%i {006699}美元", ProductInfo[GetPVarInt(playerid, "ProductID")][pPrice]);
		    SendClientMessage(playerd, 0x006699FF, "[ - - - - - - - - - - - - - - - - - - - - - ]");
		}
		foreach(new p : Player)
		{
		    if(!IsPlayerConnected(p) || GetPVarInt(p, "ProductID") == 0) continue;
		    if(GetPVarInt(p, "ProductID") > GetPVarInt(playerid, "ProductID")) SetPVarInt(p, "ProductID", GetPVarInt(p, "ProductID") - 1);
		}
		for(new p = GetPVarInt(playerid, "ProductID"); p <= TOTALPRODUCT - 1; p++)
		{
			strmid(ProductInfo[p][pNamesss],ProductInfo[p+1][pNamesss],0,strlen(ProductInfo[p+1][pNamesss]),MAX_PLAYER_NAME);
			ProductInfo[p][pBizzid] = ProductInfo[p+1][pBizzid];
			ProductInfo[p][pPrice] = ProductInfo[p+1][pPrice];
			ProductInfo[p][pTill] = ProductInfo[p+1][pTill];
			ProductInfo[p][pStatus] = ProductInfo[p+1][pStatus];
			ProductInfo[p][pText3D] = ProductInfo[p+1][pText3D];
	 	}
		TOTALPRODUCT--;
	    DeletePVar(playerid, "ProductID");
    	DisablePlayerRaceCheckpoint(playerid);
	}
	new tmp2[30];
	if(RaceCP[playerid] == 10) { RaceCP[playerid] = 11; DisablePlayerRaceCheckpoint(playerid); 	chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[1][0],race[1][1],race[1][2], race[2][0],race[2][1],race[2][2],8.0); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 11) { RaceCP[playerid] = 12; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[2][0],race[2][1],race[2][2],race[3][0],race[3][1],race[3][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 12) { RaceCP[playerid] = 13; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[3][0],race[3][1],race[3][2],race[4][0],race[4][1],race[4][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 13) { RaceCP[playerid] = 14; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[4][0],race[4][1],race[4][2],race[5][0],race[5][1],race[5][2],8);	format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 14) { RaceCP[playerid] = 15; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[5][0],race[5][1],race[5][2],race[6][0],race[6][1],race[6][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 15) { RaceCP[playerid] = 16; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[6][0],race[6][1],race[6][2],race[7][0],race[7][1],race[7][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 16) { RaceCP[playerid] = 17; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[7][0],race[7][1],race[7][2],race[8][0],race[8][1],race[8][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 17) { RaceCP[playerid] = 18; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[8][0],race[8][1],race[8][2],race[9][0],race[9][1],race[9][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 18) { RaceCP[playerid] = 19; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[9][0],race[9][1],race[9][2],race[10][0],race[10][1],race[10][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 19) { RaceCP[playerid] = 20; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[10][0],race[10][1],race[10][2],race[11][0],race[11][1],race[11][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 20) { RaceCP[playerid] = 21; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[11][0],race[11][1],race[11][2],race[12][0],race[12][1],race[12][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 21) { RaceCP[playerid] = 22; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[12][0],race[12][1],race[12][2],race[13][0],race[13][1],race[13][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 22) { RaceCP[playerid] = 23; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[13][0],race[13][1],race[13][2],race[14][0],race[14][1],race[14][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 23) { RaceCP[playerid] = 24; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[14][0],race[14][1],race[14][2],race[15][0],race[15][1],race[15][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 24) { RaceCP[playerid] = 25; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[15][0],race[15][1],race[15][2],race[16][0],race[16][1],race[16][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 25) { RaceCP[playerid] = 26; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[16][0],race[16][1],race[16][2],race[17][0],race[17][1],race[17][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 26) { RaceCP[playerid] = 27; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[17][0],race[17][1],race[17][2],race[18][0],race[18][1],race[18][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 27) { RaceCP[playerid] = 28; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[18][0],race[18][1],race[18][2],race[19][0],race[19][1],race[19][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 28) { RaceCP[playerid] = 29; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[19][0],race[19][1],race[19][2],race[20][0],race[20][1],race[20][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
    else if(RaceCP[playerid] == 29) { RaceCP[playerid] = 30; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[20][0],race[20][1],race[20][2],race[21][0],race[21][1],race[21][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
    else if(RaceCP[playerid] == 30) { RaceCP[playerid] = 31; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[21][0],race[21][1],race[21][2],race[22][0],race[22][1],race[22][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
    else if(RaceCP[playerid] == 31) { RaceCP[playerid] = 32; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[22][0],race[22][1],race[22][2],race[23][0],race[23][1],race[23][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
    else if(RaceCP[playerid] == 32) { RaceCP[playerid] = 33; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[23][0],race[23][1],race[23][2],race[24][0],race[24][1],race[24][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
    else if(RaceCP[playerid] == 33) { RaceCP[playerid] = 34; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[24][0],race[24][1],race[24][2],race[25][0],race[25][1],race[25][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
    else if(RaceCP[playerid] == 34) { RaceCP[playerid] = 35; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[25][0],race[25][1],race[25][2],race[26][0],race[26][1],race[26][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
    else if(RaceCP[playerid] == 35) { RaceCP[playerid] = 36; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[26][0],race[26][1],race[26][2],race[27][0],race[27][1],race[27][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
    else if(RaceCP[playerid] == 36) { RaceCP[playerid] = 37; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[27][0],race[27][1],race[27][2],race[28][0],race[28][1],race[28][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
    else if(RaceCP[playerid] == 37) { RaceCP[playerid] = 38; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[28][0],race[28][1],race[28][2],race[29][0],race[29][1],race[29][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
    else if(RaceCP[playerid] == 38) { RaceCP[playerid] = 39; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[29][0],race[29][1],race[29][2],race[30][0],race[30][1],race[30][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
    else if(RaceCP[playerid] == 39) { RaceCP[playerid] = 40; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[30][0],race[30][1],race[30][2],race[31][0],race[31][1],race[31][2],8); format(tmp2, sizeof(tmp2), "~b~%d/31", chet[playerid] - 1); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	if(chet[playerid] == 6) // 557
	{
	    new Rcarn = GetPlayerVehicleID(playerid);
     	DestroyVehicle(Rcarn);
		RaceCP[playerid] = 15;
		new gRacecar = CreateVehicle(557, -1530.4048,-2150.5381,4.7225,94.9724, -1, -1, 60000);
		Fuell[GetPlayerVehicleID(playerid)] = 200;
		PutPlayerInVeh(playerid, gRacecar, 0);
		TogglePlayerControllable(playerid, 1);
		AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid) ,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
		zavodis[GetPlayerVehicleID(playerid)] = 1;
		Fuell[gRacecar] = 200;
		UnLockCar(gRacecar);
		IsLocked[gRacecar] = 0;
	}
	if(chet[playerid] == 10) // 411
	{
	    new Rcarn = GetPlayerVehicleID(playerid);
     	DestroyVehicle(Rcarn);
		RaceCP[playerid] = 19;
		new gRacecar = CreateVehicle(411, -2529.1074,-2154.3088,30.7712,34.6137, -1, -1, 60000);
		Fuell[GetPlayerVehicleID(playerid)] = 200;
		PutPlayerInVeh(playerid, gRacecar, 0);
		TogglePlayerControllable(playerid, 1);
		AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid) ,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
		zavodis[GetPlayerVehicleID(playerid)] = 1;
		Fuell[gRacecar] = 200;
		UnLockCar(gRacecar);
		IsLocked[gRacecar] = 0;
	}
	if(chet[playerid] == 20) // 495
	{
	    new Rcarn = GetPlayerVehicleID(playerid);
     	DestroyVehicle(Rcarn);
		RaceCP[playerid] = 29;
		new gRacecar = CreateVehicle(495, 923.2086,617.1326,-32.6233,270.4039, -1, -1, 60000);
		Fuell[GetPlayerVehicleID(playerid)] = 200;
		PutPlayerInVeh(playerid, gRacecar, 0);
		TogglePlayerControllable(playerid, 1);
		AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid) ,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
		zavodis[GetPlayerVehicleID(playerid)] = 1;
		Fuell[gRacecar] = 200;
		UnLockCar(gRacecar);
		IsLocked[gRacecar] = 0;
	}
	if(chet[playerid] == 25) // 471
	{
	    new Rcarn = GetPlayerVehicleID(playerid);
     	DestroyVehicle(Rcarn);
		RaceCP[playerid] = 34;
		new gRacecar = CreateVehicle(471, 2767.0840,609.3295,7.7706,182.4450, -1, -1, 60000);
		Fuell[GetPlayerVehicleID(playerid)] = 200;
		PutPlayerInVeh(playerid, gRacecar, 0);
		TogglePlayerControllable(playerid, 1);
		AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid) ,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
		zavodis[GetPlayerVehicleID(playerid)] = 1;
		Fuell[gRacecar] = 200;
		UnLockCar(gRacecar);
		IsLocked[gRacecar] = 0;
	}
	if(chet[playerid] == 31)
	{
		RaceCP[playerid] = 40;
		SetPlayerRaceCheckpoint(playerid,1,race[0][0],race[0][1],race[0][2],0.0,0.0,0.0,8);
	}
	if(RaceCP[playerid] == 40)
	{


		if(FirstRaceWinner == MAX_SLOTS)
		{
			FirstRaceWinner = playerid;
			SendSyntaxMessage(playerid, "你获得了第一名并得到了 20.000$");
			PlayerInfo[playerid][pCash] += 20000;
			strmid(NickPobed,Name(playerid), 0, strlen(Name(playerid)), 32);
		}
		else if(SecondRaceWinner == MAX_SLOTS)
		{
			SecondRaceWinner = playerid;
			SendSyntaxMessage(playerid, "你获得了第二名并得到了 15.000$");
			PlayerInfo[playerid][pCash] += 15000;
			strmid(NickPobed2,Name(playerid), 0, strlen(Name(playerid)), 32);
		}
		else if(ThirdRaceWinner == MAX_SLOTS)
		{
			ThirdRaceWinner = playerid;
   			SendSyntaxMessage(playerid, "你获得了第三名并得到了 10.000$");
			PlayerInfo[playerid][pCash] += 10000;
			strmid(NickPobed3,Name(playerid), 0, strlen(Name(playerid)), 32);
		}
		else if(ThoRaceWinner == MAX_SLOTS)
		{
			ThoRaceWinner = playerid;
   			SendSyntaxMessage(playerid, "你获得了第四名并得到了 5.000$");
			PlayerInfo[playerid][pCash] += 5000;
			strmid(NickPobed4,Name(playerid), 0, strlen(Name(playerid)), 32);
		}
		else if(FiveRaceWinner == MAX_SLOTS)
		{
			FiveRaceWinner = playerid;
			SendSyntaxMessage(playerid, "你获得了第五名并得到了 2.000$");
			PlayerInfo[playerid][pCash] += 2000;
			strmid(NickPobed5,Name(playerid), 0, strlen(Name(playerid)), 32);
		}
		else if(SixRaceWinner == MAX_SLOTS)
		{
			SixRaceWinner = playerid;
			SendSyntaxMessage(playerid, "你获得了第六名");
			strmid(NickPobed6,Name(playerid), 0, strlen(Name(playerid)), 32);
		}
		else if(SevenRaceWinner == MAX_SLOTS)
		{
			SevenRaceWinner = playerid;
			SendSyntaxMessage(playerid, "你获得了第七名");
			strmid(NickPobed7,Name(playerid), 0, strlen(Name(playerid)), 32);
		}
		else if(EightRaceWinner == MAX_SLOTS)
		{
			EightRaceWinner = playerid;
			SendSyntaxMessage(playerid, "你获得了第八名");
			strmid(NickPobed8,Name(playerid), 0, strlen(Name(playerid)), 32);
		}
		else if(NineRaceWinner == MAX_SLOTS)
		{
			NineRaceWinner = playerid;
			SendSyntaxMessage(playerid, "你获得了第九名");
			strmid(NickPobed9,Name(playerid), 0, strlen(Name(playerid)), 32);
		}
		else if(TenRaceWinner == MAX_SLOTS)
		{
			TenRaceWinner = playerid;
			SendSyntaxMessage(playerid, "你获得了第十名");
			strmid(NickPobed10,Name(playerid), 0, strlen(Name(playerid)), 32);
		}
		new Rcarn = GetPlayerVehicleID(playerid);
     	DestroyVehicle(Rcarn);
      	racecars[Rcarn] = 0;
	 	PlayerRacing[playerid] = 0;
		RaceCP[playerid] = 0;
		SetPlayerInterior(playerid, 0);
		chet[playerid] = 0;
		Q_SetPlayerPos(playerid,1555.0287,33.6296,24.1584);
		SetPlayerFacingAngle(playerid, 39.0413);
		DisablePlayerRaceCheckpoint(playerid);
		DisableRemoteVehicleCollisions(playerid, 0);
		return true;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(LessonCar[playerid] == 1)
		{
			switch(pLessonCar[playerid])
			{
			case CHECKPOINT_1:
				{
					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_2;
					SetPlayerRaceCheckpoint(playerid, 0,1431.5856,-1605.7881,13.1258,1414.1016,-1590.1088,13.1056, 5.0);
				}
			case CHECKPOINT_2:
				{
					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_3;
					SetPlayerRaceCheckpoint(playerid, 0,1414.1016,-1590.1088,13.1056,1326.4774,-1570.5297,13.1096, 5.0);
				}
			case CHECKPOINT_3:
				{
					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_4;
					SetPlayerRaceCheckpoint(playerid, 0,1326.4774,-1570.5297,13.1096,1321.8866,-1532.7999,13.1257, 5.0);
				}
			case CHECKPOINT_4:
				{
					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_5;
					SetPlayerRaceCheckpoint(playerid, 0,1321.8866,-1532.7999,13.1257,1354.8405,-1423.3745,13.1336, 5.0);
				}
			case CHECKPOINT_5:
				{
					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_6;
					SetPlayerRaceCheckpoint(playerid, 0,1354.8405,-1423.3745,13.1336,1326.1525,-1398.0543,13.0816, 5.0);
				}
			case CHECKPOINT_6:
				{
					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_7;
					SetPlayerRaceCheckpoint(playerid, 0,1326.1525,-1398.0543,13.0816,1275.1914,-1392.6611,12.9469, 5.0);
				}
			case CHECKPOINT_7:
				{
					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_8;
					SetPlayerRaceCheckpoint(playerid, 0,1275.1914,-1392.6611,12.9469,1260.9283,-1381.2084,12.9260, 5.0);
				}
			case CHECKPOINT_8:
				{
					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_9;
					SetPlayerRaceCheckpoint(playerid, 0,1260.9283,-1381.2084,12.9260,1262.1337,-1295.3394,12.9822, 5.0);
				}
			case CHECKPOINT_9:
				{
					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_10;
					SetPlayerRaceCheckpoint(playerid, 0,1262.1337,-1295.3394,12.9822, 1230.6207,-1278.1252,13.1256, 5.0);
				}
			case CHECKPOINT_10:
				{
					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_11;
					SetPlayerRaceCheckpoint(playerid, 0,1230.6207,-1278.1252,13.1256, 1195.1116,-1294.0479,13.1244, 5.0);
				}
			case CHECKPOINT_11:
				{
					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_13;
					SetPlayerRaceCheckpoint(playerid, 0,1195.1116,-1294.0479,13.1244, 1194.2792,-1381.9633,13.0581, 5.0);
				}
			case CHECKPOINT_13:
				{
					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_14;
					SetPlayerRaceCheckpoint(playerid, 0,1194.2792,-1381.9633,13.0581, 1211.8661,-1408.2028,12.9672, 5.0);
				}
			case CHECKPOINT_14:
				{
					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_15;
					SetPlayerRaceCheckpoint(playerid, 0,1211.8661,-1408.2028,12.9672, 1328.0269,-1408.1514,13.0764, 5.0);
				}
			case CHECKPOINT_15:
				{
					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_16;
					SetPlayerRaceCheckpoint(playerid, 0,1328.0269,-1408.1514,13.0764, 1370.2225,-1408.4753,13.1365, 5.0);
				}
			case CHECKPOINT_16:
				{

					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_17;
					SetPlayerRaceCheckpoint(playerid, 0,1370.2225,-1408.4753,13.1365, 1394.6809,-1417.7152,13.1254, 5.0);
				}
			case CHECKPOINT_17:
				{

					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_18;
					SetPlayerRaceCheckpoint(playerid, 0,1394.6809,-1417.7152,13.1254, 1410.8558,-1443.5433,13.1259, 5.0);
				}
			case CHECKPOINT_18:
				{

					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_19;
					SetPlayerRaceCheckpoint(playerid, 0,1410.8558,-1443.5433,13.1259, 1442.2218,-1443.3987,13.1257, 5.0);
				}
			case CHECKPOINT_19:
				{

					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_20;
					SetPlayerRaceCheckpoint(playerid, 0, 1442.2218,-1443.3987,13.1257, 1451.9531,-1453.7330,13.1082, 5.0);
				}
			case CHECKPOINT_20:
				{

					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_21;
					SetPlayerRaceCheckpoint(playerid, 0,1451.9531,-1453.7330,13.1082, 1427.3033,-1579.1327,13.1076, 5.0);
				}
			case CHECKPOINT_21:
				{

					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_22;
					SetPlayerRaceCheckpoint(playerid, 0,1427.3033,-1579.1327,13.1076, 1426.8547,-1605.9609,13.1252, 5.0);
				}
			case CHECKPOINT_22:
				{

					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_23;
					SetPlayerRaceCheckpoint(playerid, 0,1426.8547,-1605.9609,13.1252, 1420.1810,-1648.5120,13.1111, 5.0);
				}
			case CHECKPOINT_23:
				{

					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_24;
					SetPlayerRaceCheckpoint(playerid, 0,1420.1810,-1648.5120,13.1111,1371.8445,-1648.9862,13.1255, 5.0);
				}
			case CHECKPOINT_24:
				{
					GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_25;
					SetPlayerRaceCheckpoint(playerid, 1,1371.8445,-1648.9862,13.1255,0.0,0.0,0.0, 5.0);
				}
			case CHECKPOINT_25:
				{
					new Float:health;
					GetVehicleHealth(GetPlayerVehicleID(playerid),health);
					if(health >= 810)
					{
						JobCarTime[playerid] = 0;
						LessonCar[playerid] = 0;
						LessonStat[playerid] = 0;
						TakingLesson[playerid] = 0;
						PlayerInfo[playerid][pCarLic] = 1;
						DisablePlayerRaceCheckpoint(playerid);
						SendSyntaxMessage(playerid, "恭喜! 通过了驾驶考试");
						SendSyntaxMessage(playerid, "你获得了驾驶执照 ( /lic )");
						RemovePlayerFromVehicle(playerid);
						if(GetPVarInt(playerid,"quest_auto"))
						{
							PlayerInfo[playerid][pQuest_2] = 1;
							PlayerInfo[playerid][pDonatemoney] += 3;
							SendServerMessage(playerid, "你通过了第二阶段的任务，并收到了 3 捐赠点 ( /quest )");
							DeletePVar(playerid,"quest_auto");
						}
					}
					else
					{
						SendErrorMessage(playerid,"你开得不够好,技术不过关,考试失败!");
						JobCarTime[playerid] = 0;
						LessonCar[playerid] = 0;
						LessonStat[playerid] = 0;
						TakingLesson[playerid] = 0;
						RemovePlayerFromVehicle(playerid);
					}
				}
			}
		}
	}
	return true;
}

publics: OnPlayerLeaveRaceCheckpoint(playerid)
{
	return true;
}

publics: OnRconCommand(cmd[])
{
	return true;
}

publics: OnRconLoginAttempt(ip[], password[], success)
{
	if(logs == 1)
	{
		printr("OnRconLoginAttempt");
	}
	if(!success)
	{
		printf("IP %s 试图登录RCON, 使用密码 %s",ip, password);
		new pip[16];
		new name[MAX_PLAYER_NAME];
		new string[64];
		foreach(new i : Player)
		{
			GetPlayerIp(i, pip, sizeof(pip));
			GetPlayerName(i, name, MAX_PLAYER_NAME);
			if(!strcmp(ip, pip, true))
			{
				format(string,64, "― [服务器保护系统] %s 尝试登录 RCON.",name);
				GetPlayerIp(i,pip,sizeof(pip));
				format(string,sizeof(string), "ID: %i | IP: %s",i,pip);
				ABroadCast(-1,string,1);
				BanEx(i, string);
				return true;
			}
		}
	}
	return true;
}

publics: OnPlayerObjectMoved(playerid, objectid)
{
	return true;
}

publics: OnPlayerPickUpDynamicPickup(playerid,pickupid)
{
    return true;
}

publics: OnPlayerPickUpPickup(playerid, pickupid)
{
	if(pickupid == zanyat[0])
	{
	    SetPlayerInterior(playerid, 0);
	    SetPlayerVirtualWorld(playerid, 0);
	    Q_SetPlayerPos(playerid, 1658.9530,-815.5063,1271.0859);
	    return 1;
	}
	if(pickupid == zanyat[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		Q_SetPlayerPos(playerid,1380.4609,-1753.2698,13.5469);
		return 1;
	}
	if(pickupid == zanyat[2])
	{
		ShowPlayerDialog(playerid, 10098, DIALOG_STYLE_LIST, "{1E90FF}工作要求", "{FFFFFF}公交车司机 {FFBF00}[等级 2]\n{FFFFFF}出租车司机 {FFBF00}[等级 2]\n{FFFFFF}长途公交车司机 {FFBF00}[等级 3]\n{FFFFFF}矿工 {FFBF00}[等级 3]\n{FFFFFF}汽修工 {FFBF00}[等级 3]\n{FFFFFF}送货员 {FFBF00}[等级 4]\n{FFFFFF}送油司机 {FFBF00}[等级 4]\n{FFFFFF}教练 {FFBF00}[等级 5]\n{FFFFFF}卡车司机 {FFBF00}[等级 6]", "确定", "关闭");
	    return 1;
	}
	if(pickupid == lscmipic[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid,741.3494,-1345.8936,13.5154);
		return 1;
	}
    else if(pickupid == HorsesPICK[0])
    {
        if(GetPVarInt(playerid,"horsepickup") > gettime()) return true;
		ShowPlayerDialog(playerid,22827,DIALOG_STYLE_INPUT,"{1E90FF}赛马","{ffffff}你可以把钱压在任何一匹马上.\n请输入马匹编号 [1-4] 以及赌注金额 [1.000$ - 100.000$]\n例子: 1.1000 [这表示 将 1000$ 押注在 1号马匹上]","确定","退出");
        SetPVarInt(playerid,"horsepickup",gettime()+10);
		return 1;
	}
	else if(pickupid == UniversetyPickup1[0] || pickupid == UniversetyPickup1[1] || pickupid == UniversetyPickup1[2] || pickupid == UniversetyPickup1[3])
	{
	    if(PlayerInfo[playerid][pWork] != 12) return SendErrorMessage(playerid, "要开始上课,你需要换衣服!");
	    if(GetPVarInt(playerid, "learnobject") == 1) return 1;
	    SetPVarInt(playerid, "learn", 1);
		ShowPlayerDialog(playerid,22823,0,"{1E90FF}数学","{FFFFFF}想要开始学习一门学科吗 ?","确定","不了");
		return 1;
	}
	else if(pickupid == UniversetyPickup1[4] || pickupid == UniversetyPickup1[5] || pickupid == UniversetyPickup1[6] || pickupid == UniversetyPickup1[7])
	{
	    if(GetPVarInt(playerid, "learnobject") == 1) return 1;
	    if(PlayerInfo[playerid][pWork] != 12) return SendErrorMessage(playerid, "要开始上课,你需要换衣服!");
	    SetPVarInt(playerid, "learn", 2);
	   	ShowPlayerDialog(playerid,22823,0,"{1E90FF}信息学","{FFFFFF}想要开始学习一门学科吗 ?","确定","不了");
	   	return 1;
	}
	else if(pickupid == UniversetyPickup1[8] || pickupid == UniversetyPickup1[9] || pickupid == UniversetyPickup1[10] || pickupid == UniversetyPickup1[11])
	{
	    if(GetPVarInt(playerid, "learnobject") == 1) return 1;
	    if(PlayerInfo[playerid][pWork] != 12) return SendErrorMessage(playerid, "要开始上课,你需要换衣服!");
	    SetPVarInt(playerid, "learn", 3);
	    ShowPlayerDialog(playerid,22823,0,"{1E90FF}史学","{FFFFFF}想要开始学习一门学科吗 ?","确定","不了");
	    return 1;
	}
	else if(pickupid == UniversetyPickup1[12] || pickupid == UniversetyPickup1[13] || pickupid == UniversetyPickup1[14] || pickupid == UniversetyPickup1[15])
	{
	    if(GetPVarInt(playerid, "learnobject") == 1) return 1;
	    if(PlayerInfo[playerid][pWork] != 12) return SendErrorMessage(playerid, "要开始上课,你需要换衣服!");
	    SetPVarInt(playerid, "learn", 4);
	    ShowPlayerDialog(playerid,22823,0,"{1E90FF}中文","{FFFFFF}想要开始学习一门学科吗 ?","确定","不了");
	    return 1;
	}
	else if(pickupid == UniversetyPickup1[16] || pickupid == UniversetyPickup1[17] || pickupid == UniversetyPickup1[18] || pickupid == UniversetyPickup1[19] || pickupid == UniversetyPickup1[20])
	{
	    if(GetPVarInt(playerid, "learnobject") == 1) return 1;
	    if(PlayerInfo[playerid][pWork] != 12) return SendErrorMessage(playerid, "要开始上课,你需要换衣服!");
	    SetPVarInt(playerid, "learn", 5);
	    ShowPlayerDialog(playerid,22823,0,"{1E90FF}基因理论","{FFFFFF}想要开始学习一门学科吗 ?","确定","不了");
	    return 1;
	}
	else if(pickupid == otelicon[0])
	{
	    ShowPlayerDialog(playerid, 22812, DIALOG_STYLE_LIST, "{1E90FF}酒店","{FFFFFF}离开酒店\n支付酒店费用", "选择", "返回");
		return 1;
	}
	else if(pickupid == otelzasel[0])
	{
	    if(PlayerInfo[playerid][pPhousekey] != 799 || PlayerInfo[playerid][pPhousekey2] != 799) return SendErrorMessage(playerid,"你有房子或已经租房了!");
        new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
		NewSPD(playerid,22811,DIALOG_STYLE_INPUT,"{1E90FF}酒店","{FFFFFF}酒店的住宿费用是: {EEC900}%i$\n{FFFFFF}每小时的租金是: {EEC900}200$\n\n填写您的姓名*输入昵称*","确定","返回",till*100);
		return 1;
    }
	else if(pickupid == duelpic[0])
	{
	    if(PlayerInfo[playerid][pLevel] < 3) return SendErrorMessage(playerid, "你的等级低于 3!");
	    if(duelzanyat == 1) return SendErrorMessage(playerid,"等待决斗结束..");
	    if(ZapretDice[playerid]!=0)return SendErrorMessage(playerid, "你已经在决斗了!");
 		ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_INPUT, "{1E90FF}决斗","输入对手的ID","确定","返回");
    	return 1;
    }
	else if(pickupid == pickupcas)
	{
		ShowPlayerDialog(playerid,3001,0,"{1E90FF}工作","你想获得一个赌场管理员的工作吗?","确定","退出");
		return 1;
	}
	else if(pickupid == CasinoInfo[0] || pickupid == CasinoInfo[1])
	{
	    gInfoCasino[0] = CreateInfoCasino(playerid, 196.666656, 338.074096, "LD_SLOT:cherry");
	    PlayerTextDrawShow(playerid, gInfoCasino[0]);
	   	gInfoCasino[1] = CreateInfoCasino(playerid, 196.666656, 365.622314, "LD_SLOT:grapes");
	   	PlayerTextDrawShow(playerid, gInfoCasino[1]);
	   	gInfoCasino[2] = CreateInfoCasino(playerid, 196.666671, 391.511322, "LD_SLOT:r_69");
	   	PlayerTextDrawShow(playerid, gInfoCasino[2]);
	   	gInfoCasino[3] = CreateInfoCasino(playerid, 315.666748, 337.829681, "LD_SLOT:cherry");
	   	PlayerTextDrawShow(playerid, gInfoCasino[3]);
	   	gInfoCasino[4] = CreateInfoCasino(playerid, 247.666748, 337.829528, "LD_SLOT:bell");
	   	PlayerTextDrawShow(playerid, gInfoCasino[4]);
	   	gInfoCasino[5] = CreateInfoCasino(playerid, 247.333267, 364.548095, "LD_SLOT:bar1_o");
	   	PlayerTextDrawShow(playerid, gInfoCasino[5]);
	   	gInfoCasino[6] = CreateInfoCasino(playerid, 247.333251, 390.022186, "LD_SLOT:bar2_o");
	   	PlayerTextDrawShow(playerid, gInfoCasino[6]);
	   	gInfoCasino[7] = CreateInfoCasino(playerid, 339.999877, 337.925872, "LD_SLOT:bar2_o");
	   	PlayerTextDrawShow(playerid, gInfoCasino[7]);
	   	gInfoCasino[8] = CreateInfoCasino(playerid, 363.333404, 337.585083, "LD_SLOT:bell");
	   	PlayerTextDrawShow(playerid, gInfoCasino[8]);
	   	gInfoCasino[9] = CreateInfoCasino(playerid, 364.333374, 362.059356, "LD_SLOT:cherry");
	   	PlayerTextDrawShow(playerid, gInfoCasino[9]);
	   	gInfoCasino[10] = CreateInfoCasino(playerid, 340.666809, 362.059173, "LD_SLOT:bell");
	   	PlayerTextDrawShow(playerid, gInfoCasino[10]);
	   	gInfoCasino[11] = CreateInfoCasino(playerid, 316.000122, 363.059173, "LD_SLOT:bell");
	   	PlayerTextDrawShow(playerid, gInfoCasino[11]);

	   	gInfoCasino[12] = CreatePlayerTextDraw(playerid, 220.666687, 335.585113, "x2____x5______________x1~n~~n~x3____x6______________x3~n~~n~x4____x7");
		PlayerTextDrawLetterSize(playerid, gInfoCasino[12], 0.449999, 1.600000);
		PlayerTextDrawAlignment(playerid, gInfoCasino[12], 1);
		PlayerTextDrawColor(playerid, gInfoCasino[12], -1);
		PlayerTextDrawSetShadow(playerid, gInfoCasino[12], 0);
		PlayerTextDrawSetOutline(playerid, gInfoCasino[12], 1);
		PlayerTextDrawBackgroundColor(playerid, gInfoCasino[12], 51);
		PlayerTextDrawFont(playerid, gInfoCasino[12], 1);
		PlayerTextDrawSetProportional(playerid, gInfoCasino[12], 1);
		PlayerTextDrawShow(playerid, gInfoCasino[12]);

		gInfoCasino[13] = CreatePlayerTextDraw(playerid, 412.666748, 329.203674, "usebox");
		PlayerTextDrawLetterSize(playerid, gInfoCasino[13], 0.000000, 10.261528);
		PlayerTextDrawTextSize(playerid, gInfoCasino[13], 182.666671, 0.000000);
		PlayerTextDrawAlignment(playerid, gInfoCasino[13], 1);
		PlayerTextDrawColor(playerid, gInfoCasino[13], 0);
		PlayerTextDrawUseBox(playerid, gInfoCasino[13], true);
		PlayerTextDrawBoxColor(playerid, gInfoCasino[13], 102);
		PlayerTextDrawSetShadow(playerid, gInfoCasino[13], 0);
		PlayerTextDrawSetOutline(playerid, gInfoCasino[13], 0);
		PlayerTextDrawFont(playerid, gInfoCasino[13], 0);
        PlayerTextDrawShow(playerid, gInfoCasino[13]);
        SetPVarInt(playerid, "dCancelInfoCasino1", 1);

		new str[650];
		format(str,sizeof(str),"{ffffff}奖励列表:\n\n\
		{fef501}1-名{ffffff} 奖励 = {baff00}2x{FFFFFF}\n\
		{fef501}2-名{ffffff} 奖励 = {baff00}3x{FFFFFF}\n\
		{fef501}3-名{ffffff} 奖励 = {baff00}4x{FFFFFF}\n\
		{fef501}4-名{ffffff} 奖励 = {baff00}5x{ffffff}\n\
		{fef501}5-名{ffffff} 奖励 = {baff00}6x{ffffff}\n\
		{fef501}6-名{ffffff} 奖励 = {baff00}7x{ffffff}");
		strcat(YCMDstr, str);
		ShowPlayerDialog(playerid, 3004, DIALOG_STYLE_MSGBOX, "{ffcf00}信息", str, "关闭", "");
		return 1;
	}
	else if(pickupid == univerraz[0])
	{
	    if(!PlayerInfo[playerid][pWork]) ShowPlayerDialog(playerid,22824,0,"{1E90FF}欢迎","{FFFFFF}你想换衣服吗 ?","确定","不了");
		else if(PlayerInfo[playerid][pWork] == 12) ShowPlayerDialog(playerid,22824,0,"{1E90FF}完成","{FFFFFF}你想脱掉衣服吗 ?","确定","不了");
	}
	else if(pickupid == yablokapic[0])
	{
		if(!PlayerInfo[playerid][pWork]) ShowPlayerDialog(playerid,2450,0,"{1E90FF}欢迎","\n  {FFFFFF}我们为你提供了 {3CB371}摘苹果的工作.\n\n\t\t{ADFF2F}你同意吗?","同意","不了");
		else if(PlayerInfo[playerid][pWork] == 11) ShowPlayerDialog(playerid,2450,0,"{1E90FF}关闭.","你想完成工作并收钱吗?","确定","不了");
		return 1;
	}
    else if(pickupid == yashik[0] || pickupid == yashik[1])
    {
        if(!IsAGang(playerid) && !IsAMafia(playerid)) return SendErrorMessage(playerid,"你不是帮派/黑手党");
        {
			if(PlayerToPoint(10.0,playerid,-1290.9072,501.4489,11.1953))
			{
                if(armmatsf == 0)return SendErrorMessage(playerid,"SA监狱一无所有.");
                if(PlayerInfo[playerid][pMats] >= 250) return SendErrorMessage(playerid,"你不需要材料了!");
		        SendSyntaxMessage(playerid, "你从SA监狱的仓库拿走了250材料");
		        SendSyntaxMessage(playerid, "将箱子放入货车 ( /materials put - 上车输入 )");
		        PlayerInfo[playerid][pMats] += 250;
		        ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,1,0,0,1,1,1);
		        SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
		        ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,1,0,0,1,1,1);
		        usegruz[playerid] = 1;
		        usemats[playerid] = 1;
		        armmatsf -= 250;
		        SetOtherInt("armmatsf", armmatsf);
			}
            if(PlayerToPoint(10.0,playerid,316.8127,-167.5395,999.5938))
            {
                if(armmatbi == 0)return SendErrorMessage(playerid,"军队仓库是空的");
                if(PlayerInfo[playerid][pMats] >= 250) return SendErrorMessage(playerid,"你不需要材料了");
			    SendSyntaxMessage(playerid, "你从军队的仓库拿走了250材料.");
		        SendSyntaxMessage(playerid, "将箱子放入火车 ( /materials put - 上车输入 )");
		        PlayerInfo[playerid][pMats] += 250;
		        ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,1,0,0,1,1,1);
		        SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
		        ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,1,0,0,1,1,1);
		        usemats[playerid] = 1;
		        usegruz[playerid] = 1;
		        armmatbi -= 250;
		        SetOtherInt("armmatbi", armmatbi);
			}
		}
		return 1;
	}
	else if(pickupid == cpokras[0])
	{
		ShowPlayerDialog(playerid,3010,DIALOG_STYLE_LIST,"{1E90FF}改装","[1] - 汽车喷漆\n[2] - 发动机修理","选择","返回");
		return 1;
	}
	else if(pickupid == nomeravto[0])
	{
	    if(PlayerInfo[playerid][pCarLic] != 1) return SendErrorMessage(playerid,"你没有驾驶执照");
	    if(caridhouse[playerid] == -1) return SendErrorMessage(playerid,"你没有车");
	    if(PlayerInfo[playerid][pNumbercar] !=0) return SendErrorMessage(playerid,"你已经有车牌号了");
		else
		{
			if(GetPVarInt(playerid, "navto") == 0)
			{
				ShowPlayerDialog(playerid, 8238, DIALOG_STYLE_MSGBOX, "{1E90FF}买车牌","{FFFFFF}要获得车牌，您必须:\n\n\t\t1. 进行技术检查\n\t\t2. 纳税 15.000 $\n\t\t3. 有驾照\n\n您同意这些条款和条件吗?","确定","返回");
			}
			else
			{
				if(PlayerInfo[playerid][pCash] < 15000) return SendErrorMessage(playerid,"你没有 15.000$");
			  	new number[7];
				number[0] = random('Z' - 'A') + 'A';
				number[1] = random('9' - '0') + '0';
				number[2] = random('9' - '0') + '0';
				number[3] = random('9' - '0') + '0';
				number[4] = random('Z' - 'A') + 'A';
				number[5] = random('Z' - 'A') + 'A';
				number[6] = random('Z' - 'A') + 'A';
				strmid(PlayerInfo[playerid][pNumbercar], number, 0, strlen(number)-1, 32);
				SetVehicleNumberPlate(caridhouse[playerid], PlayerInfo[playerid][pNumbercar]);
				PlayerInfo[playerid][pCash] -= 15000;
	            SendSyntaxMessage(playerid,"您已成功注册车牌");
                DeletePVar(playerid, "navto");
				return true;
			}
		}
		return 1;
	}
	else if(pickupid == TeamDeathmatch[0])
	{
	    SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 21);
		Q_SetPlayerPos(playerid,2038.8318,-1884.4972,999.9086);
		SetPlayerFacingAngle(playerid, 0.1941);
		DelGun(playerid);
		return 1;
	}
	else if(pickupid == TeamDeathmatch[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid,-2166.7073,251.8624,35.3203);
		SetPlayerFacingAngle(playerid, 87.8891);
		if(PlayerDeathmatch[playerid] > 0)
		{
		    DeathmatchPlayers -= 1;
		    PlayerDeathmatch[playerid] = 0;
		    SendErrorMessage(playerid, "你离开了房间，被排除在战斗之外.");
		}
	}
	else if(pickupid == TeamDeathmatch[2])
	{
		if(DeathmatchRound == 0) return SendErrorMessage(playerid,"战斗已经结束");
	    if(DeathmatchPlayers >= 20) return SendErrorMessage(playerid,"所有地方都被占用了");
	    if(PlayerInfo[playerid][pWarns] >= 1) return SendErrorMessage(playerid,"带有警告不能参加!");
 	    if(PlayerDeathmatch[playerid] > 0) return SendErrorMessage(playerid,"你已经注册参加比赛了!");
        DeathmatchPlayers += 1;
		if(DeathmatchPlayers == 1 || DeathmatchPlayers == 3 || DeathmatchPlayers == 5 || DeathmatchPlayers == 7 || DeathmatchPlayers == 9 || DeathmatchPlayers == 11 || DeathmatchPlayers == 13 || DeathmatchPlayers == 15 || DeathmatchPlayers == 17 || DeathmatchPlayers == 19)
		{
		    PlayerDeathmatch[playerid] = 1;
		}
		if(DeathmatchPlayers == 2 || DeathmatchPlayers == 4 || DeathmatchPlayers == 6 || DeathmatchPlayers == 8 || DeathmatchPlayers == 10 || DeathmatchPlayers == 12 || DeathmatchPlayers == 14 || DeathmatchPlayers == 16 || DeathmatchPlayers == 18 || DeathmatchPlayers == 20)
        {
            PlayerDeathmatch[playerid] = 2;
		}
        format(YCMDstr, sizeof(YCMDstr), "战斗比赛参加人员: %d", DeathmatchPlayers);
		ProxDetector(30.0, playerid, YCMDstr, COLOR_NEWS,COLOR_NEWS,COLOR_NEWS,COLOR_NEWS,COLOR_NEWS);
		SendServerMessage(playerid, "你已成功注册参加战斗.不要离开房间!");
    	if(PlayerInfo[playerid][pSex] == 1) return SetPlayerChatBubble(playerid,"注册进入比赛",COLOR_PURPLE,30.0,5000);
    	else if(PlayerInfo[playerid][pSex] == 2) return SetPlayerChatBubble(playerid,"注册进入比赛",COLOR_PURPLE,30.0,5000);
	}
	else if(pickupid == ammomery[0])
	{
		if(PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] >= 3)
		{
		    if(GetPVarInt(playerid,"naboxrana") > gettime())
            {
			    SendErrorMessage(playerid,"你已经拿着警卫装备，等待皮卡车!");
            }
            else
            {
                if(GetPVarInt(playerid,"ammomery") > gettime()) return true;
		        ShowPlayerDialog(playerid,1050,DIALOG_STYLE_LIST,"{1E90FF}警卫装备","{FFFFFF}1. 防弹背心\n{FFFFFF}2. 防爆盾\n{FFFFFF}3. 警棍\n{FFFFFF}4. 枪械 - Desert Eagle\n{FFFFFF}5. 枪械 - Shotgun\n{FFFFFF}6. 枪械 - MP5\n{FFFFFF}7. 枪械 - M4","选择","返回");
                SetPVarInt(playerid,"ammomery",gettime()+10);
			}
        }
        return 1;
	}
	else if(pickupid == hit[0])
	{
		Q_SetPlayerPos(playerid,-711.0998,953.0272,12.3823);
		return 1;
	}
	else if(pickupid == hit[1])
	{
		Q_SetPlayerPos(playerid,-719.8198,953.4763,12.1328);
		return 1;
	}
	else if(pickupid == SZal[0])
	{
	    if(GetPVarInt(playerid,"FormaSport") == 0)
		{
		    OldSkin[playerid]=GetPlayerSkin(playerid);
			SetPVarInt(playerid,"FormaSport",1);
			ResetPlayerWeapons(playerid);
			SendSyntaxMessage(playerid,"你在健身房开始了一项运动.");
			if(PlayerInfo[playerid][pJob] == 9) { if(PlayerInfo[playerid][pSex] == 1) { SetPlayerSkin(playerid, 49); } else { SetPlayerSkin(playerid, 224); } }
			else { if(PlayerInfo[playerid][pSex] == 1) { SetPlayerSkin(playerid, 81); } else SetPlayerSkin(playerid,41); }
		}
	    else
		{
		    SetPVarInt(playerid,"FormaSport",0);
            SendSyntaxMessage(playerid,"你完成了健身.");
			SetPlayerSkin(playerid,OldSkin[playerid]);
			if(playerid == GFID1 || playerid == GFID2)
			{
        		TotalFight = 0;
				GFID1=INVALID_PLAYER_ID; GFID2=INVALID_PLAYER_ID;
	    		UpdateFighText();
		    }
		}
		return 1;
	}
	else if(pickupid == SZal[1])
	{
	    ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}体育馆","{FFFFFF}要学习武术，你需要在健身器材上练习.\n- 需求: 每个健身器材上40次 (拳击).\
		\n- 需求: 每个健身器材上80次 (功夫).\n- 需求: 每个健身器材上160次 (搏击).\n- 切换战斗姿势: /fstyle | /fight - 开始战斗.\n- 要开始练习，请使用 [F].","关闭","");
		return 1;
	}
    else if(pickupid == pokupudotka[0])
	{
        ShowPlayerDialog(playerid,2430,DIALOG_STYLE_LIST,"{1E90FF}码头","买钓竿\n卖钓竿\n买10个诱饵","选择","退出");
        return 1;
	}
	else if(pickupid == univerpic[0])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid,17.9092,26.4527,1200.7729);
		SetPlayerFacingAngle(playerid, 180.90);
		return 1;
	}
	else if(pickupid == univerpic[1])
	{
	    if(PlayerInfo[playerid][pWork] == 12) return SendErrorMessage(playerid,"你不能以老师的身份离开大学!");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid,1126.2552,-2037.2756,69.8835);
		SetPlayerFacingAngle(playerid, 180.90);
		return 1;
    }
	else if(pickupid == cerkva[0])
	{
		SetPlayerInterior(playerid, 2);
		Q_SetPlayerPos(playerid,-2018.0404,1119.4534,26.0531);
		SetPlayerFacingAngle(playerid, 188.2947);
		return 1;
	}
	else if(pickupid == cerkva[1])
	{
		SetPlayerInterior(playerid, 0);
		Q_SetPlayerPos(playerid,-1987.0332,1117.6903,54.0996);
		SetPlayerFacingAngle(playerid, 188.2947);
		return 1;
    }
	else if(pickupid == svadba[0])
    {
        ShowPlayerDialog(playerid,2423,DIALOG_STYLE_LIST,"{1E90FF}婚礼服装","牧师服装(6.000$)\n见证人服装(10.000$)\n见证人服装(10.000$)\n新郎的服装(20.000$)\n新娘的服装(25.000$)\n保安服装(8.000$)\n司机的西装(6.000$)","选择","退出");
        return 1;
	}
	else if(pickupid == pickbanklv[1])
	{
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 10);
		Q_SetPlayerPos(playerid,-2170.3545,638.0414,1052.3750);
		SetPlayerFacingAngle(playerid, 349.0933);
		return 1;
	}
	else if(pickupid == pickbanklv[0])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid,-184.2529,1133.5356,19.7422);
		SetPlayerFacingAngle(playerid, 276.0466);
		return 1;
	}
	else if(pickupid == pickbanksf[1])
	{
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 5);
		Q_SetPlayerPos(playerid,-2170.3545,638.0414,1052.3750);
		SetPlayerFacingAngle(playerid, 349.0933);
		return 1;
	}
	else if(pickupid == pickbanksf[0])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid,-1967.7822,434.1664,35.1719);
		SetPlayerFacingAngle(playerid, 276.0466);
		return 1;
	}
    else if(pickupid == areaskutor[0])
    {
  		for(new i; i < 16; i++)
		{
			TextDrawShowForPlayer(playerid,RentDraw[i]);
		}
		clicktd[playerid] = true;
		SetPVarInt(playerid,"RentDraw",1);
		SelectTextDraw(playerid, 0xFFFFFFAA);
		return 1;
	}
    else if(pickupid == areaskutor[1])
    {
  		for(new i; i < 16; i++)
		{
			TextDrawShowForPlayer(playerid,RentDraw[i]);
		}
		clicktd[playerid] = true;
		SetPVarInt(playerid,"RentDraw",1);
		SelectTextDraw(playerid, 0xFFFFFFAA);
		return 1;
	}
 	else if(pickupid == areaskutor[2])
    {
  		for(new i; i < 16; i++)
		{
			TextDrawShowForPlayer(playerid,RentDraw[i]);
		}
		clicktd[playerid] = true;
		SetPVarInt(playerid,"RentDraw",1);
		SelectTextDraw(playerid, 0xFFFFFFAA);
		return 1;
	}
	else if(pickupid == areaskutor[3])
    {
  		for(new i; i < 16; i++)
		{
			TextDrawShowForPlayer(playerid,RentDraw[i]);
		}
		SetPVarInt(playerid,"RentDraw",1);
		clicktd[playerid] = true;
		SelectTextDraw(playerid, 0xFFFFFFAA);
		return 1;
	}
	else if(pickupid == areaskutor[4])
    {
  		for(new i; i < 16; i++)
		{
			TextDrawShowForPlayer(playerid,RentDraw[i]);
		}
		clicktd[playerid] = true;
		SetPVarInt(playerid,"RentDraw",1);
		SelectTextDraw(playerid, 0xFFFFFFAA);
		return 1;
	}
	else if(pickupid == areaskutor[5])
    {
  		for(new i; i < 16; i++)
		{
			TextDrawShowForPlayer(playerid,RentDraw[i]);
		}
		clicktd[playerid] = true;
		SetPVarInt(playerid,"RentDraw",1);
		SelectTextDraw(playerid, 0xFFFFFFAA);
		return 1;
	}
	else if(pickupid == areaskutor[6])
    {
  		for(new i; i < 16; i++)
		{
			TextDrawShowForPlayer(playerid,RentDraw[i]);
		}
		clicktd[playerid] = true;
		SetPVarInt(playerid,"RentDraw",1);
		SelectTextDraw(playerid, 0xFFFFFFAA);
		return 1;
	}
    else if(pickupid == telefons[0])
	{
	    clicktd[playerid] = true;
		for(new x; x < 4; x++) TextDrawShowForPlayer(playerid, BPH[x]);
		for(new x; x < 7; x++) TextDrawShowForPlayer(playerid, PHONES[x]);
		SetPVarInt(playerid, "PlayerMenu",1); // Создаем
		SelectTextDraw(playerid, 0x34FFFF);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		return 1;
	}
    else if(pickupid == clubp[0])
    {
        SetPlayerInterior(playerid,1);
        SetPlayerVirtualWorld(playerid, 0);
        Q_SetPlayerPos(playerid,1.7141,33.0449,1199.5938);
        SetPlayerFacingAngle(playerid, 180.0000);
        SetPlayerCheckpoint(playerid,3.8362,22.9921,1199.6012, 1);
        return 1;
    }
    else if(pickupid == clubp[1])
    {
        SetPlayerInterior(playerid,0);
        SetPlayerVirtualWorld(playerid, 0);
        Q_SetPlayerPos(playerid,1680.6271,-1633.7616,13.5469);
        SetPlayerFacingAngle(playerid, 356.6632);
        DisablePlayerCheckpoint(playerid);
        return 1;
    }
    else if(pickupid == parashuts[0])
    {
        SetPVarInt(playerid, "parashuts", 1);
        GiveWeapon(playerid, 46, 1);
        return 1;
    }
    else if(pickupid == parashuts[1])
    {
        SetPVarInt(playerid, "parashuts", 1);
        GiveWeapon(playerid, 46, 1);
        return 1;
    }
    else if(pickupid == parashuts[2])
    {
        SetPVarInt(playerid, "parashuts", 1);
        GiveWeapon(playerid, 46, 1);
        return 1;
    }
    else if(pickupid == parashuts[3])
    {
        SetPVarInt(playerid, "parashuts", 1);
        GiveWeapon(playerid, 46, 1);
        return 1;
    }
    else if(pickupid == med)
    {
        if(PlayerInfo[playerid][pCash] <= 150) return SendErrorMessage(playerid,"你没有足够的钱!");
        GameTextForPlayer(playerid, "~r~-150$", 5000, 1);
        SetPlayerHealthAC(playerid,100);
        PlayerInfo[playerid][pCash] -= 150;
        return 1;
    }
    else if(pickupid == fbispy)
	{
	    if(PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 3)
	    {
            ShowPlayerDialog(playerid,2502, DIALOG_STYLE_LIST, "{1E90FF}选择一个组织", "警察\n军队\n医院\n政府\n驾驶学校\n媒体\nLCN\n山口组\n俄罗斯黑手党\n14K\n格罗夫\n巴拉斯\n瓦戈斯\n阿兹特克", "选择", "退出");
            SetPlayerColor(playerid,TEAM_HIT_COLOR);
		}
		else SendErrorMessage(playerid, "你不是FBI或者你的阶级低于 3.");
		return 1;
    }
	else if(pickupid == racepickboat)
	{
        if(raceActionboat != 1)return SendErrorMessage(playerid,"比赛报名已结束");
        if(PlayerInfo[playerid][pBoatLic] != 1) return SendErrorMessage(playerid,"你没有船只执照!");
        if(KartingPlayersboat > 9)return SendErrorMessage(playerid,"没有座位!");
	    if(PlayerKartingboat[playerid]) return SendErrorMessage(playerid,"您已经注册参加比赛!");
	    SendSyntaxMessage(playerid, "您已注册参加比赛!");
	    KartingPlayersboat ++;
	    PlayerKartingboat[playerid] = 1;
	    return 1;
	}
    else if(pickupid == pickupmed)
    {
        ShowPlayerDialog(playerid, 10087, DIALOG_STYLE_MSGBOX, "{1E90FF}医疗卡","{FFFFFF}你想办理医疗卡吗?", "确定", "不了");
        return 1;
    }
	else if(pickupid == RudokopPick[0])
	{
		Q_SetPlayerPos(playerid,-408.2391,-1059.4292,707.3418);
		SetPlayerFacingAngle(playerid,179.8417);
		SetPlayerVirtualWorld(playerid,0);
		SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		return 1;
	}
	else if(pickupid == RudokopPick[1])
	{
		Q_SetPlayerPos(playerid,597.9509,868.4442,-42.9609);
		SetPlayerFacingAngle(playerid,173.2617);
		SetPlayerVirtualWorld(playerid,0);
		SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		return 1;
	}
	else if(pickupid == RudokopPick[2])
	{
		if(Rudokop[playerid] == 0)
		{
			ShowPlayerDialog(playerid,92,DIALOG_STYLE_MSGBOX,"{1E90FF}矿工的工作.","{ffffff}矿工 - 你想开始做矿工吗?\n门用钥匙打开 {0080FF}Left.ALT{FFFFFF}\n\n开始一个矿工的工作","确定", "返回");
			return true;
		}
		else if(Rudokop[playerid] == 1)
		{
			format(YCMDstr, sizeof(YCMDstr),"{ffffff}矿工 - 你想离开矿工的工作吗?\n你会得到报酬: {0080FF}%d${FFFFFF}\n\n你想完成矿工的工作吗?",RudnikAmount[playerid]*40);
			ShowPlayerDialog(playerid,92,DIALOG_STYLE_MSGBOX,"{1E90FF}- 辞职",YCMDstr,"完成工作", "继续工作");
			return true;
		}
		return 1;
	}
	else if(pickupid == RudokopPick[3])
	{
	    SetPlayerCameraPos(playerid, 517.1011, 818.7740, -9.1641);
		SetPlayerCameraLookAt(playerid, 517.8467, 819.4469, -9.5541, 1);
        TogglePlayerControllable(playerid, 0);
		format(YCMDstr, sizeof(YCMDstr), "{FFFFFF}欢迎来到 {6699FF}'San Andreas' 采矿场\n{FFFFFF}在这里你可以赚取\n任何人都可以在一天中的任何时间作为矿工工作.价格为1公斤矿石40美元.");
		ShowPlayerDialog(playerid, 2286, DIALOG_STYLE_MSGBOX, "{1E90FF}工作 | {FFFFFF}矿工 | 信息", YCMDstr, "确定", "");
		return 1;
	}
	else if(pickupid == picacsec[0])
	{
        if(accessor[playerid] == 1) return 1;
        if(buyaccessor[playerid] == 0) ShowBuyAccessories(playerid);
        else StopShowBuyAccessories(playerid);
        return 1;
	}
	else if(pickupid == sportzal[0])
	{
        SetPlayerInterior(playerid, 5);
        SetPlayerVirtualWorld(playerid, 0);
	    Q_SetPlayerPos(playerid,771.4412,-2.7885,1000.7279);
	    return 1;
	}
	else if(pickupid == sportzal[1])
	{
        if(GetPVarInt(playerid,"FormaSport") == 1) return SendErrorMessage(playerid,"你不能离开大厅参加培训.");
        SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid, 0);
	    Q_SetPlayerPos(playerid,2227.1162,-1723.1353,13.5533);
	    return 1;
	}
    else if(pickupid == Tyrmasf[0])
	{
        SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
        SetPlayerVirtualWorld(playerid, 16);
		Q_SetPlayerPos(playerid,1862.1650,-1702.5933,5202.5859);
		SetPlayerFacingAngle(playerid, 179.8139);
        SetPlayerInterior(playerid, 0);
        return 1;
	}
    else if(pickupid == Tyrmaul[0])
	{
        SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		Q_SetPlayerPos(playerid,1849.1711,-1744.3098,5206.0859);
		SetPlayerFacingAngle(playerid, 276.1210);
        SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid, 16);
        return 1;
	}
	else if(pickupid == genSFa[0])
	{
		if(PlayerInfo[playerid][pMember] == 3)
		{
			SetPlayerInterior(playerid,0);
			Q_SetPlayerPos(playerid,-1467.7280,449.6915,26.1969);
			SetPlayerFacingAngle(playerid, 193.0000);
            SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
            TogglePlayerControllable(playerid, 0);
		}
		else
		{
			SendErrorMessage(playerid,"您无法进入大门!");
		}
		return 1;
	}
 	else if(pickupid == genSFa[1])
	{
        SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		SetPlayerInterior(playerid, 0);
		Q_SetPlayerPos(playerid,-1464.5736,458.0293,7.1809);
		SetPlayerFacingAngle(playerid, 0.0000);
		return 1;
	}
    else if(pickupid == Kazarma[0])
	{
        SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		Q_SetPlayerPos(playerid,-1800.6582,2985.6499,1514.3453);
		SetPlayerFacingAngle(playerid, 88.5658);
        SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid, 57);
        return 1;
	}
	else if(pickupid == Kazarma[1])
	{
		Q_SetPlayerPos(playerid,123.6428,1897.2458,18.4828);
		SetPlayerFacingAngle(playerid, 270.0);
        SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid, 0);
        return 1;
	}
	else if(pickupid == ekspert[0])
	{
		if(!IsACop(playerid)) return 1;
		if(GetPVarInt(playerid,"ekspert") > gettime()) return true;
	    ShowPlayerDialog(playerid, 2287, DIALOG_STYLE_LIST, "{1E90FF}配备", "手电筒 (移除/安装)\n警察徽章 (移除/装上)\n帽子 (移除/装上)\n防爆盾 (移除/装上)\n防弹衣 (移除/装上)", "选择", "退出");
        SetPVarInt(playerid,"ekspert",gettime()+10);
		return 1;
	}
	else if(pickupid == avtougon[0])
	{
		if(PlayerInfo[playerid][pLevel] < 5) return	SendErrorMessage(playerid,"你的等级低于 5");
  		PlayerInfo[playerid][pJob] = 8;
  		SendServerMessage(playerid, "你被录用了");
    	SendServerMessage(playerid, "[帮助]: 看看指令 ( /mn > COMMANDS > 工作 )");
		return 1;
	}
	else if(pickupid == otelvxod[0])
	{
		SetPlayerInterior(playerid, 0);
		Q_SetPlayerPos(playerid,120.8088,1075.4298,1015.6948);
		SetPlayerFacingAngle(playerid, 180.90);
		SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		return 1;
	}
	else if(pickupid == otelvxod[1])
	{
		SetPlayerInterior(playerid, 0);
		Q_SetPlayerPos(playerid,1307.1675,-1319.8269,13.9110);
		SetPlayerFacingAngle(playerid, 180.90);
		SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		return 1;
	}
	else if(pickupid == fermpicjob[0])
	{
		if(JobFarm[playerid] == false) return ShowPlayerDialog(playerid,22831,DIALOG_STYLE_MSGBOX,"{1E90FF}作为农民工作","{cdf93e}你想开始一个工作日?","确定","退出");
		if(JobFarm[playerid] == true) return ShowPlayerDialog(playerid,22832,DIALOG_STYLE_MSGBOX,"{1E90FF}作为农民工作","{cdf93e}你想完成工作日?","完成工作","退出");
        return 1;
	}
	if(!IsPlayerInRangeOfPoint(playerid, 7.0, PickupInfo[pickupid][PickX], PickupInfo[pickupid][PickY], PickupInfo[pickupid][PickZ])) return 1;
	else if(pickupid == paint[0])
	{
		SetPlayerInterior(playerid,1);
		Q_SetPlayerPos(playerid,286.9145,-38.6596,1001.5156);
		SetPlayerFacingAngle(playerid, 329.0564);
		SetPlayerVirtualWorld(playerid, 1);
		return 1;
	}
	else if(pickupid == racepic[0])
	{
		if(EndingRaceRound >= 1) return SendErrorMessage(playerid,"报名关闭");
        if(PlayerInfo[playerid][pLevel] < 2) return SendErrorMessage(playerid,"等级大于 2 才可以参加");
		if(PlayerInfo[playerid][pWarns] >= 1) return SendErrorMessage(playerid,"你有警告!");
		if(RacingPlayers >= 30) return SendErrorMessage(playerid,"参与者太多了 (最多30)");
		if(PlayerRacing[playerid] == 1) return SendErrorMessage(playerid,"您已经注册参加比赛");
		SendSyntaxMessage(playerid, "您已经注册参加比赛.");
		PlayerRacing[playerid] = 1;
		foreach(new i: Player)
		{
			if(PlayerRacing[i] != 0)
			{
				format(YCMDstr, sizeof(YCMDstr), "― 参加比赛人数: %d", RacingPlayers);
				SendClientMessage(i, 0x6495EDFF, YCMDstr);
			}
		}
		RacingPlayers += 1;
		return 1;
	}
	else if(pickupid == paint[1])
	{
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,384.5527,-1818.1350,7.8410);
		SetPlayerFacingAngle(playerid, 65.5933);
		SetPlayerVirtualWorld(playerid,0);
		if(PaintballPlayers > 0)
		{
		    PaintballPlayers -= 1;
			PlayerPaintballing[playerid] = 0;
		    SendErrorMessage(playerid, "你离开了房间，被排除在比赛之外.");
		}
		return 1;
	}
	else if(pickupid == paint[2])
	{
		if(PaintballRound >= 1) return SendErrorMessage(playerid,"报名关闭!");
		if(PlayerInfo[playerid][pLevel] <= 2 ) return SendErrorMessage(playerid,"等级大于 3 才可以参加!");
		if( PlayerPaintballing[playerid] == 1) return SendErrorMessage(playerid,"您已经注册参赛!");
		if(PaintballPlayers >= 30) return SendErrorMessage(playerid,"参与者太多了");
		SendSyntaxMessage(playerid, "您已经注册参赛!");
		PlayerPaintballing[playerid] = 1;
		foreach(new i: Player)
		{
			if(PlayerPaintballing[i] != 0)
			{
				format(YCMDstr, sizeof(YCMDstr), "― 参赛人员: %d", PaintballPlayers);
				SendClientMessage(i, -1, YCMDstr);
			}
		}
		PaintballPlayers += 1;
		return 1;
	}
	else if(pickupid == rob)
	{
		if(robh[playerid] != true)return SendErrorMessage(playerid,"你没有抢劫");
		{
			robh[playerid] = false;
			PlayerInfo[playerid][pCash] += 3000;
			SendSyntaxMessage(playerid,"你抢劫到了 3000$");
			return true;
		}
	}
	else if(pickupid == mysti)
	{
		SetPlayerInterior(playerid, 0);
		Q_SetPlayerPos(playerid,-2244.3213,-88.3789,35.3203);
		SetPlayerFacingAngle(playerid, 87.1145);
		return 1;
	}
	else if(pickupid == carpick)
	{
		if(PlayerInfo[playerid][pCarLic] != 1) return SendErrorMessage(playerid,"你没有驾驶执照");
		if(PlayerInfo[playerid][pCar] != 0) return ShowPlayerDialog(playerid,1771,DIALOG_STYLE_MSGBOX, "{1E90FF}买车", "{FFFFFF}你已经买了一辆车，在购买新车时，旧车将被更换.\n 你同意吗?", "确定", "不了");
		vibormashina[playerid] = 1;
		TextDrawShowForPlayer(playerid, Text:DRAP);
		world[playerid] = random(50);
		new mashina[MAX_PLAYERS];
		AvtoSalonChange[playerid] = 0;
		AvtoSalonOn[playerid] = 1;
		mashina[playerid] = CreateVehicle(AvtoSalonCarNope[AvtoSalonChange[playerid]][0],2065.1782,-2169.1785,1114.5313,245.0801,-1,-1,60000);
		SetVehicleVirtualWorld(mashina[playerid], world[playerid]);
		SetPlayerVirtualWorld(playerid,world[playerid]);
		PutPlayerInVeh(playerid, mashina[playerid], 0);
        SetPlayerCameraPos(playerid, 2076.8127, -2173.4705, 1115.1835);
		SetPlayerCameraLookAt(playerid, 2075.8750, -2173.1252, 1115.1290);
		format(YCMDstr,sizeof(YCMDstr),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~-1 ~y~COLOR2: ~w~-1",VehicleNames[AvtoSalonCarNope[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarNope[AvtoSalonChange[playerid]][1]);
		GameTextForPlayer(playerid,YCMDstr, 5000, 3);
		TogglePlayerControllable(playerid, 0);
		return 1;
	}
	else if(pickupid == carpick2)
	{
		if(PlayerInfo[playerid][pCarLic] != 1) return SendErrorMessage(playerid,"你没有驾驶执照");
		if(PlayerInfo[playerid][pCar] != 0) return ShowPlayerDialog(playerid,1772,DIALOG_STYLE_MSGBOX, "{1E90FF}买车", "{FFFFFF}你已经买了一辆车，在购买新车时，旧车将被更换.\n 你同意吗?", "确定", "不了");
		vibormashina[playerid] = 1;
		TextDrawShowForPlayer(playerid, Text:DRAP);
		world1[playerid] = random(50);
		new mashina[MAX_PLAYERS];
		AvtoSalonChange[playerid] = 0;
		AvtoSalonOn[playerid] = 2;
		mashina[playerid] = CreateVehicle(AvtoSalonCarD[AvtoSalonChange[playerid]][0],2065.1782,-2169.1785,1114.5313,245.0801,-1,-1,60000);
		SetVehicleVirtualWorld(mashina[playerid], world1[playerid]);
		SetPlayerVirtualWorld(playerid,world1[playerid]);
		PutPlayerInVeh(playerid, mashina[playerid], 0);
		SetPlayerCameraPos(playerid, 2076.8127, -2173.4705, 1115.1835);
		SetPlayerCameraLookAt(playerid, 2075.8750, -2173.1252, 1115.1290);
		format(YCMDstr,sizeof(YCMDstr),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~-1 ~y~COLOR2: ~w~-1",VehicleNames[AvtoSalonCarD[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarD[AvtoSalonChange[playerid]][1]);
		GameTextForPlayer(playerid,YCMDstr, 5000, 3);
		TogglePlayerControllable(playerid, 0);
		return 1;
	}
	else if(pickupid == carpick3)
	{
		if(PlayerInfo[playerid][pCarLic] != 1) return SendErrorMessage(playerid,"你没有驾驶执照");
		if(PlayerInfo[playerid][pCar] != 0) return ShowPlayerDialog(playerid,1773,DIALOG_STYLE_MSGBOX, "{1E90FF}买车", "{FFFFFF}你已经买了一辆车，在购买新车时，旧车将被更换.\n 你同意吗?", "确定", "不了");
		vibormashina[playerid] = 1;
		TextDrawShowForPlayer(playerid, Text:DRAP);
		world2[playerid] = random(123);
		new mashina[MAX_PLAYERS];
		AvtoSalonChange[playerid] = 0;
		AvtoSalonOn[playerid] = 3;
		mashina[playerid] = CreateVehicle(AvtoSalonCarA[AvtoSalonChange[playerid]][0],2065.1782,-2169.1785,1114.5313,245.0801,-1,-1,60000);
		SetVehicleVirtualWorld(mashina[playerid], world2[playerid]);
		SetPlayerVirtualWorld(playerid,world2[playerid]);
		PutPlayerInVeh(playerid, mashina[playerid], 0);
		SetPlayerCameraPos(playerid, 2076.8127, -2173.4705, 1115.1835);
		SetPlayerCameraLookAt(playerid, 2075.8750, -2173.1252, 1115.1290);
		format(YCMDstr,sizeof(YCMDstr),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~-1 ~y~COLOR2: ~w~-1",VehicleNames[AvtoSalonCarA[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarA[AvtoSalonChange[playerid]][1]);
		GameTextForPlayer(playerid,YCMDstr, 5000, 3);
		TogglePlayerControllable(playerid, 0);
		return 1;
	}
	else if(pickupid == lspic[0])
	{
        SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
	    SetPlayerInterior(playerid,0);
	    Q_SetPlayerPos(playerid,46.0778,2248.2532,625.3364);
	    SetPlayerFacingAngle(playerid, 268.4196);
	    SetPlayerVirtualWorld(playerid, 1);
	    return 1;
	}
	else if(pickupid == lspic[1])
	{
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,645.9011,-1359.8011,13.5836);
		SetPlayerFacingAngle(playerid, 92.3798);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == pdd)
	{
		GameTextForPlayer(playerid, "~r~/pdd", 1000, 1);
		return 1;
	}
	else if(pickupid == medicss[0])
	{
	    SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
        SetPlayerInterior(playerid, 0);
		Q_SetPlayerPos(playerid,1167.1071,-1323.5538,1001.0910);
		SetPlayerFacingAngle(playerid, 90.3960);
		return 1;
	}
	else if(pickupid == medicss[1])
	{
	    new Float:health;
    	GetPlayerHealth(playerid, health);
    	if(health < 95) return SendErrorMessage(playerid,"医务人员无法在这个状态对你进行工作,去进行治疗(血量低于95)");
	    {
            SetPlayerInterior(playerid, 0);
		    Q_SetPlayerPos(playerid,1176.2983,-1323.4597,14.0144);
		    SetPlayerFacingAngle(playerid, 90.7810);
		    SetPlayerVirtualWorld(playerid, 0);
            PlayerInfo[playerid][pKouka][0] = 0;
            PlayerInfo[playerid][pKouka][1] = 0;
            PlayerInfo[playerid][pKouka][2] = 0;
            PlayerInfo[playerid][pKouka][3] = 0;
            PlayerInfo[playerid][pKouka][4] = 0;
            PlayerInfo[playerid][pKouka][5] = 0;
            PlayerInfo[playerid][pKouka][6] = 0;
            PlayerInfo[playerid][pKouka][7] = 0;
            PlayerInfo[playerid][pKouka][8] = 0;
            PlayerInfo[playerid][pKouka][9] = 0;
            PlayerInfo[playerid][pKouka][10] = 0;
            PlayerInfo[playerid][pKouka][11] = 0;
            PlayerInfo[playerid][pKouka][12] = 0;
            PlayerInfo[playerid][pKouka][13] = 0;
		    PlayerInfo[playerid][pBolnicad] = 0;
            KillTimer(HPTimer[playerid]);
        }
        return 1;
	}
	else if(pickupid == lcnpic[0])
	{
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,1451.7043,749.8376,11.0234);
		SetPlayerFacingAngle(playerid, 89.1102);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	if(pickupid == lcnpic[1])
	{
        SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		SetPlayerInterior(playerid, 0);
		Q_SetPlayerPos(playerid,940.9683,97.4707,1001.2659);
		SetPlayerFacingAngle(playerid, 349.0933);
		return 1;
	}
	else if(pickupid == zip[0])
	{
		zips[playerid] = 1;
		SetPlayerInterior(playerid,18);
		Q_SetPlayerPos(playerid,161.6730,-95.5809,1001.8047);
		SetPlayerFacingAngle(playerid, 1.0183);
		return 1;
	}
	else if(pickupid == zip[1])
	{
		zips[playerid] = 0;
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,-1885.0364,862.9141,35.1719);
		SetPlayerFacingAngle(playerid, 151.0559);
		return 1;
	}
	else if(pickupid == shop[0])
	{
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,1931.2080,-1775.9785,13.5469);
		SetPlayerFacingAngle(playerid, 263.9579);
		SetPlayerVirtualWorld(playerid,0);
		return 1;
	}
	else if(pickupid == shop[1])
	{
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,-81.1964,-1168.3134,2.2146);
		SetPlayerFacingAngle(playerid, 58.5935);
		SetPlayerVirtualWorld(playerid,0);
		return 1;
	}
	else if(pickupid == shop[2])
	{
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,-1673.5123,431.4032,7.1797);
		SetPlayerFacingAngle(playerid, 257.8152);
		SetPlayerVirtualWorld(playerid,0);
		return 1;
	}
	else if(pickupid == shop[3])
	{
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,998.2327,-920.4987,42.1797);
		SetPlayerFacingAngle(playerid, 104.2105);
		SetPlayerVirtualWorld(playerid,0);
		return 1;
	}
	else if(pickupid == shop[4])
	{
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,1600.9852,2219.7158,11.0625);
		SetPlayerFacingAngle(playerid, 224.2390);
		SetPlayerVirtualWorld(playerid,0);
		return 1;
	}
	else if(pickupid == shop[5])
	{
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,2637.3076,1127.4176,11.1797);
		SetPlayerFacingAngle(playerid, 180.0000);
		SetPlayerVirtualWorld(playerid,0);
		return 1;
	}
	else if(pickupid == gvictim[0])
	{
		SetPlayerInterior(playerid,5);
		Q_SetPlayerPos(playerid,225.2378,-8.0487,1002.2109);
		SetPlayerFacingAngle(playerid, 89.5070);
		return 1;
	}
	else if(pickupid == gvictim[1])
	{
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,458.0936,-1501.5496,31.0372);
		SetPlayerFacingAngle(playerid, 101.4322);
		return 1;
	}
	else if(pickupid == rmpic[1])
	{
		SetPlayerInterior(playerid, 5);
		Q_SetPlayerPos(playerid,1298.6915,-794.2542,1084.0078);
		SetPlayerFacingAngle(playerid, 349.0933);
		SetPlayerVirtualWorld(playerid, 1);
		return 1;
	}
	else if(pickupid == rmpic[0])
	{
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,940.2619,1733.4958,8.8516);
		SetPlayerFacingAngle(playerid, 276.0833);
		SetPlayerVirtualWorld(playerid,0);
		return 1;
	}
	else if(pickupid == yakexit[1])
	{
        SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		SetPlayerInterior(playerid, 0);
		Q_SetPlayerPos(playerid,276.2881,231.2110,3340.9299);
		SetPlayerFacingAngle(playerid, 349.0933);
		return 1;
	}
	else if(pickupid == yakexit[0])
	{
		SetPlayerInterior(playerid, 0);
		Q_SetPlayerPos(playerid,1457.5305,2773.4219,10.8203);
		SetPlayerFacingAngle(playerid, 276.0466);
		return 1;
	}
    else if(pickupid == FBIpick[0])
	{
	    SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		Q_SetPlayerPos(playerid,957.6999,67.2943,1001.9800);
		SetPlayerFacingAngle(playerid, 265.8118);
		SetPlayerVirtualWorld(playerid, 58);
		SetPlayerInterior(playerid, 0);
		return 1;
	}
	else if(pickupid == FBIpick[1])
	{
		Q_SetPlayerPos(playerid,-551.8286,2593.7156,53.9348);
		SetPlayerFacingAngle(playerid, 271.1620);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		return 1;
	}
	else if(pickupid == lspd[0])
	{
	    SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,1556.0543,-1674.0431,2110.5359);
		SetPlayerFacingAngle(playerid, 2.2168);
		return 1;
	}
	else if(pickupid == lspd[1])
	{
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,1552.8159,-1675.4498,16.1953);
		SetPlayerFacingAngle(playerid, 91.8310);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == lspd[4])
	{
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,1528.010864,-1678.141723,5.890625);
		SetPlayerFacingAngle(playerid, 259.617370);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == lspd[2])
	{
		SetPlayerInterior(playerid,6);
		Q_SetPlayerPos(playerid,316.3837,-167.8547,999.5938);
		SetPlayerFacingAngle(playerid, 34.3574);
		SetPlayerVirtualWorld(playerid, 5);
		return 1;
	}
	else if(pickupid == sf[4])
	{
		if(IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] <= 0)
		{
			SetPlayerInterior(playerid,6);
			Q_SetPlayerPos(playerid,316.3837,-167.8547,999.5938);
			SetPlayerFacingAngle(playerid, 34.3574);
			SetPlayerVirtualWorld(playerid, 1);
		}
		else
		{
			SendSyntaxMessage(playerid,"门被锁上了!");
		}
		return 1;
	}
	else if(pickupid == sf[0])
	{
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,-1606.4532,674.2636,-5.2422);
		SetPlayerFacingAngle(playerid, 357.2527);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == sf[2])
	{
		SetPlayerInterior(playerid,10);
		Q_SetPlayerPos(playerid,217.3147,121.3382,999.0156);
		SetPlayerFacingAngle(playerid, 272.8898);
		return 1;
	}
	else if(pickupid == sf[3])
	{
		if(IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] <= 0)
		{
			SetPlayerInterior(playerid,0);
			Q_SetPlayerPos(playerid,-1590.8289,716.0479,-5.2422);
			SetPlayerFacingAngle(playerid, 269.9364);
		}
		else
		{
			SendSyntaxMessage(playerid,"门被锁上了!");
		}
		return 1;
	}
	else if(pickupid == lspd[5])
	{
		SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,1602.9308,-1654.4408,2107.0808);
		SetPlayerFacingAngle(playerid, 278.0311);
		return 1;
	}
	else if(pickupid == sf[1])
	{
		if(IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] <= 0)
		{
			SetPlayerInterior(playerid,0);
			Q_SetPlayerPos(playerid,-1590.8289,716.0479,-5.2422);
			SetPlayerFacingAngle(playerid, 269.9364);
			SetPlayerVirtualWorld(playerid, 0);
		}
		else
		{
			SendSyntaxMessage(playerid,"门被锁上了!");
		}
		return 1;
	}
	else if(pickupid == lspd[3])
	{
		if(IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] <= 0)
		{
			SetPlayerInterior(playerid,0);
			Q_SetPlayerPos(playerid,1568.6962,-1692.2069,5.8906);
			SetPlayerFacingAngle(playerid, 259.617370);
			SetPlayerVirtualWorld(playerid, 0);
		}
		else
		{
			SendSyntaxMessage(playerid,"门被锁上了!");
		}
        return 1;
	}
	else if(pickupid == armijavhod)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid,156.4952,1945.6383,20.0000);
		SetPlayerFacingAngle(playerid, 183.1738);
		return 1;
	}
	else if(pickupid == armijavihod)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid,139.5660,1936.6910,19.2734);
		SetPlayerFacingAngle(playerid, 183.1738);
		return 1;
	}
	else if(pickupid == AvtoshPic[0]) // 1
	{
	    SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid,1412.4205,-1664.0862,13.6859);
		SetPlayerFacingAngle(playerid, 90.7810);
		return 1;
	}
	else if(pickupid == AvtoshPic[1]) // 1
	{
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid,1421.0004,-1662.7583,13.5469);
		SetPlayerFacingAngle(playerid,270.6396);
		return 1;
	}
	else if(pickupid == ZavtohPic[0]) // 1
	{
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid,1381.8254,-1663.4990,13.4307);
		SetPlayerFacingAngle(playerid,87.8558);
		return 1;
	}
	else if(pickupid == ZavtohPic[1]) // 1
	{
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid,1408.8879,-1659.2567,13.6859);
		SetPlayerFacingAngle(playerid, 269.3083);
		return 1;
	}
	else if(pickupid == lvpdpic[0])
	{
		SetPlayerInterior(playerid,3);
		SetPlayerVirtualWorld(playerid, 122);
		Q_SetPlayerPos(playerid,238.5033,141.1578,1003.0234);
		SetPlayerFacingAngle(playerid, 359.1617);
		return 1;
	}
	else if(pickupid == lvpdpic[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid,2295.1934,2451.8459,10.8203);
		SetPlayerFacingAngle(playerid, 94.8742);
		return 1;
	}
	else if(pickupid == lvpdpic[2])
	{
		SetPlayerInterior(playerid,3);
		SetPlayerVirtualWorld(playerid, 122);
		Q_SetPlayerPos(playerid,288.7445,169.2445,1007.1719);
		SetPlayerFacingAngle(playerid, 9.7598);
		return 1;
	}
	else if(pickupid == lvpdpic[3])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid,2340.1965,2455.9792,14.9688);
		SetPlayerFacingAngle(playerid, 178.3347);
		return 1;
	}
	else if(pickupid == lvpdpic[4])
	{
		ShowPlayerDialog(playerid,8240,DIALOG_STYLE_MSGBOX, "{1E90FF}电梯", "你想去哪儿?", "仓库", "屋顶");
		return 1;
	}
	else if(pickupid == lvpdpic[5])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid,2293.3225,2468.6162,10.8203);
		SetPlayerFacingAngle(playerid, 93.6957);
		return 1;
	}
	else if(pickupid == lvpdpic[6])
	{
		ShowPlayerDialog(playerid,8241,DIALOG_STYLE_MSGBOX, "{1E90FF}电梯", "你想去哪儿?", "仓库", "下楼");
		return 1;
	}
	else if(pickupid >= chekmatlva[0] && pickupid <= chekmatlva[9])
	{
		if(!IsAGang(playerid) && !IsAMafia(playerid)) return SendErrorMessage(playerid,"你不是帮派/黑手党!");
		if(armmatbi <= 0) return SendErrorMessage(playerid,"库存中没有材料!");
		if(PlayerInfo[playerid][pMats] > 500) return SendErrorMessage(playerid,"自身材料大于500!");
		SendSyntaxMessage(playerid, "获得500材料!");
		armmatbi -= 100;
		SetOtherInt("armmatbi", armmatbi);
		PlayerInfo[playerid][pMats] += 500;
		return 1;
	}
	else if(pickupid >= chekmats[0]&& pickupid <= chekmats[2])
	{
		if(!IsAGang(playerid) && !IsAMafia(playerid)) return SendErrorMessage(playerid,"你不是帮派/黑手党!");
		if(armmatsf <= 0) return SendErrorMessage(playerid,"库存中没有材料!");
		if(PlayerInfo[playerid][pMats] > 500) return SendErrorMessage(playerid,"自身材料大于500!");
		SendSyntaxMessage(playerid, "获得500材料!");
		armmatsf -= 100;
		SetOtherInt("armmatsf", armmatsf);
		PlayerInfo[playerid][pMats] += 500;
		return 1;
	}
	else if(pickupid == buygunzakon[0])
	{
		if(PlayerInfo[playerid][pMember] == 2)
		{
			if(fbimats <= 0) return SendErrorMessage(playerid, "库存中没有材料!");
			{
			    if(GetPVarInt(playerid,"command1") > gettime())
				{
					SendErrorMessage(playerid,"等待3分钟.");
					return 1;
				}
				GiveWeapon(playerid, 25, 100);
				GiveWeapon(playerid, 30, 250);
				GiveWeapon(playerid, 24, 100);
				GiveWeapon(playerid, 17, 10);
				SetPlayerArmourAC(playerid, 100);
				SetPlayerHealthAC(playerid, 100);
				PlayerInfo[playerid][pHP] = 100;
				fbimats -= 100;
				SendServerMessage(playerid, "装备: Deagle(100), AK-47(250), SHOTGUN(100), 催泪弹(10)");
				SetPVarInt(playerid,"command1",gettime()+180);
			}
		}
		else
		{
			SendErrorMessage(playerid,"你不是 FBI!");
		}
		return 1;
	}
	else if(pickupid == buygunzakon[1])
	{
		if(PlayerInfo[playerid][pMember] == 1)
		{
			if(lspdmatbi <= 0) return SendErrorMessage(playerid, "库存中没有材料!");
			{
			    if(GetPVarInt(playerid,"command2") > gettime())
				{
					SendErrorMessage(playerid,"等待3分钟.");
					return 1;
				}
				GiveWeapon(playerid, 3, 1);
				GiveWeapon(playerid, 24, 100);
				GiveWeapon(playerid, 25, 50);
				GiveWeapon(playerid, 29, 150);
				GiveWeapon(playerid, 17, 10);
				SetPlayerHealthAC(playerid, 100);
				SetPlayerArmourAC(playerid, 100);
				PlayerInfo[playerid][pHP] = 100;
				lspdmatbi -= 100;
				SendServerMessage(playerid, "装备: 警棍, Shotgun(50), Mp5(150), Deagle(100), 催泪弹(10)");
				SetPVarInt(playerid,"command2",gettime()+180);
				Police +=1;
			}
		}
		else
		{
			SendErrorMessage(playerid,"你不是 LSPD!");
		}
		return 1;
	}
	else if(pickupid == buygunzakon[3])
	{
		if(PlayerInfo[playerid][pMember] == 20)
		{
			if(lvpdmats <= 0) return SendErrorMessage(playerid, "库存中没有材料!");
			{
			    if(GetPVarInt(playerid,"command3") > gettime())
				{
					SendErrorMessage(playerid,"等待3分钟.");
					return 1;
				}
				GiveWeapon(playerid, 3, 1);
				GiveWeapon(playerid, 24, 100);
				GiveWeapon(playerid, 29, 200);
				GiveWeapon(playerid, 17, 10);
				SetPlayerHealthAC(playerid, 100);
				SetPlayerArmourAC(playerid, 100);
				PlayerInfo[playerid][pHP] = 100;
				lvpdmats -= 100;
				SendServerMessage(playerid, "装备: 警棍, Mp5 (200), Deagle(100), 催泪弹(10)");
				SetPVarInt(playerid,"command3",gettime()+180);
				Police +=1;
			}
		}
		else
		{
			SendErrorMessage(playerid,"你不是 LVPD!");
		}
		return 1;
	}
	else if(pickupid == buygunzakon[2])
	{
		if(PlayerInfo[playerid][pMember] == 9)
		{
			if(sfpdmats <= 0) return SendErrorMessage(playerid, "库存中没有材料!");
			{
			    if(GetPVarInt(playerid,"command4") > gettime())
				{
					SendErrorMessage(playerid,"等待3分钟.");
					return 1;
				}
				GiveWeapon(playerid, 3, 1);
				GiveWeapon(playerid, 29, 250);
				GiveWeapon(playerid, 24, 100);
				GiveWeapon(playerid, 17, 10);
				SetPlayerHealthAC(playerid, 100);
				SetPlayerArmourAC(playerid, 100);
				PlayerInfo[playerid][pHP] = 100;
				sfpdmats -= 100;
				SendServerMessage(playerid, "装备: 警棍, Mp5(250), Deagle(100), 催泪弹(10)");
				SetPVarInt(playerid,"command4",gettime()+180);
				Police +=1;
			}
		}
		else
		{
			SendErrorMessage(playerid,"你不是 SFPD!");
		}
		return 1;
	}
	else if(pickupid == skinshop[0] || pickupid == skinshop[2])
	{
		if(PlayerInfo[playerid][pSex] != 1)
		{
			SendSyntaxMessage(playerid,"你不是男性");
			return true;
		}
		if(PlayerInfo[playerid][pMember] == 0)
		{
			SetPlayerInterior(playerid,5);
			new rand = 0;
			Q_SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
			SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			TogglePlayerControllable(playerid, 0);
			ChangeSkin[playerid]=0;
			TextDrawShowForPlayer(playerid, SkinMagazCancel);
			TextDrawShowForPlayer(playerid, SkinMagazLeft);
			TextDrawShowForPlayer(playerid, SkinMagazSelect);
			TextDrawShowForPlayer(playerid, SkinMagazRight);
			TogglePlayerControllable(playerid,0);
			new pawnwiki = 1 + random(50);
			SetPlayerVirtualWorld(playerid,pawnwiki);
			SelectTextDraw(playerid,0xA3B4C5FF);
			return true;
		}
		if(PlayerInfo[playerid][pMember] == 1) {  ChosenSkin[playerid] = 265; }
		else if(PlayerInfo[playerid][pMember] == 2) {  ChosenSkin[playerid] = 286; }
		else if(PlayerInfo[playerid][pMember] == 3) {  ChosenSkin[playerid] = 71; }
		else if(PlayerInfo[playerid][pMember] == 4) {  ChosenSkin[playerid] = 70; }
		else if(PlayerInfo[playerid][pMember] == 5) {  ChosenSkin[playerid] = 223; }
		else if(PlayerInfo[playerid][pMember] == 6) {  ChosenSkin[playerid] = 120; }
		else if(PlayerInfo[playerid][pMember] == 7) {  ChosenSkin[playerid] = 57; }
		else if(PlayerInfo[playerid][pMember] == 8) {  ChosenSkin[playerid] = 171; }
		else if(PlayerInfo[playerid][pMember] == 9) {  ChosenSkin[playerid] = 265; }
		else if(PlayerInfo[playerid][pMember] == 11) {  ChosenSkin[playerid] = 59; }
		else if(PlayerInfo[playerid][pMember] == 12) {  ChosenSkin[playerid] = 102; }
		else if(PlayerInfo[playerid][pMember] == 13) {  ChosenSkin[playerid] = 108; }
		else if(PlayerInfo[playerid][pMember] == 14) {  ChosenSkin[playerid] = 111; }
		else if(PlayerInfo[playerid][pMember] == 15) {  ChosenSkin[playerid] = 106; }
		else if(PlayerInfo[playerid][pMember] == 16) {  ChosenSkin[playerid] = 250; }
		else if(PlayerInfo[playerid][pMember] == 17) {  ChosenSkin[playerid] = 114; }
		else if(PlayerInfo[playerid][pMember] == 18) {  ChosenSkin[playerid] = 173; }
		else if(PlayerInfo[playerid][pMember] == 19) {  ChosenSkin[playerid] = 287; }
		else if(PlayerInfo[playerid][pMember] == 20) {  ChosenSkin[playerid] = 265; }
		else { return true; }
		SetPlayerInterior(playerid,5);
		new pawnwiki = 1 + random(50);
		SetPlayerVirtualWorld(playerid,pawnwiki);
		new rand = 0;
		Q_SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
		SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		TogglePlayerControllable(playerid, 0);
		SelectChar[playerid] = 255;
		SelectCharID[playerid] = PlayerInfo[playerid][pMember];
		SelectCharPlace[playerid] = 1;
		PlayerInfo[playerid][pModel] = ChosenSkin[playerid];
		TextDrawShowForPlayer(playerid, SkinRabCancel);
		TextDrawShowForPlayer(playerid, SkinRabLeft);
		TextDrawShowForPlayer(playerid, SkinRabSelect);
		TextDrawShowForPlayer(playerid, SkinRabRight);
		TogglePlayerControllable(playerid,0);
		SelectTextDraw(playerid,0xA3B4C5FF);
        return 1;
	}
	if(pickupid == skinshop[1] || pickupid == skinshop[3])
	{
		if(PlayerInfo[playerid][pSex] != 2)
		{
			SendSyntaxMessage(playerid,"你不是女性");
			return true;
		}
		if(PlayerInfo[playerid][pMember] == 0)
		{
			SetPlayerInterior(playerid,5);
			new rand = 0;
			Q_SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
			SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			TogglePlayerControllable(playerid, 0);
			ChangeSkin[playerid]=0;
			TextDrawShowForPlayer(playerid, SkinMagazCancel);
			TextDrawShowForPlayer(playerid, SkinMagazLeft);
			TextDrawShowForPlayer(playerid, SkinMagazSelect);
			TextDrawShowForPlayer(playerid, SkinMagazRight);
			TogglePlayerControllable(playerid,0);
			new pawnwiki = 1 + random(50);
			SetPlayerVirtualWorld(playerid,pawnwiki);
			SelectTextDraw(playerid,0xA3B4C5FF);
			return true;
		}
		if(PlayerInfo[playerid][pMember] == 1) {  ChosenSkin[playerid] = 265; }
		else if(PlayerInfo[playerid][pMember] == 2) {  ChosenSkin[playerid] = 286; }
		else if(PlayerInfo[playerid][pMember] == 3) {  ChosenSkin[playerid] = 71; }
		else if(PlayerInfo[playerid][pMember] == 4) {  ChosenSkin[playerid] = 70; }
		else if(PlayerInfo[playerid][pMember] == 5) {  ChosenSkin[playerid] = 223; }
		else if(PlayerInfo[playerid][pMember] == 6) {  ChosenSkin[playerid] = 120; }
		else if(PlayerInfo[playerid][pMember] == 7) {  ChosenSkin[playerid] = 57; }
		else if(PlayerInfo[playerid][pMember] == 8) {  ChosenSkin[playerid] = 171; }
		else if(PlayerInfo[playerid][pMember] == 9) {  ChosenSkin[playerid] = 265; }
		else if(PlayerInfo[playerid][pMember] == 11) {  ChosenSkin[playerid] = 59; }
		else if(PlayerInfo[playerid][pMember] == 12) {  ChosenSkin[playerid] = 102; }
		else if(PlayerInfo[playerid][pMember] == 13) {  ChosenSkin[playerid] = 108; }
		else if(PlayerInfo[playerid][pMember] == 14) {  ChosenSkin[playerid] = 111; }
		else if(PlayerInfo[playerid][pMember] == 15) {  ChosenSkin[playerid] = 106; }
		else if(PlayerInfo[playerid][pMember] == 16) {  ChosenSkin[playerid] = 250; }
		else if(PlayerInfo[playerid][pMember] == 17) {  ChosenSkin[playerid] = 114; }
		else if(PlayerInfo[playerid][pMember] == 18) {  ChosenSkin[playerid] = 173; }
		else if(PlayerInfo[playerid][pMember] == 19) {  ChosenSkin[playerid] = 287; }
		else if(PlayerInfo[playerid][pMember] == 20) {  ChosenSkin[playerid] = 265; }
		else { return true; }
		SetPlayerInterior(playerid,5);
		new pawnwiki = 1 + random(50);
		SetPlayerVirtualWorld(playerid,pawnwiki);
		new rand = 0;
		Q_SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
		SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		SelectChar[playerid] = 255;
		SelectCharID[playerid] = PlayerInfo[playerid][pMember];
		SelectCharPlace[playerid] = 1;
		PlayerInfo[playerid][pModel] = ChosenSkin[playerid];
		TextDrawShowForPlayer(playerid, SkinRabCancel);
		TextDrawShowForPlayer(playerid, SkinRabLeft);
		TextDrawShowForPlayer(playerid, SkinRabSelect);
		TextDrawShowForPlayer(playerid, SkinRabRight);
		TogglePlayerControllable(playerid,0);
		SelectTextDraw(playerid,0xA3B4C5FF);
		return 1;
	}
	else if(pickupid == marenter[0])
	{
 		SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,-501.5004,288.7803,2001.0950);
		SetPlayerFacingAngle(playerid, 354.9144);
		DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
		CP[playerid] = 0;
		return 1;

	}
	else if(pickupid == marenter[1])
	{
        SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,1480.8832,-1769.0471,18.7958);
		SetPlayerFacingAngle(playerid, 0.3133);
		DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
		CP[playerid] = 0;
		return 1;
	}
	else if(pickupid == ufobar)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid, -87.1981,1378.5879,10.2734);
		SetPlayerFacingAngle(playerid, 277.5062);
		return 1;
	}
	else if(pickupid == rifa[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid,2732.5884,-1952.4399,13.5394);
		SetPlayerFacingAngle(playerid, 90.9387);
		return 1;
	}
	else if(pickupid == rifa[1])
	{
        SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,2733.8853,-1761.2526,1117.2410);
		SetPlayerFacingAngle(playerid, 271.3877);
		return 1;
	}
	else if(pickupid == vagospic[0])
	{
        SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,2787.2588,-1633.7407,10.9139);
		SetPlayerFacingAngle(playerid, 500);
		return 1;
	}
	else if(pickupid == vagospic[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid,2774.2017,-1628.0233,12.1775);
		SetPlayerFacingAngle(playerid, 330.4577);
		return 1;
	}
	else if(pickupid == groovee[0]) // vxod
	{
        SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,2487.7083,-1641.3342,14.2259);
		SetPlayerFacingAngle(playerid,90.90);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == groovee[1]) // vixod
	{
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,2486.4856,-1650.3810,13.4822);
		SetPlayerFacingAngle(playerid, 180.180);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == aztecpic[0])
	{
        SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid,2013.9645,1319.4393,632.0748);
		SetPlayerFacingAngle(playerid, 1000);
		return 1;
	}
	else if(pickupid == aztecpic[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid,1667.4498,-2108.3840,13.8906);
		SetPlayerFacingAngle(playerid, 178.1356);
		return 1;
	}
	else if(pickupid == bankpic[0])
	{
	    SetTimerEx("UnFreezePlayer", 1000, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		SetPlayerInterior(playerid, 0);
		Q_SetPlayerPos(playerid,1481.0177,-1361.2206,89.6799);
		SetPlayerFacingAngle(playerid, 90.180);
		return 1;
	}
	else if(pickupid == bankpic[1])
	{
		SetPlayerInterior(playerid, 0);
		Q_SetPlayerPos(playerid,1473.5757,-1360.9340,11.8828);
		SetPlayerFacingAngle(playerid, 90.180);
		return 1;
	}
	else if(pickupid == ballasvhod[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid,2086.8176,-1185.7505,25.6968);
		SetPlayerFacingAngle(playerid, 93.9935);
		return 1;
	}
	else if(pickupid == ballasvhod[1])
	{
        SetTimerEx("UnFreezePlayer", 1500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		Q_SetPlayerPos(playerid,-725.419128,2406.934326,1500.970093);
		SetPlayerFacingAngle(playerid, 100);
		return 1;
	}
	else if(pickupid == sklad[0])
	{
		SetPlayerInterior(playerid,6);
		Q_SetPlayerPos(playerid,316.9104,-168.6356,999.5938);
		SetPlayerFacingAngle(playerid, 355.8037);
		SetPlayerVirtualWorld(playerid, 0);
        return 1;
	}
	else if(pickupid == sklad[1])
	{
	    SetTimerEx("UnFreezePlayer", 1500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,338.3804,1949.1343,22.0174);
		SetPlayerFacingAngle(playerid, 92.2485);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == sklad[2])
	{
        SetTimerEx("UnFreezePlayer", 1500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		SetPlayerInterior(playerid,0);
		Q_SetPlayerPos(playerid,-1370.39,498.79,11.20);
		SetPlayerFacingAngle(playerid, 270.0000);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == sklad[3])
	{
		SetPlayerInterior(playerid,6);
		Q_SetPlayerPos(playerid,316.9104,-168.6356,999.5938);
		SetPlayerFacingAngle(playerid, 355.8037);
		SetPlayerVirtualWorld(playerid, 3);
		return 1;
	}
	else if(pickupid == gunarm[0])
	{
		if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1)
		{
			if(armmatbi <= 0)
			{
				SendErrorMessage(playerid, "仓库空了");
				return true;
			}
            if(GetPVarInt(playerid,"command5") > gettime())
			{
			    SendErrorMessage(playerid,"等待3分钟.");
			    return 1;
			}
			GiveWeapon(playerid, 16, 2);
			GiveWeapon(playerid, 24, 100);
			GiveWeapon(playerid, 31, 200);
			SetPlayerArmourAC(playerid, 100);
			SetPlayerHealthAC(playerid, 100);
			PlayerInfo[playerid][pHP] = 50;
			/*PlayerInfo[playerid][pGolod] += 50;
			if(PlayerInfo[playerid][pGolod] > 100) PlayerInfo[playerid][pGolod] = 100;*/
			armmatbi -= 100;
			SetOtherInt("armmatbi", armmatbi);
		 	SendServerMessage(playerid, "装备: Deagle(100), M4(200), 防弹衣, 血量(+50hp), 手榴弹(2).");
			SetPVarInt(playerid,"command5",gettime()+180);
		}
		else
		{
			SendErrorMessage(playerid,"你不是军队的士兵");
		}
		return 1;
	}
	else if(pickupid == gunarm[1])
	{
		if(PlayerInfo[playerid][pMember] == 3 || proverkaforma[playerid] == 1)
		{
			if(armmatsf <= 0)
			{
				SendErrorMessage(playerid, "仓库空了");
				return true;
			}
            if(GetPVarInt(playerid,"command6") > gettime())
			{
			    SendErrorMessage(playerid,"等待3分钟.");
			    return 1;
			}
			GiveWeapon(playerid, 24, 25);
			GiveWeapon(playerid, 31, 100);
			SetPlayerArmourAC(playerid, 100);
			SetPlayerHealthAC(playerid, 100);
			PlayerInfo[playerid][pHP] = 100;
			armmatsf -= 100;
			SetOtherInt("armmatsf", armmatsf);
		 	SendServerMessage(playerid, "装备: Deagle(25), M4(100), 防弹衣, 血量");
			SetPVarInt(playerid,"command6",gettime()+180);
		}
		else
		{
			SendErrorMessage(playerid,"你没有权限!");
		}
		return 1;
	}
	if(pickupid == zonaa)
	{
		if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19 || proverkaforma[playerid] == 1)
		{
			SetPlayerInterior(playerid,0);
			Q_SetPlayerPos(playerid,279.4233,1835.0087,17.6481);
			SetPlayerFacingAngle(playerid, 17.2727);
		}
		else
		{
			SendErrorMessage(playerid,"你没有钥匙!");
		}
		return 1;
	}
	else if(pickupid == zona)
	{
		if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19 || proverkaforma[playerid] == 1)
		{
			SetPlayerInterior(playerid,0);
			Q_SetPlayerPos(playerid,291.8297,1836.4666,17.6406);
			SetPlayerFacingAngle(playerid, 346.3333);
		}
		else
		{
			SendErrorMessage(playerid,"你没有钥匙!");
		}
		return 1;
	}
	else if(pickupid == plen[0])
	{
		SetPlayerInterior(playerid,6);
		Q_SetPlayerPos(playerid,308.0302,-159.7244,999.5938);
		SetPlayerFacingAngle(playerid, 258.2231);
		return 1;
	}
	else if(pickupid == plen[1])
	{
		SetPlayerInterior(playerid,6);
		Q_SetPlayerPos(playerid,303.6572,-159.7246,999.5938);
		SetPlayerFacingAngle(playerid, 88.7500);
		return 1;
	}
	else if(pickupid == KanPick[0])
	{
		if(groovnark <= 0) return SendErrorMessage(playerid,"仓库空了!");
		if(PlayerInfo[playerid][pMember] == 15)
		{
			if(PlayerInfo[playerid][pDrugs] >= 150) return SendErrorMessage(playerid,"你已经有150克毒品了.");
			if(groovnark < 150-PlayerInfo[playerid][pDrugs])
			{
				PlayerInfo[playerid][pDrugs]+=groovnark;
				groovnark = 0;
			}
			else
			{
				groovnark -= 150-PlayerInfo[playerid][pDrugs];
				PlayerInfo[playerid][pDrugs] += 150-PlayerInfo[playerid][pDrugs];
			}
			SendServerMessage(playerid,"你从仓库里拿走毒品!");
		}
		return 1;
	}
	else if(pickupid == KanPick[1])
	{
		if(ballasnark <= 0) return SendErrorMessage(playerid,"仓库空了!");
		if(PlayerInfo[playerid][pMember] == 12)
		{
			if(PlayerInfo[playerid][pDrugs] >= 150) return SendErrorMessage(playerid,"你已经有150克毒品了.");
			if(ballasnark < 150-PlayerInfo[playerid][pDrugs])
			{
				PlayerInfo[playerid][pDrugs]+=ballasnark;
				ballasnark = 0;
			}
			else
			{
				ballasnark -= 150-PlayerInfo[playerid][pDrugs];
				PlayerInfo[playerid][pDrugs] += 150-PlayerInfo[playerid][pDrugs];
			}
		 	SendServerMessage(playerid,"你从仓库里拿走毒品!");
		}
		return 1;
	}
	else if(pickupid == KanPick[2])
	{
		if(vagosnark <= 0) return SendErrorMessage(playerid,"仓库空了!");
		if(PlayerInfo[playerid][pMember] == 13)
		{
			if(PlayerInfo[playerid][pDrugs] >= 150) return SendErrorMessage(playerid,"你已经有150克毒品了.");
			if(vagosnark < 150-PlayerInfo[playerid][pDrugs])
			{
				PlayerInfo[playerid][pDrugs]+=vagosnark;
				vagosnark = 0;
			}
			else
			{
				vagosnark -= 150-PlayerInfo[playerid][pDrugs];
				PlayerInfo[playerid][pDrugs] += 150-PlayerInfo[playerid][pDrugs];
			}
		 	SendServerMessage(playerid,"你从仓库里拿走毒品!");
		}
		return 1;
	}
	else if(pickupid == KanPick[3])
	{
		if(azteknark <= 0) return SendErrorMessage(playerid,"仓库空了!");
		if(PlayerInfo[playerid][pMember] == 17)
		{
			if(PlayerInfo[playerid][pDrugs] >= 150) return SendErrorMessage(playerid,"你已经有150克毒品了.");
			if(azteknark < 150-PlayerInfo[playerid][pDrugs])
			{
				PlayerInfo[playerid][pDrugs]+=azteknark;
				azteknark = 0;
			}
			else
			{
				azteknark -= 150-PlayerInfo[playerid][pDrugs];
				PlayerInfo[playerid][pDrugs] += 150-PlayerInfo[playerid][pDrugs];
			}
			SendServerMessage(playerid,"你从仓库里拿走毒品!");
		}
		return 1;
	}
	else if(pickupid == KanPick[4])
	{
		if(rifanark <= 0) return SendErrorMessage(playerid,"仓库空了!");
		if(PlayerInfo[playerid][pMember] == 18)
		{
			if(PlayerInfo[playerid][pDrugs] >= 150) return SendErrorMessage(playerid,"你已经有150克毒品了.");
			if(rifanark < 150-PlayerInfo[playerid][pDrugs])
			{
				PlayerInfo[playerid][pDrugs]+=rifanark;
				rifanark = 0;
			}
			else
			{
				rifanark -= 150-PlayerInfo[playerid][pDrugs];
				PlayerInfo[playerid][pDrugs] += 150-PlayerInfo[playerid][pDrugs];
			}
			SendServerMessage(playerid,"你从仓库里拿走毒品!");
		}
		return 1;
	}
	new string[256];
	for(new h = 1; h <= TotalHouse; h++)
	{
		if(pickupid == HouseInfo[h][hPickup])
		{
		    if(GetPVarInt(playerid,"HouseInfoPl") > gettime()) return true;
			if(HouseInfo[h][hOwned] == 1)
			{
				new ttextt[32];
				if(IsPlayerConnected(GetPlayerID(HouseInfo[h][hOwner])))
				{
					ttextt = "[{22ff00}Online{F2EEF0}]";
				}
				else if(!IsPlayerConnected(GetPlayerID(HouseInfo[h][hOwner])))
				{
					ttextt = "[{ff001c}Offline{F2EEF0}]";
				}
				new text[32];
				if(HouseInfo[h][hLock] == 0) { text = "{22ff00}打开"; } else { text = "{ff001c}关闭"; }
				if(HouseInfo[h][hKlass] == 0)format(string, sizeof(string), "{dad37f}业主: {FFFFFF}%s %s\n{dad37f}门: {FFFFFF}%s\n\n{dad37f}类型: {FFFFFF}Nope\n{dad37f}房间数量: {FFFFFF}1\n{dad37f}门牌号码: {FFFFFF}%i",HouseInfo[h][hOwner],ttextt,text,h);
				else if(HouseInfo[h][hKlass] == 1)format(string, sizeof(string), "{dad37f}业主: {FFFFFF}%s %s\n{dad37f}门: {FFFFFF}%s\n\n{dad37f}类型: {FFFFFF}D\n{dad37f}房间数量: {FFFFFF}3\n{dad37f}门牌号码: {FFFFFF}%i",HouseInfo[h][hOwner],ttextt,text,h);
				else if(HouseInfo[h][hKlass] == 2)format(string, sizeof(string), "{dad37f}业主: {FFFFFF}%s %s\n{dad37f}门: {FFFFFF}%s\n\n{dad37f}类型: {FFFFFF}C\n{dad37f}房间数量: {FFFFFF}5\n{dad37f}门牌号码: {FFFFFF}%i",HouseInfo[h][hOwner],ttextt,text,h);
				else if(HouseInfo[h][hKlass] == 3)format(string, sizeof(string), "{dad37f}业主: {FFFFFF}%s %s\n{dad37f}门: {FFFFFF}%s\n\n{dad37f}类型: {FFFFFF}B\n{dad37f}房间数量: {FFFFFF}6\n{dad37f}门牌号码: {FFFFFF}%i",HouseInfo[h][hOwner],ttextt,text,h);
				else format(string, sizeof(string), "{dad37f}业主: {FFFFFF}%s %s\n{dad37f}门: {FFFFFF}%s\n\n{dad37f}类型: {FFFFFF}A\n{dad37f}房间数量: {FFFFFF}7\n{dad37f}门牌号码: {FFFFFF}%i",HouseInfo[h][hOwner],ttextt,text,h);
				ShowPlayerDialog(playerid,8462,DIALOG_STYLE_MSGBOX, "{1E90FF}房屋已经有业主",string, "进入", "退出");
				SetPVarInt(playerid,"HouseInfoPl",gettime()+10);
				return true;
			}
			else
			{
				if(HouseInfo[h][hKlass] == 0) format(string, sizeof(string), "{FFFFFF}价格: %i\n{FFFFFF}类型: Nope\n房间数量: 1\n{FFFFFF}门牌号码: %i\n\n{FFBF00}输入: /buyhouse 购买房屋",HouseInfo[h][hValue],h);
				else if(HouseInfo[h][hKlass] == 1) format(string, sizeof(string), "{FFFFFF}价格: %i\n{FFFFFF}类型: D\n房间数量: 3\n{FFFFFF}门牌号码: %i\n\n{FFBF00}输入: /buyhouse 购买房屋",HouseInfo[h][hValue],h);
				else if(HouseInfo[h][hKlass] == 2) format(string, sizeof(string), "{FFFFFF}价格: %i\n{FFFFFF}类型: C\n房间数量: 5\n{FFFFFF}门牌号码: %i\n\n{FFBF00}输入: /buyhouse 购买房屋",HouseInfo[h][hValue],h);
				else if(HouseInfo[h][hKlass] == 3) format(string, sizeof(string), "{FFFFFF}价格: %i\n{FFFFFF}类型: B\n房间数量: 6\n{FFFFFF}门牌号码: %i\n\n{FFBF00}输入: /buyhouse 购买房屋",HouseInfo[h][hValue],h);
				else format(string, sizeof(string), "{FFFFFF}价格: %i\n{FFFFFF}类型: A\n房间数量: 7\n{FFFFFF}门牌号码: %i\n\n{FFBF00}输入: /buyhouse 购买房屋",HouseInfo[h][hValue],h);
				ShowPlayerDialog(playerid,8462,DIALOG_STYLE_MSGBOX, "{1E90FF}这所房子出售中",string, "进入", "退出");
				SetPVarInt(playerid,"HouseInfoPl",gettime()+10);
				return true;
			}
		}
	}
	for(new idx = 1; idx <= TOTALBIZZ; idx++)
    {
        if(GetPVarInt(playerid,"biznesPls") > gettime()) return true;
    	if(pickupid == BizzInfo[idx][bPickup])
        {
  		   	if(!strcmp(BizzInfo[idx][bOwner],"None",true))
		  	{
		  	    SetPVarInt(playerid, "PlayerBizz", idx);
 				format(string,90,"产业号码:\t№%i\n价格:\t\t%i\n\n你想进入这个产业吗?",idx,BizzInfo[idx][bPrice]);
		  		if(BizzInfo[idx][bType] != 2) return ShowPlayerDialog(playerid, D_HEAL+9, 0, "{1E90FF}产业", string, "确定", "不了");
		  	}
		  	else
		  	{
		  	    SetPVarInt(playerid, "PlayerBizz", idx);
		  	    if(BizzInfo[idx][bType] == 4 || BizzInfo[idx][bType] == 5)
		  	    {
		  	        if(BizzInfo[idx][bEnter] > 0) format(string, 64, "入门费: %i 美元\n\n你想进入这个产业吗?", BizzInfo[idx][bEnter]);
		  	        else format(string, 64, "入场免费\n\n你想进入这个产业吗?");
		  	        ShowPlayerDialog(playerid, D_HEAL+26, 0, "{1E90FF}产业", string, "确定", "不了");
		  	        return 1;
		  	    }
		  	    SetPVarInt(playerid,"biznesPls",gettime()+10);
		  		if(BizzInfo[idx][bType] != 2) return ShowPlayerDialog(playerid, D_HEAL+9, 0, "{1E90FF}产业", "你想进入这个产业吗?", "确定", "不了");
		  	}
        }
        if(GetPVarInt(playerid,"biznesPl") > gettime()) return true;
        if(pickupid == BizzInfo[idx][bPickupExit])
        {
            SetPVarInt(playerid, "PlayerBizz", idx);
            SetPVarInt(playerid,"biznesPl",gettime()+10);
            ShowPlayerDialog(playerid, D_HEAL+8, 0, "{1E90FF}产业", "你想离开这个产业吗?", "确定", "不了");
            return true;
        }
    }
    time_pick = gettime();
	return 1;
}

publics: OnPlayerSelectedMenuRow(playerid, row)
{
    if(GetPlayerMenu(playerid) == Buyint)
    {
        ShowMenuForPlayer(Buyint,playerid);
        switch(row)
        {
        case 0:
            {
                if(pokupka[playerid] == 1)
                {
                    Q_SetPlayerPos(playerid,2262.83,-1137.71,1050.63);
                    SetPlayerInterior(playerid,10);
                    pokupka[playerid] = 2;
                    SendSyntaxMessage(playerid,"这个内饰的价格: 100.000$");
                }
                else if(pokupka[playerid] == 2)
                {
                    Q_SetPlayerPos(playerid,2365.42,-1131.85,1050.88);
                    SetPlayerInterior(playerid,8);
                    pokupka[playerid] = 3;
                    SendSyntaxMessage(playerid,"这个内饰的价格: 120.000$");
                }
                else if(pokupka[playerid] == 3)
                {
                    Q_SetPlayerPos(playerid,2451.77,-1699.80,1013.51);
                    SetPlayerInterior(playerid,2);
                    pokupka[playerid] = 4;
                    SendSyntaxMessage(playerid,"这个内饰的价格: 130.000$");
                }
                else if(pokupka[playerid] == 4)
                {
                    Q_SetPlayerPos(playerid,223.043991,1289.259888,1082.199951);
                    SetPlayerInterior(playerid,1);
                    pokupka[playerid] = 5;
                    SendSyntaxMessage(playerid,"这个内饰的价格: 200.000$");
                }
                else if(pokupka[playerid] == 5)
                {
                    Q_SetPlayerPos(playerid,385.803986,1471.769897,1080.20996);
                    SetPlayerInterior(playerid,15);
                    pokupka[playerid] = 6;
                    SendSyntaxMessage(playerid,"这个内饰的价格: 220.000$");
                }
                else if(pokupka[playerid] == 6)
                {
                    Q_SetPlayerPos(playerid,2324.33,-1144.79,1050.71);
                    SetPlayerInterior(playerid,12);
                    pokupka[playerid] = 7;
                    SendSyntaxMessage(playerid,"这个内饰的价格: 250.000$");
                }
                else if(pokupka[playerid] == 7)
                {
                    Q_SetPlayerPos(playerid,2319.1272,-1023.9562,1050.2109);
                    SetPlayerInterior(playerid,9);
                    pokupka[playerid] = 8;
                    SendSyntaxMessage(playerid,"这个内饰的价格: 270.000$");
                }
                else if(pokupka[playerid] == 8)
                {
                    Q_SetPlayerPos(playerid,2260.76,-1210.45,1049.02);
                    SetPlayerInterior(playerid,10);
                    pokupka[playerid] = 9;
                    SendSyntaxMessage(playerid,"这个内饰的价格: 300.000$");
                }
                else if(pokupka[playerid] == 9)
                {
                    Q_SetPlayerPos(playerid,225.630997,1022.479980,1084.069946);
                    SetPlayerInterior(playerid,7);
                    pokupka[playerid] = 10;
                    SendSyntaxMessage(playerid,"这个内饰的价格: 320.000$");
                }
                else if(pokupka[playerid] == 10)
                {
                    Q_SetPlayerPos(playerid,239.2819,1114.1991,1080.9922);
                    SetPlayerInterior(playerid,5);
                    pokupka[playerid] = 11;
                    SendSyntaxMessage(playerid,"这个内饰的价格: 340.000$");
                }
                else if(pokupka[playerid] == 11)
                {
                    Q_SetPlayerPos(playerid,234.2826,1065.229,1084.2101);
                    SetPlayerInterior(playerid,6);
                    pokupka[playerid] = 12;
                    SendSyntaxMessage(playerid,"这个内饰的价格: 380.000$");
                }
                else if(pokupka[playerid] == 12)
                {
                    Q_SetPlayerPos(playerid,2262.83,-1137.71,1050.63);
                    SetPlayerInterior(playerid,10);
                    pokupka[playerid] = 1;
                    SendSyntaxMessage(playerid,"这个内饰的价格: 50.000$");
                }
            }
        case 1:
            {
                if(pokupka[playerid] == 1)
                {
                    if(PlayerInfo[playerid][pCash] < 50000)return SendErrorMessage(playerid,"你没有足够的钱!");
                    new house = PlayerInfo[playerid][pPhousekey];
                    HouseInfo[house][hInt] = 5;
                    HouseInfo[house][hExitx] = 2233.7283;
                    HouseInfo[house][hExity] = -1115.2617;
                    HouseInfo[house][hExitz] = 1050.8828;
                    PlayerInfo[playerid][pCash] -= 50000;
                    SendSyntaxMessage(playerid,"你成功购买了内饰,花费了 50.000 $");
                    SaveProperty(house);
                    Exit(playerid);
                }
                else if(pokupka[playerid] == 2)
                {
                    if(PlayerInfo[playerid][pCash] < 100000)return SendErrorMessage(playerid,"你没有足够的钱!");
                    new house = PlayerInfo[playerid][pPhousekey];
                    HouseInfo[house][hInt] = 10;
                    HouseInfo[house][hExitx] = 2259.3816;
                    HouseInfo[house][hExity] = -1135.9191;
                    HouseInfo[house][hExitz] = 1050.6403;
                    PlayerInfo[playerid][pCash] -= 100000;
                    SendSyntaxMessage(playerid,"你成功购买了内饰,花费了 100.000 $");
                    SaveProperty(house);
                    Exit(playerid);
                }
                else if(pokupka[playerid] == 3)
                {
                    if(PlayerInfo[playerid][pCash] < 120000)return SendErrorMessage(playerid,"你没有足够的钱!");
                    new house = PlayerInfo[playerid][pPhousekey];
                    HouseInfo[house][hInt] = 8;
                    HouseInfo[house][hExitx] = 2365.2073;
                    HouseInfo[house][hExity] = -1135.5981;
                    HouseInfo[house][hExitz] = 1050.8826;
                    PlayerInfo[playerid][pCash] -= 120000;
                    SendSyntaxMessage(playerid,"你成功购买了内饰,花费了 120.000 $");
                    SaveProperty(house);
                    Exit(playerid);
                }
                else if(pokupka[playerid] == 4)
                {
                    if(PlayerInfo[playerid][pCash] < 130000)return SendErrorMessage(playerid,"你没有足够的钱!");
                    new house = PlayerInfo[playerid][pPhousekey];
                    HouseInfo[house][hInt] = 2;
                    HouseInfo[house][hExitx] = 2468.8430;
                    HouseInfo[house][hExity] = -1698.1530;
                    HouseInfo[house][hExitz] = 1013.5078;
                    PlayerInfo[playerid][pCash] -= 130000;
                    SendSyntaxMessage(playerid,"你成功购买了内饰,花费了 130.000 $");
                    SaveProperty(house);
                    Exit(playerid);
                }
                else if(pokupka[playerid] == 5)
                {
	                if(PlayerInfo[playerid][pCash] < 200000)return SendErrorMessage(playerid,"你没有足够的钱!");
                    new house = PlayerInfo[playerid][pPhousekey];
                    HouseInfo[house][hInt] = 1;
                    HouseInfo[house][hExitx] = 223.1932;
                    HouseInfo[house][hExity] = 1287.0768;
                    HouseInfo[house][hExitz] = 1082.1406;
                    PlayerInfo[playerid][pCash] -= 200000;
                    SendSyntaxMessage(playerid,"你成功购买了内饰,花费了 200.000 $");
                    SaveProperty(house);
                    Exit(playerid);
                 }
                 else if(pokupka[playerid] == 6)
                 {
                     if(PlayerInfo[playerid][pCash] < 220000)return SendErrorMessage(playerid,"你没有足够的钱!");
                     new house = PlayerInfo[playerid][pPhousekey];
                     HouseInfo[house][hInt] = 15;
                     HouseInfo[house][hExitx] = 387.2260;
                     HouseInfo[house][hExity] = 1471.7313;
                     HouseInfo[house][hExitz] = 1080.1949;
                     PlayerInfo[playerid][pCash] -= 220000;
                     SendSyntaxMessage(playerid,"你成功购买了内饰,花费了 220.000 $");
                     SaveProperty(house);
                     Exit(playerid);
                 }
                 else if(pokupka[playerid] == 7)
                 {
                    if(PlayerInfo[playerid][pCash] < 250000)return SendErrorMessage(playerid,"你没有足够的钱!");
                    new house = PlayerInfo[playerid][pPhousekey];
                    HouseInfo[house][hInt] = 12;
                    HouseInfo[house][hExitx] = 2324.4224;
                    HouseInfo[house][hExity] = -1149.4077;
                    HouseInfo[house][hExitz] = 1050.7101;
                    PlayerInfo[playerid][pCash] -= 250000;
                    SendSyntaxMessage(playerid,"你成功购买了内饰,花费了 250.000 $");
                    SaveProperty(house);
                    Exit(playerid);
                 }
                 else if(pokupka[playerid] == 8)
                 {
                     if(PlayerInfo[playerid][pCash] < 270000)return SendErrorMessage(playerid,"你没有足够的钱!");
                     new house = PlayerInfo[playerid][pPhousekey];
                     HouseInfo[house][hInt] = 9;
                     HouseInfo[house][hExitx] = 2317.9084;
                     HouseInfo[house][hExity] = -1026.7656;
                     HouseInfo[house][hExitz] = 1050.2178;
                     PlayerInfo[playerid][pCash] -= 270000;
                     SendSyntaxMessage(playerid,"你成功购买了内饰,花费了 270.000 $");
                     SaveProperty(house);
                     Exit(playerid);
                 }
                 else if(pokupka[playerid] == 9)
                 {
                     if(PlayerInfo[playerid][pCash] < 300000)return SendErrorMessage(playerid,"你没有足够的钱!");
                     new house = PlayerInfo[playerid][pPhousekey];
                     HouseInfo[house][hInt] = 10;
                     HouseInfo[house][hExitx] = 2269.8389;
                     HouseInfo[house][hExity] = -1210.4169;
                     HouseInfo[house][hExitz] = 1047.5625;
                     PlayerInfo[playerid][pCash] -= 300000;
                     SendSyntaxMessage(playerid,"你成功购买了内饰,花费了 300.000 $");
                     SaveProperty(house);
                     Exit(playerid);
                 }
                 else if(pokupka[playerid] == 10)
                 {
                     if(PlayerInfo[playerid][pCash] < 320000)return SendErrorMessage(playerid,"你没有足够的钱!");
                     new house = PlayerInfo[playerid][pPhousekey];
                     HouseInfo[house][hInt] = 7;
                     HouseInfo[house][hExitx] = 225.6452;
                     HouseInfo[house][hExity] = 1021.4452;
                     HouseInfo[house][hExitz] = 1084.0177;
                     PlayerInfo[playerid][pCash] -= 320000;
                     SendSyntaxMessage(playerid,"你成功购买了内饰,花费了 320.000 $");
                     SaveProperty(house);
                     Exit(playerid);
                 }
                 else if(pokupka[playerid] == 11)
                 {
                    if(PlayerInfo[playerid][pCash] < 340000)return SendErrorMessage(playerid,"你没有足够的钱!");
                    new house = PlayerInfo[playerid][pPhousekey];
                    HouseInfo[house][hInt] = 5;
                    HouseInfo[house][hExitx] = 226.4627;
                    HouseInfo[house][hExity] = 1114.2662;
                    HouseInfo[house][hExitz] = 1080.9938;
                    PlayerInfo[playerid][pCash] -= 340000;
                    SendSyntaxMessage(playerid,"你成功购买了内饰,花费了 340.000 $");
                    SaveProperty(house);
                    Exit(playerid);
                 }
                 else if(pokupka[playerid] == 12)
                 {
                     if(PlayerInfo[playerid][pCash] < 380000)return SendErrorMessage(playerid,"你没有足够的钱!");
                     new house = PlayerInfo[playerid][pPhousekey];
                     HouseInfo[house][hInt] = 6;
                     HouseInfo[house][hExitx] = 234.3617;
                     HouseInfo[house][hExity] = 1063.7206;
                     HouseInfo[house][hExitz] = 1084.2123;
                     PlayerInfo[playerid][pCash] -= 380000;
                     SendSyntaxMessage(playerid,"你成功购买了内饰,花费了 380.000 $");
                     SaveProperty(house);
                     Exit(playerid);
			     }
            }
        case 2:
            {
                Exit(playerid);
            }
        }
    }
	return true;
}

publics: OnPlayerExitedMenu(playerid)
{
	new Menu:Current = GetPlayerMenu(playerid);
	if(!IsValidMenu(Current)) return true;
	ShowMenuForPlayer(Current, playerid);
	TogglePlayerControllable(playerid,0);
	return true;
}

publics: SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num)
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			SetPlayerCheckpoint(i,allx,ally,allz, radi);
			if (num != 255)
			{
				gPlayerCheckpointStatus[i] = num;
			}
		}
	}
}

publics: SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi)
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			if(IsAArm(i))
			{
				SetPlayerCheckpoint(i,allx,ally,allz, radi);
			}
		}
	}
	return true;
}

stock UnSurfCar(carid)
{
	foreach(new i : Player)
	{
		new model = GetVehicleModel(carid);
		if(model != 430 && model != 454 &&
				model != 478 && model != 446 &&
				model != 452 && model != 453 &&
				model != 454 && model != 472 &&
				model != 473 && model != 484 &&
				model != 493 && model != 539 &&
				model != 595)
		if(GetPlayerSurfingVehicleID(i) == carid)
		{
			new Float:p[3]; GetPlayerPos(i,p[0],p[1],p[2]);
			GetXYInBackOfPlayer(i,p[0],p[1],2.0);
			Q_SetPlayerPos(i,p[0],p[1],p[2]);
		}
	}
	return;
}

stock CheckEnterCar(playerid, vehicleid)
{
    new name[24];GetPlayerName(playerid, name, 24);
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
	if(vehicleid >= fbicar[0] && vehicleid <= fbicar[11])
	{
		if(PlayerInfo[playerid][pMember] != 2)
		{
			SendErrorMessage(playerid,"你不属于FBI");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= univercar[0] && vehicleid <= univercar[4])
	{
		if(PlayerInfo[playerid][pMember] != 8)
		{
			SendErrorMessage(playerid,"你不属于大学");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= lsnewscar[0] && vehicleid <= lsnewscar[5])
	{
		if(PlayerInfo[playerid][pMember] != 16)
		{
			SendErrorMessage(playerid,"你不属于媒体");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= lvpdcar[0] && vehicleid <= lvpdcar[16])
	{
		if(PlayerInfo[playerid][pMember] != 20)
		{
			SendErrorMessage(playerid,"你不属于LVPD");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= ruscar[0] && vehicleid <= ruscar[14])
	{
		if(PlayerInfo[playerid][pMember] != 14)
		{
			SendErrorMessage(playerid,"你不属于黑手党");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= lcncar[0] && vehicleid <= lcncar[14])
	{
		if(PlayerInfo[playerid][pMember] != 5)
		{
			SendErrorMessage(playerid,"你不属于LCN");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= yakcar[0] && vehicleid <= yakcar[11])
	{
		if(PlayerInfo[playerid][pMember] != 6)
		{
		 	SendErrorMessage(playerid,"你不属于山口组");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= govcar[0] && vehicleid <= govcar[4])
	{
		if(PlayerInfo[playerid][pMember] != 7)
		{
			SendErrorMessage(playerid,"你不属于政府");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= matsfura && vehicleid <= matsfura)
	{
		if(PlayerInfo[playerid][pMember] != 12)
		{
			SendErrorMessage(playerid,"你不属于巴拉斯帮派");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= SapdCar[0] && vehicleid <= SapdCar[34])
	{
		if(PlayerInfo[playerid][pMember] != 1)
		{
			SendServerMessage(playerid, "帮助请按{FFFFFF}'N'");
		    SendErrorMessage(playerid,"你不属于LSPD!");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= medicsls[0] && vehicleid <= medicsls[8])
	{
		if(PlayerInfo[playerid][pMember] != 4)
  		{
			SendErrorMessage(playerid,"你不属于医院");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= sfpdcar[0] && vehicleid <= sfpdcar[27])
	{
		if(PlayerInfo[playerid][pMember] != 9)
		{
			SendErrorMessage(playerid,"你不属于SFPD");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= matsfuragrove && vehicleid <= matsfuragrove)
	{
		if(PlayerInfo[playerid][pMember] != 15)
		{
			SendErrorMessage(playerid,"你不属于格洛夫帮派");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= matsfuraactek && vehicleid <= matsfuraactek)
	{
		if(PlayerInfo[playerid][pMember] != 17)
		{
	 		SendErrorMessage(playerid,"你不属于阿兹特克");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= matsfuravagos && vehicleid <= matsfuravagos)
	{
		if(PlayerInfo[playerid][pMember] != 13)
		{
			SendErrorMessage(playerid,"你不属于瓦戈斯");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= matslcn && vehicleid <= matslcn)
	{
		if(PlayerInfo[playerid][pMember] != 5)
		{
	 		SendErrorMessage(playerid,"你不属于LCN");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= matsrm && vehicleid <= matsrm)
	{
		if(PlayerInfo[playerid][pMember] != 14)
		{
			SendErrorMessage(playerid,"你不属于14K");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= matsyakuza && vehicleid <= matsyakuza)
	{
		if(PlayerInfo[playerid][pMember] != 6)
		{
			SendErrorMessage(playerid,"你不属于山口组");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= matsfurarifa && vehicleid <= matsfurarifa)
	{
		if(PlayerInfo[playerid][pMember] != 18)
		{
			SendErrorMessage(playerid,"你不属于14K");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= ballascar[0] && vehicleid <= ballascar[6])
	{
		if(PlayerInfo[playerid][pMember] != 12)
		{
			SendErrorMessage(playerid,"你不属于巴拉斯帮派");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= grovecar[0] && vehicleid <= grovecar[6])
	{
		if(PlayerInfo[playerid][pMember] != 15)
		{
			SendErrorMessage(playerid,"你不属于格罗夫帮派");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= coronoscar[0] && vehicleid <= coronoscar[6])
	{
		if(PlayerInfo[playerid][pMember] != 17)
		{
	 		SendErrorMessage(playerid,"你不属于阿兹特克");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= vagoscar[0] && vehicleid <= vagoscar[6])
	{
		if(PlayerInfo[playerid][pMember] != 13)
		{
			SendErrorMessage(playerid,"你不属于瓦戈斯");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= rifacar[0] && vehicleid <= rifacar[7])
	{
		if(PlayerInfo[playerid][pMember] != 18)
		{
			SendErrorMessage(playerid,"你不属于14K");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= armycarsf[0] && vehicleid <= armycarsf[26])
	{
		if(PlayerInfo[playerid][pMember] != 3)
		{
	 		SendErrorMessage(playerid,"你不属于SA监狱");
			RemovePlayerFromVehicle(playerid);
			return true;
		}
	}
	if(vehicleid >= LicCar[0] && vehicleid <= LicCar[10])
	{
		if(PlayerInfo[playerid][pMember] == 11 || TakingLesson[playerid] == 1 ) { }
		else
		{
			SendErrorMessage(playerid, "你不属于驾驶学校");
			RemovePlayerFromVehicle(playerid);
		}
	}
	if(vehicleid >= gunscar[0] && vehicleid <= gunscar[1])
	{
		if(PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1) { }
		else
		{
			SendErrorMessage(playerid,"你不属于军队");
			RemovePlayerFromVehicle(playerid);
		}
	}
	if(vehicleid >= armcar[0] && vehicleid <= armcar[38])
	{
		if(PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1) { }
		else
		{
			SendErrorMessage(playerid,"你不属于军队");
			RemovePlayerFromVehicle(playerid); }
		}
	}
	return true;
}

publics: OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(newstate == PLAYER_STATE_ONFOOT)
	{
		if(RaceBus[playerid] !=0)
		{
			format(YCMDstr,sizeof(YCMDstr),"― 你获得的了: %d$.",Zarabotok[playerid]);
			SendClientMessage(playerid,-1,YCMDstr);
			OnReic[playerid]= 0;
			PlayerInfo[playerid][pCash] += Zarabotok[playerid];
			RaceBus[playerid] = 0;
			Zarabotok[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			for(new td; td < sizeof(BusWork); td++) TextDrawHideForPlayer(playerid,BusWork[td]);
			for(new td; td < 2; td++) PlayerTextDrawHide(playerid,BusInfo[playerid][td]);
		}
	}
    if(!ac_1{playerid} && newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_NONE) return SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Bypass )"),GKick(playerid);
	if(newstate == PLAYER_STATE_DRIVER)
	{
 		CarID[playerid] = GetPlayerVehicleID(playerid);
    }
    if(oldstate == PLAYER_STATE_DRIVER)
	{
        if(BanVeh[CarID[playerid]]) KillTimer(TimeUpdateVeh[playerid]);
        TimeUpdateVeh[playerid] = SetTimerEx("OnUpdateVehiclePos", 10000, false, "ii", CarID[playerid], 1);
        BanVeh[CarID[playerid]] = true;
		CarID[playerid] = INVALID_VEHICLE_ID;
    }
    StatusAirTP[playerid] = GetTickCount();
    if(IsPlayerInAnyVehicle(playerid))
	{
		GetVehiclePos(CarID[playerid],AC_Air[playerid][0],AC_Air[playerid][1],AC_Air[playerid][2]);
	}
	else
	{
		GetPlayerPos(playerid,AC_Air[playerid][0],AC_Air[playerid][1],AC_Air[playerid][2]);
	}
    new exfrakcar = GetPlayerVehicleID(playerid);
    CheckEnterCar(playerid, exfrakcar);
    if(newstate == PLAYER_STATE_PASSENGER)
    {
        if(GetPlayerWeapon(playerid) == 24)
        {
            SetPlayerArmedWeapon(playerid, 0);
        }
    }
    new string[128];
    new name[24];GetPlayerName(playerid, name, 24);
    if((newstate == 2 && oldstate == 3) || (newstate == 3 && oldstate == 2)) return SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Vehicle Cheat #1 )"),GKick(playerid);
	if(newstate == PLAYER_STATE_DRIVER)
	{
	    new model = GetPlayerVehicleSeat(playerid);
	    if(model != 128)
	    {
	    if(!model)
	    {
	        model = GetVehicleModel(GetPlayerVehicleID(playerid));
	        if(!(400 <= model <= 611) || MaxPassengers[model - 400 >>> 3] >>> ((model - 400 & 7) << 2) & 0xF == 15) return SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Vehicle Cheat #2 )"),GKick(playerid);
	    }
	    else return SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Vehicle Cheat #3 )"),GKick(playerid);
	    }
	}
	if(newstate == PLAYER_STATE_PASSENGER)
	{
	    new model = GetVehicleModel(GetPlayerVehicleID(playerid));
	    if(400 <= model <= 611)
	    {
	    model -= 400;
	    new seat = GetPlayerVehicleSeat(playerid);
	    if(seat != 128)
	    {
	        model = (MaxPassengers[model >>> 3] >>> ((model & 7) << 2)) & 0xF;
	        if(!model || model == 15) return SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Vehicle Cheat #4 )"),GKick(playerid);
	        else if(!(0 < seat <= model)) return SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Vehicle Cheat #5 )"),GKick(playerid);
	    }
	    else return SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Vehicle Cheat #6 )"),GKick(playerid);
	    }
	}
	if(newstate == 1)
	{
		if(vibormashina[playerid] == 0)
		{
			DeletePVar ( playerid, "VehicleID" );
		}
	}
	if(newstate == 2)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
		if(vibormashina[playerid] == 0)
		{
			SetPVarInt(playerid,"VehicleID", vehicleid );
		}
	}
	if(newstate == PLAYER_STATE_ONFOOT)
	{
		if(GetPVarInt(playerid, "YEAH"))
		{
			SendSyntaxMessage(playerid, "你取消了GPS");
			DisablePlayerRaceCheckpoint(playerid);
			SetPVarInt(playerid,"YEAH",0);
			DeletePVar(playerid,"Spongebob");
			DeletePVar(playerid,"Mario");
			DeletePVar(playerid,"SpiderPig");
			DeletePVar(playerid, "GPSID");
		}
	}
    if(newstate == PLAYER_STATE_PASSENGER)
	{
  		if((GetPlayerVehicleSeat(playerid)==2 || GetPlayerVehicleSeat(playerid)==3) && GetVehicleModel(GetPlayerVehicleID(playerid)) == 482)
    	{
    		SetPlayerVirtualWorld(playerid,GetPlayerVehicleID(playerid));
     		GetBuritoID[playerid] = GetPlayerVehicleID(playerid);
      		Q_SetPlayerPos(playerid, 2008.3342,1032.2413,1012.1354);
       		SetPlayerFacingAngle(playerid,275.7225);
        	SetCameraBehindPlayer(playerid);
        	TogglePlayerControllable(playerid,0);
        	SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
		}
	}
	if(GetPVarInt(playerid, "PriceBus") > 0)
	{
 		SendServerMessage(playerid, "你还有20秒的时间回到车内");
		DisablePlayerRaceCheckpoint(playerid);
  		Delete3DTextLabel(BusText3D[playerid]);
  		SetPVarInt(playerid, "BusTime", 20);
	}
	if(GetPVarInt(playerid, "ProductID") > 0)
	{
		SendServerMessage(playerid, "你还有20秒的时间回到车内");
		DisablePlayerRaceCheckpoint(playerid);
		Delete3DTextLabel(ProductInfo[GetPVarInt(playerid, "ProductID")][pText3D]);
		ProductTime[playerid] = 20;
	}
	if(GetPVarInt(playerid, "FuelID") > 0)
	{
		SendServerMessage(playerid, "你还有20秒的时间回到车内");
		DisablePlayerRaceCheckpoint(playerid);
		Delete3DTextLabel(FuelInfo[GetPVarInt(playerid, "FuelID")][pText3D]);
		FuelTime[playerid] = 20;
	}
	new vehicleidds = GetPlayerVehicleID(playerid);
	if(newstate == PLAYER_STATE_DRIVER && IsTaxiCar(vehicleidds))
  	{
	   	if(GetPlayerRentTaxi[playerid] != vehicleidds)
		{
			if(PlayerInfo[playerid][pJob] != 2)
			{
				RemovePlayerFromVehicle(playerid);
			}
   			format(string, sizeof(string), "{FFFFFF}\
  			出租车工作你需要租用一辆出租车.\n\
			租金价格: {CECECE}%d$\
			", TAXI_PRICERENT);
	   		ShowPlayerDialog(playerid, TAXI_DIALOG, DIALOG_STYLE_MSGBOX, "{1E90FF}租一辆出租车", string, "确定", "不了");
			PlayerRentTaxi[playerid] = true;
		}
  		else
		{
			SetPVarInt(playerid, "OnPlayerExitCar", 0);
		}
    }
	if(newstate == PLAYER_STATE_PASSENGER && IsTaxiCar(vehicleidds) && GetPlayerRentTaxi[playerid] != vehicleidds)
	{
	    new bool:onepass;
	   	foreach(new i: Player)
		{
   			if(IsPlayerConnected(i) && IsPlayerInVehicle(i, vehicleidds) && GetPlayerVehicleSeat(i) != 0 && i != playerid)
  			{
			   	onepass = true;
			   	break;
   			}
   		}
		if(PlayerCalledTaxi[playerid])
		{
			PlayerCalledTaxi[playerid] = false;
			foreach(new i: Player)
			{
	    		if(IsPlayerConnected(i) && TaxiJobStarted[i]) RemovePlayerMapIcon(i, playerid);
	  		}
	  	}
		if(onepass)
		{
			format(string, sizeof(string), "― 有一位乘客上了你的出租车 {B7E1F7}%s", name);
			SendClientMessage(GetPlayerCarDriver(playerid), -1, string);
			PlayerClickMapingCyka[playerid] = 0;
			return 1;
		}
   		PlayerEnteredPoint[playerid] = 0;
   		PlayerClickMapingCyka[playerid] = 1;
		format(string, sizeof(string), "― 有一位乘客上了你的出租车 {B7E1F7}%s {CECECE}(等待TA选择一条路线)", name);
		SendClientMessage(GetPlayerCarDriver(playerid), -1, string);
		ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}信息", "{00FFFF}\
		将地图上的标记设置为你要去的位置,\n\
		你需要去哪里.", "关闭", "");
	}
	if(newstate == PLAYER_STATE_DRIVER && Type == 2)
	{
		SetPVarInt(GetPlayerVehicleID(playerid), "UnSurfCar", gettime()+1);
	}
	if(newstate == PLAYER_STATE_ONFOOT)
	{
		if(TalkingLivels[playerid] == 2)
		{
			SendServerMessage(playerid, "直播结束.");
			SendServerMessage(TalkingLivels[playerid], "直播结束.");
			TogglePlayerControllable(playerid, 1);
			TogglePlayerControllable(TalkingLivels[playerid], 1);
			TalkingLivels[TalkingLivels[playerid]] = 255;
			TalkingLivels[playerid] = 255;
			return true;
		}
		else if(TakingLesson[playerid] == 1)
		{
			SendServerMessage(playerid, "公交车停了,你下车了");
			DisablePlayerRaceCheckpoint(playerid);
			CP[playerid] = 0;
			JobCarTime[playerid] = 0;
			LessonCar[playerid] = 0;
			LessonStat[playerid] = 0;
			TakingLesson[playerid] = 0;
			return true;
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
		if(!IsAPlane(vehicleid) && !IsABoat(vehicleid) && !IsANoSpeed(vehicleid))
		{
			STimer[playerid] = SetTimerEx("UpdateSpeedometr", 120, true, "d", playerid);
			for(new i = 0; i < 12; i++) TextDrawShowForPlayer(playerid, VehBox[i]);

			//for(new i = 0; i < 6; i++) PlayerTextDrawShow(playerid, VehInfo[playerid][i]);

			PlayerTextDrawShow(playerid, VehInfo[playerid][0]);
			PlayerTextDrawShow(playerid, VehInfo[playerid][1]);
			PlayerTextDrawShow(playerid, VehInfo[playerid][2]);
			PlayerTextDrawShow(playerid, VehInfo[playerid][3]);
			PlayerTextDrawShow(playerid, VehInfo[playerid][4]);
			PlayerTextDrawShow(playerid, VehInfo[playerid][5]);

		}
	}
	if(newstate == PLAYER_STATE_ONFOOT)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
		if(!IsAPlane(vehicleid) && !IsABoat(vehicleid) && !IsANoSpeed(vehicleid))
		{
			KillTimer(STimer[playerid]);
			for(new i = 0; i < 12; i++) TextDrawHideForPlayer(playerid, VehBox[i]);

			//for(new i = 0; i < 6; i++) PlayerTextDrawHide(playerid, VehInfo[playerid][i]);

			PlayerTextDrawHide(playerid, VehInfo[playerid][0]);
			PlayerTextDrawHide(playerid, VehInfo[playerid][1]);
			PlayerTextDrawHide(playerid, VehInfo[playerid][2]);
			PlayerTextDrawHide(playerid, VehInfo[playerid][3]);
			PlayerTextDrawHide(playerid, VehInfo[playerid][4]);
			PlayerTextDrawHide(playerid, VehInfo[playerid][5]);

		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
		if(Fuell[vehicleid] <= 0 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 462)
		{
			SendServerMessage(playerid, "引擎无法启动");
			SendServerMessage(playerid, "用你的手机 /call - 给修车工或者出租车打电话");
			Fuell[vehicleid] = 0;
		}
		if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510)
		{
			GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(vehicleid ,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
		}
		else
		{
            if(zavodis[GetPlayerVehicleID(playerid)] == 0) SendServerMessage(playerid, "车辆控制按键: {0080FF}'Y', '2', 'Ctrl'");
		}
	}
	switch(newstate)
	{
		case PLAYER_STATE_DRIVER:
		{
			TelePos[playerid][0] = 0.0;
			TelePos[playerid][1] = 0.0;
			new newcar = GetPlayerVehicleID(playerid);
			if(IsAGunsCar(newcar))
			{
				format(string, sizeof(string), "― 武器: %i/%i", MatHaul[newcar-gunscar[0]][mLoad],MatHaul[newcar-gunscar[0]][mCapasity]);
				SendClientMessage(playerid, -1, string);
				SendServerMessage(playerid, "装载/卸下材料 ( /carm )");
			}
			if(IsABoat(newcar))
			{
				if(PlayerInfo[playerid][pBoatLic] < 1)
				{
					SendErrorMessage(playerid,"你没有船只执照! ( /gps - 执照中心 )");
					RemovePlayerFromVehicle(playerid);
				}
			}
			if(IsAPlane(newcar))
			{
				if(PlayerInfo[playerid][pFlyLic] < 1)
				{
					if(TakingLesson[playerid] == 1) { }
					else {
						SendErrorMessage(playerid,"你没有飞机执照! ( /gps - 执照中心 )");
						RemovePlayerFromVehicle(playerid); }
				}
			}
			if(CarLic(newcar))
			{
				if(PlayerInfo[playerid][pCarLic] == 0)
				{
					if(TakingLesson[playerid] != 1)
					{
						SendErrorMessage(playerid,"你没有驾驶执照! ( /gps - 执照中心)");
						RemovePlayerFromVehicle(playerid);
						SetTimerEx("AntiCheatVeh", 3500, false, "i", playerid);
					}
				}
			}
			if(newcar >= LicCar[0] && newcar <= LicCar[10])
			{
				if(PlayerInfo[playerid][pCarLic] == 0 && TakingLesson[playerid] == 1)
				{
					if(JobCarTime[playerid] <= 16 && JobCarTime[playerid] >= 1)
					{
						JobCarTime[playerid] = 0;
					}
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_1;
					SetPlayerRaceCheckpoint(playerid,0,1411.0938,-1648.5586,13.1234,1431.5856,-1605.7881,13.1258,5.0);
					SendServerMessage(playerid, "使用'Y'按钮启动引擎.");
					SendServerMessage(playerid, "使用'H'按钮操作栏杆.");
					SendServerMessage(playerid, "要中断考试，请将车停下来.");
					SendServerMessage(playerid, "我们建议您在考试结束前不要损坏汽车.");
				}
			}
			if(newcar >= nouncar[0] && newcar <= nouncar[8])
 	 		{
				if(GetPVarInt(playerid, "Noun") == 0)
				{
	 				RemovePlayerFromVehicle(playerid);
			 		return 1;
				}
				SendServerMessage(playerid, "跟随检查点");
				new randobj = random(19);
				new Float:X, Float:Y, Float:Z;
				GetObjectPos(NounObject[randobj], X, Y, Z);
    			SetPVarInt(playerid, "NounObjID", randobj);
    			SetPlayerRaceCheckpoint(playerid, 1, X, Y, Z, 0.0,0.0,0.0,3);
				return 1;
 	 		}
			if(newcar >= buscar[0] && newcar <= buscar[40])
			{
				if(PlayerInfo[playerid][pJob] != 4)
				{
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
				if(GetPVarInt(playerid, "BusTime") > 0 && GetPVarInt(playerid, "PriceBus") > 0 && GetPVarInt(playerid, "RentBus") == GetPlayerVehicleID(playerid))
				{
					new i = pPressed[playerid], type = GetPVarInt(playerid, "TypeBus");
					switch(type)
					{
					case 1: name = "市内-医院";
					case 2: name = "市内-SF市";
					case 3: name = "市内-LV市";
					case 4: name = "农场-SF市";
					case 5: name = "火车站-采石场";
					}
					new sbusstring[128];
					format(sbusstring, 90, "%s\n{ffffff}票价: {33AAFF}%i {ffffff}美元", name, GetPVarInt(playerid, "PriceBus"));
					BusText3D[playerid] = Create3DTextLabel(sbusstring, 0x33AAFFFF, 0.0, 0.0, 0.0, 50.0, 0, 1);
					Attach3DTextLabelToVehicle(BusText3D[playerid], GetPlayerVehicleID(playerid), 0.0, 0.0, 2.25);
					if(type == 1) SetPlayerRaceCheckpoint(playerid,0,BusCityLS[i][0],BusCityLS[i][1],BusCityLS[i][2],BusCityLS[i][3],BusCityLS[i][4],BusCityLS[i][5],5.0);
					if(type == 2) SetPlayerRaceCheckpoint(playerid,0,BusCitySF[i][0],BusCitySF[i][1],BusCitySF[i][2],BusCitySF[i][3],BusCitySF[i][4],BusCitySF[i][5],5.0);
					if(type == 3) SetPlayerRaceCheckpoint(playerid,0,BusCityLV[i][0],BusCityLV[i][1],BusCityLV[i][2],BusCityLV[i][3],BusCityLV[i][4],BusCityLV[i][5],5.0);
					if(type == 4) SetPlayerRaceCheckpoint(playerid,0,BusSchool[i][0],BusSchool[i][1],BusSchool[i][2],BusSchool[i][3],BusSchool[i][4],BusSchool[i][5],5.0);
					if(type == 5) SetPlayerRaceCheckpoint(playerid,0,BusLS[i][0],BusLS[i][1],BusLS[i][2],BusLS[i][3],BusLS[i][4],BusLS[i][5],5.0);
					DeletePVar(playerid, "BusTime");
				}
				if(GetPVarInt(playerid, "RentBus") == GetPlayerVehicleID(playerid)) { }
				else ShowPlayerDialog(playerid, D_JOB+58, 0, "{ffffff}租车", "{ffffff}你想要租车辆巴士?\n\n租金: {33CCFF}500{ffffff} 美元", "确定", "不了");
			}
			if(newcar >= fuelcar[0] && newcar <= fuelcar[21])
	 		{
				if(PlayerInfo[playerid][pJob] != 3)
  				{
	 				RemovePlayerFromVehicle(playerid);
	 				return 1;
	 			}
	 			if(GetPVarInt(playerid, "FuelCar") == GetPlayerVehicleID(playerid))
 		 		{
    				if(GetVehicleModel(newcar) == 583 && GetPVarInt(playerid, "FuelCarLittle") == 0)
    				{
    					SetPVarInt(playerid, "FuelCarLittle", 1);
						new full;
  						for(new i = 0; i < 5; i++)
       					{
							if(MafiaInfo[3][mFuel][i] > 100) full = i+1;
		       			}
						if(full == 0)
						{
							PlayerInfo[playerid][pCash] += GetPVarInt(playerid, "JobLittlePrice");
   							DeletePVar(playerid, "LittleFull");
							DeletePVar(playerid, "JobLittlePrice");
 							DeletePVar(playerid, "FuelCarLittle");
							RemovePlayerFromVehicle(playerid);
							return SendErrorMessage(playerid, "井里没有燃料，等等!");
						}
						SendServerMessage(playerid, "跟随检查点");
						SetPVarInt(playerid,"metalFull",gettime()+20);
    					SetPVarInt(playerid, "LittleFull", full);
    					full--;
						if(full == 0) SetPlayerRaceCheckpoint(playerid, 1, 433.7109,1580.9321,11.4922, 0.0, 0.0, 0.0, 5.0);
						if(full == 1) SetPlayerRaceCheckpoint(playerid, 1, 600.3598,1515.3052,7.8325, 0.0, 0.0, 0.0, 5.0);
						if(full == 2) SetPlayerRaceCheckpoint(playerid, 1, 578.3732,1439.7570,11.1406, 0.0, 0.0, 0.0, 5.0);
						if(full == 3) SetPlayerRaceCheckpoint(playerid, 1, 627.6626,1369.1279,11.9845, 0.0, 0.0, 0.0, 5.0);
						if(full == 4) SetPlayerRaceCheckpoint(playerid, 1, 353.2522,1317.3221,12.4766, 0.0, 0.0, 0.0, 5.0);
	  				}
 	 				if(FuelTime[playerid] > 0)
		 			{
					 	new Float:VPos[3], i = FuelInfo[GetPVarInt(playerid, "FuelID")][pBizzid];
					 	FuelTime[playerid] = 0;
			 			GetPlayerPos(playerid, VPos[0], VPos[1], VPos[2]);
					 	DisablePlayerRaceCheckpoint(playerid);
					 	SetPlayerRaceCheckpoint(playerid, 1, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz], 0.0,0.0,0.0,6);
					 	format(string, 100, "{9ACD32}燃料: {ffffff}%i / 50000{9ACD32} 升", FuelInfo[GetPVarInt(playerid, "FuelID")][pTill]);
					 	FuelInfo[GetPVarInt(playerid, "FuelID")][pText3D] = Create3DTextLabel(string, 0xffffffff, 0.0, 0.0, 0.0, 30.0, 0, 1);
					 	Attach3DTextLabelToVehicle(FuelInfo[GetPVarInt(playerid, "FuelID")][pText3D], GetPlayerVehicleID(playerid), 0, -1.0, 2.0);
			 		}
	 			}
	 			else ShowPlayerDialog(playerid, D_JOB+124, 0, "{1E90FF}租车", "{ffffff}你想要租这辆车?\n\n租金: {33CCFF}1000{ffffff} 美元", "确定", "不了");
			}
			if(newcar >= jobproduct[0] && newcar <= jobproduct[13])
			{
  				if(PlayerInfo[playerid][pJob] != 1)
  				{
					RemovePlayerFromVehicle(playerid);
					return 1;
	 			}
				if(ProductTime[playerid] > 0)
				{
					new Float:VPos[3], i = ProductInfo[GetPVarInt(playerid, "ProductID")][pBizzid];
					ProductTime[playerid] = 0;
 					GetPlayerPos(playerid, VPos[0], VPos[1], VPos[2]);
					DisablePlayerRaceCheckpoint(playerid);
	 				SetPlayerRaceCheckpoint(playerid, 1, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz], 0.0,0.0,0.0,6);
	 				format(string, 50, "{9ACD32}货物: {ffffff}%i / 20000", ProductInfo[GetPVarInt(playerid, "ProductID")][pTill]);
		 			ProductInfo[GetPVarInt(playerid, "ProductID")][pText3D] = Create3DTextLabel(string, 0xffffffff, 0.0, 0.0, 0.0, 30.0, 0, 1);
	 				Attach3DTextLabelToVehicle(ProductInfo[GetPVarInt(playerid, "ProductID")][pText3D], GetPlayerVehicleID(playerid), 0, -1.0, 0.5);
	 			}
	 		}
			if(newcar >= taxicar[0] && newcar <= taxicar[16])
			{
    			if(PlayerInfo[playerid][pJob] != 10)
				{
					RemovePlayerFromVehicle(playerid); TogglePlayerControllable(playerid, 1);
					return 1;
				}
			}
 			if(newcar >= mehan[0] && newcar <= mehan[29])
			{
	    		if(PlayerInfo[playerid][pJob] != 6)
				{
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
				if(GetPVarInt(playerid, "RentBus1") != newcar) return ShowPlayerDialog(playerid, 1643, 0, "{1E90FF}租车", "{FFFFFF}你想要租这辆车?\n\n租金: {33CCFF}700{FFFFFF} 美元", "确定", "不了");
				else if(GetPVarInt(playerid,"zapravka"))
				{
    				format(YCMDstr,sizeof(YCMDstr),"> 加油 %d $ - 300 升 <",(BizzInfo[GetPVarInt(playerid,"zapravka")][bTill]/3)*300);
					MexText3D[playerid] = Create3DTextLabel(YCMDstr, 0xE8053A88, 0.0, 0.0, 0.0, 50.0, 0, 1);
					Attach3DTextLabelToVehicle(MexText3D[playerid], newcar, 0.0, 0.0, 2.25);
				}
			}
			if(newcar >= furii[0] && newcar <= furii[7])
			{
				if(fura[playerid] != GetPlayerVehicleID(playerid))
 				if(PlayerInfo[playerid][pJob] != 7)
  				{
					RemovePlayerFromVehicle(playerid);
					return 1;
	 			}
	 			else ShowPlayerDialog(playerid,3008,DIALOG_STYLE_MSGBOX,"{1E90FF}租车","这辆车的租金是 7.000 $.","确定","不了");
			}
			if(newcar >= rentcarcerkva[0] && newcar <= rentcarcerkva[2])
			{
			    if(GetPVarInt(playerid,"arenda") != GetPlayerVehicleID(playerid) )
				{
				    ShowPlayerDialog(playerid,9130,DIALOG_STYLE_MSGBOX,"{1E90FF}租一辆车","租车的租金是 9500 $","确定","退出");
					TogglePlayerControllable(playerid, 0);
				}
			}
			if(newcar >= arendalodok[0] && newcar <= arendalodok[12])
			{
				if(arendal[playerid] != 1)
				{
					ShowPlayerDialog(playerid,9159,DIALOG_STYLE_MSGBOX, " ", "> {BF00FF}船只租用 {FFFF00}<\n{FF8000}租金: 5.000$\n{FFFFFF}你确定你想租用吗?", "确定", "不了");
					TogglePlayerControllable(playerid, 0);
				}
			}
			if(newcar >= arendalodoksf[0] && newcar <= arendalodoksf[4])
			{
				if(arendal[playerid] != 1)
				{
					ShowPlayerDialog(playerid,13311,DIALOG_STYLE_MSGBOX, " ", "> {BF00FF}船只租用 {FFFF00}<\n{FF8000}租金: 500$\n{FFFFFF}你确定你想租用吗?", "确定", "不了");
					TogglePlayerControllable(playerid, 0);
				}
			}
			if(newcar >= arendasf[0] && newcar <= arendasf[13])
			{
				if(arendas[playerid] != 1)
				{
					ShowPlayerDialog(playerid,9158,DIALOG_STYLE_MSGBOX, " ", "> {BF00FF}飞机租用 {FFFF00}<\n{FF8000}租金: 10.000$\n{FFFFFF}你确定你想租用吗?", "确定", "不了");
					TogglePlayerControllable(playerid, 0);
				}
			}
			if(newcar >= rentcarsf[0] && newcar <= rentcarsf[5])
			{
				if(arenda[playerid] != 1)
				{
					ShowPlayerDialog(playerid,9126,DIALOG_STYLE_MSGBOX, " ", "> SF租赁店 <\n租金: 3000$\n你确定你想租用吗?", "确定", "不了");
					TogglePlayerControllable(playerid, 0);
				}
			}
			if(newcar >= rentcarls[0] && newcar <= rentcarls[8])
			{
				if(arenda[playerid] != 1)
				{
					ShowPlayerDialog(playerid,9126,DIALOG_STYLE_MSGBOX, " ", "> LS租赁店 <\n租金: 3000$\n你确定你想租用吗?", "确定", "不了");
					TogglePlayerControllable(playerid, 0);
				}
			}
			if(newcar >= rentcarlv[0] && newcar <= rentcarlv[17])
			{
				if(arenda[playerid] != 1)
				{
					ShowPlayerDialog(playerid,9126,DIALOG_STYLE_MSGBOX, " ", "> LV租赁店 <\n租金: 3000$\n你确定你想租用吗?", "确定", "不了");
					TogglePlayerControllable(playerid, 0);
				}
			}
		}
	}
	if(newstate == PLAYER_STATE_SPAWNED)
	{
		new Float: lwx, Float:lwy, Float:lwz;
		GetPlayerPos(playerid, lwx, lwy, lwz);
		if((lwz > 530.0 && PlayerInfo[playerid][pInt] == 0) || PlayerToPoint(1000.0, playerid, -1041.9,-1868.4,79.1))
		{
			SetPlayerSpawn(playerid);
		}
		if(WantedPoints[playerid] > 0)
		{
			new diecash = 0;
			while(WantedPoints[playerid] > 0)
			{
				diecash += 500;
				WantedPoints[playerid] --;
			}
			SetPlayerWantedLevel(playerid, 0);
			PlayerInfo[playerid][pWantedDeaths] += 1;
		}
		WantedPoints[playerid] = 0;
		WantedLevel[playerid] = 0;
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
	}
	return true;
}

stock CarRespawn(carid)
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInVehicle(i, carid) )
			{
				gLastDriver[carid] = 255;
				return false;
			}
		}
	}
	SetVehicleToRespawn(carid);
	gLastDriver[carid] = 299;
	return true;
}

publics: LockCar(carid)
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			SetVehicleParamsForPlayer(carid, i, 0, 1);
			gCarLock[carid] = 1;
			IsLocked[carid] = 1;
		}
	}
}

stock InitLockDoors(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new c;
		while (c < 265)
		{
			c++;
			if(gCarLock[c] == 1)
			{
				SetVehicleParamsForPlayer(c,playerid, 0, 1);
			}
		}
	}
	return true;
}

publics: AntiBH(playerid)
{
	ApplyAnimation(playerid,"PED","KO_skid_back",4.1,0,0,0,0,0,1);
	times[playerid] = false;
	SetTimerEx("AntiBH1",1500,false,"i",playerid);
	return 1;
}

publics: AntiBH1(playerid) times[playerid] = true;

publics: OnPlayerExitVehicle(playerid, vehicleid)
{
    StatusAirTP[playerid] = GetTickCount();
    if(IsPlayerInAnyVehicle(playerid))
	{
		GetVehiclePos(CarID[playerid],AC_Air[playerid][0],AC_Air[playerid][1],AC_Air[playerid][2]);
	}
	else
	{
		GetPlayerPos(playerid,AC_Air[playerid][0],AC_Air[playerid][1],AC_Air[playerid][2]);
	}
    RemovePlayerWeaponn(playerid,46);
    KillTimer(STimer[playerid]);
    if(vehicleid >= mehan[0] && vehicleid <= mehan[29]) Delete3DTextLabel(MexText3D[playerid]);
	new string[128];
	if(GetPVarInt(playerid, "FuelCarLittle") > 0)
	{
	    PlayerInfo[playerid][pCash] += GetPVarInt(playerid, "JobLittlePrice");
	    format(YCMDstr, sizeof(YCMDstr), "―  工作日结束了. 你获得了: %i 美元", GetPVarInt(playerid, "JobLittlePrice"));
	    SendClientMessage(playerid, -1, YCMDstr);
	    DeletePVar(playerid, "FuelCarLittle");
	    DeletePVar(playerid, "LittleFull");
		DeletePVar(playerid, "JobLittlePrice");
		DisablePlayerRaceCheckpoint(playerid);
	}
	if(GetPVarInt(playerid, "Noun") > 0)
 	{
 	    if(GetPVarInt(playerid, "NounObjID") > 0)
 	    {
    		DestroyObject(NounObject[GetPVarInt(playerid, "NounObjID")]);
			if(GetPVarInt(playerid, "NounObjID") < 10) NounObject[GetPVarInt(playerid, "NounObjID")] = CreateObject(3930,560.3654+random(10),840.2457+random(75),-44.00700073,0.00000000,0.00000000,0.00000000);
			else NounObject[GetPVarInt(playerid, "NounObjID")] = CreateObject(3930,615.3654+random(55),815.2457+random(65),-43.6009,0.00000000,0.00000000,0.00000000);
            DeletePVar(playerid, "NounObjID");
            DisablePlayerRaceCheckpoint(playerid);
            SendSyntaxMessage(playerid,"退出请输入: /start");
            SetPVarInt(playerid, "Noun", 1);
 	    }
	}
	if(PEfir[playerid] != 255)
	{
		SendSyntaxMessage(playerid, "你离开了");
		PEfir[playerid] = 255;
	}
	if(PlayerRacing[playerid] != 0)
	{
		SendSyntaxMessage(playerid, "你被取消资格!");
		DisablePlayerRaceCheckpoint(playerid);
		RaceCP[playerid] = 0;
		chet[playerid] = 0;
		TogglePlayerControllable(playerid, 1);
		SetPlayerInterior(playerid, 0);
		Q_SetPlayerPos(playerid,1554.4183,34.3577,24.1525);
		SetPlayerFacingAngle(playerid, 39.0413);
		PlayerRacing[playerid] = 0;
		RacingPlayers -= 1;

		//for(new t; t != 6; t++) PlayerTextDrawHide(playerid, VehInfo[playerid][t]);

		PlayerTextDrawHide(playerid, VehInfo[playerid][0]);
		PlayerTextDrawHide(playerid, VehInfo[playerid][1]);
		PlayerTextDrawHide(playerid, VehInfo[playerid][2]);
		PlayerTextDrawHide(playerid, VehInfo[playerid][3]);
		PlayerTextDrawHide(playerid, VehInfo[playerid][4]);
		PlayerTextDrawHide(playerid, VehInfo[playerid][5]);

	    DisableRemoteVehicleCollisions(playerid, 0);
		return true;
	}
    if(PlayerRemen[playerid] == 1)
    {
        PlayerRemen[playerid] = 0;
        new ftext[32];
        if(PlayerInfo[playerid][pSex] == 1) { ftext = "男性"; }
        else if(PlayerInfo[playerid][pSex] == 2) { ftext = "女性"; }
        format(YCMDstr, sizeof(YCMDstr), "%s %s 安全带.", PlayerInfo[playerid][pName] , ftext);
        ProxDetector(15.0, playerid, YCMDstr, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
        return 1;
    }
	if(IsTaxiCar(vehicleid) && TaxiJobStarted[playerid] && GetPlayerRentTaxi[playerid] == vehicleid)
	{
	    new Float:hp;
	    GetVehicleHealth(vehicleid, hp);
	    if(hp < 250) return 1;
	    PlayerExitCount[playerid] = 10;
    	SendServerMessage(playerid, "回到出租车!");
    	SetPVarInt(playerid, "OnPlayerExitCar", gettime()+1);
    	return 1;
	}
	if(IsTaxiCar(vehicleid) && PlayerTaxiStarted[GetPlayerCarDriver(playerid)] && PlayerEnteredPoint[playerid] == 1)
	{
	    DisablePlayerCheckpoint(GetPlayerCarDriver(playerid));
		DisablePlayerCheckpoint(playerid);
		PlayerInfo[playerid][pCash] -= GetPriceTaxiEx(playerid);
		PlayerInfo[GetPlayerCarPass(playerid)][pCash] += GetPriceTaxiEx(playerid);
		format(string, sizeof(string), "~g~+%d$", GetPriceTaxiEx(playerid));
		GameTextForPlayer(GetPlayerCarDriver(playerid), string, 1000, 1);
		format(string, sizeof(string), "~r~-%d$", GetPriceTaxiEx(playerid));
		GameTextForPlayer(playerid, string, 1000, 1);
		new name[24];GetPlayerName(playerid, name, 24);
   		format(string, sizeof(string), "― 乘客 %s 提前离开了出租车.", name);
		SendClientMessage(GetPlayerCarDriver(playerid), -1, string);
		SendSyntaxMessage(playerid,"你提前下了出租车.");
		PlayerTaxiStarted[GetPlayerCarDriver(playerid)] = false;
    	return 1;
	}
	if(Pefir[playerid] == 1 || Pefir[playerid] == 2)
	{
		Pefir[playerid] = 0;
		PEfir[playerid] = 255;
		SendSyntaxMessage(playerid, "你离开了");
	}
	ResetCarInfo(playerid);
	time_vcar = gettime();
	return true;
}

publics: OnPlayerRequestClass(playerid, classid)
{
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	new basc[256];
	if(PlayerInfo[playerid][pLogin] == 1) return SpawnPlayer(playerid);
	ac_1{playerid} = true;
	SetPlayerCameraPos(playerid, 593.8030,-1260.6729,84.0397);
	SetPlayerCameraLookAt(playerid, 593.8030,-1260.6729,84.0397);
	SendServerMessage(playerid, "欢迎来到 'Legendary Role Play Game'");
	SendServerMessage(playerid, "传奇RPG, 有你更精彩!");
	format(basc, sizeof(basc), "SELECT `Name` FROM `"TABLE_ACCOUNT"` WHERE Name = '%s'",Name(playerid));
	mysql_query(basc);
	mysql_store_result();
	if(mysql_fetch_row_format(basc))
	{
 		for(new td; td < 17; td++) TextDrawShowForPlayer(playerid,STDAUTO[td]);
		PlayerTextDrawShow(playerid,TDAUTO[playerid]);
		SelectTextDraw(playerid, 0xA3B4C5FF);
	}
	else
	{
        for(new t; t != 19; t++) TextDrawShowForPlayer(playerid, RegisterTD[t]);
        for(new p; p != 1; p++) PlayerTextDrawShow(playerid, RegName[playerid][p]);
        SelectTextDraw(playerid, 0xA3B4C5FF);
	}
	mysql_free_result();
	return true;
}

publics: SetPlayerCriminal(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid))
	{
		PlayerInfo[playerid][pCrimes] += 1;
		new pizdezturned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new wantedmes[128];
		new points = WantedPoints[playerid];
		strmid(PlayerCrime[playerid][pAccusedof], reason, 0, strlen(reason), 255);
		GetPlayerName(playerid, pizdezturned, sizeof(pizdezturned));
		if (declare == 255)
		{
			format(turner, sizeof(turner), "未知");
			strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
		}
		else
		{
			if(IsPlayerConnected(declare))
			{
				GetPlayerName(declare, turner, sizeof(turner));
				strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
				strmid(PlayerCrime[declare][pBplayer], pizdezturned, 0, strlen(pizdezturned), 255);
				strmid(PlayerCrime[declare][pAccusing], reason, 0, strlen(reason), 255);
			}
		}
		if(!IsACop(playerid) || !IsAArm(playerid))
		{
			if(PlayerInfo[playerid][pWantedLevel] <= 6)
			{
				format(turnmes, sizeof(turnmes), "― 你犯罪了: [ %s ]. 报告人: %s.",reason,turner);
				SetPlayerWantedLevel(playerid,WantedLevel[playerid] += 1);
				WantedLevel[playerid] += 1;
				PlayerInfo[playerid][pWantedLevel] +=1;
				SendClientMessage(playerid, -1, turnmes);
			}
			if(points > 0)
			{
				new yesno;
				if(points == 1) { WantedLevel[playerid] = 1; yesno = 1; WantedTime[playerid] = 300; }
				else if(points == 2) { WantedLevel[playerid] = 2; yesno = 1; WantedTime[playerid] = 600; }
				else if(points == 3) { WantedLevel[playerid] = 3; yesno = 1; WantedTime[playerid] = 900; }
				else if(points == 4) { WantedLevel[playerid] = 4; yesno = 1; WantedTime[playerid] = 1200; }
				else if(points == 5) { WantedLevel[playerid] = 5; yesno = 1; WantedTime[playerid] = 1500; }
				else if(points >= 6) { WantedLevel[playerid] = 6; yesno = 1; WantedTime[playerid] = 1800; }
				if(WantedLevel[playerid] >= 1){		  }
				if(yesno)
				{
					format(wantedmes, sizeof(wantedmes), "― 你的通缉等级: %i", WantedLevel[playerid]);
					SendClientMessage(playerid, -1, wantedmes);
					SetPlayerWantedLevel(playerid, WantedLevel[playerid]);
					foreach(new i : Player)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerInfo[i][pMember] == 1 ||PlayerInfo[i][pLeader] == 1 || PlayerInfo[i][pMember] == 9 ||PlayerInfo[i][pLeader] == 9 || PlayerInfo[i][pMember] == 2 ||PlayerInfo[i][pLeader] == 2 || PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pLeader] == 3 || PlayerInfo[i][pMember] == 19 || PlayerInfo[i][pLeader] == 19 || PlayerInfo[i][pMember] == 20 || PlayerInfo[i][pLeader] == 20)
							{
								format(cbjstore, sizeof(turnmes), "对讲机: 报告人: %s. 犯罪: %s. 嫌疑人: %s",turner,reason,pizdezturned);
								SendClientMessage(i, 0xFEBC41AA, cbjstore);
							}
						}
					}
				}
			}
		}
	}
	return true;
}

stock OtherTimer()
{
	new string[128];
	GetMoney();
	foreach(new i : Player)
	{
		if(CellTime[i] > 0)
		{
			if (CellTime[i] == cchargetime)
			{
				CellTime[i] = 1;
				if(Mobile[Mobile[i]] == i) CallCost[i] = CallCost[i]+callcost;
				CellTime[i] = CellTime[i] +1;
				if (Mobile[Mobile[i]] ==  MAX_SLOTS && CellTime[i] == 5)
				{
					if(IsPlayerConnected(Mobile[i]))
					{
						format(string, sizeof(string), " %s 打电话",Name(Mobile[i]));
						ProxDetector(30.0, Mobile[i], string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
			if(CellTime[i] == 0 && CallCost[i] > 0)
			{
				format(string, sizeof(string), "~w~Phone~n~~r~%i", CallCost[i]);
				PlayerInfo[i][pCash] -= CallCost[i];
				GameTextForPlayer(i, string, 5000, 1);
				CallCost[i] = 0;
			}
		}
	}
	return true;
}

stock PayDayTime()
{
	Timer[5] = gettime()+300;
    for(new d = 1; d <= TOTALGZ; d++)
	{
		if(GZInfo[d][gFrakVlad] == 12) TotalGzB++;
		if(GZInfo[d][gFrakVlad] == 13) TotalGzV++;
		if(GZInfo[d][gFrakVlad] == 15) TotalGzG++;
		if(GZInfo[d][gFrakVlad] == 17) TotalGzA++;
		if(GZInfo[d][gFrakVlad] == 18) TotalGzR++;
	}
	for(new h = 1; h <= TotalHouse; h++)
	{
		if(HouseInfo[h][hKlass] == 0) HouseInfo[h][hTakings] -= 50;
		else if(HouseInfo[h][hKlass] == 1) HouseInfo[h][hTakings] -= 100;
		else if(HouseInfo[h][hKlass] == 2) HouseInfo[h][hTakings] -= 150;
		else if(HouseInfo[h][hKlass] == 3) HouseInfo[h][hTakings] -= 200;
		else if(HouseInfo[h][hKlass] == 4) HouseInfo[h][hTakings] -= 300;
		if(HouseInfo[h][hTakings] <= 0 && HouseInfo[h][hOwned] == 1)
		{
			new housecash = HouseInfo[h][hValue];
			format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pPhousekey = '799',pHousecash = '%d', pText = '1' WHERE name = '%s'",housecash,HouseInfo[h][hOwner]);
			mysql_query(YCMDstr);
			HouseInfo[h][hHel] = 0;
			HouseInfo[h][hLock] = 1;
			HouseInfo[h][hOwned] = 0;
			strmid(HouseInfo[h][hOwner], "The State", 0, strlen("The State"), 255);
			foreach(Player,i)
            {
                if(PlayerInfo[i][pPhousekey2] == h)
                {
                    new name[64];
				    PlayerInfo[i][pPhousekey2] = 799;
				    GetPlayerName(i,name,sizeof(name));
				    SendServerMessage(i, "你住的房屋被业主出售给国家.");
				    format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pPhousekey2 = '799' WHERE Name = '%s'",name);
			    }
	        }
			BuyHouse(h);
			SaveProperty(h);
		}
	}
	for(new h = 1; h <= TotalHouse; h++) SaveProperty(h);
	FracBank[4] += TotalGzB*100;
	FracBank[5] += TotalGzV*100;
	FracBank[6] += TotalGzG*100;
	FracBank[8] += TotalGzR*100;
	FracBank[7] += TotalGzA*100;
	SetOtherInt("FracBank[4]", FracBank[4]); SetOtherInt("FracBank[5]", FracBank[5]); SetOtherInt("FracBank[6]", FracBank[6]);
	SetOtherInt("FracBank[8]", FracBank[6]); SetOtherInt("FracBank[7]", FracBank[7]);
	TotalGzR = 0;
	TotalGzA = 0;
	TotalGzB = 0;
	TotalGzG = 0;
	TotalGzV = 0;
	for(new h = 1; h <= TOTALBIZZ;h++)
	{
		switch(BizzInfo[h][bMafia])
    	{
    		case TEAM_LCN:
			{
				MafiaBank[0] += BizzInfo[h][bTill]*3;
				SetOtherInt("MafiaBank[0]", MafiaBank[0]);
			}
	    	case TEAM_YAKUZA:
			{
				MafiaBank[2] += BizzInfo[h][bTill]*3;
				SetOtherInt("MafiaBank[2]", MafiaBank[2]);
			}
			case TEAM_RM:
			{
				MafiaBank[1] += BizzInfo[h][bTill]*3;
				SetOtherInt("MafiaBank[1]", MafiaBank[1]);
			}
		}
	}
	new gonkapaint = Random(0,3);
	switch(gonkapaint)
	{
	    case 0:
		{
            StartDeathmatchRound();
		}
		case 1:
		{
			format(YCMDstr, sizeof(YCMDstr), "警告! 在4分钟内开始彩弹比赛. ( /gps > [8] > [1] )");
			OOCOff(0x73B461FF,YCMDstr);
			Timer[10] = gettime()+2;
			PaintballRound = 0;
			PaintBallGo = 0;
		}
		case 2:
		{
			format(YCMDstr, sizeof(YCMDstr), "警告! 在6分钟内开始'史诗般的比赛' ( /gps > [8] > [2] )");
			OOCOff(0x73B461FF,YCMDstr);
			EndingRaceRound = 0;
			Timer[12] = 0;
			RacingPlayers = 0;
			strmid(NickPobed,"-", 0, strlen("-"), 32);
			strmid(NickPobed2,"-", 0, strlen("-"), 32);
			strmid(NickPobed3,"-", 0, strlen("-"), 32);
			strmid(NickPobed4,"-", 0, strlen("-"), 32);
			strmid(NickPobed5,"-", 0, strlen("-"), 32);
			strmid(NickPobed6,"-", 0, strlen("-"), 32);
			strmid(NickPobed7,"-", 0, strlen("-"), 32);
			strmid(NickPobed8,"-", 0, strlen("-"), 32);
			strmid(NickPobed9,"-", 0, strlen("-"), 32);
			strmid(NickPobed10,"-", 0, strlen("-"), 32);
			Timer[12] = gettime()+2;
			RaceGo = 0;
		}
		case 3:
		{
			format(YCMDstr, sizeof(YCMDstr), "警告! 在6分钟内开始'史诗般的比赛' ( /gps > [8] > [2] )");
			OOCOff(0x73B461FF,YCMDstr);
			EndingRaceRound = 0;
			Timer[12] = 0;
			RacingPlayers = 0;
			strmid(NickPobed,"-", 0, strlen("-"), 32);
			strmid(NickPobed2,"-", 0, strlen("-"), 32);
			strmid(NickPobed3,"-", 0, strlen("-"), 32);
			strmid(NickPobed4,"-", 0, strlen("-"), 32);
			strmid(NickPobed5,"-", 0, strlen("-"), 32);
			strmid(NickPobed6,"-", 0, strlen("-"), 32);
			strmid(NickPobed7,"-", 0, strlen("-"), 32);
			strmid(NickPobed8,"-", 0, strlen("-"), 32);
			strmid(NickPobed9,"-", 0, strlen("-"), 32);
			strmid(NickPobed10,"-", 0, strlen("-"), 32);
			Timer[12] = gettime()+2;
			RaceGo = 0;
		}
  	}
	foreach(new i: Player)
	{
        if(PlayerInfo[i][pTimeBP] >= 20)
        {
	        if(!IsPlayerConnected(i) || PlayerInfo[i][pLogin] == 0) continue;
 		    new newhour,newminute,newsecond;
    	    gettime(newhour, newminute, newsecond);
    	    format(YCMDstr, sizeof(YCMDstr), "― 确切时间: {FF9900}%d:00{ffffff} 小时", newhour);
	    	SendClientMessage(i, -1, YCMDstr);
		    GameTextForPlayer(i, "PayDay", 5000, 1);
		    PlayerPlaySound(i,5203,0.0,0.0,0.0);
		    PayDay(i);
		    GetExp(i);
	    }
	    else SendServerMessage(i, "要获得发薪日,你必须至少游戏20分钟(AFK不算)!");
	}
	for(new i = 1; i <= TOTALBIZZ; i++)
	{
	    if(strcmp(BizzInfo[i][bOwner],"None",true))
	    {
	    	if(BizzInfo[i][bMoney] < 100 || BizzInfo[i][bLock] == 1 && BizzInfo[i][bLockTime] >= 12) ClearBizz(i);
	    	else
		    {
				new playerid;
	  			sscanf(BizzInfo[i][bOwner], "u", playerid);
		       	BizzPay[i] = 0;
		        if(BizzInfo[i][bProduct] < 100 || BizzInfo[i][bLic] == 0)
				{
				    if(IsPlayerConnected(playerid))
					{
						if(BizzInfo[i][bLockTime] == 0) SetPVarInt(playerid, "_GetBizz_", 1);
						BizzInfo[i][bLock] = 1;
						SetBizzInt(i, "block", BizzInfo[i][bLock]);
					}
				}
				if(BizzInfo[i][bLock] == 1)
				{
					BizzInfo[i][bLockTime]++;
					SetBizzInt(i, "locktime", BizzInfo[i][bLockTime]);
				}
				if(BizzInfo[i][bLockTime] > 1 && BizzInfo[i][bLockTime] < 12)
				{
					if(IsPlayerConnected(playerid)) SetPVarInt(playerid, "GetBizz_", 1);
				}
	  			BizzInfo[i][bMoney] -= 100;
				SetBizzInt(i, "money", BizzInfo[i][bMoney]);
		    }
    	}
	}
}

stock GetExp(playerid)
{
	PlayerInfo[playerid][pZakonp] ++;
	if(ExpUping == 0) PlayerInfo[playerid][pExp] ++;
	else
	{
	    PlayerInfo[playerid][pExp] += 2;
	    SendServerMessage(playerid, "经验+2!");
    }
	if(PlayerInfo[playerid][pExp] >= PlayerInfo[playerid][pLevel]*4)
	{
 		SendServerMessage(playerid, "祝贺你的等级提高了!");
   		PlayerInfo[playerid][pLevel]++;
	  	PlayerInfo[playerid][pExp] = 0;
	  	DollahScoreUpdate(playerid);
	}
	return true;
}

stock TimersAll()
{
    new newhour,newminute,newsecond;
    gettime(newhour, newminute, newsecond);
    if ((newhour > ghour) || (newhour == 0 && ghour == 23))
    {
        ghour = newhour;
        PayDayTime();
        SetWorldTime(newhour);
    }
}

stock Fresh()
{
	if(VhodVozm > 0) VhodVozm--;
	if(war > 0) war -=1;
	TimersAll();
	new string[180];
	new tmphour;
	new tmpminute;
	new tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	foreach(new i : Player)
	{
	    if(IsPlayerConnected(i))
	    {
	    	if(PlayerInfo[i][pLogin] == 1)
	    	{
	    	    if(GetPVarInt(i, "TimeBus") > 0)
				{
				    SetPVarInt(i, "TimeBus", GetPVarInt(i, "TimeBus") - 1);
		    		format(string,32,"~r~%i",GetPVarInt(i, "TimeBus"));
			    	GameTextForPlayer(i, string, 2000, 6);
				    if(GetPVarInt(i, "TimeBus") == 0)
				    {
				        DeletePVar(i, "TimeBus");
						new type = GetPVarInt(i, "TypeBus"), p = pPressed[i];
						SetPVarInt(i, "BusStop", 1);
						if(type == 1) SetPlayerRaceCheckpoint(i,0,BusCityLS[p][0],BusCityLS[p][1],BusCityLS[p][2],BusCityLS[p][3],BusCityLS[p][4],BusCityLS[p][5],5.0);
						if(type == 2) SetPlayerRaceCheckpoint(i,0,BusCitySF[p][0],BusCitySF[p][1],BusCitySF[p][2],BusCitySF[p][3],BusCitySF[p][4],BusCitySF[p][5],5.0);
						if(type == 3) SetPlayerRaceCheckpoint(i,0,BusCityLV[p][0],BusCityLV[p][1],BusCityLV[p][2],BusCityLV[p][3],BusCityLV[p][4],BusCityLV[p][5],5.0);
						if(type == 4) SetPlayerRaceCheckpoint(i,0,BusSchool[p][0],BusSchool[p][1],BusSchool[p][2],BusSchool[p][3],BusSchool[p][4],BusSchool[p][5],5.0);
						if(type == 5) SetPlayerRaceCheckpoint(i,0,BusLS[p][0],BusLS[p][1],BusLS[p][2],BusLS[p][3],BusLS[p][4],BusLS[p][5],5.0);
				    }
				}
				if(GetPVarInt(i, "BusTime") > 0)
				{
				    SetPVarInt(i, "BusTime", GetPVarInt(i, "BusTime") - 1);
			    	format(string,32,"~r~%d",GetPVarInt(i, "BusTime") - 1);
			    	GameTextForPlayer(i, string, 2000, 6);
			    	if(GetPVarInt(i, "BusTime") == 0)
			    	{
		   				format(YCMDstr, sizeof(YCMDstr), "―  工作日结束了. 你获得了: %i 美元", GetPVarInt(i, "BusMoney"));
	    				SendClientMessage(i, -1, YCMDstr);
			    	    PlayerInfo[i][pCash] += GetPVarInt(i, "BusMoney");
			    	    SetVehicleToRespawn(GetPVarInt(i, "RentBus"));
			    	    DeletePVar(i, "BusTime");
			    	    DeletePVar(i, "TypeBus");
			    	    DeletePVar(i, "PriceBus");
						DeletePVar(i, "BusStop");
						DeletePVar(i, "BusMoney");
						DeletePVar(i, "RentBus");
						pPressed[i] = 0;
			    	}
				}
				switch(AFK[i])
				{
					case -1: AFK[i] = 1;
	   				case  0: AFK[i] = -1;
				}
				if(AFK[i] >= 1)
				{
	    			AFK[i]++;
				}
				if(ProductTime[i] > 0 && GetPVarInt(i, "ProductID") > 0)
				{
				    ProductTime[i]--;
			    	format(string,32,"~r~%d",ProductTime[i]);
			    	GameTextForPlayer(i, string, 2000, 6);
				    if(ProductTime[i] == 0)
				    {
				        SendServerMessage(i, "时间已过,订单执行已取消");
				        ProductInfo[GetPVarInt(i, "ProductID")][pStatus] = false;
				        DeletePVar(i, "ProductID");
				    }
				}
				FloodKill{i} = 0;
				if(PlayerInfo[i][pAutoTime] > 0) PlayerInfo[i][pAutoTime]--;
				if(jackcar[i] > 0)
		        {
			        jackcar[i] -=1;
			        if(jackcar[i] == 1)
			        {
				        jackcar[i] = 0;
				        new nearveh = GetNearestVehicle(i);
				        new carid = nearveh;
				        new Float:cx,Float:cy,Float:cz;
				        GetVehiclePos(carid, cx, cy, cz);
				        new randd = random(12);
				        if(PlayerToPoint(4.0, i, cx, cy, cz))
				        {
				            switch(randd)
					        {
                            case 0..4:
					            {
							        UnLockCar(carid);
							        IsLocked[carid] = 0;
							        TogglePlayerControllable(i, 1);
              	                    ClearAnimations(i);
        	                        ApplyAnimation(i,"PED","IDLE_tired",4.1,0,1,1,0,1);
							        GameTextForPlayer(i, "~g~Un Locked", 5000, 6);
							        SendServerMessage(i,"你已经成功破解了车锁. ( 上车然后进入 /dropcar )");
							        if(IsACop(i)) format(string, sizeof(string), "偷车贼 %s 成功破解了车锁", Name(i));
							        else format(string, sizeof(string), "陌生人成功破解了车锁");
							        ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						        }
					        default:
						        {
							        TogglePlayerControllable(i, 1);
                                    ClearAnimations(i);
        	                        ApplyAnimation(i,"PED","IDLE_tired",4.1,0,1,1,0,1);
							        PlayerInfo[i][pOtmbI4ka]--;
							        SendErrorMessage(i,"破解车锁失败!");
							        if(IsACop(i)) format(string, sizeof(string), "偷车贼 %s 破解车锁失败", Name(i));
							        else format(string, sizeof(string), "陌生人破解车锁失败");
							        ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						        }
					        }
				        }
			        }
		        }
		    	if(RaceBus[i] != 0)
		    	{
		    		if(RaceBus[i] == 1)
					{
						format(YCMDstr,sizeof(YCMDstr),"~w~The fare: ~r~%d$~w~~n~Route: ~r~5",SummaRace[i]);
						PlayerTextDrawSetString(i, BusInfo[i][1], YCMDstr);
					}
					if(RaceBus[i] == 2)
					{
					    format(YCMDstr,sizeof(YCMDstr),"~w~The fare: ~r~%d$~w~~n~Route: ~r~5",SummaRace[i]);
						PlayerTextDrawSetString(i, BusInfo[i][1], YCMDstr);
					}
					format(YCMDstr,sizeof(YCMDstr),"%d",Zarabotok[i]),PlayerTextDrawSetString(i, BusInfo[i][0], YCMDstr);
		    	}
       			if(GetPVarInt(i,"JdatTime") >=2 )
				{
					SetPVarInt(i,"JdatTime",GetPVarInt(i,"JdatTime") - 1);
					TogglePlayerControllable(i,0);
   				}
				if(GetPVarInt(i,"JdatTime") == 1)
				{
					SetPVarInt(i,"JdatTime",GetPVarInt(i,"JdatTime") - 1);
					TogglePlayerControllable(i,1);
				}
				if(kostiKos[i]>0)
				{
				    kostiKos[i]--;
				    ClearAnim(i);
				    if(kostiKos[i]==0)
				    {
				        if(IsPlayerAttachedObjectSlotUsed(i,7)) RemovePlayerAttachedObject(i,7);
				        ApplyAnimation(i, "BD_FIRE", "BD_Fire1", 4.1, 0, 0, 0, 0, 1, 1);
				        kostiKos[i]=0;
				    }
				}
				NoRoof(i);
				new tttgtg;
				new strr1[256];
				tttgtg = GetPlayerAmmo(SpecAd[i]);
				new Float:hppp;
				new Float:aermor;
				GetPlayerArmour(SpecAd[i],aermor);
				GetPlayerHealth(SpecAd[i],hppp);
				new fps = 40 + random(60);
				if(PlayerInfo[i][pAdministration228] >= 2)
				{
					if(IsPlayerInAnyVehicle(SpecAd[i]))
					{
						new Float:health;
						new playersip[20];
						GetPlayerIp(SpecAd[i],playersip,sizeof(playersip));
						GetVehicleHealth(GetPlayerVehicleID(SpecAd[i]),health);
						format(strr1, sizeof(strr1),"Ping: %i~n~~r~Speed: ~w~%i~n~~g~Armour: ~w~%.0f~n~~g~Health: ~w~%.0f~n~~b~Ammo: ~w~%i~n~~g~$ ~w~Cash: ~g~%i~n~~g~$ ~w~Bank: ~g~%i~n~~r~Scan FPS: %i~n~Car HP: %.0f",GetPlayerPing(SpecAd[i]),SpeedVehicle(SpecAd[i]),aermor,hppp,tttgtg,PlayerInfo[SpecAd[i]][pCash],PlayerInfo[SpecAd[i]][pBank],fps,health);
						PlayerTextDrawSetString(i, SpecTD[14][i], strr1);
						format(strr1, sizeof(strr1), "%d", GetPVarInt(i, "SpecID"));
						PlayerTextDrawSetString(i, SpecTD[9][i], strr1);
					}
					if(!IsPlayerInAnyVehicle(SpecAd[i]))
					{
						new playersip[20];
						GetPlayerIp(SpecAd[i],playersip,sizeof(playersip));
						format(strr1, sizeof(strr1),"Ping: %i~n~~r~Speed: ~w~%i~n~~g~Armour: ~w~%.0f~n~~g~Health: ~w~%.0f~n~~b~Ammo: ~w~%i~n~~n~~g~$ ~w~Cash: ~g~%i~n~~g~$ ~w~Bank: ~g~%i~n~~n~~r~Scan FPS: %i",GetPlayerPing(SpecAd[i]),SpeedVehicle(SpecAd[i]),aermor,hppp,tttgtg,PlayerInfo[SpecAd[i]][pCash],PlayerInfo[SpecAd[i]][pBank],fps);
						PlayerTextDrawSetString(i, SpecTD[14][i], strr1);
						format(strr1, sizeof(strr1), "%d", GetPVarInt(i, "SpecID"));
						PlayerTextDrawSetString(i, SpecTD[9][i], strr1);
					}
				}
				if(PlayerAFK[i] == 0 || GetPlayerState(i) == PLAYER_STATE_SPECTATING)
				{
					PlayerAFKTime[i][0] ++;
					if(PlayerAFKTime[i][0] <= MAX_AFK_TIME) format(YCMDstr,sizeof(YCMDstr),"AFK {73B461}( %s )",Convert(PlayerAFKTime[i][0]));
					else format(YCMDstr,sizeof(YCMDstr),"AFK {73B461}( 600s+ )");
					SetPlayerChatBubble(i, YCMDstr, COLOR_WHITE, 30.0, 3000);
				}
				PlayerAFK[i] = 0;
		        if(GetPVarInt(i, "BrosilBBall") > 0)  SetPVarInt(i, "BrosilBBall", -1);
	        	if(GetPVarInt(i, "SMOKE") > gettime())
	            {
		            switch(GetPVarInt(i, "SMOKE")-gettime())
		            {
		                case 60, 45, 30, 15:
		                {
		                    format(YCMDstr, sizeof(YCMDstr), "%s 弹了弹烟灰", Name(i));
				            SetPlayerChatBubble(i,YCMDstr,COLOR_PURPLE,30.0,10000);
	                    }
		            }
	            }
	            if(GetPVarInt(i, "SMOKE") == gettime())
                {
	                DeletePVar(i, "SMOKE");
	                DeletePVar(i, "ZatJ");
                    RemovePlayerAttachedObject(i,3);
	                format(YCMDstr, sizeof(YCMDstr), "%s 扔掉烟头", Name(i));
		            ProxDetector(30.0, i, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		            SetPlayerChatBubble(i,YCMDstr,COLOR_PURPLE,30.0,10000);
	            }
				if(PlayerInfo[i][pNarcoLomka] > 0) { new ttt = random(2); if(ttt == 1) { ApplyAnimation(i, "CRACK", "crckdeth1", 4.0, 0, 0, 1, 1, 1); } else { ApplyAnimation(i, "CRACK", "crckdeth3", 4.0, 0, 0, 1, 1, 1); } }
				InitLockDoors(i);
				if(TieTime[i] > 0) TieTime[i]--;
				if(Floods[i] > 0) Floods[i] -=1;
				if(AdvertTime[i] > 0) AdvertTime[i] -=1;
				if(clearanim[i] > 0) clearanim[i] --;
				if(Flood[i] > 0) Flood[i] -=1;
				if(tmphour >= 12 && tmpminute == 10 && tmpsecond == 0) startaddiction[i] = 1;
				if(PlayerInfo[i][pDrugtime] > 0) PlayerInfo[i][pDrugtime] = PlayerInfo[i][pDrugtime] - 1;
				if(PlayerInfo[i][pMuteTime] > 0 && PlayerInfo[i][pMuted] == 1)
				{
					PlayerInfo[i][pMuteTime] -= 1;
					if(PlayerInfo[i][pMuteTime] == 0)
					{
						PlayerInfo[i][pMuted] = 0;
						SendSyntaxMessage(i, "你的禁言接触了,请遵守规则");
					}
				}
				if(PlayerInfo[i][pJailed] > 0)
				{
					if(PlayerInfo[i][pJailTime] > 0) PlayerInfo[i][pJailTime]--;
					if(PlayerInfo[i][pJailTime] <= 0)
					{
						if(PlayerInfo[i][pJailed] == 1)
						{
							if(PlayerInfo[i][pMestoJail] == 1)
							{
                                SetPlayerVirtualWorld(i, 0);
			                    SetPlayerInterior(i, 0);
			                    Q_SetPlayerPos(i,-1561.2036,481.8062,7.1797);
							}
							if(PlayerInfo[i][pMestoJail] == 2)
							{
                                SetPlayerVirtualWorld(i, 0);
			                    SetPlayerInterior(i, 0);
			                    Q_SetPlayerPos(i,-1561.2036,481.8062,7.1797);
							}
							if(PlayerInfo[i][pMestoJail] == 3)
							{
                                SetPlayerVirtualWorld(i, 0);
			                    SetPlayerInterior(i, 0);
			                    Q_SetPlayerPos(i,-1561.2036,481.8062,7.1797);
							}
						}
						else if(PlayerInfo[i][pJailed] == 4)
						{
							SetPlayerWorldBounds(i,20000.0000,-20000.0000,20000.0000,-20000.0000);
							SetPlayerInterior(i, 0);
							Q_SetPlayerPos(i, 90.2101,1920.4854,17.9422);
						}
						PlayerInfo[i][pJailTime] = 0;
						PlayerInfo[i][pJailed] = 0;
						SendServerMessage(i, "你出狱了!请遵守法律法规!");
						PlayerInfo[i][pMestoJail] = 0;
						WantedLevel[i] = 0;
						WantedTime[i] = 0;
						PlayerInfo[i][pWantedLevel] = 0;
						WantedPoints[i] = 0;
						SetPlayerWantedLevel(i, 0);
						SetPlayerVirtualWorld(i, 0);
						GameTextForPlayer(i,"~g~Freedom", 5000, 1);
					}
				}
				if(JobCarTime[i] <= 16 && JobCarTime[i] >= 1)
				{
					JobCarTime[i]--;
					format(string,sizeof(string), "~r~%i",JobCarTime[i] - 1);
					GameTextForPlayer(i, string, 2000, 6);
				}
				if(PlayerTazeTime[i] >= 1)
				{
					PlayerTazeTime[i] += 1;
					if(PlayerTazeTime[i] == 15)
					{
						PlayerTazeTime[i] = 0;
						TogglePlayerControllable(i, 1);
					}
					else
					{
						TogglePlayerControllable(i, 1);
					}
				}
				if(PlayerCuffed[i] == 1)
				{
					if(PlayerCuffedTime[i] <= 0)
					{
						TogglePlayerControllable(i, 1);
						PlayerCuffed[i] = 0;
						PlayerCuffedTime[i] = 0;
						PlayerTazeTime[i] = 1;
					}
					else
					{
						PlayerCuffedTime[i] -= 1;
					}
				}
				if(PlayerCuffed[i] == 2)
				{
					if(PlayerCuffedTime[i] <= 0)
					{
						TogglePlayerControllable(i, 1);
						PlayerCuffed[i] = 0;
						PlayerCuffedTime[i] = 0;
					}
					else
					{
						PlayerCuffedTime[i] -= 1;
					}
				}
                if(Trenag[i]==2 && kol[i]>=0)
		        {
		            kol[i]--;
		            switch(kol[i])
		            {
		                case 0: { ApplyAnimation( i, "GYMNASIUM", "gym_bike_pedal", 4.1, 1, 0, 0, 1, 1 ); }
		                case 1: { ApplyAnimation( i, "GYMNASIUM", "gym_bike_slow", 4.1, 1, 0, 0, 1, 1 ); }
                        case 2: { ApplyAnimation( i, "GYMNASIUM", "gym_bike_fast", 4.1, 1, 0, 0, 1, 1 ); }
		                case 3: { ApplyAnimation( i, "GYMNASIUM", "gym_bike_faster", 4.1, 1, 0, 0, 1, 1 ); PlayerInfo[i][pVelo]++; }
                    }
		        }
                if(Trenag[i]==4 && kol[i]>=0)
		        {
	                kol[i]--;
		            switch(kol[i])
		            {
		                case 0: { ApplyAnimation( i, "GYMNASIUM", "gym_tread_walk", 4.1, 1, 0, 0, 1, 1 ); }
		                case 1: { ApplyAnimation( i, "GYMNASIUM", "gym_tread_jog", 4.1, 1, 0, 0, 1, 1 ); }
		                case 2: { ApplyAnimation( i, "GYMNASIUM", "gym_tread_sprint", 4.1, 1, 0, 0, 1, 1 ); PlayerInfo[i][pBeg]++; }
		            }
		        }
				if(GetPlayerPing(i) > 2000)
				{
					format(string,sizeof(string),"{ffa500}― [ERROR 009]: {808080}%s[%d] PING 过高 [Ping:%d]",Name(i),i,GetPlayerPing(i));
					ABroadCast(-1,string,1);
					SendErrorMessage(i, "使用作弊程序. {ff0000}(#PING)");
					GKick(i);
				}
				new Float:POS[3],vehicleid = GetPlayerVehicleID(i);
				if(TaxiJobStarted[i] && IsTaxiCar(vehicleid) && GetPlayerState(i) == PLAYER_STATE_DRIVER)
				{
					if(IsPlayerConnected(i) && PlayerCalledTaxi[i])
					{
						GetPlayerPos(i, POS[0], POS[1], POS[2]);
						SetPlayerMapIcon(i, i, POS[0], POS[1], POS[2], 0, 0xF0F000FF, MAPICON_GLOBAL);
					}
				}
				new Float:xw, Float:yw, Float:zw;
				GetPlayerVelocity(i,xw,yw,zw);
				if(xw > 2.0 || yw > 2.0)
				{
					Pizdorvanka[i]++;
					if(Pizdorvanka[i] >= 3)
					{
						if(PlayerInfo[i][pAdministration228] == 0)
						{
							Pizdorvanka[i] = 0;
							SendClientMessage(i,-1,"{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Rvanka )");
							format(string,sizeof(string),"{ffa500}― [ERROR 011]: {808080}玩家 %s[%i] 被踢出服务器.",Name(i),i); ABroadCast(-1,string,1);
							GKick(i);
						}
					}
				}
				new Float:xws, Float:yws, Float:zws;
				GetPlayerVelocity(i,xws,yws,zws);
				if(!PlayerInfo[i][pLogin] && (xws > 0 || yws > 0 || zws > 0))
				{
				    SendClientMessage(i,-1,"{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Authorization )");
					format(YCMDstr,sizeof(YCMDstr),"― [A] %s [%i] 没有登陆/注册而被提出服务器.", PlayerInfo[i][pName], i);
					ABroadCast(-1,YCMDstr,1);
					GKick(i);
				}
				new ip[16];
				GetPlayerIp(i, ip, sizeof(ip));
				new carid = GetPlayerVehicleID(i);
				SetPVarInt(i, "NewPlayerAmmo", GetPlayerAmmo(i));
				if(GetPVarInt(i, "NewPlayerAmmo") != GetPVarInt(i, "PlayerAmmo"))
				{
					OnPlayerAmmoChange(i, GetPVarInt(i, "NewPlayerAmmo"), GetPVarInt(i, "PlayerAmmo"));
					SetPVarInt(i, "PlayerAmmo", GetPVarInt(i, "NewPlayerAmmo"));
				}
				GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
				clearanim[i] -=1;
				if(clearanim[i] == 10) ApplyAnimation(i, "PED", "getup_front", 4.1, 0, 1, 1, 1, 1, 1);
				if(clearanim[i] == 0) ApplyAnimation(i, "CARRY", "crry_prtial",4.0,0,0,0,0,0,1);
				if(GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK)
				{
					format(YCMDstr,sizeof(YCMDstr),"{ffa500}― [ERROR 013]: {808080}玩家 %s[%i] 被踢出服务器,By Jet Pack.",Name(i),i); ABroadCast(-1,YCMDstr,1);
					GKick(i);
				}
				new vehicleID;
				vehicleID = GetPlayerVehicleID(i);
				if(IsPlayerInVehicle(i,vehicleID) && (GetPlayerWeapon(i) == WEAPON_DEAGLE || GetPlayerWeapon(i) == WEAPON_SHOTGSPA || GetPlayerWeapon(i) == WEAPON_SAWEDOFF || GetPlayerWeapon(i) == WEAPON_MINIGUN || GetPlayerWeapon(i) == WEAPON_MP5  ))
				{
					if(GetPlayerState(i) == PLAYER_STATE_DRIVER) SetPlayerArmedWeapon(i,0);
				}
				if(HelpMessage[0][i] == 1 && HelpMessage[1][i] == 1 && HelpMessage[2][i] == 1 && HelpMessage[3][i] == 1 && HelpMessage[4][i] == 1 && HelpMessage[5][i] == 1 && HelpMessage[6][i] == 1 && HelpMessage[7][i] == 1 && HelpMessage[8][i] == 1 && HelpMessage[9][i] == 1 && HelpMessage[10][i] == 1)
		        {
	    	        PlayerTextDrawHide(i,HelpText[0][i]);
  	                PlayerTextDrawHide(i,HelpText[1][i]);
	    	        PlayerTextDrawHide(i,HelpText[2][i]);
		        }
				if(PlayerInfo[i][pWantedLevel] > 6) PlayerInfo[i][pWantedLevel] = 6;
				if(WantedLevel[i] > 6) WantedLevel[i] = 6;
				if(PlayerInfo[i][pZakonp] > 100) PlayerInfo[i][pZakonp] = 100;
				if(PlayerInfo[i][pZakonp] < -100) PlayerInfo[i][pZakonp] = -100;
			}
		}
	}
	if(tmphour == 00 && tmpminute == 00 && tmpsecond == 00)
	{
		mysql_query("UPDATE `"TABLE_ACCOUNT"` SET pChas = '0',pMin = '0',pOnlineLid = '00:00'");
		foreach(new i : Player)
		{
			PlayerInfo[i][pChas] = 0;
			PlayerInfo[i][pMin] = 0;
			strmid(PlayerInfo[i][pOnlineLid],"00:00", 0, strlen("00:00"), 255);
		}
	}
	if(tmphour == 04 && tmpminute == 59 && tmpsecond == 00)
	{
  		foreach(new i: Player) OnPlayerUpdateAc(i);
	}
	for(new i = 1; i <= 5; i++)
	{
		new j = i - 1;
		if(MafiaFuelTime[j] > 0) MafiaFuelTime[j]--;
	    if(MafiaInfo[3][mFuel][j] < 220 && MafiaFuelTime[j] == 0)
	    {
	        MafiaInfo[3][mFuel][j] += random(30) + 50;
	        MafiaFuelTime[j] = random(60) + 100;
	        format(MafiaInfo[3][mFuels], 128, "%i, %i, %i, %i, %i", MafiaInfo[3][mFuel][0],
	        MafiaInfo[3][mFuel][1], MafiaInfo[3][mFuel][2], MafiaInfo[3][mFuel][3], MafiaInfo[3][mFuel][4]);
	        SetMafiaStr(3, "fuel", MafiaInfo[3][mFuels]);
         	format(string, 50, "井里的燃料: {FF9900}%i{ffffff} 升", MafiaInfo[3][mFuel][j]);
         	Update3DTextLabelText(tPickup[6+j], 0xffffffff, string);
	    }
  	}
	return true;
}

publics: AdminStats(playerid,targetid)
{
	if(IsPlayerConnected(playerid) && IsPlayerConnected(targetid))
	{
		new name[MAX_PLAYERS];
		GetPlayerName(targetid, name, sizeof(name));
		new kicka = PlayerInfo[targetid][pKicka];
		new bana = PlayerInfo[targetid][pBana];
		new warna = PlayerInfo[targetid][pWarna];
		new pma = PlayerInfo[targetid][pMpa];
		new coordsstring[156];
		new msg[] = "{FFFFFF}管理员信息: {008B00}%s\n\n{F5F5DC}踢出:\t\t{008B00}%i {F5F5DC}时间\n{F5F5DC}封禁:\t\t{008B00}%i {F5F5DC}时间\n{F5F5DC}警告:\t\t{008B00}%i {F5F5DC}时间\n{F5F5DC}报告:\t{008B00}%i {F5F5DC}时间";
		format(coordsstring, 500, msg, name,kicka,bana,warna,pma);
		ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}信息",coordsstring,"确定","");
	}
}

publics: ShowStats(playerid,targetid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new atext[32];
		if(PlayerInfo[targetid][pSex] == 1) { atext = "男性"; }
		else if(PlayerInfo[targetid][pSex] == 2) { atext = "女性"; }
		new ttext[32];
		if(PlayerInfo[targetid][pMember] == 0 && PlayerInfo[targetid][pLeader] == 0) { ttext = "未知"; }
		else if(PlayerInfo[targetid][pMember] == 1 || PlayerInfo[targetid][pLeader] == 1) { ttext = "LSPD"; }
		else if(PlayerInfo[targetid][pMember] == 2 || PlayerInfo[targetid][pLeader] == 2) { ttext = "FBI"; }
		else if(PlayerInfo[targetid][pMember] == 3 || PlayerInfo[targetid][pLeader] == 3) { ttext = "SA 监狱"; }
		else if(PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4) {
			if(PlayerInfo[targetid][pJobHeal] == 1) { ttext = "医院"; }
			else if(PlayerInfo[targetid][pJobHeal] == 2) { ttext = "医院"; }
			else if(PlayerInfo[targetid][pJobHeal] == 3) { ttext = "医院"; } }
		else if(PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5) { ttext = "LCN"; }
		else if(PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6) { ttext = "山口组"; }
		else if(PlayerInfo[targetid][pMember] == 7 || PlayerInfo[targetid][pLeader] == 7) { ttext = "政府"; }
		else if(PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8) { ttext = "大学"; }
		else if(PlayerInfo[targetid][pMember] == 9 || PlayerInfo[targetid][pLeader] == 9) { ttext = "SFPD"; }
		else if(PlayerInfo[targetid][pMember] == 11 || PlayerInfo[targetid][pLeader] == 11) { ttext = "驾驶学校"; }
		else if(PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 12) { ttext = "巴拉斯"; }
		else if(PlayerInfo[targetid][pMember] == 13 || PlayerInfo[targetid][pLeader] == 13) { ttext = "瓦戈斯"; }
		else if(PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14) { ttext = "俄罗斯黑手党"; }
		else if(PlayerInfo[targetid][pMember] == 15 || PlayerInfo[targetid][pLeader] == 15) { ttext = "格罗夫"; }
		else if(PlayerInfo[targetid][pMember] == 16 || PlayerInfo[targetid][pLeader] == 15) { ttext = "媒体"; }
		else if(PlayerInfo[targetid][pMember] == 17 || PlayerInfo[targetid][pLeader] == 17) { ttext = "阿兹特克"; }
		else if(PlayerInfo[targetid][pMember] == 18 || PlayerInfo[targetid][pLeader] == 18) { ttext = "14K"; }
		else if(PlayerInfo[targetid][pMember] == 19 || PlayerInfo[targetid][pLeader] == 19) { ttext = "军队"; }
		else if(PlayerInfo[targetid][pMember] == 20 || PlayerInfo[targetid][pLeader] == 20) { ttext = "LVPD"; }
		new rangz[30];
		new rabotss[40];
		switch(PlayerInfo[targetid][pJob])
		{
			case 0: rabotss = "失业";
			case 1: rabotss = "送货员";
			case 2: rabotss = "出租车司机";
			case 3: rabotss = "送油司机";
			case 4: rabotss = "公交车司机";
			case 5: rabotss = "矿工";
			case 6: rabotss = "汽修工";
			case 7: rabotss = "卡车司机";
			case 8: rabotss = "偷车贼";
			case 9: rabotss = "教练";
			case 10: rabotss = "长途巴士司机";
		}
		if(PlayerInfo[targetid][pMember] == 0)
		{
			if(PlayerInfo[targetid][pRank] == 0) { rangz = "无"; }
		}
		if(PlayerInfo[playerid][pMember] == 1)
		{
			if(PlayerInfo[targetid][pRank] == 15) { rangz = "局长"; }
			else if(PlayerInfo[targetid][pRank] == 14) { rangz = "代理局长"; }
			else if(PlayerInfo[targetid][pRank] == 13) { rangz = "副局长";}
			else if(PlayerInfo[targetid][pRank] == 12) { rangz = "指挥官"; }
			else if(PlayerInfo[targetid][pRank] == 11) { rangz = "警监"; }
			else if(PlayerInfo[targetid][pRank] == 10) { rangz = "警督"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "警司"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "高级警探"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "中级警探"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "初级警探"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "刑警队队长"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "刑警"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "高级警员"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "正式警员"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "学警"; }
		}
		if(PlayerInfo[targetid][pMember] == 2)
		{
			if(PlayerInfo[targetid][pRank] == 9) { rangz = "局长"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "代理局长"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "副局长"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "科长"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "高级特工"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "初级特工"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "高级探员"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "正式探员"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "实习探员"; }
		}
		if(PlayerInfo[targetid][pMember] == 3)
		{
			if(PlayerInfo[targetid][pRank] == 16) { rangz = "监狱长"; }
			else if(PlayerInfo[targetid][pRank] == 15) { rangz = "代理监狱长"; }
			else if(PlayerInfo[targetid][pRank] == 14) { rangz = "副监狱长"; }
			else if(PlayerInfo[targetid][pRank] == 13) { rangz = "未定";}
			else if(PlayerInfo[targetid][pRank] == 12) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 11) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 10) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "高级督察"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "检察员"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "狱警队队长"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "正式狱警"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "实习狱警"; }
		}
		if(PlayerInfo[targetid][pMember] == 4)
		{
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "院长"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "代理院长"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "副院长"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "心理学家"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "外科医生"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "毒品学专家"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "内科医生"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "骨科医生"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "正式护士"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "实习护士"; }
		}
		if(PlayerInfo[targetid][pMember] == 5)
		{
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "未定"; }
		}
		if(PlayerInfo[targetid][pMember] == 6)
		{
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "未定"; }
		}
		if(PlayerInfo[targetid][pMember] == 7)
		{
			if(PlayerInfo[targetid][pRank] == 7) { rangz = "总统"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "副总统"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "公务员"; }
		}
		if(PlayerInfo[targetid][pMember] == 8)
		{
			if(PlayerInfo[targetid][pRank] == 4) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "未定"; }
		}
		if(PlayerInfo[targetid][pMember] == 9 || PlayerInfo[playerid][pMember] == 16)
		{
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "未定"; }
		}
		if(PlayerInfo[targetid][pMember] == 9)
		{
			if(PlayerInfo[targetid][pRank] == 15) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 14) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 13) { rangz = "未定";}
			else if(PlayerInfo[targetid][pRank] == 12) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 11) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 10) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "未定"; }
		}
		if(PlayerInfo[targetid][pMember] == 11)
		{
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "未定 "; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "未定"; }
		}
		if(PlayerInfo[targetid][pMember] == 12)
		{
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "未定"; }
		}
		if(PlayerInfo[targetid][pMember] == 13)
		{
			if(PlayerInfo[targetid][pRank] == 11) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 10) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "未定"; }
		}
		if(PlayerInfo[targetid][pMember] == 14)
		{
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "未定"; }
		}
		if(PlayerInfo[targetid][pMember] == 15)
		{
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "未定"; }
		}
		if(PlayerInfo[targetid][pMember] == 17)
		{
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "未定"; }
		}
		if(PlayerInfo[playerid][pMember] == 18)
		{
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "未定"; }
		}
		if(PlayerInfo[targetid][pMember] == 19)
		{
			if(PlayerInfo[targetid][pRank] == 16) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 15) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 14) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 13) { rangz = "未定";}
			else if(PlayerInfo[targetid][pRank] == 12) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 11) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 10) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "未定"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "未定"; }
		}
		if(PlayerInfo[targetid][pMember] == 20)
		{
			if(PlayerInfo[targetid][pRank] == 15) { rangz = "局长"; }
			else if(PlayerInfo[targetid][pRank] == 14) { rangz = "代理局长"; }
			else if(PlayerInfo[targetid][pRank] == 13) { rangz = "副局长";}
			else if(PlayerInfo[targetid][pRank] == 12) { rangz = "指挥官"; }
			else if(PlayerInfo[targetid][pRank] == 11) { rangz = "警监"; }
			else if(PlayerInfo[targetid][pRank] == 10) { rangz = "警督"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "警司"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "高级警探"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "中级警探"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "初级警探"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "刑警队队长"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "刑警"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "高级警员"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "正式警员"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "学警"; }
		}
		new drank[20];
		if(PlayerInfo[targetid][pDonateRank] == 1) { drank = "青铜 VIP"; }
		else if(PlayerInfo[targetid][pDonateRank] == 2) { drank = "白银 VIP"; }
		else if(PlayerInfo[targetid][pDonateRank] == 3) { drank = "黄金 VIP"; }
		else if(PlayerInfo[targetid][pLevel] == 1) { drank = "初学者"; }
		else if(PlayerInfo[targetid][pLevel] == 2) { drank = "居民"; }
		else if(PlayerInfo[targetid][pLevel] == 3) { drank = "熟悉城市"; }
		else if(PlayerInfo[targetid][pLevel] == 4) { drank = "小知名"; }
		else if(PlayerInfo[targetid][pLevel] == 5) { drank = "小知名"; }
		else if(PlayerInfo[targetid][pLevel] == 6) { drank = "小威望"; }
		else if(PlayerInfo[targetid][pLevel] == 7) { drank = "威名远扬"; }
		else if(PlayerInfo[targetid][pLevel] >= 8) { drank = "威名远扬"; }
		else if(PlayerInfo[targetid][pLevel] >= 20) { drank = "资深玩家"; }
		new name[MAX_PLAYER_NAME];
		new cash = PlayerInfo[targetid][pCash];
		new wdeaths = PlayerInfo[targetid][pWantedDeaths];
		new drugs = PlayerInfo[targetid][pDrugs];
		new mats = PlayerInfo[targetid][pMats];
		new wanted = PlayerInfo[targetid][pWantedLevel];
		new level = PlayerInfo[targetid][pLevel];
		new exp = PlayerInfo[targetid][pExp];
		new nxtlevel = PlayerInfo[targetid][pLevel];
		new expamount = nxtlevel*levelexp;
		new pnumber = PlayerInfo[targetid][pPnumber];
		new warns = PlayerInfo[targetid][pWarns];
		new zakon = PlayerInfo[targetid][pZakonp];
		new addiction = PlayerInfo[targetid][pAddiction];
		new kills = PlayerInfo[targetid][pKills];
		new arrests = PlayerInfo[targetid][pArrested];
		GetPlayerName(targetid, name, sizeof(name));
		new playerip[20];
		GetPlayerIp(targetid, playerip, sizeof(playerip));
		new coordsstring[1200];
		new msg[] = "{ffffff}名称:\t\t\t\t{FF0000}%s\n{ffffff}等级:\t\t\t%i\n经验值:\t\t\t%i/%i\n现金:\t\t\t%i\n电话号码:\t\t%i\n警告:\t\t\t%i\n合法值:\t\t%i\n杀人数:\t\t%i\n监禁时间:\t\t\t%i\n死亡数:\t\t%i\n通缉等级:\t\t%i\n注册日期:\t\t%s\n毒瘾:\t\t\t%i\n毒品:\t\t\t%i\n材料:\t\t\t%i\n\n{2F4F4F}工作:\t\t\t%s\n组织:\t\t\t%s\n阶级:\t\t\t\t%s\n服务器等级:\t\t%s\n伴侣:\t\t\t%s\n性别:\t\t\t\t%s";
		format(coordsstring, 1000, msg, name,level,exp,expamount,cash,pnumber,warns,zakon,kills,arrests,wdeaths,wanted,PlayerInfo[targetid][pDataReg],addiction,drugs,mats,rabotss,ttext,rangz,drank,PlayerInfo[targetid][pMarriedTo],atext);
		ShowPlayerDialog(playerid,10004,DIALOG_STYLE_MSGBOX, "{1E90FF}我的资料",coordsstring, "关闭", "");
	}
}

publics: SetPlayerToTeamColor(playerid)
{
	switch(PlayerInfo[playerid][pMember])
	{
		case 0:	SetPlayerColor(playerid, 0xFFFFFF20);
		case 1: SetPlayerColor(playerid, 0x0000FFAA);
		case 2: SetPlayerColor(playerid, 0x313131AA);
		case 3: SetPlayerColor(playerid, 0x46BBAA00);
		case 4: SetPlayerColor(playerid, 0xFF6666AA);
		case 5: SetPlayerColor(playerid, 0x993366AA);
		case 6: SetPlayerColor(playerid, 0xBB0000AA);
		case 7: SetPlayerColor(playerid, 0xccff00AA);
		case 8: SetPlayerColor(playerid, 0xA85400AA);
		case 9: SetPlayerColor(playerid, 0x0000FFAA);
		case 11: SetPlayerColor(playerid, 0x139BECFF);
		case 12: SetPlayerColor(playerid, 0xCC00FFAA);
		case 13: SetPlayerColor(playerid, 0xffff00AA);
		case 14: SetPlayerColor(playerid, 0x007575AA);
		case 15: SetPlayerColor(playerid, 0x009900AA);
		case 16: SetPlayerColor(playerid, 0xFF6600AA);
		case 17: SetPlayerColor(playerid, 0x00CCFFAA);
		case 18: SetPlayerColor(playerid, 0x6666FFAA);
		case 19: SetPlayerColor(playerid, 0xA85400AA);
		case 20: SetPlayerColor(playerid, 0x0000FFAA);
	}
	return true;
}

publics: OnGameModeExit()
{
    KillTimer(synctimer);
    KillTimer(DLTime);
    for(new t; t != 6; t++) TextDrawDestroy(PlayTD[t]);
    for(new r; r != 19; r++) TextDrawDestroy(RegisterTD[r]);
    for(new i; i != 3; i++) TextDrawDestroy(URL[i]);
    return true;
}

publics: GameModeExitFunc()
{
    foreach(Player, i)
    {
       ConnectTimed[i] = 0;
       IsConnected{i} = 0;
    }
	if(logs == 1)
	{
		printr("GameModeExitFunc");
	}
	GameModeExit();
	return true;
}

publics: SptimeUp(playerid)
{
	SetPlayerHealthAC(playerid,100);
	Q_SetPlayerPos(playerid,1528.9264,-1367.3436,226.1789);
	SetPlayerFacingAngle(playerid,177.5190);
	SetPlayerCameraPos(playerid, 1528.3990,-1373.0824,226.5612);
	SetPlayerCameraLookAt(playerid, 1528.7058,-1369.3314,226.1789);
	SetPlayerInterior(playerid, 0);
}

publics: LoadGangZone()
{
	new query[256];
    new time = GetTickCount();
    mysql_query("SELECT * FROM `"TABLE_GANGZONE"`");
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
		for(new i = 1; i <= mysql_num_rows(); i++)
		{
		   	mysql_fetch_row(query);
         	sscanf(query, "p<|>dffffd",GZInfo[i][gID],GZInfo[i][gCoords][0],GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3],GZInfo[i][gFrakVlad]);
        	TOTALGZ++;
        	GZInfo[i][gID] = GangZoneCreate(GZInfo[i][gCoords][0],GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]);
        }
    }
    mysql_free_result();
    printf("[地盘]: 帮派地盘加载 - %d. 耗时 %d(毫秒)", TOTALGZ, GetTickCount() - time);
	return 1;
}

stock SaveGZ(idx)
{
    new query[256];
	format(query, sizeof(query), "UPDATE "TABLE_GANGZONE" SET ginfo1 = '%f', ginfo2 = '%f', ginfo3 = '%f', ginfo4 = '%f', fraction = %i WHERE id = %i",
	GZInfo[idx][gCoords][0], GZInfo[idx][gCoords][1],GZInfo[idx][gCoords][2],GZInfo[idx][gCoords][3],GZInfo[idx][gFrakVlad], idx);
	mysql_query(query);
	return 1;
}

publics: LoadProperty()
{
    new time = GetTickCount();
	new result[300];
	mysql_query("SELECT * FROM `"TABLE_HOUSE"` ORDER BY  `"TABLE_HOUSE"`.`hID` ASC ");
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
		for (new i = 1;i <= mysql_num_rows();i ++)
		{
			mysql_fetch_row(result);
			sscanf(result, "p<|>dffffffffffs[32]dddddddddddddddd", // 22
			HouseInfo[i][hID],
			HouseInfo[i][hEntrancex],
			HouseInfo[i][hEntrancey],
			HouseInfo[i][hEntrancez],
			HouseInfo[i][hExitx],
			HouseInfo[i][hExity],
			HouseInfo[i][hExitz],
			HouseInfo[i][hCarx],
			HouseInfo[i][hCary],
			HouseInfo[i][hCarz],
			HouseInfo[i][hCarc],
			HouseInfo[i][hOwner],
			HouseInfo[i][hValue],
			HouseInfo[i][hHel],
			HouseInfo[i][hInt],
			HouseInfo[i][hLock],
			HouseInfo[i][hOwned],
			HouseInfo[i][hTakings],
			HouseInfo[i][hDate],
			HouseInfo[i][hKlass],
			HouseInfo[i][hVec],
			HouseInfo[i][hVehSost],
			HouseInfo[i][hDeagle],
			HouseInfo[i][hShotgun],
			HouseInfo[i][hM4],
			HouseInfo[i][hAK47],
			HouseInfo[i][hDrugs],
			HouseInfo[i][hMaterials]);
			if(HouseInfo[i][hOwned] == 0)
			{
				HouseInfo[i][hPickup] = CreatePickup(1273, 23, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez],-1);
				pickups++;
				HouseInfo[i][hMIcon] = CreateDynamicMapIcon(HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez], 31, -1, 0, -1, -1, 400.0);
			}
			if(HouseInfo[i][hOwned] == 1)
			{
				HouseInfo[i][hPickup] = CreatePickup(19522, 23, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez],-1);
				pickups++;
				HouseInfo[i][hMIcon] = CreateDynamicMapIcon(HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez], 32, -1, 0, -1, -1, 400.0);
			}
			TotalHouse++;
		}
	}
	mysql_free_result();
	if(logs == 1)
	{
	    printf("[房屋]: 房屋加载 - %d. 耗时 %d(毫秒)", TotalHouse,GetTickCount() - time);
	}
	return true;
}

LoadTextdraw()
{
	//==================================Авторизация
	STDAUTO[0] = TextDrawCreate(275.000000, 118.222213, "LD_SPAC:white");
	TextDrawLetterSize(STDAUTO[0], 0.000000, 0.000000);
	TextDrawTextSize(STDAUTO[0], 122.500000, 183.555541);
	TextDrawAlignment(STDAUTO[0], 1);
	TextDrawColor(STDAUTO[0], 411303935);
	TextDrawSetShadow(STDAUTO[0], 0);
	TextDrawSetOutline(STDAUTO[0], 0);
	TextDrawFont(STDAUTO[0], 4);

	STDAUTO[1] = TextDrawCreate(275.500000, 118.599975, "LD_SPAC:white");
	TextDrawLetterSize(STDAUTO[1], 0.000000, 0.000000);
	TextDrawTextSize(STDAUTO[1], 121.000000, 181.688873);
	TextDrawAlignment(STDAUTO[1], 1);
	TextDrawColor(STDAUTO[1], 252777471);
	TextDrawSetShadow(STDAUTO[1], 0);
	TextDrawSetOutline(STDAUTO[1], 0);
	TextDrawFont(STDAUTO[1], 4);

	STDAUTO[2] = TextDrawCreate(275.000000, 136.022216, "LD_SPAC:white");
	TextDrawLetterSize(STDAUTO[2], 0.000000, 0.000000);
	TextDrawTextSize(STDAUTO[2], 121.500000, 0.622248);
	TextDrawAlignment(STDAUTO[2], 1);
	TextDrawColor(STDAUTO[2], 411303935);
	TextDrawSetShadow(STDAUTO[2], 0);
	TextDrawSetOutline(STDAUTO[2], 0);
	TextDrawFont(STDAUTO[2], 4);

	STDAUTO[3] = TextDrawCreate(317.500000, 143.488891, "LD_SPAC:white");
	TextDrawLetterSize(STDAUTO[3], 0.000000, 0.000000);
	TextDrawTextSize(STDAUTO[3], 32.000000, 15.555560);
	TextDrawAlignment(STDAUTO[3], 1);
	TextDrawColor(STDAUTO[3], 411303935);
	TextDrawSetShadow(STDAUTO[3], 0);
	TextDrawSetOutline(STDAUTO[3], 0);
	TextDrawFont(STDAUTO[3], 4);

	STDAUTO[4] = TextDrawCreate(315.500000, 143.866683, "LD_SPAC:white");
	TextDrawLetterSize(STDAUTO[4], 0.000000, 0.000000);
	TextDrawTextSize(STDAUTO[4], 35.000000, 14.311128);
	TextDrawAlignment(STDAUTO[4], 1);
	TextDrawColor(STDAUTO[4], 252777471);
	TextDrawSetShadow(STDAUTO[4], 0);
	TextDrawSetOutline(STDAUTO[4], 0);
	TextDrawFont(STDAUTO[4], 4);

 	STDAUTO[5] = TextDrawCreate(295.000000, 183.311126, "LD_SPAC:white");
    TextDrawLetterSize(STDAUTO[5], 0.000000, 0.000000);
    TextDrawTextSize(STDAUTO[5], 85.000000, 18.044458);
    TextDrawAlignment(STDAUTO[5], 1);
    TextDrawColor(STDAUTO[5], 411303935);
    TextDrawSetShadow(STDAUTO[5], 0);
    TextDrawSetOutline(STDAUTO[5], 0);
    TextDrawFont(STDAUTO[5], 4);

    STDAUTO[6] = TextDrawCreate(295.500000, 184.066726, "LD_SPAC:white");
    TextDrawLetterSize(STDAUTO[6], 0.000000, 0.000000);
    TextDrawTextSize(STDAUTO[6], 83.500000, 16.800016);
    TextDrawAlignment(STDAUTO[6], 1);
    TextDrawColor(STDAUTO[6], 252777471);
    TextDrawSetShadow(STDAUTO[6], 0);
    TextDrawSetOutline(STDAUTO[6], 0);
    TextDrawFont(STDAUTO[6], 4);

    STDAUTO[7] = TextDrawCreate(296.000000, 183.822280, "LD_SPAC:white");
    TextDrawLetterSize(STDAUTO[7], 0.000000, 0.000000);
    TextDrawTextSize(STDAUTO[7], 82.500000, 16.800016);
    TextDrawAlignment(STDAUTO[7], 1);
    TextDrawColor(STDAUTO[7], 117967359);
    TextDrawSetShadow(STDAUTO[7], 0);
    TextDrawSetOutline(STDAUTO[7], 0);
    TextDrawFont(STDAUTO[7], 4);
    TextDrawBackgroundColor(STDAUTO[7], 0xFFFFFF00);
    TextDrawSetSelectable(STDAUTO[7], true);

    STDAUTO[8] = TextDrawCreate(287.500000, 236.822280, "LD_SPAC:white");
    TextDrawLetterSize(STDAUTO[8], 0.000000, 0.000000);
    TextDrawTextSize(STDAUTO[8], 101.500000, 42.933364);
    TextDrawAlignment(STDAUTO[8], 1);
    TextDrawColor(STDAUTO[8], 411303935);
    TextDrawSetShadow(STDAUTO[8], 0);
    TextDrawSetOutline(STDAUTO[8], 0);
    TextDrawFont(STDAUTO[8], 4);

    STDAUTO[9] = TextDrawCreate(288.000000, 237.200012, "LD_SPAC:white");
    TextDrawLetterSize(STDAUTO[9], 0.000000, 0.000000);
    TextDrawTextSize(STDAUTO[9], 100.500000, 41.688877);
    TextDrawAlignment(STDAUTO[9], 1);
    TextDrawColor(STDAUTO[9], 252777471);
    TextDrawSetShadow(STDAUTO[9], 0);
    TextDrawSetOutline(STDAUTO[9], 0);
    TextDrawFont(STDAUTO[9], 4);

	STDAUTO[10] = TextDrawCreate(291.000000, 242.422256, "LD_POOL:ball");
	TextDrawLetterSize(STDAUTO[10], 0.000000, 0.000000);
	TextDrawTextSize(STDAUTO[10], 27.500000, 31.111053);
	TextDrawAlignment(STDAUTO[10], 1);
	TextDrawColor(STDAUTO[10], 411303935);
	TextDrawSetShadow(STDAUTO[10], 0);
	TextDrawSetOutline(STDAUTO[10], 0);
	TextDrawFont(STDAUTO[10], 4);

	STDAUTO[11] = TextDrawCreate(292.000000, 244.044433, "LD_POOL:ball");
	TextDrawLetterSize(STDAUTO[11], 0.000000, 0.000000);
	TextDrawTextSize(STDAUTO[11], 25.500000, 27.999994);
	TextDrawAlignment(STDAUTO[11], 1);
	TextDrawColor(STDAUTO[11], 252777471);
	TextDrawSetShadow(STDAUTO[11], 0);
	TextDrawSetOutline(STDAUTO[11], 0);
	TextDrawFont(STDAUTO[11], 4);

	STDAUTO[12] = TextDrawCreate(292.000000, 242.666656, "LD_SPAC:white");
	TextDrawLetterSize(STDAUTO[12], 0.000000, 0.000000);
	TextDrawTextSize(STDAUTO[12], 25.000000, 29.244445);
	TextDrawAlignment(STDAUTO[12], 1);
	TextDrawColor(STDAUTO[12], -1);
	TextDrawUseBox(STDAUTO[12], true);
	TextDrawBoxColor(STDAUTO[12], 0xFFFFFF00);
	TextDrawSetShadow(STDAUTO[12], 0);
	TextDrawSetOutline(STDAUTO[12], 0);
	TextDrawFont(STDAUTO[12], 5);
	TextDrawBackgroundColor(STDAUTO[12], 0xFFFFFF00);
	TextDrawSetPreviewModel(STDAUTO[12], 1239);
	TextDrawSetPreviewRot(STDAUTO[12], 0.000000, 0.000000, 0.000000, 1.000000);

	STDAUTO[13] = TextDrawCreate(302.000000, 120.711120, "Authorization");
	TextDrawLetterSize(STDAUTO[13], 0.211999, 1.226666);
	TextDrawAlignment(STDAUTO[13], 1);
	TextDrawColor(STDAUTO[13], -1);
	TextDrawSetShadow(STDAUTO[13], 0);
	TextDrawSetOutline(STDAUTO[13], 0);
	TextDrawBackgroundColor(STDAUTO[13], 51);
	TextDrawFont(STDAUTO[13], 2);
	TextDrawSetProportional(STDAUTO[13], 1);

	STDAUTO[14] = TextDrawCreate(317.000000, 145.977798, "Legendary RP");
	TextDrawLetterSize(STDAUTO[14], 0.174500, 1.176888);
	TextDrawAlignment(STDAUTO[14], 1);
	TextDrawColor(STDAUTO[14], -1);
	TextDrawSetShadow(STDAUTO[14], 0);
	TextDrawSetOutline(STDAUTO[14], 0);
	TextDrawBackgroundColor(STDAUTO[14], 51);
	TextDrawFont(STDAUTO[14], 2);
	TextDrawSetProportional(STDAUTO[14], 1);

	STDAUTO[15] = TextDrawCreate(317.500000, 171.866699, "PASSWORD:");
	TextDrawLetterSize(STDAUTO[15], 0.174500, 1.176888);
	TextDrawAlignment(STDAUTO[15], 1);
	TextDrawColor(STDAUTO[15], -1);
	TextDrawSetShadow(STDAUTO[15], 0);
	TextDrawSetOutline(STDAUTO[15], 0);
	TextDrawBackgroundColor(STDAUTO[15], 51);
	TextDrawFont(STDAUTO[15], 2);
	TextDrawSetProportional(STDAUTO[15], 1);

	STDAUTO[16] = TextDrawCreate(320.000000, 253.133422, "The account is~r~ registered");
	TextDrawLetterSize(STDAUTO[16], 0.111000, 0.915555);
	TextDrawAlignment(STDAUTO[16], 1);
	TextDrawColor(STDAUTO[16], -1);
	TextDrawSetShadow(STDAUTO[16], 0);
	TextDrawSetOutline(STDAUTO[16], 0);
	TextDrawBackgroundColor(STDAUTO[16], 51);
	TextDrawFont(STDAUTO[16], 2);
	TextDrawSetProportional(STDAUTO[16], 1);

	//===================BusWork
	BusWork[0] = TextDrawCreate(5.500000, 179.937500, "LD_SPAC:white");
	TextDrawLetterSize(BusWork[0], 0.000000, 0.000000);
	TextDrawTextSize(BusWork[0], 116.000000, 38.000000);
	TextDrawAlignment(BusWork[0], 1);
	TextDrawColor(BusWork[0], 0x20A9FFFF);
	TextDrawSetShadow(BusWork[0], 0);
	TextDrawSetOutline(BusWork[0], 0);
	TextDrawBackgroundColor(BusWork[0], 255);
	TextDrawFont(BusWork[0], 4);
	TextDrawSetProportional(BusWork[0], 0);
	TextDrawSetShadow(BusWork[0], 0);

	BusWork[1] = TextDrawCreate(63.500000, 171.625000,"Statistics");
	TextDrawLetterSize(BusWork[1], 0.151499, 0.716250);
	TextDrawTextSize(BusWork[1], 0.000000, 112.000000);
	TextDrawAlignment(BusWork[1], 2);
	TextDrawColor(BusWork[1], -1);
	TextDrawUseBox(BusWork[1], 1);
	TextDrawBoxColor(BusWork[1], 0x20A9FFFF);
	TextDrawSetShadow(BusWork[1], 0);
	TextDrawSetOutline(BusWork[1], 0);
	TextDrawBackgroundColor(BusWork[1], 255);
	TextDrawFont(BusWork[1], 2);
	TextDrawSetProportional(BusWork[1], 1);
	TextDrawSetShadow(BusWork[1], 0);

	BusWork[2] = TextDrawCreate(6.500000, 179.062500, "LD_SPAC:white");
	TextDrawLetterSize(BusWork[2], 0.000000, 0.000000);
	TextDrawTextSize(BusWork[2], 114.000000, 38.000000);
	TextDrawAlignment(BusWork[2], 1);
	TextDrawColor(BusWork[2], 640034559);
	TextDrawSetShadow(BusWork[2], 0);
	TextDrawSetOutline(BusWork[2], 0);
	TextDrawBackgroundColor(BusWork[2], 255);
	TextDrawFont(BusWork[2], 4);
	TextDrawSetProportional(BusWork[2], 0);
	TextDrawSetShadow(BusWork[2], 0);

	BusWork[3] = TextDrawCreate(4.500000, 177.312500, "");
	TextDrawLetterSize(BusWork[3], 0.000000, 0.000000);
	TextDrawTextSize(BusWork[3], 44.000000, 42.000000);
	TextDrawAlignment(BusWork[3], 1);
	TextDrawColor(BusWork[3], 0x20A9FFFF);
	TextDrawSetShadow(BusWork[3], 0);
	TextDrawSetOutline(BusWork[3], 0);
	TextDrawBackgroundColor(BusWork[3], -533448704);
	TextDrawFont(BusWork[3], 5);
	TextDrawSetProportional(BusWork[3], 0);
	TextDrawSetShadow(BusWork[3], 0);
	TextDrawSetPreviewModel(BusWork[3], 3438);
	TextDrawSetPreviewRot(BusWork[3], 90.000000, 90.000000, 0.000000, 1.000000);

	BusWork[4] = TextDrawCreate(21.000000, 181.250000, "$");
	TextDrawLetterSize(BusWork[4], 0.683999, 2.632499);
	TextDrawAlignment(BusWork[4], 1);
	TextDrawColor(BusWork[4], -1);
	TextDrawSetShadow(BusWork[4], 0);
	TextDrawSetOutline(BusWork[4], 0);
	TextDrawBackgroundColor(BusWork[4], 255);
	TextDrawFont(BusWork[4], 3);
	TextDrawSetProportional(BusWork[4], 1);
	TextDrawSetShadow(BusWork[4], 0);
	// работа фермер
	FarmJob[0] = TextDrawCreate(641.199951, 1.500000, "usebox");
	TextDrawLetterSize(FarmJob[0], 0.000000, 49.378147);
	TextDrawTextSize(FarmJob[0], -2.000000, 0.000000);
	TextDrawAlignment(FarmJob[0], 1);
	TextDrawColor(FarmJob[0], 255);
	TextDrawUseBox(FarmJob[0], true);
	TextDrawBoxColor(FarmJob[0], 102);
	TextDrawSetShadow(FarmJob[0], 0);
	TextDrawSetOutline(FarmJob[0], 0);
	TextDrawBackgroundColor(FarmJob[0], 255);
	TextDrawFont(FarmJob[0], 0);

	FarmJob[1] = TextDrawCreate(147.199996, 182.933334, "LD_SPAC:white");
	TextDrawLetterSize(FarmJob[1], 0.000000, 0.000000);
	TextDrawTextSize(FarmJob[1], 60.800003, 52.266647);
	TextDrawAlignment(FarmJob[1], 1);
	TextDrawColor(FarmJob[1], -5963521);
	TextDrawSetShadow(FarmJob[1], 0);
	TextDrawSetOutline(FarmJob[1], 0);
	TextDrawFont(FarmJob[1], 4);
	TextDrawSetSelectable(FarmJob[1], true);

	FarmJob[2] = TextDrawCreate(208.199981, 329.533355, "LD_SPAC:white");
	TextDrawLetterSize(FarmJob[2], 0.000000, 0.000000);
	TextDrawTextSize(FarmJob[2], 60.800003, 52.266647);
	TextDrawAlignment(FarmJob[2], 1);
	TextDrawColor(FarmJob[2], -5963521);
	TextDrawSetShadow(FarmJob[2], 0);
	TextDrawSetOutline(FarmJob[2], 0);
	TextDrawFont(FarmJob[2], 4);
	TextDrawSetSelectable(FarmJob[2], true);

	FarmJob[3] = TextDrawCreate(273.199981, 214.799972, "LD_SPAC:white");
	TextDrawLetterSize(FarmJob[3], 0.000000, 0.000000);
	TextDrawTextSize(FarmJob[3], 60.800003, 52.266647);
	TextDrawAlignment(FarmJob[3], 1);
	TextDrawColor(FarmJob[3], -5963521);
	TextDrawSetShadow(FarmJob[3], 0);
	TextDrawSetOutline(FarmJob[3], 0);
	TextDrawFont(FarmJob[3], 4);
	TextDrawSetSelectable(FarmJob[3], true);

	FarmJob[4] = TextDrawCreate(378.199981, 312.866699, "LD_SPAC:white");
	TextDrawLetterSize(FarmJob[4], 0.000000, 0.000000);
	TextDrawTextSize(FarmJob[4], 60.800003, 52.266647);
	TextDrawAlignment(FarmJob[4], 1);
	TextDrawColor(FarmJob[4], -5963521);
	TextDrawSetShadow(FarmJob[4], 0);
	TextDrawSetOutline(FarmJob[4], 0);
	TextDrawFont(FarmJob[4], 4);
	TextDrawSetSelectable(FarmJob[4], true);

	FarmJob[5] = TextDrawCreate(367.199981, 119.733367, "LD_SPAC:white");
	TextDrawLetterSize(FarmJob[5], 0.000000, 0.000000);
	TextDrawTextSize(FarmJob[5], 60.800003, 52.266647);
	TextDrawAlignment(FarmJob[5], 1);
	TextDrawColor(FarmJob[5], -5963521);
	TextDrawSetShadow(FarmJob[5], 0);
	TextDrawSetOutline(FarmJob[5], 0);
	TextDrawFont(FarmJob[5], 4);
	TextDrawSetSelectable(FarmJob[5], true);

	FarmJob[6] = TextDrawCreate(228.199981, 75.933403, "LD_SPAC:white");
	TextDrawLetterSize(FarmJob[6], 0.000000, 0.000000);
	TextDrawTextSize(FarmJob[6], 60.800003, 52.266647);
	TextDrawAlignment(FarmJob[6], 1);
	TextDrawColor(FarmJob[6], -5963521);
	TextDrawSetShadow(FarmJob[6], 0);
	TextDrawSetOutline(FarmJob[6], 0);
	TextDrawFont(FarmJob[6], 4);
	TextDrawSetSelectable(FarmJob[6], true);
	// makegun menu
	playergun[0] = TextDrawCreate(214.333343, 298.922210, "usebox");
	TextDrawLetterSize(playergun[0], 0.000000, -17.231891);
	TextDrawTextSize(playergun[0], 424.000000, 0.000000);
	TextDrawAlignment(playergun[0], 1);
	TextDrawColor(playergun[0], 0);
	TextDrawUseBox(playergun[0], true);
	TextDrawBoxColor(playergun[0], 102);
	TextDrawSetShadow(playergun[0], 0);
	TextDrawSetOutline(playergun[0], 0);
	TextDrawFont(playergun[0], 0);

	playergun[1] = TextDrawCreate(217.666656, 150.833343, "usebox");
	TextDrawLetterSize(playergun[1], 0.000000, 15.630659);
	TextDrawTextSize(playergun[1], 420.666687, 0.000000);
	TextDrawAlignment(playergun[1], 1);
	TextDrawColor(playergun[1], 0);
	TextDrawUseBox(playergun[1], true);
	TextDrawBoxColor(playergun[1], 102);
	TextDrawSetShadow(playergun[1], 0);
	TextDrawSetOutline(playergun[1], 0);
	TextDrawFont(playergun[1], 0);

	playergun[2] = TextDrawCreate(220.666687, 131.496292, "Create new weapon");
	TextDrawLetterSize(playergun[2], 0.449999, 1.600000);
	TextDrawAlignment(playergun[2], 1);
	TextDrawColor(playergun[2], -5963521);
	TextDrawSetShadow(playergun[2], 0);
	TextDrawSetOutline(playergun[2], 1);
	TextDrawBackgroundColor(playergun[2], 51);
	TextDrawFont(playergun[2], 2);
	TextDrawSetProportional(playergun[2], 1);

	playergun[3] = TextDrawCreate(230.666671, 158.044448, "LD_SPAC:white");
	TextDrawTextSize(playergun[3], 35.000015, 33.599990);
	TextDrawUseBox(playergun[3], false);
	TextDrawFont(playergun[3], 5);
	TextDrawSetSelectable(playergun[3], true);
	TextDrawSetPreviewModel(playergun[3], 347);
	TextDrawSetPreviewRot(playergun[3], 0.000000, 0.000000, 0.000000, 1.000000);
	TextDrawBackgroundColor(playergun[3], 0xFFFFFF00);

	playergun[4] = TextDrawCreate(227.000000, 198.281478, "LD_SPAC:white");
	TextDrawTextSize(playergun[4], 57.000007, 35.259262);
	TextDrawUseBox(playergun[4], false);
	TextDrawFont(playergun[4], 5);
	TextDrawSetSelectable(playergun[4], true);
	TextDrawSetPreviewModel(playergun[4], 348);
	TextDrawSetPreviewRot(playergun[4], 0.000000, 0.000000, 0.000000, 1.000000);
	TextDrawBackgroundColor(playergun[4], 0xFFFFFF00);

	playergun[5] = TextDrawCreate(222.999938, 248.059234, "LD_SPAC:white");
	TextDrawTextSize(playergun[5], 65.000053, 31.111145);
	TextDrawUseBox(playergun[5], false);
	TextDrawFont(playergun[5], 5);
	TextDrawSetSelectable(playergun[5], true);
	TextDrawSetPreviewModel(playergun[5], 349);
	TextDrawSetPreviewRot(playergun[5], 25.000000, 0.000000, 0.000000, 1.000000);
	TextDrawBackgroundColor(playergun[5], 0xFFFFFF00);

	playergun[6] = TextDrawCreate(295.666687, 160.118530, "LD_SPAC:white");
	TextDrawTextSize(playergun[6], 52.999969, 29.866653);
	TextDrawUseBox(playergun[6], false);
	TextDrawFont(playergun[6], 5);
	TextDrawSetSelectable(playergun[6], true);
	TextDrawSetPreviewModel(playergun[6], 353);
	TextDrawSetPreviewRot(playergun[6], 0.000000, 0.000000, 0.000000, 1.000000);
	TextDrawBackgroundColor(playergun[6], 0xFFFFFF00);

	playergun[7] = TextDrawCreate(288.333312, 197.866668, "LD_SPAC:white");
	TextDrawTextSize(playergun[7], 49.000011, 30.696304);
	TextDrawUseBox(playergun[7], false);
	TextDrawFont(playergun[7], 5);
	TextDrawSetSelectable(playergun[7], true);
	TextDrawSetPreviewModel(playergun[7], 355);
	TextDrawSetPreviewRot(playergun[7], 0.000000, 0.000000, 0.000000, 1.000000);
	TextDrawBackgroundColor(playergun[7], 0xFFFFFF00);

	playergun[8] = TextDrawCreate(296.000030, 253.866638, "LD_SPAC:white");
	TextDrawTextSize(playergun[8], 58.999996, 26.133316);
	TextDrawUseBox(playergun[8], false);
	TextDrawFont(playergun[8], 5);
	TextDrawSetSelectable(playergun[8], true);
	TextDrawSetPreviewModel(playergun[8], 356);
	TextDrawSetPreviewRot(playergun[8], 0.000000, 0.000000, 0.000000, 1.000000);
	TextDrawBackgroundColor(playergun[8], 0xFFFFFF00);

	playergun[9] = TextDrawCreate(358.666656, 159.703704, "LD_SPAC:white");
	TextDrawTextSize(playergun[9], 56.666656, 28.622222);
	TextDrawUseBox(playergun[9], false);
	TextDrawFont(playergun[9], 5);
	TextDrawSetSelectable(playergun[9], true);
	TextDrawSetPreviewModel(playergun[9], 357);
	TextDrawSetPreviewRot(playergun[9], 0.000000, 0.000000, 0.000000, 1.000000);
	TextDrawBackgroundColor(playergun[9], 0xFFFFFF00);

	playergun[10] = TextDrawCreate(371.333404, 200.355545, "LD_SPAC:white");
	TextDrawTextSize(playergun[10], 70.333320, 27.792587);
	TextDrawUseBox(playergun[10], false);
	TextDrawFont(playergun[10], 5);
	TextDrawSetSelectable(playergun[10], true);
	TextDrawSetPreviewModel(playergun[10], 346);
	TextDrawSetPreviewRot(playergun[10], 0.000000, 0.000000, 0.000000, 1.000000);
	TextDrawBackgroundColor(playergun[10], 0xFFFFFF00);

	playergun[11] = TextDrawCreate(378.000000, 247.644424, "LD_SPAC:white");
	TextDrawTextSize(playergun[11], 48.333332, 29.451873);
	TextDrawUseBox(playergun[11], false);
	TextDrawFont(playergun[11], 5);
	TextDrawSetSelectable(playergun[11], true);
	TextDrawSetPreviewModel(playergun[11], 344);
	TextDrawSetPreviewRot(playergun[11], 0.000000, 0.000000, 0.000000, 1.000000);
	TextDrawBackgroundColor(playergun[11], 0xFFFFFF00);

	playergun[12] = TextDrawCreate(224.666641, 183.348159, "1 ammo / 3 material"); //
	TextDrawLetterSize(playergun[12], 0.105666, 0.662518);
	TextDrawAlignment(playergun[12], 1);
	TextDrawColor(playergun[12], -1);
	TextDrawSetShadow(playergun[12], 0);
	TextDrawSetOutline(playergun[12], 1);
	TextDrawBackgroundColor(playergun[12], 51);
	TextDrawFont(playergun[12], 2);
	TextDrawSetProportional(playergun[12], 1);

	playergun[13] = TextDrawCreate(224.999969, 222.925933, "1 ammo / 3 material"); //
	TextDrawLetterSize(playergun[13], 0.105666, 0.662518);
	TextDrawAlignment(playergun[13], 1);
	TextDrawColor(playergun[13], -1);
	TextDrawSetShadow(playergun[13], 0);
	TextDrawSetOutline(playergun[13], 1);
	TextDrawBackgroundColor(playergun[13], 51);
	TextDrawFont(playergun[13], 2);
	TextDrawSetProportional(playergun[13], 1);

	playergun[14] = TextDrawCreate(226.666610, 270.800048, "1 ammo / 6 material");//
	TextDrawLetterSize(playergun[14], 0.105666, 0.662518);
	TextDrawAlignment(playergun[14], 1);
	TextDrawColor(playergun[14], -1);
	TextDrawSetShadow(playergun[14], 0);
	TextDrawSetOutline(playergun[14], 1);
	TextDrawBackgroundColor(playergun[14], 51);
	TextDrawFont(playergun[14], 2);
	TextDrawSetProportional(playergun[14], 1);

	playergun[15] = TextDrawCreate(294.000000, 183.103698, "1 ammo / 3 material"); //
	TextDrawLetterSize(playergun[15], 0.105666, 0.662518);
	TextDrawAlignment(playergun[15], 1);
	TextDrawColor(playergun[15], -1);
	TextDrawSetShadow(playergun[15], 0);
	TextDrawSetOutline(playergun[15], 1);
	TextDrawBackgroundColor(playergun[15], 51);
	TextDrawFont(playergun[15], 2);
	TextDrawSetProportional(playergun[15], 1);

	playergun[16] = TextDrawCreate(293.999969, 222.266677, "1 ammo / 6 material");//
	TextDrawLetterSize(playergun[16], 0.105666, 0.662518);
	TextDrawAlignment(playergun[16], 1);
	TextDrawColor(playergun[16], -1);
	TextDrawSetShadow(playergun[16], 0);
	TextDrawSetOutline(playergun[16], 1);
	TextDrawBackgroundColor(playergun[16], 51);
	TextDrawFont(playergun[16], 2);
	TextDrawSetProportional(playergun[16], 1);

	playergun[17] = TextDrawCreate(296.999969, 270.970428, "1 ammo / 6 material");//
	TextDrawLetterSize(playergun[17], 0.105666, 0.662518);
	TextDrawAlignment(playergun[17], 1);
	TextDrawColor(playergun[17], -1);
	TextDrawSetShadow(playergun[17], 0);
	TextDrawSetOutline(playergun[17], 1);
	TextDrawBackgroundColor(playergun[17], 51);
	TextDrawFont(playergun[17], 2);
	TextDrawSetProportional(playergun[17], 1);

	playergun[18] = TextDrawCreate(367.333221, 182.785263, "1 ammo / 4 material");//
	TextDrawLetterSize(playergun[18], 0.105666, 0.662518);
	TextDrawAlignment(playergun[18], 1);
	TextDrawColor(playergun[18], -1);
	TextDrawSetShadow(playergun[18], 0);
	TextDrawSetOutline(playergun[18], 1);
	TextDrawBackgroundColor(playergun[18], 51);
	TextDrawFont(playergun[18], 2);
	TextDrawSetProportional(playergun[18], 1);

	playergun[19] = TextDrawCreate(367.666595, 221.533462, "1 ammo / 5 material");//
	TextDrawLetterSize(playergun[19], 0.105666, 0.662518);
	TextDrawAlignment(playergun[19], 1);
	TextDrawColor(playergun[19], -1);
	TextDrawSetShadow(playergun[19], 0);
	TextDrawSetOutline(playergun[19], 1);
	TextDrawBackgroundColor(playergun[19], 51);
	TextDrawFont(playergun[19], 2);
	TextDrawSetProportional(playergun[19], 1);

	playergun[20] = TextDrawCreate(368.333251, 271.066650, "1 ammo / 50 material");//
	TextDrawLetterSize(playergun[20], 0.105666, 0.662518);
	TextDrawAlignment(playergun[20], 1);
	TextDrawColor(playergun[20], -1);
	TextDrawSetShadow(playergun[20], 0);
	TextDrawSetOutline(playergun[20], 1);
	TextDrawBackgroundColor(playergun[20], 51);
	TextDrawFont(playergun[20], 2);
	TextDrawSetProportional(playergun[20], 1);

	playergun[21] = TextDrawCreate(383.666625, 299.337036, "usebox");
	TextDrawLetterSize(playergun[21], 0.000000, 1.112139);
	TextDrawTextSize(playergun[21], 424.000000, 0.000000);
	TextDrawAlignment(playergun[21], 1);
	TextDrawColor(playergun[21], 0);
	TextDrawUseBox(playergun[21], true);
	TextDrawBoxColor(playergun[21], 102);
	TextDrawSetShadow(playergun[21], 0);
	TextDrawSetOutline(playergun[21], 0);
	TextDrawFont(playergun[21], 0);

	playergun[22] = TextDrawCreate(214.333328, 299.092529, "usebox");
	TextDrawLetterSize(playergun[22], 0.000000, 1.112139);
	TextDrawTextSize(playergun[22], 253.666580, 0.000000);
	TextDrawAlignment(playergun[22], 1);
	TextDrawColor(playergun[22], 0);
	TextDrawUseBox(playergun[22], true);
	TextDrawBoxColor(playergun[22], 102);
	TextDrawSetShadow(playergun[22], 0);
	TextDrawSetOutline(playergun[22], 0);
	TextDrawFont(playergun[22], 0);

	playergun[23] = TextDrawCreate(223.000045, 298.666625, "INFO");
	TextDrawLetterSize(playergun[23], 0.248333, 1.268148);
	TextDrawAlignment(playergun[23], 1);
	TextDrawColor(playergun[23], -2139062017);
	TextDrawUseBox(playergun[23], true);
	TextDrawBoxColor(playergun[23], 0);
	TextDrawSetShadow(playergun[23], 0);
	TextDrawSetOutline(playergun[23], 1);
	TextDrawBackgroundColor(playergun[23], 51);
	TextDrawFont(playergun[23], 2);
	TextDrawSetProportional(playergun[23], 1);
	TextDrawSetSelectable(playergun[23], true);

	playergun[24] = TextDrawCreate(390.666778, 297.837066, "cancel");
	TextDrawLetterSize(playergun[24], 0.173333, 1.226666);
	TextDrawAlignment(playergun[24], 1);
	TextDrawColor(playergun[24], 8388863);
	TextDrawSetShadow(playergun[24], 0);
	TextDrawSetOutline(playergun[24], 1);
	TextDrawBackgroundColor(playergun[24], 51);
	TextDrawFont(playergun[24], 2);
	TextDrawSetProportional(playergun[24], 1);
	TextDrawSetSelectable(playergun[24], true);
	// azs
	Filling[0] = TextDrawCreate(455.997070, 111.750000, "_");
	TextDrawAlignment(Filling[0], 1);
	TextDrawBackgroundColor(Filling[0], 255);
	TextDrawFont(Filling[0], 1);
	TextDrawLetterSize(Filling[0], 0.000000, 12.775924);
	TextDrawColor(Filling[0], -1);
	TextDrawSetOutline(Filling[0], 0);
	TextDrawSetProportional(Filling[0], 1);
	TextDrawSetShadow(Filling[0], 0);
	TextDrawUseBox(Filling[0], 1);
	TextDrawBoxColor(Filling[0], 80);
	TextDrawTextSize(Filling[0], 191.499267, 0.000000);
	TextDrawSetSelectable(Filling[0], 0);

	Filling[1] = TextDrawCreate(198.652984, 116.083305, "slot");
	TextDrawAlignment(Filling[1], 1);
	TextDrawBackgroundColor(Filling[1], 0x20A9FFFF);
	TextDrawFont(Filling[1], 5);
	TextDrawLetterSize(Filling[1], 0.000000, 0.000000);
	TextDrawColor(Filling[1], 0xFF9900AA);
	TextDrawSetOutline(Filling[1], 0);
	TextDrawSetProportional(Filling[1], 1);
	TextDrawSetShadow(Filling[1], 0);
	TextDrawTextSize(Filling[1], 82.928253, 105.583328);
	TextDrawSetPreviewModel(Filling[1], 19131);
	TextDrawSetPreviewRot(Filling[1], 90.000000, 90.000000, 180.000000, 1.000000);
	TextDrawSetSelectable(Filling[1], 1);

	Filling[2] = TextDrawCreate(282.049926, 116.083320, "slot");
	TextDrawAlignment(Filling[2], 1);
	TextDrawBackgroundColor(Filling[2], 0x20A9FFFF);
	TextDrawFont(Filling[2], 5);
	TextDrawLetterSize(Filling[2], 0.000000, 0.000000);
	TextDrawColor(Filling[2], 0xFF9900AA);
	TextDrawSetOutline(Filling[2], 0);
	TextDrawSetProportional(Filling[2], 1);
	TextDrawSetShadow(Filling[2], 0);
	TextDrawTextSize(Filling[2], 82.928253, 105.583328);
	TextDrawSetPreviewModel(Filling[2], 1650);
	TextDrawSetPreviewRot(Filling[2], 0.000000, 0.000000, 0.000000, 1.000000);
	TextDrawSetSelectable(Filling[2], 1);

	Filling[3] = TextDrawCreate(365.446380, 116.083320, "slot");
	TextDrawAlignment(Filling[3], 1);
	TextDrawBackgroundColor(Filling[3], 0x20A9FFFF);
	TextDrawFont(Filling[3], 5);
	TextDrawLetterSize(Filling[3], 0.000000, 0.000000);
	TextDrawColor(Filling[3], 0xFF9900AA);
	TextDrawSetOutline(Filling[3], 0);
	TextDrawSetProportional(Filling[3], 1);
	TextDrawSetShadow(Filling[3], 0);
	TextDrawTextSize(Filling[3], 82.928253, 105.583328);
	TextDrawSetPreviewModel(Filling[3], 18635);
	TextDrawSetPreviewRot(Filling[3], 0.000000, 0.000000, 0.000000, 1.000000);
	TextDrawSetSelectable(Filling[3], 1);
	// atm

	ATM[0] = TextDrawCreate(264.170562, 131.194458, "LD_SPAC:white");
	TextDrawLetterSize(ATM[0], 0.000000, 0.000000);
	TextDrawTextSize(ATM[0], 113.000000, 145.000000);
	TextDrawAlignment(ATM[0], 1);
	TextDrawColor(ATM[0], 252777471);
	TextDrawSetShadow(ATM[0], 0);
	TextDrawSetOutline(ATM[0], 0);
	TextDrawBackgroundColor(ATM[0], 255);
	TextDrawFont(ATM[0], 4);
	TextDrawSetProportional(ATM[0], 0);
	TextDrawSetShadow(ATM[0], 0);

	ATM[1] = TextDrawCreate(303.800231, 133.222198, "");
	TextDrawLetterSize(ATM[1], 0.000000, 0.000000);
	TextDrawTextSize(ATM[1], 34.000000, 29.000000);
	TextDrawAlignment(ATM[1], 1);
	TextDrawColor(ATM[1], -1);
	TextDrawSetShadow(ATM[1], 0);
	TextDrawSetOutline(ATM[1], 0);
	TextDrawBackgroundColor(ATM[1], 0x00000000);
	TextDrawFont(ATM[1], 5);
	TextDrawSetProportional(ATM[1], 0);
	TextDrawSetShadow(ATM[1], 0);
	TextDrawSetPreviewModel(ATM[1], 19324);
	TextDrawSetPreviewRot(ATM[1], 0.000000, 0.000000, 0.000000, 1.000000);

	ATM[2] = TextDrawCreate(349.000030, 157.022186, "CASH MACHINE");
	TextDrawLetterSize(ATM[2], 0.225000, 1.189333);
	TextDrawAlignment(ATM[2], 3);
	TextDrawColor(ATM[2], -1);
	TextDrawSetShadow(ATM[2], 0);
	TextDrawSetOutline(ATM[2], 0);
	TextDrawBackgroundColor(ATM[2], 255);
	TextDrawFont(ATM[2], 1);
	TextDrawSetProportional(ATM[2], 1);
	TextDrawSetShadow(ATM[2], 0);

	ATM[3] = TextDrawCreate(270.770812, 179.811065, "");
	TextDrawLetterSize(ATM[3], 0.000000, 0.000000);
	TextDrawTextSize(ATM[3], 20.000000, 16.000000);
	TextDrawAlignment(ATM[3], 1);
	TextDrawColor(ATM[3], -1);
	TextDrawSetShadow(ATM[3], 0);
	TextDrawSetOutline(ATM[3], 0);
	TextDrawBackgroundColor(ATM[3], 0x00000000);
	TextDrawFont(ATM[3], 5);
	TextDrawSetProportional(ATM[3], 0);
	TextDrawSetShadow(ATM[3], 0);
	TextDrawSetPreviewModel(ATM[3], 1274);
	TextDrawSetPreviewRot(ATM[3], 0.000000, 0.000000, 0.000000, 1.000000);

	ATM[4] = TextDrawCreate(260.970581, 202.988952, "");
	TextDrawLetterSize(ATM[4], 0.000000, 0.000000);
	TextDrawTextSize(ATM[4], 30.000000, 25.000000);
	TextDrawAlignment(ATM[4], 1);
	TextDrawColor(ATM[4], -1);
	TextDrawSetShadow(ATM[4], 0);
	TextDrawSetOutline(ATM[4], 0);
	TextDrawBackgroundColor(ATM[4], 0x00000000);
	TextDrawFont(ATM[4], 5);
	TextDrawSetProportional(ATM[4], 0);
	TextDrawSetShadow(ATM[4], 0);
	TextDrawSetPreviewModel(ATM[4], 18870);
	TextDrawSetPreviewRot(ATM[4], 100.000000, -180.000000, 0.000000, 1.000000);

	ATM[5] = TextDrawCreate(269.100036, 233.644470, "");
	TextDrawLetterSize(ATM[5], 0.000000, 0.000000);
	TextDrawTextSize(ATM[5], 21.000000, 21.000000);
	TextDrawAlignment(ATM[5], 1);
	TextDrawColor(ATM[5], -1);
	TextDrawSetShadow(ATM[5], 0);
	TextDrawSetOutline(ATM[5], 0);
	TextDrawBackgroundColor(ATM[5], 0x00000000);
	TextDrawFont(ATM[5], 5);
	TextDrawSetProportional(ATM[5], 0);
	TextDrawSetShadow(ATM[5], 0);
	TextDrawSetPreviewModel(ATM[5], 1273);
	TextDrawSetPreviewRot(ATM[5], 0.000000, 0.000000, 0.000000, 1.000000);

	ATM[6] = TextDrawCreate(298.599792, 179.444519, "LD_SPAC:white");
	TextDrawLetterSize(ATM[6], 0.000000, 0.000000);
	TextDrawTextSize(ATM[6], 69.150032, 17.000000);
	TextDrawAlignment(ATM[6], 1);
	TextDrawColor(ATM[6], 117967359);
	TextDrawSetShadow(ATM[6], 0);
	TextDrawSetOutline(ATM[6], 0);
	TextDrawBackgroundColor(ATM[6], 255);
	TextDrawFont(ATM[6], 4);
	TextDrawSetProportional(ATM[6], 0);
	TextDrawSetShadow(ATM[6], 0);

	ATM[7] = TextDrawCreate(298.199798, 208.122406, "LD_SPAC:white");
	TextDrawLetterSize(ATM[7], 0.000000, 0.000000);
	TextDrawTextSize(ATM[7], 69.150032, 17.000000);
	TextDrawAlignment(ATM[7], 1);
	TextDrawColor(ATM[7], 117967359);
	TextDrawSetShadow(ATM[7], 0);
	TextDrawSetOutline(ATM[7], 0);
	TextDrawBackgroundColor(ATM[7], 255);
	TextDrawFont(ATM[7], 4);
	TextDrawSetProportional(ATM[7], 0);
	TextDrawSetShadow(ATM[7], 0);

	ATM[8] = TextDrawCreate(297.799743, 237.222503, "LD_SPAC:white");
	TextDrawLetterSize(ATM[8], 0.000000, 0.000000);
	TextDrawTextSize(ATM[8], 69.150032, 17.000000);
	TextDrawAlignment(ATM[8], 1);
	TextDrawColor(ATM[8], 117967359);
	TextDrawSetShadow(ATM[8], 0);
	TextDrawSetOutline(ATM[8], 0);
	TextDrawBackgroundColor(ATM[8], 255);
	TextDrawFont(ATM[8], 4);
	TextDrawSetProportional(ATM[8], 0);
	TextDrawSetShadow(ATM[8], 0);

	ATM[9] = TextDrawCreate(306.799865, 262.789276, "LD_SPAC:white");
	TextDrawLetterSize(ATM[9], 0.000000, 0.000000);
	TextDrawTextSize(ATM[9], 29.000000, 11.000000);
	TextDrawAlignment(ATM[9], 1);
	TextDrawColor(ATM[9], -2147483393);
	TextDrawSetShadow(ATM[9], 0);
	TextDrawSetOutline(ATM[9], 0);
	TextDrawBackgroundColor(ATM[9], 255);
	TextDrawFont(ATM[9], 4);
	TextDrawSetProportional(ATM[9], 0);
	TextDrawSetShadow(ATM[9], 0);

	ATM[10] = TextDrawCreate(313.500030, 182.977722, "WITHDRAW");
	TextDrawLetterSize(ATM[10], 0.207500, 1.021333);
	TextDrawTextSize(ATM[10], 351.989990, 5.000000);
	TextDrawAlignment(ATM[10], 1);
	TextDrawColor(ATM[10], -1);
	TextDrawUseBox(ATM[10], 1);
	TextDrawBoxColor(ATM[10], -256);
	TextDrawSetShadow(ATM[10], 0);
	TextDrawSetOutline(ATM[10], 0);
	TextDrawBackgroundColor(ATM[10], 255);
	TextDrawFont(ATM[10], 1);
	TextDrawSetProportional(ATM[10], 1);
	TextDrawSetShadow(ATM[10], 0);
	TextDrawSetSelectable(ATM[10], true);

	ATM[11] = TextDrawCreate(333.399963, 211.599975, "PAYMENT PHONE");
	TextDrawLetterSize(ATM[11], 0.207500, 1.021333);
	TextDrawTextSize(ATM[11], 5.000000, 61.000000);
	TextDrawAlignment(ATM[11], 2);
	TextDrawColor(ATM[11], -1);
	TextDrawUseBox(ATM[11], 1);
	TextDrawBoxColor(ATM[11], -256);
	TextDrawSetShadow(ATM[11], 0);
	TextDrawSetOutline(ATM[11], 0);
	TextDrawBackgroundColor(ATM[11], 255);
	TextDrawFont(ATM[11], 1);
	TextDrawSetProportional(ATM[11], 1);
	TextDrawSetShadow(ATM[11], 0);
	TextDrawSetSelectable(ATM[11], true);

	ATM[12] = TextDrawCreate(333.399902, 241.166656, "PAYMENT HOME");
	TextDrawLetterSize(ATM[12], 0.207500, 1.021333);
	TextDrawTextSize(ATM[12], 5.010000, 56.000000);
	TextDrawAlignment(ATM[12], 2);
	TextDrawColor(ATM[12], -1);
	TextDrawUseBox(ATM[12], 1);
	TextDrawBoxColor(ATM[12], -256);
	TextDrawSetShadow(ATM[12], 0);
	TextDrawSetOutline(ATM[12], 0);
	TextDrawBackgroundColor(ATM[12], 255);
	TextDrawFont(ATM[12], 1);
	TextDrawSetProportional(ATM[12], 1);
	TextDrawSetShadow(ATM[12], 0);
	TextDrawSetSelectable(ATM[12], true);

	ATM[13] = TextDrawCreate(320.799896, 263.266662, "CLOSE");
	TextDrawLetterSize(ATM[13], 0.207500, 1.021333);
	TextDrawTextSize(ATM[13], 5.000000, 20.000000);
	TextDrawAlignment(ATM[13], 2);
	TextDrawColor(ATM[13], -1);
	TextDrawUseBox(ATM[13], 1);
	TextDrawBoxColor(ATM[13], -256);
	TextDrawSetShadow(ATM[13], 0);
	TextDrawSetOutline(ATM[13], 0);
	TextDrawBackgroundColor(ATM[13], 255);
	TextDrawFont(ATM[13], 1);
	TextDrawSetProportional(ATM[13], 1);
	TextDrawSetShadow(ATM[13], 0);
	TextDrawSetSelectable(ATM[13], true);


	// gps
    GPSEnabled[0] = TextDrawCreate(87.000000, 318.062500, "ENABLED");
	TextDrawLetterSize(GPSEnabled[0], 0.276500, 1.110001);
	TextDrawAlignment(GPSEnabled[0], 2);
	TextDrawColor(GPSEnabled[0], 1673350911);
	TextDrawSetShadow(GPSEnabled[0], 0);
	TextDrawSetOutline(GPSEnabled[0], 1);
	TextDrawBackgroundColor(GPSEnabled[0], 51);
	TextDrawFont(GPSEnabled[0], 2);
	TextDrawSetProportional(GPSEnabled[0], 1);

	GPSEnabled[1] = TextDrawCreate(135.000000, 317.375000, "usebox");
	TextDrawLetterSize(GPSEnabled[1], -0.004499, 1.252500);
	TextDrawTextSize(GPSEnabled[1], 37.000000, -2.187500);
	TextDrawAlignment(GPSEnabled[1], 1);
	TextDrawColor(GPSEnabled[1], 0);
	TextDrawUseBox(GPSEnabled[1], true);
	TextDrawBoxColor(GPSEnabled[1], 102);
	TextDrawSetShadow(GPSEnabled[1], 0);
	TextDrawSetOutline(GPSEnabled[1], 0);
	TextDrawFont(GPSEnabled[1], 0);

	GPSEnabled[2] = TextDrawCreate(86.000000, 309.312500, "GPS-Navigator");
	TextDrawLetterSize(GPSEnabled[2], 0.323499, 0.908749);
	TextDrawAlignment(GPSEnabled[2], 2);
	TextDrawColor(GPSEnabled[2], -1);
	TextDrawSetShadow(GPSEnabled[2], 0);
	TextDrawSetOutline(GPSEnabled[2], 1);
	TextDrawBackgroundColor(GPSEnabled[2], 51);
	TextDrawFont(GPSEnabled[2], 3);
	TextDrawSetProportional(GPSEnabled[2], 1);
	/// soob
	CheckSobClosed = TextDrawCreate(0.000000, 0.000000, "LD_SPAC:white");
	TextDrawLetterSize(CheckSobClosed, 0.000000, 0.000000);
	TextDrawTextSize(CheckSobClosed, 640.000000, 448.000000);
	TextDrawAlignment(CheckSobClosed, 1);
	TextDrawColor(CheckSobClosed, 255);
	TextDrawSetShadow(CheckSobClosed, 0);
	TextDrawSetOutline(CheckSobClosed, 0);
	TextDrawBackgroundColor(CheckSobClosed, 0x00000000);
	TextDrawFont(CheckSobClosed, 4);
	// get guns menu


	weapmenu[0] = TextDrawCreate(196.000000, 131.355529, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[0], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[0], 246.000000, 191.000000);
	TextDrawAlignment(weapmenu[0], 1);
	TextDrawColor(weapmenu[0], 412024831);
	TextDrawSetShadow(weapmenu[0], 0);
	TextDrawSetOutline(weapmenu[0], 0);
	TextDrawBackgroundColor(weapmenu[0], 255);
	TextDrawFont(weapmenu[0], 4);
	TextDrawSetProportional(weapmenu[0], 0);
	TextDrawSetShadow(weapmenu[0], 0);

	weapmenu[1] = TextDrawCreate(197.200073, 132.933441, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[1], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[1], 243.190994, 188.100494);
	TextDrawAlignment(weapmenu[1], 1);
	TextDrawColor(weapmenu[1], 252777471);
	TextDrawSetShadow(weapmenu[1], 0);
	TextDrawSetOutline(weapmenu[1], 0);
	TextDrawBackgroundColor(weapmenu[1], 255);
	TextDrawFont(weapmenu[1], 4);
	TextDrawSetProportional(weapmenu[1], 0);
	TextDrawSetShadow(weapmenu[1], 0);


	weapmenu[2] = TextDrawCreate(356.099914, 134.055603, "WEAPON MENU");
	TextDrawLetterSize(weapmenu[2], 0.360000, 1.288888);
	TextDrawAlignment(weapmenu[2], 3);
	TextDrawColor(weapmenu[2], -1);
	TextDrawSetShadow(weapmenu[2], 0);
	TextDrawSetOutline(weapmenu[2], 0);
	TextDrawBackgroundColor(weapmenu[2], 255);
	TextDrawFont(weapmenu[2], 1);
	TextDrawSetProportional(weapmenu[2], 1);
	TextDrawSetShadow(weapmenu[2], 0);

	weapmenu[3] = TextDrawCreate(195.799896, 147.533309, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[3], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[3], 245.549697, 1.060000);
	TextDrawAlignment(weapmenu[3], 1);
	TextDrawColor(weapmenu[3], 412024831);
	TextDrawSetShadow(weapmenu[3], 0);
	TextDrawSetOutline(weapmenu[3], 0);
	TextDrawBackgroundColor(weapmenu[3], 255);
	TextDrawFont(weapmenu[3], 4);
	TextDrawSetProportional(weapmenu[3], 0);
	TextDrawSetShadow(weapmenu[3], 0);

	weapmenu[4] = TextDrawCreate(356.399871, 131.633361, "");
	TextDrawLetterSize(weapmenu[4], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[4], 20.000000, 16.000000);
	TextDrawAlignment(weapmenu[4], 1);
	TextDrawColor(weapmenu[4], -1);
	TextDrawSetShadow(weapmenu[4], 0);
	TextDrawSetOutline(weapmenu[4], 0);
	TextDrawBackgroundColor(weapmenu[4], -256);
	TextDrawFont(weapmenu[4], 5);
	TextDrawSetProportional(weapmenu[4], 0);
	TextDrawSetShadow(weapmenu[4], 0);
	TextDrawSetPreviewModel(weapmenu[4], 2061);
	TextDrawSetPreviewRot(weapmenu[4], 0.000000, 0.000000, 0.000000, 1.000000);

	weapmenu[5] = TextDrawCreate(206.799468, 155.577468, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[5], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[5], 58.000000, 70.000000);
	TextDrawAlignment(weapmenu[5], 1);
	TextDrawColor(weapmenu[5], 412024831);
	TextDrawSetShadow(weapmenu[5], 0);
	TextDrawSetOutline(weapmenu[5], 0);
	TextDrawBackgroundColor(weapmenu[5], 255);
	TextDrawFont(weapmenu[5], 4);
	TextDrawSetProportional(weapmenu[5], 0);
	TextDrawSetShadow(weapmenu[5], 0);

	weapmenu[6] = TextDrawCreate(271.299468, 155.655288, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[6], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[6], 58.000000, 70.000000);
	TextDrawAlignment(weapmenu[6], 1);
	TextDrawColor(weapmenu[6], 412024831);
	TextDrawSetShadow(weapmenu[6], 0);
	TextDrawSetOutline(weapmenu[6], 0);
	TextDrawBackgroundColor(weapmenu[6], 255);
	TextDrawFont(weapmenu[6], 4);
	TextDrawSetProportional(weapmenu[6], 0);
	TextDrawSetShadow(weapmenu[6], 0);

	weapmenu[7] = TextDrawCreate(335.099487, 155.855300, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[7], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[7], 58.000000, 70.000000);
	TextDrawAlignment(weapmenu[7], 1);
	TextDrawColor(weapmenu[7], 412024831);
	TextDrawSetShadow(weapmenu[7], 0);
	TextDrawSetOutline(weapmenu[7], 0);
	TextDrawBackgroundColor(weapmenu[7], 255);
	TextDrawFont(weapmenu[7], 4);
	TextDrawSetProportional(weapmenu[7], 0);
	TextDrawSetShadow(weapmenu[7], 0);

	weapmenu[8] = TextDrawCreate(206.899566, 235.499771, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[8], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[8], 58.000000, 70.000000);
	TextDrawAlignment(weapmenu[8], 1);
	TextDrawColor(weapmenu[8], 412024831);
	TextDrawSetShadow(weapmenu[8], 0);
	TextDrawSetOutline(weapmenu[8], 0);
	TextDrawBackgroundColor(weapmenu[8], 255);
	TextDrawFont(weapmenu[8], 4);
	TextDrawSetProportional(weapmenu[8], 0);
	TextDrawSetShadow(weapmenu[8], 0);

	weapmenu[9] = TextDrawCreate(271.999664, 235.188491, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[9], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[9], 58.000000, 70.000000);
	TextDrawAlignment(weapmenu[9], 1);
	TextDrawColor(weapmenu[9], 412024831);
	TextDrawSetShadow(weapmenu[9], 0);
	TextDrawSetOutline(weapmenu[9], 0);
	TextDrawBackgroundColor(weapmenu[9], 255);
	TextDrawFont(weapmenu[9], 4);
	TextDrawSetProportional(weapmenu[9], 0);
	TextDrawSetShadow(weapmenu[9], 0);

	weapmenu[10] = TextDrawCreate(335.499572, 234.932846, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[10], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[10], 58.000000, 70.000000);
	TextDrawAlignment(weapmenu[10], 1);
	TextDrawColor(weapmenu[10], 412024831);
	TextDrawSetShadow(weapmenu[10], 0);
	TextDrawSetOutline(weapmenu[10], 0);
	TextDrawBackgroundColor(weapmenu[10], 255);
	TextDrawFont(weapmenu[10], 4);
	TextDrawSetProportional(weapmenu[10], 0);
	TextDrawSetShadow(weapmenu[10], 0);

	weapmenu[11] = TextDrawCreate(207.299530, 156.799423, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[11], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[11], 57.000000, 67.830177);
	TextDrawAlignment(weapmenu[11], 1);
	TextDrawColor(weapmenu[11], 117967359);
	TextDrawSetShadow(weapmenu[11], 0);
	TextDrawSetOutline(weapmenu[11], 0);
	TextDrawBackgroundColor(weapmenu[11], 255);
	TextDrawFont(weapmenu[11], 4);
	TextDrawSetProportional(weapmenu[11], 0);
	TextDrawSetShadow(weapmenu[11], 0);

	weapmenu[12] = TextDrawCreate(271.999511, 156.755050, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[12], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[12], 57.000000, 67.890190);
	TextDrawAlignment(weapmenu[12], 1);
	TextDrawColor(weapmenu[12], 117967359);
	TextDrawSetShadow(weapmenu[12], 0);
	TextDrawSetOutline(weapmenu[12], 0);
	TextDrawBackgroundColor(weapmenu[12], 255);
	TextDrawFont(weapmenu[12], 4);
	TextDrawSetProportional(weapmenu[12], 0);
	TextDrawSetShadow(weapmenu[12], 0);

	weapmenu[13] = TextDrawCreate(335.899627, 156.543777, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[13], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[13], 57.000000, 68.160247);
	TextDrawAlignment(weapmenu[13], 1);
	TextDrawColor(weapmenu[13], 117967359);
	TextDrawSetShadow(weapmenu[13], 0);
	TextDrawSetOutline(weapmenu[13], 0);
	TextDrawBackgroundColor(weapmenu[13], 255);
	TextDrawFont(weapmenu[13], 4);
	TextDrawSetProportional(weapmenu[13], 0);
	TextDrawSetShadow(weapmenu[13], 0);

	weapmenu[14] = TextDrawCreate(207.199554, 236.188247, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[14], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[14], 57.000000, 68.160247);
	TextDrawAlignment(weapmenu[14], 1);
	TextDrawColor(weapmenu[14], 117967359);
	TextDrawSetShadow(weapmenu[14], 0);
	TextDrawSetOutline(weapmenu[14], 0);
	TextDrawBackgroundColor(weapmenu[14], 255);
	TextDrawFont(weapmenu[14], 4);
	TextDrawSetProportional(weapmenu[14], 0);
	TextDrawSetShadow(weapmenu[14], 0);

	weapmenu[15] = TextDrawCreate(272.099731, 235.443832, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[15], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[15], 57.000000, 68.940414);
	TextDrawAlignment(weapmenu[15], 1);
	TextDrawColor(weapmenu[15], 117967359);
	TextDrawSetShadow(weapmenu[15], 0);
	TextDrawSetOutline(weapmenu[15], 0);
	TextDrawBackgroundColor(weapmenu[15], 255);
	TextDrawFont(weapmenu[15], 4);
	TextDrawSetProportional(weapmenu[15], 0);
	TextDrawSetShadow(weapmenu[15], 0);

	weapmenu[16] = TextDrawCreate(335.999694, 235.255081, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[16], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[16], 57.000000, 69.170463);
	TextDrawAlignment(weapmenu[16], 1);
	TextDrawColor(weapmenu[16], 117967359);
	TextDrawSetShadow(weapmenu[16], 0);
	TextDrawSetOutline(weapmenu[16], 0);
	TextDrawBackgroundColor(weapmenu[16], 255);
	TextDrawFont(weapmenu[16], 4);
	TextDrawSetProportional(weapmenu[16], 0);
	TextDrawSetShadow(weapmenu[16], 0);

	weapmenu[17] = TextDrawCreate(207.000000, 202.288894, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[17], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[17], 58.000000, 1.000000);
	TextDrawAlignment(weapmenu[17], 1);
	TextDrawColor(weapmenu[17], 412024831);
	TextDrawSetShadow(weapmenu[17], 0);
	TextDrawSetOutline(weapmenu[17], 0);
	TextDrawBackgroundColor(weapmenu[17], 255);
	TextDrawFont(weapmenu[17], 4);
	TextDrawSetProportional(weapmenu[17], 0);
	TextDrawSetShadow(weapmenu[17], 0);

	weapmenu[18] = TextDrawCreate(271.600036, 202.388900, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[18], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[18], 57.780036, 1.000000);
	TextDrawAlignment(weapmenu[18], 1);
	TextDrawColor(weapmenu[18], 412024831);
	TextDrawSetShadow(weapmenu[18], 0);
	TextDrawSetOutline(weapmenu[18], 0);
	TextDrawBackgroundColor(weapmenu[18], 255);
	TextDrawFont(weapmenu[18], 4);
	TextDrawSetProportional(weapmenu[18], 0);
	TextDrawSetShadow(weapmenu[18], 0);

	weapmenu[19] = TextDrawCreate(335.500091, 202.366714, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[19], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[19], 57.780036, 1.000000);
	TextDrawAlignment(weapmenu[19], 1);
	TextDrawColor(weapmenu[19], 412024831);
	TextDrawSetShadow(weapmenu[19], 0);
	TextDrawSetOutline(weapmenu[19], 0);
	TextDrawBackgroundColor(weapmenu[19], 255);
	TextDrawFont(weapmenu[19], 4);
	TextDrawSetProportional(weapmenu[19], 0);
	TextDrawSetShadow(weapmenu[19], 0);

	weapmenu[20] = TextDrawCreate(207.100128, 281.811126, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[20], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[20], 57.680557, -1.000000);
	TextDrawAlignment(weapmenu[20], 1);
	TextDrawColor(weapmenu[20], 412024831);
	TextDrawSetShadow(weapmenu[20], 0);
	TextDrawSetOutline(weapmenu[20], 0);
	TextDrawBackgroundColor(weapmenu[20], 255);
	TextDrawFont(weapmenu[20], 4);
	TextDrawSetProportional(weapmenu[20], 0);
	TextDrawSetShadow(weapmenu[20], 0);

	weapmenu[21] = TextDrawCreate(272.400268, 281.933319, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[21], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[21], 57.000000, -0.590001);
	TextDrawAlignment(weapmenu[21], 1);
	TextDrawColor(weapmenu[21], 412024831);
	TextDrawSetShadow(weapmenu[21], 0);
	TextDrawSetOutline(weapmenu[21], 0);
	TextDrawBackgroundColor(weapmenu[21], 255);
	TextDrawFont(weapmenu[21], 4);
	TextDrawSetProportional(weapmenu[21], 0);
	TextDrawSetShadow(weapmenu[21], 0);

	weapmenu[22] = TextDrawCreate(335.400268, 282.555541, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[22], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[22], 57.229961, -0.590001);
	TextDrawAlignment(weapmenu[22], 1);
	TextDrawColor(weapmenu[22], 412024831);
	TextDrawSetShadow(weapmenu[22], 0);
	TextDrawSetOutline(weapmenu[22], 0);
	TextDrawBackgroundColor(weapmenu[22], 255);
	TextDrawFont(weapmenu[22], 4);
	TextDrawSetProportional(weapmenu[22], 0);
	TextDrawSetShadow(weapmenu[22], 0);

	weapmenu[23] = TextDrawCreate(224.000061, 204.266754, "DEAGLE");
	TextDrawLetterSize(weapmenu[23], 0.184500, 0.633110);
	TextDrawAlignment(weapmenu[23], 1);
	TextDrawColor(weapmenu[23], -1);
	TextDrawSetShadow(weapmenu[23], 0);
	TextDrawSetOutline(weapmenu[23], 0);
	TextDrawBackgroundColor(weapmenu[23], 255);
	TextDrawFont(weapmenu[23], 1);
	TextDrawSetProportional(weapmenu[23], 1);
	TextDrawSetShadow(weapmenu[23], 0);

	weapmenu[24] = TextDrawCreate(254.800109, 210.789001, "AMMO +100");
	TextDrawLetterSize(weapmenu[24], 0.184500, 0.633110);
	TextDrawAlignment(weapmenu[24], 3);
	TextDrawColor(weapmenu[24], -1);
	TextDrawSetShadow(weapmenu[24], 0);
	TextDrawSetOutline(weapmenu[24], 0);
	TextDrawBackgroundColor(weapmenu[24], 255);
	TextDrawFont(weapmenu[24], 1);
	TextDrawSetProportional(weapmenu[24], 1);
	TextDrawSetShadow(weapmenu[24], 0);

	weapmenu[25] = TextDrawCreate(260.900115, 217.433441, "MATERIALS -300");
	TextDrawLetterSize(weapmenu[25], 0.184500, 0.633110);
	TextDrawAlignment(weapmenu[25], 3);
	TextDrawColor(weapmenu[25], -1);
	TextDrawSetShadow(weapmenu[25], 0);
	TextDrawSetOutline(weapmenu[25], 0);
	TextDrawBackgroundColor(weapmenu[25], 255);
	TextDrawFont(weapmenu[25], 1);
	TextDrawSetProportional(weapmenu[25], 1);
	TextDrawSetShadow(weapmenu[25], 0);

	weapmenu[26] = TextDrawCreate(285.400146, 203.755798, "SHOTGUN");
	TextDrawLetterSize(weapmenu[26], 0.184500, 0.633110);
	TextDrawAlignment(weapmenu[26], 1);
	TextDrawColor(weapmenu[26], -1);
	TextDrawSetShadow(weapmenu[26], 0);
	TextDrawSetOutline(weapmenu[26], 0);
	TextDrawBackgroundColor(weapmenu[26], 255);
	TextDrawFont(weapmenu[26], 1);
	TextDrawSetProportional(weapmenu[26], 1);
	TextDrawSetShadow(weapmenu[26], 0);

	weapmenu[27] = TextDrawCreate(319.000122, 210.044586, "AMMO +100");
	TextDrawLetterSize(weapmenu[27], 0.184500, 0.633110);
	TextDrawAlignment(weapmenu[27], 3);
	TextDrawColor(weapmenu[27], -1);
	TextDrawSetShadow(weapmenu[27], 0);
	TextDrawSetOutline(weapmenu[27], 0);
	TextDrawBackgroundColor(weapmenu[27], 255);
	TextDrawFont(weapmenu[27], 1);
	TextDrawSetProportional(weapmenu[27], 1);
	TextDrawSetShadow(weapmenu[27], 0);

	weapmenu[28] = TextDrawCreate(325.800140, 216.933410, "MATERIALS -300");
	TextDrawLetterSize(weapmenu[28], 0.184500, 0.633110);
	TextDrawAlignment(weapmenu[28], 3);
	TextDrawColor(weapmenu[28], -1);
	TextDrawSetShadow(weapmenu[28], 0);
	TextDrawSetOutline(weapmenu[28], 0);
	TextDrawBackgroundColor(weapmenu[28], 255);
	TextDrawFont(weapmenu[28], 1);
	TextDrawSetProportional(weapmenu[28], 1);
	TextDrawSetShadow(weapmenu[28], 0);

	weapmenu[29] = TextDrawCreate(356.700256, 204.000183, "RIFLE");
	TextDrawLetterSize(weapmenu[29], 0.184500, 0.633110);
	TextDrawAlignment(weapmenu[29], 1);
	TextDrawColor(weapmenu[29], -1);
	TextDrawSetShadow(weapmenu[29], 0);
	TextDrawSetOutline(weapmenu[29], 0);
	TextDrawBackgroundColor(weapmenu[29], 255);
	TextDrawFont(weapmenu[29], 1);
	TextDrawSetProportional(weapmenu[29], 1);
	TextDrawSetShadow(weapmenu[29], 0);

	weapmenu[30] = TextDrawCreate(383.300018, 210.144592, "AMMO +100");
	TextDrawLetterSize(weapmenu[30], 0.184500, 0.633110);
	TextDrawAlignment(weapmenu[30], 3);
	TextDrawColor(weapmenu[30], -1);
	TextDrawSetShadow(weapmenu[30], 0);
	TextDrawSetOutline(weapmenu[30], 0);
	TextDrawBackgroundColor(weapmenu[30], 255);
	TextDrawFont(weapmenu[30], 1);
	TextDrawSetProportional(weapmenu[30], 1);
	TextDrawSetShadow(weapmenu[30], 0);

	weapmenu[31] = TextDrawCreate(389.300292, 216.855590, "MATERIALS -500");
	TextDrawLetterSize(weapmenu[31], 0.184500, 0.633110);
	TextDrawAlignment(weapmenu[31], 3);
	TextDrawColor(weapmenu[31], -1);
	TextDrawSetShadow(weapmenu[31], 0);
	TextDrawSetOutline(weapmenu[31], 0);
	TextDrawBackgroundColor(weapmenu[31], 255);
	TextDrawFont(weapmenu[31], 1);
	TextDrawSetProportional(weapmenu[31], 1);
	TextDrawSetShadow(weapmenu[31], 0);

	weapmenu[32] = TextDrawCreate(226.400268, 282.600280, "M4A1");
	TextDrawLetterSize(weapmenu[32], 0.184500, 0.633110);
	TextDrawAlignment(weapmenu[32], 1);
	TextDrawColor(weapmenu[32], -1);
	TextDrawSetShadow(weapmenu[32], 0);
	TextDrawSetOutline(weapmenu[32], 0);
	TextDrawBackgroundColor(weapmenu[32], 255);
	TextDrawFont(weapmenu[32], 1);
	TextDrawSetProportional(weapmenu[32], 1);
	TextDrawSetShadow(weapmenu[32], 0);

	weapmenu[33] = TextDrawCreate(253.000152, 289.022186, "AMMO +150");
	TextDrawLetterSize(weapmenu[33], 0.184500, 0.633110);
	TextDrawAlignment(weapmenu[33], 3);
	TextDrawColor(weapmenu[33], -1);
	TextDrawSetShadow(weapmenu[33], 0);
	TextDrawSetOutline(weapmenu[33], 0);
	TextDrawBackgroundColor(weapmenu[33], 255);
	TextDrawFont(weapmenu[33], 1);
	TextDrawSetProportional(weapmenu[33], 1);
	TextDrawSetShadow(weapmenu[33], 0);

	weapmenu[34] = TextDrawCreate(260.500183, 295.966644, "MATERIALS -450");
	TextDrawLetterSize(weapmenu[34], 0.184500, 0.633110);
	TextDrawAlignment(weapmenu[34], 3);
	TextDrawColor(weapmenu[34], -1);
	TextDrawSetShadow(weapmenu[34], 0);
	TextDrawSetOutline(weapmenu[34], 0);
	TextDrawBackgroundColor(weapmenu[34], 255);
	TextDrawFont(weapmenu[34], 1);
	TextDrawSetProportional(weapmenu[34], 1);
	TextDrawSetShadow(weapmenu[34], 0);

	weapmenu[35] = TextDrawCreate(291.200347, 283.400329, "AK-47");
	TextDrawLetterSize(weapmenu[35], 0.184500, 0.633110);
	TextDrawAlignment(weapmenu[35], 1);
	TextDrawColor(weapmenu[35], -1);
	TextDrawSetShadow(weapmenu[35], 0);
	TextDrawSetOutline(weapmenu[35], 0);
	TextDrawBackgroundColor(weapmenu[35], 255);
	TextDrawFont(weapmenu[35], 1);
	TextDrawSetProportional(weapmenu[35], 1);
	TextDrawSetShadow(weapmenu[35], 0);

	weapmenu[36] = TextDrawCreate(319.600128, 289.655334, "AMMO +150");
	TextDrawLetterSize(weapmenu[36], 0.184500, 0.633110);
	TextDrawAlignment(weapmenu[36], 3);
	TextDrawColor(weapmenu[36], -1);
	TextDrawSetShadow(weapmenu[36], 0);
	TextDrawSetOutline(weapmenu[36], 0);
	TextDrawBackgroundColor(weapmenu[36], 255);
	TextDrawFont(weapmenu[36], 1);
	TextDrawSetProportional(weapmenu[36], 1);
	TextDrawSetShadow(weapmenu[36], 0);

	weapmenu[37] = TextDrawCreate(326.399688, 296.311035, "MATERIALS -450");
	TextDrawLetterSize(weapmenu[37], 0.184500, 0.633110);
	TextDrawAlignment(weapmenu[37], 3);
	TextDrawColor(weapmenu[37], -1);
	TextDrawSetShadow(weapmenu[37], 0);
	TextDrawSetOutline(weapmenu[37], 0);
	TextDrawBackgroundColor(weapmenu[37], 255);
	TextDrawFont(weapmenu[37], 1);
	TextDrawSetProportional(weapmenu[37], 1);
	TextDrawSetShadow(weapmenu[37], 0);

	weapmenu[38] = TextDrawCreate(357.200408, 283.422515, "MP5");
	TextDrawLetterSize(weapmenu[38], 0.184500, 0.633110);
	TextDrawAlignment(weapmenu[38], 1);
	TextDrawColor(weapmenu[38], -1);
	TextDrawSetShadow(weapmenu[38], 0);
	TextDrawSetOutline(weapmenu[38], 0);
	TextDrawBackgroundColor(weapmenu[38], 255);
	TextDrawFont(weapmenu[38], 1);
	TextDrawSetProportional(weapmenu[38], 1);
	TextDrawSetShadow(weapmenu[38], 0);

	weapmenu[39] = TextDrawCreate(382.700195, 289.455322, "AMMO +100");
	TextDrawLetterSize(weapmenu[39], 0.184500, 0.633110);
	TextDrawAlignment(weapmenu[39], 3);
	TextDrawColor(weapmenu[39], -1);
	TextDrawSetShadow(weapmenu[39], 0);
	TextDrawSetOutline(weapmenu[39], 0);
	TextDrawBackgroundColor(weapmenu[39], 255);
	TextDrawFont(weapmenu[39], 1);
	TextDrawSetProportional(weapmenu[39], 1);
	TextDrawSetShadow(weapmenu[39], 0);

	weapmenu[40] = TextDrawCreate(388.899566, 296.444488, "MATERIALS -250");
	TextDrawLetterSize(weapmenu[40], 0.184500, 0.633110);
	TextDrawAlignment(weapmenu[40], 3);
	TextDrawColor(weapmenu[40], -1);
	TextDrawSetShadow(weapmenu[40], 0);
	TextDrawSetOutline(weapmenu[40], 0);
	TextDrawBackgroundColor(weapmenu[40], 255);
	TextDrawFont(weapmenu[40], 1);
	TextDrawSetProportional(weapmenu[40], 1);
	TextDrawSetShadow(weapmenu[40], 0);

	weapmenu[41] = TextDrawCreate(196.500000, 148.777770, "");
	TextDrawLetterSize(weapmenu[41], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[41], 59.000000, 65.000000);
	TextDrawAlignment(weapmenu[41], 1);
	TextDrawColor(weapmenu[41], -1);
	TextDrawSetShadow(weapmenu[41], 0);
	TextDrawSetOutline(weapmenu[41], 0);
	TextDrawBackgroundColor(weapmenu[41], -256);
	TextDrawFont(weapmenu[41], 5);
	TextDrawSetProportional(weapmenu[41], 0);
	TextDrawSetShadow(weapmenu[41], 0);
	TextDrawSetSelectable(weapmenu[41], true);
	TextDrawSetPreviewModel(weapmenu[41], 348);
	TextDrawSetPreviewRot(weapmenu[41], 0.000000, 0.000000, -200.000000, 1.500000);

	weapmenu[42] = TextDrawCreate(262.899963, 150.400054, "");
	TextDrawLetterSize(weapmenu[42], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[42], 59.000000, 65.000000);
	TextDrawAlignment(weapmenu[42], 1);
	TextDrawColor(weapmenu[42], -1);
	TextDrawSetShadow(weapmenu[42], 0);
	TextDrawSetOutline(weapmenu[42], 0);
	TextDrawBackgroundColor(weapmenu[42], -256);
	TextDrawFont(weapmenu[42], 5);
	TextDrawSetProportional(weapmenu[42], 0);
	TextDrawSetShadow(weapmenu[42], 0);
	TextDrawSetSelectable(weapmenu[42], true);
	TextDrawSetPreviewModel(weapmenu[42], 349);
	TextDrawSetPreviewRot(weapmenu[42], 0.000000, 0.000000, -200.000000, 2.599999);

	weapmenu[43] = TextDrawCreate(327.399963, 149.777832, "");
	TextDrawLetterSize(weapmenu[43], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[43], 59.000000, 65.000000);
	TextDrawAlignment(weapmenu[43], 1);
	TextDrawColor(weapmenu[43], -1);
	TextDrawSetShadow(weapmenu[43], 0);
	TextDrawSetOutline(weapmenu[43], 0);
	TextDrawBackgroundColor(weapmenu[43], -256);
	TextDrawFont(weapmenu[43], 5);
	TextDrawSetProportional(weapmenu[43], 0);
	TextDrawSetShadow(weapmenu[43], 0);
	TextDrawSetSelectable(weapmenu[43], true);
	TextDrawSetPreviewModel(weapmenu[43], 357);
	TextDrawSetPreviewRot(weapmenu[43], 0.000000, 0.000000, -200.000000, 2.599999);

	weapmenu[44] = TextDrawCreate(198.000000, 230.555541, "");
	TextDrawLetterSize(weapmenu[44], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[44], 59.000000, 65.000000);
	TextDrawAlignment(weapmenu[44], 1);
	TextDrawColor(weapmenu[44], -1);
	TextDrawSetShadow(weapmenu[44], 0);
	TextDrawSetOutline(weapmenu[44], 0);
	TextDrawBackgroundColor(weapmenu[44], -256);
	TextDrawFont(weapmenu[44], 5);
	TextDrawSetProportional(weapmenu[44], 0);
	TextDrawSetShadow(weapmenu[44], 0);
	TextDrawSetSelectable(weapmenu[44], true);
	TextDrawSetPreviewModel(weapmenu[44], 356);
	TextDrawSetPreviewRot(weapmenu[44], 0.000000, 0.000000, -200.000000, 2.599999);

	weapmenu[45] = TextDrawCreate(261.940917, 230.499984, "");
	TextDrawLetterSize(weapmenu[45], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[45], 59.000000, 65.000000);
	TextDrawAlignment(weapmenu[45], 1);
	TextDrawColor(weapmenu[45], -1);
	TextDrawSetShadow(weapmenu[45], 0);
	TextDrawSetOutline(weapmenu[45], 0);
	TextDrawBackgroundColor(weapmenu[45], -256);
	TextDrawFont(weapmenu[45], 5);
	TextDrawSetProportional(weapmenu[45], 0);
	TextDrawSetShadow(weapmenu[45], 0);
	TextDrawSetSelectable(weapmenu[45], true);
	TextDrawSetPreviewModel(weapmenu[45], 355);
	TextDrawSetPreviewRot(weapmenu[45], 0.000000, 0.000000, -200.000000, 2.599999);

	weapmenu[46] = TextDrawCreate(315.240661, 226.866638, "");
	TextDrawLetterSize(weapmenu[46], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[46], 82.000000, 75.000000);
	TextDrawAlignment(weapmenu[46], 1);
	TextDrawColor(weapmenu[46], -1);
	TextDrawSetShadow(weapmenu[46], 0);
	TextDrawSetOutline(weapmenu[46], 0);
	TextDrawBackgroundColor(weapmenu[46], -256);
	TextDrawFont(weapmenu[46], 5);
	TextDrawSetProportional(weapmenu[46], 0);
	TextDrawSetShadow(weapmenu[46], 0);
	TextDrawSetSelectable(weapmenu[46], true);
	TextDrawSetPreviewModel(weapmenu[46], 353);
	TextDrawSetPreviewRot(weapmenu[46], 0.000000, 0.000000, -200.000000, 2.599999);

	weapmenu[47] = TextDrawCreate(399.400207, 211.466827, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[47], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[47], 36.000000, 13.000000);
	TextDrawAlignment(weapmenu[47], 1);
	TextDrawColor(weapmenu[47], 117967359);
	TextDrawSetShadow(weapmenu[47], 0);
	TextDrawSetOutline(weapmenu[47], 0);
	TextDrawBackgroundColor(weapmenu[47], 255);
	TextDrawFont(weapmenu[47], 4);
	TextDrawSetProportional(weapmenu[47], 0);
	TextDrawSetShadow(weapmenu[47], 0);

	weapmenu[48] = TextDrawCreate(399.300201, 235.889144, "LD_SPAC:white");
	TextDrawLetterSize(weapmenu[48], 0.000000, 0.000000);
	TextDrawTextSize(weapmenu[48], 36.000000, 13.000000);
	TextDrawAlignment(weapmenu[48], 1);
	TextDrawColor(weapmenu[48], -2147483393);
	TextDrawSetShadow(weapmenu[48], 0);
	TextDrawSetOutline(weapmenu[48], 0);
	TextDrawBackgroundColor(weapmenu[48], 255);
	TextDrawFont(weapmenu[48], 4);
	TextDrawSetProportional(weapmenu[48], 0);
	TextDrawSetShadow(weapmenu[48], 0);


	weapmenu[49] = TextDrawCreate(408.400177, 213.889129, " Take|Mat");
	TextDrawLetterSize(weapmenu[49], 0.184000, 0.890666);
	TextDrawTextSize(weapmenu[49], 430.000000, 5.000000);
	TextDrawAlignment(weapmenu[49], 1);
	TextDrawColor(weapmenu[49], -1);
	TextDrawUseBox(weapmenu[49], 1);
	TextDrawBoxColor(weapmenu[49], -256);
	TextDrawSetShadow(weapmenu[49], 0);
	TextDrawSetOutline(weapmenu[49], 0);
	TextDrawBackgroundColor(weapmenu[49], 255);
	TextDrawFont(weapmenu[49], 1);
	TextDrawSetProportional(weapmenu[49], 1);
	TextDrawSetShadow(weapmenu[49], 0);
	TextDrawSetSelectable(weapmenu[49], true);

	weapmenu[50] = TextDrawCreate(401.100006, 237.133239, "Put|Mat");
	TextDrawLetterSize(weapmenu[50], 0.184000, 0.890666);
	TextDrawTextSize(weapmenu[50], 430.000000, 5.000000);
	TextDrawAlignment(weapmenu[50], 1);
	TextDrawColor(weapmenu[50], -1);
	TextDrawUseBox(weapmenu[50], 1);
	TextDrawBoxColor(weapmenu[50], -256);
	TextDrawSetShadow(weapmenu[50], 0);
	TextDrawSetOutline(weapmenu[50], 0);
	TextDrawBackgroundColor(weapmenu[50], 255);
	TextDrawFont(weapmenu[50], 1);
	TextDrawSetProportional(weapmenu[50], 1);
	TextDrawSetShadow(weapmenu[50], 0);
	TextDrawSetSelectable(weapmenu[50], true);

	weapmenu[51] = TextDrawCreate(430.200103, 132.955505, "X");
	TextDrawLetterSize(weapmenu[51], 0.378998, 1.351111);
	TextDrawTextSize(weapmenu[51], 438.000000, 10.000000);
	TextDrawAlignment(weapmenu[51], 1);
	TextDrawColor(weapmenu[51], -2147483393);
	TextDrawUseBox(weapmenu[51], 1);
	TextDrawBoxColor(weapmenu[51], -256);
	TextDrawSetShadow(weapmenu[51], 0);
	TextDrawSetOutline(weapmenu[51], 0);
	TextDrawBackgroundColor(weapmenu[51], 255);
	TextDrawFont(weapmenu[51], 1);
	TextDrawSetProportional(weapmenu[51], 1);
	TextDrawSetShadow(weapmenu[51], 0);
	TextDrawSetSelectable(weapmenu[51], true);



	/*


 	weapmenu[0] = TextDrawCreate(460.000000, 137.562500, "usebox");
    TextDrawLetterSize(weapmenu[0], 0.000000, 32.009719);
    TextDrawTextSize(weapmenu[0], 133.500000, 0.000000);
    TextDrawAlignment(weapmenu[0], 1);
    TextDrawColor(weapmenu[0], 0);
    TextDrawUseBox(weapmenu[0], true);
    TextDrawBoxColor(weapmenu[0], 102);
    TextDrawSetShadow(weapmenu[0], 0);
    TextDrawSetOutline(weapmenu[0], 0);
    TextDrawFont(weapmenu[0], 0);

    weapmenu[1] = TextDrawCreate(184.500000, 136.062500, "Weapon Menu");
    TextDrawLetterSize(weapmenu[1], 0.449999, 1.600000);
    TextDrawAlignment(weapmenu[1], 1);
    TextDrawColor(weapmenu[1], 548012031);
    TextDrawSetShadow(weapmenu[1], 0);
    TextDrawSetOutline(weapmenu[1], 1);
    TextDrawBackgroundColor(weapmenu[1], 51);
    TextDrawFont(weapmenu[1], 2);
    TextDrawSetProportional(weapmenu[1], 1);

    weapmenu[2] = TextDrawCreate(152.500000, 145.687500, "-");
    TextDrawLetterSize(weapmenu[2], 16.587003, 1.425001);
    TextDrawAlignment(weapmenu[2], 1);
    TextDrawColor(weapmenu[2], 548012031);
    TextDrawSetShadow(weapmenu[2], 0);
    TextDrawSetOutline(weapmenu[2], 0);
    TextDrawBackgroundColor(weapmenu[2], 51);
    TextDrawFont(weapmenu[2], 2);
    TextDrawSetProportional(weapmenu[2], 1);

    weapmenu[3] = TextDrawCreate(211.500000, 166.000000, "usebox");
    TextDrawLetterSize(weapmenu[3], 0.000000, 8.287500);
    TextDrawTextSize(weapmenu[3], 141.000000, 0.000000);
    TextDrawAlignment(weapmenu[3], 1);
    TextDrawColor(weapmenu[3], 0);
    TextDrawUseBox(weapmenu[3], true);
    TextDrawBoxColor(weapmenu[3], 548012031);
    TextDrawSetShadow(weapmenu[3], 0);
    TextDrawSetOutline(weapmenu[3], 0);
    TextDrawFont(weapmenu[3], 0);

    weapmenu[4] = TextDrawCreate(287.500000, 166.125000, "usebox");
    TextDrawLetterSize(weapmenu[4], 0.000000, 8.287500);
    TextDrawTextSize(weapmenu[4], 217.000000, 0.000000);
    TextDrawAlignment(weapmenu[4], 1);
    TextDrawColor(weapmenu[4], 0);
    TextDrawUseBox(weapmenu[4], true);
    TextDrawBoxColor(weapmenu[4], 548012031);
    TextDrawSetShadow(weapmenu[4], 0);
    TextDrawSetOutline(weapmenu[4], 0);
    TextDrawFont(weapmenu[4], 0);

    weapmenu[5] = TextDrawCreate(363.000000, 166.250000, "usebox");
    TextDrawLetterSize(weapmenu[5], 0.000000, 8.287500);
    TextDrawTextSize(weapmenu[5], 292.500000, 0.000000);
    TextDrawAlignment(weapmenu[5], 1);
    TextDrawColor(weapmenu[5], 0);
    TextDrawUseBox(weapmenu[5], true);
    TextDrawBoxColor(weapmenu[5], 548012031);
    TextDrawSetShadow(weapmenu[5], 0);
    TextDrawSetOutline(weapmenu[5], 0);
    TextDrawFont(weapmenu[5], 0);

    weapmenu[6] = TextDrawCreate(211.500000, 300.687500, "usebox");
    TextDrawLetterSize(weapmenu[6], 0.000000, 8.287500);
    TextDrawTextSize(weapmenu[6], 141.000000, 0.000000);
    TextDrawAlignment(weapmenu[6], 1);
    TextDrawColor(weapmenu[6], 0);
    TextDrawUseBox(weapmenu[6], true);
    TextDrawBoxColor(weapmenu[6], 548012031);
    TextDrawSetShadow(weapmenu[6], 0);
    TextDrawSetOutline(weapmenu[6], 0);
    TextDrawFont(weapmenu[6], 0);

    weapmenu[7] = TextDrawCreate(287.500000, 299.937500, "usebox");
    TextDrawLetterSize(weapmenu[7], 0.000000, 8.287500);
    TextDrawTextSize(weapmenu[7], 217.000000, 0.000000);
    TextDrawAlignment(weapmenu[7], 1);
    TextDrawColor(weapmenu[7], 0);
    TextDrawUseBox(weapmenu[7], true);
    TextDrawBoxColor(weapmenu[7], 548012031);
    TextDrawSetShadow(weapmenu[7], 0);
    TextDrawSetOutline(weapmenu[7], 0);
    TextDrawFont(weapmenu[7], 0);

    weapmenu[8] = TextDrawCreate(363.000000, 299.187500, "usebox");
    TextDrawLetterSize(weapmenu[8], 0.000000, 8.287500);
    TextDrawTextSize(weapmenu[8], 292.500000, 0.000000);
    TextDrawAlignment(weapmenu[8], 1);
    TextDrawColor(weapmenu[8], 0);
    TextDrawUseBox(weapmenu[8], true);
    TextDrawBoxColor(weapmenu[8], 548012031);
    TextDrawSetShadow(weapmenu[8], 0);
    TextDrawSetOutline(weapmenu[8], 0);
    TextDrawFont(weapmenu[8], 0);

    weapmenu[9] = TextDrawCreate(212.000000, 168.062500, "usebox");
    TextDrawLetterSize(weapmenu[9], 0.000000, 7.887497);
    TextDrawTextSize(weapmenu[9], 141.000000, 0.000000);
    TextDrawAlignment(weapmenu[9], 1);
    TextDrawColor(weapmenu[9], 0);
    TextDrawUseBox(weapmenu[9], true);
    TextDrawBoxColor(weapmenu[9], 255);
    TextDrawSetShadow(weapmenu[9], 0);
    TextDrawSetOutline(weapmenu[9], 0);
    TextDrawFont(weapmenu[9], 0);

    weapmenu[10] = TextDrawCreate(288.000000, 168.187500, "usebox");
    TextDrawLetterSize(weapmenu[10], 0.000000, 7.837498);
    TextDrawTextSize(weapmenu[10], 217.000000, 0.000000);
    TextDrawAlignment(weapmenu[10], 1);
    TextDrawColor(weapmenu[10], 0);
    TextDrawUseBox(weapmenu[10], true);
    TextDrawBoxColor(weapmenu[10], 255);
    TextDrawSetShadow(weapmenu[10], 0);
    TextDrawSetOutline(weapmenu[10], 0);
    TextDrawFont(weapmenu[10], 0);

    weapmenu[11] = TextDrawCreate(363.500000, 168.312500, "usebox");
    TextDrawLetterSize(weapmenu[11], 0.000000, 7.837498);
    TextDrawTextSize(weapmenu[11], 292.500000, 0.000000);
    TextDrawAlignment(weapmenu[11], 1);
    TextDrawColor(weapmenu[11], 0);
    TextDrawUseBox(weapmenu[11], true);
    TextDrawBoxColor(weapmenu[11], 255);
    TextDrawSetShadow(weapmenu[11], 0);
    TextDrawSetOutline(weapmenu[11], 0);
    TextDrawFont(weapmenu[11], 0);

    weapmenu[12] = TextDrawCreate(212.000000, 302.312500, "usebox");
    TextDrawLetterSize(weapmenu[12], 0.000000, 7.837498);
    TextDrawTextSize(weapmenu[12], 141.000000, 0.000000);
    TextDrawAlignment(weapmenu[12], 1);
    TextDrawColor(weapmenu[12], 0);
    TextDrawUseBox(weapmenu[12], true);
    TextDrawBoxColor(weapmenu[12], 255);
    TextDrawSetShadow(weapmenu[12], 0);
    TextDrawSetOutline(weapmenu[12], 0);
    TextDrawFont(weapmenu[12], 0);

    weapmenu[13] = TextDrawCreate(287.500000, 301.562500, "usebox");
    TextDrawLetterSize(weapmenu[13], 0.000000, 7.887497);
    TextDrawTextSize(weapmenu[13], 217.000000, 0.000000);
    TextDrawAlignment(weapmenu[13], 1);
    TextDrawColor(weapmenu[13], 0);
    TextDrawUseBox(weapmenu[13], true);
    TextDrawBoxColor(weapmenu[13], 255);
    TextDrawSetShadow(weapmenu[13], 0);
    TextDrawSetOutline(weapmenu[13], 0);
    TextDrawFont(weapmenu[13], 0);

    weapmenu[14] = TextDrawCreate(363.500000, 300.812500, "usebox");
    TextDrawLetterSize(weapmenu[14], 0.000000, 7.887497);
    TextDrawTextSize(weapmenu[14], 292.500000, 0.000000);
    TextDrawAlignment(weapmenu[14], 1);
    TextDrawColor(weapmenu[14], 0);
    TextDrawUseBox(weapmenu[14], true);
    TextDrawBoxColor(weapmenu[14], 255);
    TextDrawSetShadow(weapmenu[14], 0);
    TextDrawSetOutline(weapmenu[14], 0);
    TextDrawFont(weapmenu[14], 0);

    weapmenu[15] = TextDrawCreate(135.500000, 292.250000, "LD_SPAC:white");
    TextDrawLetterSize(weapmenu[15], 0.000000, 0.000000);
    TextDrawTextSize(weapmenu[15], 236.500000, -1.750000);
    TextDrawAlignment(weapmenu[15], 1);
    TextDrawColor(weapmenu[15], 548012031);
    TextDrawSetShadow(weapmenu[15], 0);
    TextDrawSetOutline(weapmenu[15], 0);
    TextDrawFont(weapmenu[15], 4);

    weapmenu[16] = TextDrawCreate(372.500000, 135.625000, "LD_SPAC:white");
    TextDrawLetterSize(weapmenu[16], 0.000000, 0.000000);
    TextDrawTextSize(weapmenu[16], -1.500000, 292.687500);
    TextDrawAlignment(weapmenu[16], 1);
    TextDrawColor(weapmenu[16], 548012031);
    TextDrawSetShadow(weapmenu[16], 0);
    TextDrawSetOutline(weapmenu[16], 0);
    TextDrawFont(weapmenu[16], 4);

    weapmenu[17] = TextDrawCreate(144.000000, 242.375000, "name: deagle");
    TextDrawLetterSize(weapmenu[17], 0.149998, 1.442499);
    TextDrawAlignment(weapmenu[17], 1);
    TextDrawColor(weapmenu[17], -1);
    TextDrawSetShadow(weapmenu[17], 0);
    TextDrawSetOutline(weapmenu[17], 1);
    TextDrawBackgroundColor(weapmenu[17], 51);
    TextDrawFont(weapmenu[17], 2);
    TextDrawSetProportional(weapmenu[17], 1);

    weapmenu[18] = TextDrawCreate(144.000000, 255.062500, "Ammo: +100");
    TextDrawLetterSize(weapmenu[18], 0.265498, 1.188748);
    TextDrawAlignment(weapmenu[18], 1);
    TextDrawColor(weapmenu[18], -1);
    TextDrawSetShadow(weapmenu[18], 0);
    TextDrawSetOutline(weapmenu[18], 1);
    TextDrawBackgroundColor(weapmenu[18], 51);
    TextDrawFont(weapmenu[18], 2);
    TextDrawSetProportional(weapmenu[18], 1);

    weapmenu[19] = TextDrawCreate(144.500000, 265.562500, "Materials: -300");
    TextDrawLetterSize(weapmenu[19], 0.174499, 1.630624);
    TextDrawAlignment(weapmenu[19], 1);
    TextDrawColor(weapmenu[19], -1);
    TextDrawSetShadow(weapmenu[19], 0);
    TextDrawSetOutline(weapmenu[19], 1);
    TextDrawBackgroundColor(weapmenu[19], 51);
    TextDrawFont(weapmenu[19], 2);
    TextDrawSetProportional(weapmenu[19], 1);

    weapmenu[20] = TextDrawCreate(220.000000, 241.500000, "Name: ShotGun");
    TextDrawLetterSize(weapmenu[20], 0.186498, 1.718126);
    TextDrawAlignment(weapmenu[20], 1);
    TextDrawColor(weapmenu[20], -1);
    TextDrawSetShadow(weapmenu[20], 0);
    TextDrawSetOutline(weapmenu[20], 1);
    TextDrawBackgroundColor(weapmenu[20], 51);
    TextDrawFont(weapmenu[20], 2);
    TextDrawSetProportional(weapmenu[20], 1);

    weapmenu[21] = TextDrawCreate(219.500000, 254.750000, "AMMO: +100");
    TextDrawLetterSize(weapmenu[21], 0.186498, 1.718126);
    TextDrawAlignment(weapmenu[21], 1);
    TextDrawColor(weapmenu[21], -1);
    TextDrawSetShadow(weapmenu[21], 0);
    TextDrawSetOutline(weapmenu[21], 1);
    TextDrawBackgroundColor(weapmenu[21], 51);
    TextDrawFont(weapmenu[21], 2);
    TextDrawSetProportional(weapmenu[21], 1);

    weapmenu[22] = TextDrawCreate(219.000000, 268.000000, "Materials: -300");
    TextDrawLetterSize(weapmenu[22], 0.176999, 1.731251);
    TextDrawAlignment(weapmenu[22], 1);
    TextDrawColor(weapmenu[22], -1);
    TextDrawSetShadow(weapmenu[22], 0);
    TextDrawSetOutline(weapmenu[22], 1);
    TextDrawBackgroundColor(weapmenu[22], 51);
    TextDrawFont(weapmenu[22], 2);
    TextDrawSetProportional(weapmenu[22], 1);

    weapmenu[23] = TextDrawCreate(296.500000, 243.187500, "NAME: Rifle");
    TextDrawLetterSize(weapmenu[23], 0.244498, 1.722501);
    TextDrawAlignment(weapmenu[23], 1);
    TextDrawColor(weapmenu[23], -1);
    TextDrawSetShadow(weapmenu[23], 0);
    TextDrawSetOutline(weapmenu[23], 1);
    TextDrawBackgroundColor(weapmenu[23], 51);
    TextDrawFont(weapmenu[23], 2);
    TextDrawSetProportional(weapmenu[23], 1);

    weapmenu[24] = TextDrawCreate(295.500000, 256.875000, "Ammo: +100");
    TextDrawLetterSize(weapmenu[24], 0.193999, 1.639376);
    TextDrawAlignment(weapmenu[24], 1);
    TextDrawColor(weapmenu[24], -1);
    TextDrawSetShadow(weapmenu[24], 0);
    TextDrawSetOutline(weapmenu[24], 1);
    TextDrawBackgroundColor(weapmenu[24], 51);
    TextDrawFont(weapmenu[24], 2);
    TextDrawSetProportional(weapmenu[24], 1);

    weapmenu[25] = TextDrawCreate(295.000000, 269.250000, "Materials: -500");
    TextDrawLetterSize(weapmenu[25], 0.171498, 1.595625);
    TextDrawAlignment(weapmenu[25], 1);
    TextDrawColor(weapmenu[25], -1);
    TextDrawSetShadow(weapmenu[25], 0);
    TextDrawSetOutline(weapmenu[25], 1);
    TextDrawBackgroundColor(weapmenu[25], 51);
    TextDrawFont(weapmenu[25], 2);
    TextDrawSetProportional(weapmenu[25], 1);

    weapmenu[26] = TextDrawCreate(144.500000, 377.875000, "Name: M4a1");
    TextDrawLetterSize(weapmenu[26], 0.257999, 1.613126);
    TextDrawAlignment(weapmenu[26], 1);
    TextDrawColor(weapmenu[26], -1);
    TextDrawSetShadow(weapmenu[26], 0);
    TextDrawSetOutline(weapmenu[26], 1);
    TextDrawBackgroundColor(weapmenu[26], 51);
    TextDrawFont(weapmenu[26], 2);
    TextDrawSetProportional(weapmenu[26], 1);

    weapmenu[27] = TextDrawCreate(143.500000, 393.312500, "AMMO: +150");
    TextDrawLetterSize(weapmenu[27], 0.249498, 1.521250);
    TextDrawAlignment(weapmenu[27], 1);
    TextDrawColor(weapmenu[27], -1);
    TextDrawSetShadow(weapmenu[27], 0);
    TextDrawSetOutline(weapmenu[27], 1);
    TextDrawBackgroundColor(weapmenu[27], 51);
    TextDrawFont(weapmenu[27], 2);
    TextDrawSetProportional(weapmenu[27], 1);

    weapmenu[28] = TextDrawCreate(145.500000, 407.875000, "Materials: -450");
    TextDrawLetterSize(weapmenu[28], 0.167998, 1.958750);
    TextDrawAlignment(weapmenu[28], 1);
    TextDrawColor(weapmenu[28], -1);
    TextDrawSetShadow(weapmenu[28], 0);
    TextDrawSetOutline(weapmenu[28], 1);
    TextDrawBackgroundColor(weapmenu[28], 51);
    TextDrawFont(weapmenu[28], 2);
    TextDrawSetProportional(weapmenu[28], 1);

    weapmenu[29] = TextDrawCreate(222.000000, 376.062500, "NAME: AK-47");
    TextDrawLetterSize(weapmenu[29], 0.229498, 1.958750);
    TextDrawAlignment(weapmenu[29], 1);
    TextDrawColor(weapmenu[29], -1);
    TextDrawSetShadow(weapmenu[29], 0);
    TextDrawSetOutline(weapmenu[29], 1);
    TextDrawBackgroundColor(weapmenu[29], 51);
    TextDrawFont(weapmenu[29], 2);
    TextDrawSetProportional(weapmenu[29], 1);

    weapmenu[30] = TextDrawCreate(221.000000, 392.375000, "AMmo: +150");
    TextDrawLetterSize(weapmenu[30], 0.210499, 1.731251);
    TextDrawAlignment(weapmenu[30], 1);
    TextDrawColor(weapmenu[30], -1);
    TextDrawSetShadow(weapmenu[30], 0);
    TextDrawSetOutline(weapmenu[30], 1);
    TextDrawBackgroundColor(weapmenu[30], 51);
    TextDrawFont(weapmenu[30], 2);
    TextDrawSetProportional(weapmenu[30], 1);

    weapmenu[31] = TextDrawCreate(221.000000, 407.375000, "Materials: -450");
    TextDrawLetterSize(weapmenu[31], 0.165499, 1.993749);
    TextDrawAlignment(weapmenu[31], 1);
    TextDrawColor(weapmenu[31], -1);
    TextDrawSetShadow(weapmenu[31], 0);
    TextDrawSetOutline(weapmenu[31], 1);
    TextDrawBackgroundColor(weapmenu[31], 51);
    TextDrawFont(weapmenu[31], 2);
    TextDrawSetProportional(weapmenu[31], 1);

    weapmenu[32] = TextDrawCreate(296.500000, 375.125000, "NAME: MP5");
    TextDrawLetterSize(weapmenu[32], 0.274498, 1.971874);
    TextDrawAlignment(weapmenu[32], 1);
    TextDrawColor(weapmenu[32], -1);
    TextDrawSetShadow(weapmenu[32], 0);
    TextDrawSetOutline(weapmenu[32], 1);
    TextDrawBackgroundColor(weapmenu[32], 51);
    TextDrawFont(weapmenu[32], 2);
    TextDrawSetProportional(weapmenu[32], 1);

    weapmenu[33] = TextDrawCreate(295.000000, 391.875000, "AMMO: +100");
    TextDrawLetterSize(weapmenu[33], 0.237498, 1.845000);
    TextDrawAlignment(weapmenu[33], 1);
    TextDrawColor(weapmenu[33], -1);
    TextDrawSetShadow(weapmenu[33], 0);
    TextDrawSetOutline(weapmenu[33], 1);
    TextDrawBackgroundColor(weapmenu[33], 51);
    TextDrawFont(weapmenu[33], 2);
    TextDrawSetProportional(weapmenu[33], 1);

    weapmenu[34] = TextDrawCreate(295.000000, 408.187500, "Materials: -250");
    TextDrawLetterSize(weapmenu[34], 0.178000, 1.985000);
    TextDrawAlignment(weapmenu[34], 1);
    TextDrawColor(weapmenu[34], -1);
    TextDrawSetShadow(weapmenu[34], 0);
    TextDrawSetOutline(weapmenu[34], 1);
    TextDrawBackgroundColor(weapmenu[34], 51);
    TextDrawFont(weapmenu[34], 2);
    TextDrawSetProportional(weapmenu[34], 1);

    weapmenu[35] = TextDrawCreate(146.500000, 164.937500, "New TextDraw");
    TextDrawLetterSize(weapmenu[35], 0.449999, 1.600000);
    TextDrawTextSize(weapmenu[35], 66.500000, 74.812500);
    TextDrawAlignment(weapmenu[35], 1);
    TextDrawColor(weapmenu[35], -1);
    TextDrawUseBox(weapmenu[35], true);
    TextDrawBoxColor(weapmenu[35], 0);
    TextDrawSetShadow(weapmenu[35], 0);
    TextDrawSetOutline(weapmenu[35], 1);
    TextDrawBackgroundColor(weapmenu[35], -256);
    TextDrawFont(weapmenu[35], 5);
    TextDrawSetProportional(weapmenu[35], 1);
    TextDrawSetSelectable(weapmenu[35], true);
    TextDrawSetPreviewModel(weapmenu[35], 348);
    TextDrawSetPreviewRot(weapmenu[35], 0.000000, 0.000000, 0.000000, 1.000000);

    weapmenu[36] = TextDrawCreate(219.000000, 157.062500, "New TextDraw");
    TextDrawLetterSize(weapmenu[36], 0.449999, 1.600000);
    TextDrawTextSize(weapmenu[36], 84.500000, 97.562500);
    TextDrawAlignment(weapmenu[36], 1);
    TextDrawColor(weapmenu[36], -1);
    TextDrawUseBox(weapmenu[36], true);
    TextDrawBoxColor(weapmenu[36], 0);
    TextDrawSetShadow(weapmenu[36], 0);
    TextDrawSetOutline(weapmenu[36], 1);
    TextDrawBackgroundColor(weapmenu[36], -256);
    TextDrawFont(weapmenu[36], 5);
    TextDrawSetProportional(weapmenu[36], 1);
    TextDrawSetSelectable(weapmenu[36], true);
    TextDrawSetPreviewModel(weapmenu[36], 349);
    TextDrawSetPreviewRot(weapmenu[36], 0.000000, 0.000000, 0.000000, 3.000000);

    weapmenu[37] = TextDrawCreate(299.000000, 165.375000, "New TextDraw");
    TextDrawLetterSize(weapmenu[37], 0.449999, 1.600000);
    TextDrawTextSize(weapmenu[37], 74.000000, 77.000000);
    TextDrawAlignment(weapmenu[37], 1);
    TextDrawColor(weapmenu[37], -1);
    TextDrawUseBox(weapmenu[37], true);
    TextDrawBoxColor(weapmenu[37], 0);
    TextDrawSetShadow(weapmenu[37], 0);
    TextDrawSetOutline(weapmenu[37], 1);
    TextDrawBackgroundColor(weapmenu[37], -256);
    TextDrawFont(weapmenu[37], 5);
    TextDrawSetProportional(weapmenu[37], 1);
    TextDrawSetSelectable(weapmenu[37], true);
    TextDrawSetPreviewModel(weapmenu[37], 357);
    TextDrawSetPreviewRot(weapmenu[37], 0.000000, 0.000000, 0.000000, 2.000000);

    weapmenu[38] = TextDrawCreate(146.000000, 295.312500, "New TextDraw");
    TextDrawLetterSize(weapmenu[38], 0.449999, 1.600000);
    TextDrawTextSize(weapmenu[38], 64.000000, 101.937500);
    TextDrawAlignment(weapmenu[38], 1);
    TextDrawColor(weapmenu[38], -1);
    TextDrawUseBox(weapmenu[38], true);
    TextDrawBoxColor(weapmenu[38], 0);
    TextDrawSetShadow(weapmenu[38], 0);
    TextDrawSetOutline(weapmenu[38], 1);
    TextDrawBackgroundColor(weapmenu[38], -256);
    TextDrawFont(weapmenu[38], 5);
    TextDrawSetProportional(weapmenu[38], 1);
    TextDrawSetSelectable(weapmenu[38], true);
    TextDrawSetPreviewModel(weapmenu[38], 356);
    TextDrawSetPreviewRot(weapmenu[38], 0.000000, 0.000000, 0.000000, 2.000000);

    weapmenu[39] = TextDrawCreate(222.000000, 307.562500, "New TextDraw");
    TextDrawLetterSize(weapmenu[39], 0.449999, 1.600000);
    TextDrawTextSize(weapmenu[39], 68.000000, 71.312500);
    TextDrawAlignment(weapmenu[39], 1);
    TextDrawColor(weapmenu[39], -1);
    TextDrawUseBox(weapmenu[39], true);
    TextDrawBoxColor(weapmenu[39], 0);
    TextDrawSetShadow(weapmenu[39], 0);
    TextDrawSetOutline(weapmenu[39], 1);
    TextDrawBackgroundColor(weapmenu[39], -256);
    TextDrawFont(weapmenu[39], 5);
    TextDrawSetProportional(weapmenu[39], 1);
    TextDrawSetSelectable(weapmenu[39], true);
    TextDrawSetPreviewModel(weapmenu[39], 355);
    TextDrawSetPreviewRot(weapmenu[39], 0.000000, 0.000000, 0.000000, 2.000000);

    weapmenu[40] = TextDrawCreate(297.000000, 297.500000, "New TextDraw");
    TextDrawLetterSize(weapmenu[40], 0.449999, 1.600000);
    TextDrawTextSize(weapmenu[40], 65.000000, 84.875000);
    TextDrawAlignment(weapmenu[40], 1);
    TextDrawColor(weapmenu[40], -1);
    TextDrawUseBox(weapmenu[40], true);
    TextDrawBoxColor(weapmenu[40], 0);
    TextDrawSetShadow(weapmenu[40], 0);
    TextDrawSetOutline(weapmenu[40], 1);
    TextDrawBackgroundColor(weapmenu[40], -256);
    TextDrawFont(weapmenu[40], 5);
    TextDrawSetProportional(weapmenu[40], 1);
    TextDrawSetSelectable(weapmenu[40], true);
    TextDrawSetPreviewModel(weapmenu[40], 353);
    TextDrawSetPreviewRot(weapmenu[40], 0.000000, 0.000000, 0.000000, 2.000000);

    weapmenu[41] = TextDrawCreate(379.000000, 320.250000, "LD_TATT:9gun");
    TextDrawLetterSize(weapmenu[41], 0.000000, 0.000000);
    TextDrawTextSize(weapmenu[41], 75.000000, 79.625000);
    TextDrawAlignment(weapmenu[41], 1);
    TextDrawColor(weapmenu[41], 548012031);
    TextDrawSetShadow(weapmenu[41], 0);
    TextDrawSetOutline(weapmenu[41], 0);
    TextDrawFont(weapmenu[41], 4);

    weapmenu[42] = TextDrawCreate(378.000000, 172.500000, "LD_TATT:9gun2");
    TextDrawLetterSize(weapmenu[42], 0.000000, 0.000000);
    TextDrawTextSize(weapmenu[42], 75.000000, 65.625000);
    TextDrawAlignment(weapmenu[42], 1);
    TextDrawColor(weapmenu[42], 548012031);
    TextDrawSetShadow(weapmenu[42], 0);
    TextDrawSetOutline(weapmenu[42], 0);
    TextDrawFont(weapmenu[42], 4);

    weapmenu[43] = TextDrawCreate(375.000000, 243.250000, "???|?");
    TextDrawLetterSize(weapmenu[43], 0.224500, 1.928123);
    TextDrawTextSize(weapmenu[43], 429.500000, 16.625000);
    TextDrawAlignment(weapmenu[43], 1);
    TextDrawColor(weapmenu[43], 548012031);
    TextDrawUseBox(weapmenu[43], true);
    TextDrawBoxColor(weapmenu[43], 255);
    TextDrawSetShadow(weapmenu[43], 0);
    TextDrawSetOutline(weapmenu[43], 1);
    TextDrawBackgroundColor(weapmenu[43], 51);
    TextDrawFont(weapmenu[43], 2);
    TextDrawSetProportional(weapmenu[43], 1);
    TextDrawSetSelectable(weapmenu[43], true);

    weapmenu[44] = TextDrawCreate(376.000000, 280.125000, "?o?o??|?");
    TextDrawLetterSize(weapmenu[44], 0.241499, 2.247498);
    TextDrawTextSize(weapmenu[44], 434.500000, 14.000000);
    TextDrawAlignment(weapmenu[44], 1);
    TextDrawColor(weapmenu[44], 548012031);
    TextDrawUseBox(weapmenu[44], true);
    TextDrawBoxColor(weapmenu[44], 255);
    TextDrawSetShadow(weapmenu[44], 0);
    TextDrawSetOutline(weapmenu[44], 1);
    TextDrawBackgroundColor(weapmenu[44], 51);
    TextDrawFont(weapmenu[44], 2);
    TextDrawSetProportional(weapmenu[44], 1);
    TextDrawSetSelectable(weapmenu[44], true);

    weapmenu[45] = TextDrawCreate(443.500000, 134.750000, "X");
    TextDrawLetterSize(weapmenu[45], 0.536499, 1.578125);
    TextDrawTextSize(weapmenu[45], 454.000000, 33.250000);
    TextDrawAlignment(weapmenu[45], 1);
    TextDrawColor(weapmenu[45], -16776961);
    TextDrawUseBox(weapmenu[45], true);
    TextDrawBoxColor(weapmenu[45], 255);
    TextDrawSetShadow(weapmenu[45], 0);
    TextDrawSetOutline(weapmenu[45], 0);
    TextDrawBackgroundColor(weapmenu[45], 51);
    TextDrawFont(weapmenu[45], 1);
    TextDrawSetProportional(weapmenu[45], 1);
    TextDrawSetSelectable(weapmenu[45], true);

	*/
	// menu


	menutd[0] = TextDrawCreate(8.852939, 121.983322, "LD_SPAC:white");
	TextDrawLetterSize(menutd[0], 0.000000, 0.000000);
	TextDrawTextSize(menutd[0], 65.260055, 176.000000);
	TextDrawAlignment(menutd[0], 1);
	TextDrawColor(menutd[0], 252777471);
	TextDrawSetShadow(menutd[0], 0);
	TextDrawSetOutline(menutd[0], 0);
	TextDrawBackgroundColor(menutd[0], 255);
	TextDrawFont(menutd[0], 4);
	TextDrawSetProportional(menutd[0], 0);
	TextDrawSetShadow(menutd[0], 0);

	menutd[1] = TextDrawCreate(13.352941, 138.138916, "LD_SPAC:white");
	TextDrawLetterSize(menutd[1], 0.000000, 0.000000);
	TextDrawTextSize(menutd[1], 56.000000, 16.000000);
	TextDrawAlignment(menutd[1], 1);
	TextDrawColor(menutd[1], 117967359);
	TextDrawSetShadow(menutd[1], 0);
	TextDrawSetOutline(menutd[1], 0);
	TextDrawBackgroundColor(menutd[1], 255);
	TextDrawFont(menutd[1], 4);
	TextDrawSetProportional(menutd[1], 0);
	TextDrawSetShadow(menutd[1], 0);

	menutd[2] = TextDrawCreate(13.352941, 155.439971, "LD_SPAC:white");
	TextDrawLetterSize(menutd[2], 0.000000, 0.000000);
	TextDrawTextSize(menutd[2], 56.000000, 16.000000);
	TextDrawAlignment(menutd[2], 1);
	TextDrawColor(menutd[2], 117967359);
	TextDrawSetShadow(menutd[2], 0);
	TextDrawSetOutline(menutd[2], 0);
	TextDrawBackgroundColor(menutd[2], 255);
	TextDrawFont(menutd[2], 4);
	TextDrawSetProportional(menutd[2], 0);
	TextDrawSetShadow(menutd[2], 0);

	menutd[3] = TextDrawCreate(13.252935, 172.551925, "LD_SPAC:white");
	TextDrawLetterSize(menutd[3], 0.000000, 0.000000);
	TextDrawTextSize(menutd[3], 56.000000, 16.000000);
	TextDrawAlignment(menutd[3], 1);
	TextDrawColor(menutd[3], 117967359);
	TextDrawSetShadow(menutd[3], 0);
	TextDrawSetOutline(menutd[3], 0);
	TextDrawBackgroundColor(menutd[3], 255);
	TextDrawFont(menutd[3], 4);
	TextDrawSetProportional(menutd[3], 0);
	TextDrawSetShadow(menutd[3], 0);

	menutd[4] = TextDrawCreate(13.352943, 190.353027, "LD_SPAC:white");
	TextDrawLetterSize(menutd[4], 0.000000, 0.000000);
	TextDrawTextSize(menutd[4], 56.000000, 16.000000);
	TextDrawAlignment(menutd[4], 1);
	TextDrawColor(menutd[4], 117967359);
	TextDrawSetShadow(menutd[4], 0);
	TextDrawSetOutline(menutd[4], 0);
	TextDrawBackgroundColor(menutd[4], 255);
	TextDrawFont(menutd[4], 4);
	TextDrawSetProportional(menutd[4], 0);
	TextDrawSetShadow(menutd[4], 0);

	menutd[5] = TextDrawCreate(13.352943, 207.654083, "LD_SPAC:white");
	TextDrawLetterSize(menutd[5], 0.000000, 0.000000);
	TextDrawTextSize(menutd[5], 56.000000, 16.000000);
	TextDrawAlignment(menutd[5], 1);
	TextDrawColor(menutd[5], 117967359);
	TextDrawSetShadow(menutd[5], 0);
	TextDrawSetOutline(menutd[5], 0);
	TextDrawBackgroundColor(menutd[5], 255);
	TextDrawFont(menutd[5], 4);
	TextDrawSetProportional(menutd[5], 0);
	TextDrawSetShadow(menutd[5], 0);

	menutd[6] = TextDrawCreate(13.352943, 224.855133, "LD_SPAC:white");
	TextDrawLetterSize(menutd[6], 0.000000, 0.000000);
	TextDrawTextSize(menutd[6], 56.000000, 16.000000);
	TextDrawAlignment(menutd[6], 1);
	TextDrawColor(menutd[6], 117967359);
	TextDrawSetShadow(menutd[6], 0);
	TextDrawSetOutline(menutd[6], 0);
	TextDrawBackgroundColor(menutd[6], 255);
	TextDrawFont(menutd[6], 4);
	TextDrawSetProportional(menutd[6], 0);
	TextDrawSetShadow(menutd[6], 0);

	menutd[7] = TextDrawCreate(13.352943, 242.156188, "LD_SPAC:white");
	TextDrawLetterSize(menutd[7], 0.000000, 0.000000);
	TextDrawTextSize(menutd[7], 56.000000, 16.000000);
	TextDrawAlignment(menutd[7], 1);
	TextDrawColor(menutd[7], 117967359);
	TextDrawSetShadow(menutd[7], 0);
	TextDrawSetOutline(menutd[7], 0);
	TextDrawBackgroundColor(menutd[7], 255);
	TextDrawFont(menutd[7], 4);
	TextDrawSetProportional(menutd[7], 0);
	TextDrawSetShadow(menutd[7], 0);

	menutd[8] = TextDrawCreate(13.452943, 259.257232, "LD_SPAC:white");
	TextDrawLetterSize(menutd[8], 0.000000, 0.000000);
	TextDrawTextSize(menutd[8], 56.000000, 16.000000);
	TextDrawAlignment(menutd[8], 1);
	TextDrawColor(menutd[8], 117967359);
	TextDrawSetShadow(menutd[8], 0);
	TextDrawSetOutline(menutd[8], 0);
	TextDrawBackgroundColor(menutd[8], 255);
	TextDrawFont(menutd[8], 4);
	TextDrawSetProportional(menutd[8], 0);
	TextDrawSetShadow(menutd[8], 0);

	menutd[9] = TextDrawCreate(13.452943, 276.458282, "LD_SPAC:white");
	TextDrawLetterSize(menutd[9], 0.000000, 0.000000);
	TextDrawTextSize(menutd[9], 56.000000, 16.000000);
	TextDrawAlignment(menutd[9], 1);
	TextDrawColor(menutd[9], 117967359);
	TextDrawSetShadow(menutd[9], 0);
	TextDrawSetOutline(menutd[9], 0);
	TextDrawBackgroundColor(menutd[9], 255);
	TextDrawFont(menutd[9], 4);
	TextDrawSetProportional(menutd[9], 0);
	TextDrawSetShadow(menutd[9], 0);

	menutd[10] = TextDrawCreate(30.600009, 125.733337, "MENU");
	TextDrawLetterSize(menutd[10], 0.242500, 0.909333);
	TextDrawAlignment(menutd[10], 1);
	TextDrawColor(menutd[10], -1);
	TextDrawSetShadow(menutd[10], 0);
	TextDrawSetOutline(menutd[10], 0);
	TextDrawBackgroundColor(menutd[10], 255);
	TextDrawFont(menutd[10], 1);
	TextDrawSetProportional(menutd[10], 1);
	TextDrawSetShadow(menutd[10], 0);

	menutd[11] = TextDrawCreate(22.699998, 141.333282, "SETTINGS");
	TextDrawLetterSize(menutd[11], 0.242500, 0.909333);
	TextDrawTextSize(menutd[11], 59.000000, 5.000000);
	TextDrawAlignment(menutd[11], 1);
	TextDrawColor(menutd[11], -1);
	TextDrawUseBox(menutd[11], 1);
	TextDrawBoxColor(menutd[11], -256);
	TextDrawSetShadow(menutd[11], 0);
	TextDrawSetOutline(menutd[11], 0);
	TextDrawBackgroundColor(menutd[11], 255);
	TextDrawFont(menutd[11], 1);
	TextDrawSetProportional(menutd[11], 1);
	TextDrawSetShadow(menutd[11], 0);
	TextDrawSetSelectable(menutd[11], true);

	menutd[12] = TextDrawCreate(18.999996, 157.788909, "STATISTICS");
	TextDrawLetterSize(menutd[12], 0.242500, 0.909333);
	TextDrawTextSize(menutd[12], 62.000000, 5.000000);
	TextDrawAlignment(menutd[12], 1);
	TextDrawColor(menutd[12], -1);
	TextDrawUseBox(menutd[12], 1);
	TextDrawBoxColor(menutd[12], -256);
	TextDrawSetShadow(menutd[12], 0);
	TextDrawSetOutline(menutd[12], 0);
	TextDrawBackgroundColor(menutd[12], 255);
	TextDrawFont(menutd[12], 1);
	TextDrawSetProportional(menutd[12], 1);
	TextDrawSetShadow(menutd[12], 0);
	TextDrawSetSelectable(menutd[12], true);

	menutd[13] = TextDrawCreate(17.999994, 175.288970, "COMMANDS");
	TextDrawLetterSize(menutd[13], 0.242500, 0.909333);
	TextDrawTextSize(menutd[13], 65.000000, 5.000000);
	TextDrawAlignment(menutd[13], 1);
	TextDrawColor(menutd[13], -1);
	TextDrawUseBox(menutd[13], 1);
	TextDrawBoxColor(menutd[13], -256);
	TextDrawSetShadow(menutd[13], 0);
	TextDrawSetOutline(menutd[13], 0);
	TextDrawBackgroundColor(menutd[13], 255);
	TextDrawFont(menutd[13], 1);
	TextDrawSetProportional(menutd[13], 1);
	TextDrawSetShadow(menutd[13], 0);
	TextDrawSetSelectable(menutd[13], true);

	menutd[14] = TextDrawCreate(25.899995, 193.433441, "REPORT");
	TextDrawLetterSize(menutd[14], 0.242500, 0.909333);
	TextDrawTextSize(menutd[14], 55.000000, 5.000000);
	TextDrawAlignment(menutd[14], 1);
	TextDrawColor(menutd[14], -1);
	TextDrawUseBox(menutd[14], 1);
	TextDrawBoxColor(menutd[14], -256);
	TextDrawSetShadow(menutd[14], 0);
	TextDrawSetOutline(menutd[14], 0);
	TextDrawBackgroundColor(menutd[14], 255);
	TextDrawFont(menutd[14], 1);
	TextDrawSetProportional(menutd[14], 1);
	TextDrawSetShadow(menutd[14], 0);
	TextDrawSetSelectable(menutd[14], true);

	menutd[15] = TextDrawCreate(23.199985, 211.355712, "SUPPORT");
	TextDrawLetterSize(menutd[15], 0.242500, 0.909333);
	TextDrawTextSize(menutd[15], 58.000000, 5.000000);
	TextDrawAlignment(menutd[15], 1);
	TextDrawColor(menutd[15], -1);
	TextDrawUseBox(menutd[15], 1);
	TextDrawBoxColor(menutd[15], -256);
	TextDrawSetShadow(menutd[15], 0);
	TextDrawSetOutline(menutd[15], 0);
	TextDrawBackgroundColor(menutd[15], 255);
	TextDrawFont(menutd[15], 1);
	TextDrawSetProportional(menutd[15], 1);
	TextDrawSetShadow(menutd[15], 0);
	TextDrawSetSelectable(menutd[15], true);

	menutd[16] = TextDrawCreate(29.499982, 228.755767, "RULES");
	TextDrawLetterSize(menutd[16], 0.242500, 0.909333);
	TextDrawTextSize(menutd[16], 52.000000, 5.000000);
	TextDrawAlignment(menutd[16], 1);
	TextDrawColor(menutd[16], -1);
	TextDrawUseBox(menutd[16], 1);
	TextDrawBoxColor(menutd[16], -256);
	TextDrawSetShadow(menutd[16], 0);
	TextDrawSetOutline(menutd[16], 0);
	TextDrawBackgroundColor(menutd[16], 255);
	TextDrawFont(menutd[16], 1);
	TextDrawSetProportional(menutd[16], 1);
	TextDrawSetShadow(menutd[16], 0);
	TextDrawSetSelectable(menutd[16], true);

	menutd[17] = TextDrawCreate(25.299983, 245.444519, "DONATE");
	TextDrawLetterSize(menutd[17], 0.242500, 0.909333);
	TextDrawTextSize(menutd[17], 58.000000, 5.000000);
	TextDrawAlignment(menutd[17], 1);
	TextDrawColor(menutd[17], -1);
	TextDrawUseBox(menutd[17], 1);
	TextDrawBoxColor(menutd[17], -256);
	TextDrawSetShadow(menutd[17], 0);
	TextDrawSetOutline(menutd[17], 0);
	TextDrawBackgroundColor(menutd[17], 255);
	TextDrawFont(menutd[17], 1);
	TextDrawSetProportional(menutd[17], 1);
	TextDrawSetShadow(menutd[17], 0);
	TextDrawSetSelectable(menutd[17], true);

	menutd[18] = TextDrawCreate(23.399984, 262.277984, "SECURITY");
	TextDrawLetterSize(menutd[18], 0.242500, 0.909333);
	TextDrawTextSize(menutd[18], 59.000000, 5.000000);
	TextDrawAlignment(menutd[18], 1);
	TextDrawColor(menutd[18], -1);
	TextDrawUseBox(menutd[18], 1);
	TextDrawBoxColor(menutd[18], -256);
	TextDrawSetShadow(menutd[18], 0);
	TextDrawSetOutline(menutd[18], 0);
	TextDrawBackgroundColor(menutd[18], 255);
	TextDrawFont(menutd[18], 1);
	TextDrawSetProportional(menutd[18], 1);
	TextDrawSetShadow(menutd[18], 0);
	TextDrawSetSelectable(menutd[18], true);

	menutd[19] = TextDrawCreate(16.599985, 279.922424, "ACCESSORIES");
	TextDrawLetterSize(menutd[19], 0.242500, 0.909333);
	TextDrawTextSize(menutd[19], 66.000000, 5.000000);
	TextDrawAlignment(menutd[19], 1);
	TextDrawColor(menutd[19], -1);
	TextDrawUseBox(menutd[19], 1);
	TextDrawBoxColor(menutd[19], -256);
	TextDrawSetShadow(menutd[19], 0);
	TextDrawSetOutline(menutd[19], 0);
	TextDrawBackgroundColor(menutd[19], 255);
	TextDrawFont(menutd[19], 1);
	TextDrawSetProportional(menutd[19], 1);
	TextDrawSetShadow(menutd[19], 0);
	TextDrawSetSelectable(menutd[19], true);

	// bank menu
	bankmenu[0] = TextDrawCreate(252.500000, 161.222229, "LD_SPAC:white");
	TextDrawLetterSize(bankmenu[0], 0.000000, 0.000000);
	TextDrawTextSize(bankmenu[0], 181.000000, 135.000000);
	TextDrawAlignment(bankmenu[0], 1);
	TextDrawColor(bankmenu[0], 252777471);
	TextDrawSetShadow(bankmenu[0], 0);
	TextDrawSetOutline(bankmenu[0], 0);
	TextDrawBackgroundColor(bankmenu[0], 255);
	TextDrawFont(bankmenu[0], 4);
	TextDrawSetProportional(bankmenu[0], 0);
	TextDrawSetShadow(bankmenu[0], 0);

	bankmenu[1] = TextDrawCreate(321.500000, 213.488906, "LD_POOL:ball");
	TextDrawLetterSize(bankmenu[1], 0.000000, 0.000000);
	TextDrawTextSize(bankmenu[1], 44.000000, 27.000000);
	TextDrawAlignment(bankmenu[1], 1);
	TextDrawColor(bankmenu[1], 412024831);
	TextDrawSetShadow(bankmenu[1], 0);
	TextDrawSetOutline(bankmenu[1], 0);
	TextDrawBackgroundColor(bankmenu[1], 255);
	TextDrawFont(bankmenu[1], 4);
	TextDrawSetProportional(bankmenu[1], 0);
	TextDrawSetShadow(bankmenu[1], 0);

	bankmenu[2] = TextDrawCreate(322.599945, 214.555541, "LD_POOL:ball");
	TextDrawLetterSize(bankmenu[2], 0.000000, 0.000000);
	TextDrawTextSize(bankmenu[2], 41.759872, 24.849996);
	TextDrawAlignment(bankmenu[2], 1);
	TextDrawColor(bankmenu[2], 252777471);
	TextDrawSetShadow(bankmenu[2], 0);
	TextDrawSetOutline(bankmenu[2], 0);
	TextDrawBackgroundColor(bankmenu[2], 255);
	TextDrawFont(bankmenu[2], 4);
	TextDrawSetProportional(bankmenu[2], 0);
	TextDrawSetShadow(bankmenu[2], 0);

	bankmenu[3] = TextDrawCreate(338.900024, 218.177856, "$");
	TextDrawLetterSize(bankmenu[3], 0.400000, 1.600000);
	TextDrawAlignment(bankmenu[3], 1);
	TextDrawColor(bankmenu[3], 8388863);
	TextDrawSetShadow(bankmenu[3], 0);
	TextDrawSetOutline(bankmenu[3], 0);
	TextDrawBackgroundColor(bankmenu[3], 255);
	TextDrawFont(bankmenu[3], 1);
	TextDrawSetProportional(bankmenu[3], 1);
	TextDrawSetShadow(bankmenu[3], 0);

	bankmenu[4] = TextDrawCreate(330.300079, 220.488891, "BANK");
	TextDrawLetterSize(bankmenu[4], 0.288500, 1.344888);
	TextDrawAlignment(bankmenu[4], 1);
	TextDrawColor(bankmenu[4], -1);
	TextDrawSetShadow(bankmenu[4], 0);
	TextDrawSetOutline(bankmenu[4], 0);
	TextDrawBackgroundColor(bankmenu[4], 255);
	TextDrawFont(bankmenu[4], 1);
	TextDrawSetProportional(bankmenu[4], 1);
	TextDrawSetShadow(bankmenu[4], 0);

	bankmenu[5] = TextDrawCreate(267.500000, 175.900222, "LD_POOL:ball");
	TextDrawLetterSize(bankmenu[5], 0.000000, 0.000000);
	TextDrawTextSize(bankmenu[5], 45.000000, 29.000000);
	TextDrawAlignment(bankmenu[5], 1);
	TextDrawColor(bankmenu[5], 412024831);
	TextDrawSetShadow(bankmenu[5], 0);
	TextDrawSetOutline(bankmenu[5], 0);
	TextDrawBackgroundColor(bankmenu[5], 255);
	TextDrawFont(bankmenu[5], 4);
	TextDrawSetProportional(bankmenu[5], 0);
	TextDrawSetShadow(bankmenu[5], 0);

	bankmenu[6] = TextDrawCreate(321.000030, 176.478073, "LD_POOL:ball");
	TextDrawLetterSize(bankmenu[6], 0.000000, 0.000000);
	TextDrawTextSize(bankmenu[6], 45.000000, 29.000000);
	TextDrawAlignment(bankmenu[6], 1);
	TextDrawColor(bankmenu[6], 412024831);
	TextDrawSetShadow(bankmenu[6], 0);
	TextDrawSetOutline(bankmenu[6], 0);
	TextDrawBackgroundColor(bankmenu[6], 255);
	TextDrawFont(bankmenu[6], 4);
	TextDrawSetProportional(bankmenu[6], 0);
	TextDrawSetShadow(bankmenu[6], 0);

	bankmenu[7] = TextDrawCreate(375.200012, 176.044937, "LD_POOL:ball");
	TextDrawLetterSize(bankmenu[7], 0.000000, 0.000000);
	TextDrawTextSize(bankmenu[7], 45.000000, 29.000000);
	TextDrawAlignment(bankmenu[7], 1);
	TextDrawColor(bankmenu[7], 412024831);
	TextDrawSetShadow(bankmenu[7], 0);
	TextDrawSetOutline(bankmenu[7], 0);
	TextDrawBackgroundColor(bankmenu[7], 255);
	TextDrawFont(bankmenu[7], 4);
	TextDrawSetProportional(bankmenu[7], 0);
	TextDrawSetShadow(bankmenu[7], 0);

	bankmenu[8] = TextDrawCreate(266.899871, 248.467453, "LD_POOL:ball");
	TextDrawLetterSize(bankmenu[8], 0.000000, 0.000000);
	TextDrawTextSize(bankmenu[8], 45.000000, 29.000000);
	TextDrawAlignment(bankmenu[8], 1);
	TextDrawColor(bankmenu[8], 412024831);
	TextDrawSetShadow(bankmenu[8], 0);
	TextDrawSetOutline(bankmenu[8], 0);
	TextDrawBackgroundColor(bankmenu[8], 255);
	TextDrawFont(bankmenu[8], 4);
	TextDrawSetProportional(bankmenu[8], 0);
	TextDrawSetShadow(bankmenu[8], 0);

	bankmenu[9] = TextDrawCreate(321.299865, 248.478378, "LD_POOL:ball");
	TextDrawLetterSize(bankmenu[9], 0.000000, 0.000000);
	TextDrawTextSize(bankmenu[9], 45.000000, 29.000000);
	TextDrawAlignment(bankmenu[9], 1);
	TextDrawColor(bankmenu[9], 412024831);
	TextDrawSetShadow(bankmenu[9], 0);
	TextDrawSetOutline(bankmenu[9], 0);
	TextDrawBackgroundColor(bankmenu[9], 255);
	TextDrawFont(bankmenu[9], 4);
	TextDrawSetProportional(bankmenu[9], 0);
	TextDrawSetShadow(bankmenu[9], 0);

	bankmenu[10] = TextDrawCreate(374.699890, 249.100601, "LD_POOL:ball");
	TextDrawLetterSize(bankmenu[10], 0.000000, 0.000000);
	TextDrawTextSize(bankmenu[10], 45.000000, 29.000000);
	TextDrawAlignment(bankmenu[10], 1);
	TextDrawColor(bankmenu[10], 412024831);
	TextDrawSetShadow(bankmenu[10], 0);
	TextDrawSetOutline(bankmenu[10], 0);
	TextDrawBackgroundColor(bankmenu[10], 255);
	TextDrawFont(bankmenu[10], 4);
	TextDrawSetProportional(bankmenu[10], 0);
	TextDrawSetShadow(bankmenu[10], 0);

	bankmenu[11] = TextDrawCreate(268.599945, 177.111236, "LD_POOL:ball");
	TextDrawLetterSize(bankmenu[11], 0.000000, 0.000000);
	TextDrawTextSize(bankmenu[11], 42.580070, 26.560012);
	TextDrawAlignment(bankmenu[11], 1);
	TextDrawColor(bankmenu[11], 252777471);
	TextDrawSetShadow(bankmenu[11], 0);
	TextDrawSetOutline(bankmenu[11], 0);
	TextDrawBackgroundColor(bankmenu[11], 255);
	TextDrawFont(bankmenu[11], 4);
	TextDrawSetProportional(bankmenu[11], 0);
	TextDrawSetShadow(bankmenu[11], 0);

	bankmenu[12] = TextDrawCreate(322.199859, 177.733459, "LD_POOL:ball");
	TextDrawLetterSize(bankmenu[12], 0.000000, 0.000000);
	TextDrawTextSize(bankmenu[12], 42.580070, 26.560012);
	TextDrawAlignment(bankmenu[12], 1);
	TextDrawColor(bankmenu[12], 252777471);
	TextDrawSetShadow(bankmenu[12], 0);
	TextDrawSetOutline(bankmenu[12], 0);
	TextDrawBackgroundColor(bankmenu[12], 255);
	TextDrawFont(bankmenu[12], 4);
	TextDrawSetProportional(bankmenu[12], 0);
	TextDrawSetShadow(bankmenu[12], 0);

	bankmenu[13] = TextDrawCreate(376.399719, 177.333435, "LD_POOL:ball");
	TextDrawLetterSize(bankmenu[13], 0.000000, 0.000000);
	TextDrawTextSize(bankmenu[13], 42.580070, 26.560012);
	TextDrawAlignment(bankmenu[13], 1);
	TextDrawColor(bankmenu[13], 252777471);
	TextDrawSetShadow(bankmenu[13], 0);
	TextDrawSetOutline(bankmenu[13], 0);
	TextDrawBackgroundColor(bankmenu[13], 255);
	TextDrawFont(bankmenu[13], 4);
	TextDrawSetProportional(bankmenu[13], 0);
	TextDrawSetShadow(bankmenu[13], 0);

	bankmenu[14] = TextDrawCreate(267.999633, 249.489105, "LD_POOL:ball");
	TextDrawLetterSize(bankmenu[14], 0.000000, 0.000000);
	TextDrawTextSize(bankmenu[14], 42.580070, 26.560012);
	TextDrawAlignment(bankmenu[14], 1);
	TextDrawColor(bankmenu[14], 252777471);
	TextDrawSetShadow(bankmenu[14], 0);
	TextDrawSetOutline(bankmenu[14], 0);
	TextDrawBackgroundColor(bankmenu[14], 255);
	TextDrawFont(bankmenu[14], 4);
	TextDrawSetProportional(bankmenu[14], 0);
	TextDrawSetShadow(bankmenu[14], 0);

	bankmenu[15] = TextDrawCreate(322.499542, 249.689117, "LD_POOL:ball");
	TextDrawLetterSize(bankmenu[15], 0.000000, 0.000000);
	TextDrawTextSize(bankmenu[15], 42.580070, 26.560012);
	TextDrawAlignment(bankmenu[15], 1);
	TextDrawColor(bankmenu[15], 252777471);
	TextDrawSetShadow(bankmenu[15], 0);
	TextDrawSetOutline(bankmenu[15], 0);
	TextDrawBackgroundColor(bankmenu[15], 255);
	TextDrawFont(bankmenu[15], 4);
	TextDrawSetProportional(bankmenu[15], 0);
	TextDrawSetShadow(bankmenu[15], 0);

	bankmenu[16] = TextDrawCreate(375.899536, 250.511352, "LD_POOL:ball");
	TextDrawLetterSize(bankmenu[16], 0.000000, 0.000000);
	TextDrawTextSize(bankmenu[16], 42.580070, 26.560012);
	TextDrawAlignment(bankmenu[16], 1);
	TextDrawColor(bankmenu[16], 252777471);
	TextDrawSetShadow(bankmenu[16], 0);
	TextDrawSetOutline(bankmenu[16], 0);
	TextDrawBackgroundColor(bankmenu[16], 255);
	TextDrawFont(bankmenu[16], 4);
	TextDrawSetProportional(bankmenu[16], 0);
	TextDrawSetShadow(bankmenu[16], 0);

	bankmenu[17] = TextDrawCreate(401.400451, 282.844360, "LD_SPAC:white");
	TextDrawLetterSize(bankmenu[17], 0.000000, 0.000000);
	TextDrawTextSize(bankmenu[17], 25.000000, 11.000000);
	TextDrawAlignment(bankmenu[17], 1);
	TextDrawColor(bankmenu[17], -2147483393);
	TextDrawSetShadow(bankmenu[17], 0);
	TextDrawSetOutline(bankmenu[17], 0);
	TextDrawBackgroundColor(bankmenu[17], 255);
	TextDrawFont(bankmenu[17], 4);
	TextDrawSetProportional(bankmenu[17], 0);
	TextDrawSetShadow(bankmenu[17], 0);

	bankmenu[18] = TextDrawCreate(272.799957, 186.222290, "WITHDRAW");
	TextDrawLetterSize(bankmenu[18], 0.197499, 1.108444);
	TextDrawTextSize(bankmenu[18], 308.000000, 5.000000);
	TextDrawAlignment(bankmenu[18], 1);
	TextDrawColor(bankmenu[18], -1);
	TextDrawUseBox(bankmenu[18], 1);
	TextDrawBoxColor(bankmenu[18], 536870656);
	TextDrawSetShadow(bankmenu[18], 0);
	TextDrawSetOutline(bankmenu[18], 0);
	TextDrawBackgroundColor(bankmenu[18], 255);
	TextDrawFont(bankmenu[18], 1);
	TextDrawSetProportional(bankmenu[18], 1);
	TextDrawSetShadow(bankmenu[18], 0);
	TextDrawSetSelectable(bankmenu[18], true);

	bankmenu[19] = TextDrawCreate(343.499938, 185.799743, "PUT MONEY");
	TextDrawLetterSize(bankmenu[19], 0.197499, 1.108444);
	TextDrawTextSize(bankmenu[19], 5.000000, 38.320201);
	TextDrawAlignment(bankmenu[19], 2);
	TextDrawColor(bankmenu[19], -1);
	TextDrawUseBox(bankmenu[19], 1);
	TextDrawBoxColor(bankmenu[19], 536870656);
	TextDrawSetShadow(bankmenu[19], 0);
	TextDrawSetOutline(bankmenu[19], 0);
	TextDrawBackgroundColor(bankmenu[19], 255);
	TextDrawFont(bankmenu[19], 1);
	TextDrawSetProportional(bankmenu[19], 1);
	TextDrawSetShadow(bankmenu[19], 0);
	TextDrawSetSelectable(bankmenu[19], true);

	bankmenu[20] = TextDrawCreate(397.399810, 185.077850, "INFORMATION");
	TextDrawLetterSize(bankmenu[20], 0.169499, 1.078444);
	TextDrawTextSize(bankmenu[20], 5.000000, 38.000000);
	TextDrawAlignment(bankmenu[20], 2);
	TextDrawColor(bankmenu[20], -1);
	TextDrawUseBox(bankmenu[20], 1);
	TextDrawBoxColor(bankmenu[20], 536870656);
	TextDrawSetShadow(bankmenu[20], 0);
	TextDrawSetOutline(bankmenu[20], 0);
	TextDrawBackgroundColor(bankmenu[20], 255);
	TextDrawFont(bankmenu[20], 1);
	TextDrawSetProportional(bankmenu[20], 1);
	TextDrawSetShadow(bankmenu[20], 0);
	TextDrawSetSelectable(bankmenu[20], true);

	bankmenu[21] = TextDrawCreate(289.599914, 257.111267, "PAY BUSINESS");
	TextDrawLetterSize(bankmenu[21], 0.161499, 1.154666);
	TextDrawTextSize(bankmenu[21], 5.000000, 39.000000);
	TextDrawAlignment(bankmenu[21], 2);
	TextDrawColor(bankmenu[21], -1);
	TextDrawUseBox(bankmenu[21], 1);
	TextDrawBoxColor(bankmenu[21], 536870656);
	TextDrawSetShadow(bankmenu[21], 0);
	TextDrawSetOutline(bankmenu[21], 0);
	TextDrawBackgroundColor(bankmenu[21], 255);
	TextDrawFont(bankmenu[21], 1);
	TextDrawSetProportional(bankmenu[21], 1);
	TextDrawSetShadow(bankmenu[21], 0);
	TextDrawSetSelectable(bankmenu[21], true);

	bankmenu[22] = TextDrawCreate(344.599884, 259.022308, "MONEY HOUSE");
	TextDrawLetterSize(bankmenu[22], 0.161999, 1.124666);
	TextDrawTextSize(bankmenu[22], 5.000000, 40.009998);
	TextDrawAlignment(bankmenu[22], 2);
	TextDrawColor(bankmenu[22], -1);
	TextDrawUseBox(bankmenu[22], 1);
	TextDrawBoxColor(bankmenu[22], 536870656);
	TextDrawSetShadow(bankmenu[22], 0);
	TextDrawSetOutline(bankmenu[22], 0);
	TextDrawBackgroundColor(bankmenu[22], 255);
	TextDrawFont(bankmenu[22], 1);
	TextDrawSetProportional(bankmenu[22], 1);
	TextDrawSetShadow(bankmenu[22], 0);
	TextDrawSetSelectable(bankmenu[22], true);

	bankmenu[23] = TextDrawCreate(397.599700, 258.244445, "PICK PAYCHECK");
	TextDrawLetterSize(bankmenu[23], 0.151999, 1.124666);
	TextDrawTextSize(bankmenu[23], 5.000000, 38.170097);
	TextDrawAlignment(bankmenu[23], 2);
	TextDrawColor(bankmenu[23], -1);
	TextDrawUseBox(bankmenu[23], 1);
	TextDrawBoxColor(bankmenu[23], 536870656);
	TextDrawSetShadow(bankmenu[23], 0);
	TextDrawSetOutline(bankmenu[23], 0);
	TextDrawBackgroundColor(bankmenu[23], 255);
	TextDrawFont(bankmenu[23], 1);
	TextDrawSetProportional(bankmenu[23], 1);
	TextDrawSetShadow(bankmenu[23], 0);
	TextDrawSetSelectable(bankmenu[23], true);

	bankmenu[24] = TextDrawCreate(404.999633, 283.977783, "CLOSE");
	TextDrawLetterSize(bankmenu[24], 0.173499, 0.975332);
	TextDrawTextSize(bankmenu[24], 421.579833, 5.000000);
	TextDrawAlignment(bankmenu[24], 1);
	TextDrawColor(bankmenu[24], -1);
	TextDrawUseBox(bankmenu[24], 1);
	TextDrawBoxColor(bankmenu[24], 536870656);
	TextDrawSetShadow(bankmenu[24], 0);
	TextDrawSetOutline(bankmenu[24], 0);
	TextDrawBackgroundColor(bankmenu[24], 255);
	TextDrawFont(bankmenu[24], 1);
	TextDrawSetProportional(bankmenu[24], 1);
	TextDrawSetShadow(bankmenu[24], 0);
	TextDrawSetSelectable(bankmenu[24], true);
 	// выбор машины
    LRRegister[0] = TextDrawCreate(373.199981, 169.500000, "usebox");
    TextDrawLetterSize(LRRegister[0], 0.000000, 14.450742);
    TextDrawTextSize(LRRegister[0], 247.599990, 0.000000);
    TextDrawAlignment(LRRegister[0], 1);
    TextDrawColor(LRRegister[0], 0);
    TextDrawUseBox(LRRegister[0], true);
    TextDrawBoxColor(LRRegister[0], 0x20A9FFFF);
    TextDrawSetShadow(LRRegister[0], 0);
    TextDrawSetOutline(LRRegister[0], 0);
    TextDrawFont(LRRegister[0], 0);

    LRRegister[1] = TextDrawCreate(251.199996, 306.133331, "LD_BEAT:left");
    TextDrawLetterSize(LRRegister[1], 0.000000, 0.000000);
    TextDrawTextSize(LRRegister[1], 29.600021, 28.373321);
    TextDrawAlignment(LRRegister[1], 1);
    TextDrawColor(LRRegister[1], -1);
    TextDrawSetShadow(LRRegister[1], 0);
    TextDrawSetOutline(LRRegister[1], 0);
    TextDrawFont(LRRegister[1], 4);
    TextDrawSetSelectable(LRRegister[1], true);

    LRRegister[2] = TextDrawCreate(340.999938, 304.893310, "LD_BEAT:right");
    TextDrawLetterSize(LRRegister[2], 0.000000, 0.000000);
    TextDrawTextSize(LRRegister[2], 29.600021, 28.373321);
    TextDrawAlignment(LRRegister[2], 1);
    TextDrawColor(LRRegister[2], -1);
    TextDrawSetShadow(LRRegister[2], 0);
    TextDrawSetOutline(LRRegister[2], 0);
    TextDrawFont(LRRegister[2], 4);
    TextDrawSetSelectable(LRRegister[2], true);

    LRRegister[3] = TextDrawCreate(297.600097, 310.613342, "GO");
    TextDrawLetterSize(LRRegister[3], 0.449999, 1.600000);
    TextDrawTextSize(LRRegister[3], 327.199890, 28.373331);
    TextDrawAlignment(LRRegister[3], 1);
    TextDrawColor(LRRegister[3], -1);
    TextDrawUseBox(LRRegister[3], true);
    TextDrawBoxColor(LRRegister[3], 0);
    TextDrawSetShadow(LRRegister[3], 0);
    TextDrawSetOutline(LRRegister[3], 1);
    TextDrawBackgroundColor(LRRegister[3], 51);
    TextDrawFont(LRRegister[3], 1);
    TextDrawSetProportional(LRRegister[3], 1);
    TextDrawSetSelectable(LRRegister[3], true);

    LRRightBox[0] = TextDrawCreate(643.599975, 150.086669, "usebox");
    TextDrawLetterSize(LRRightBox[0], 0.000000, 10.984079);
    TextDrawTextSize(LRRightBox[0], 490.799987, 0.000000);
    TextDrawAlignment(LRRightBox[0], 1);
    TextDrawColor(LRRightBox[0], 0);
    TextDrawUseBox(LRRightBox[0], true);
    TextDrawBoxColor(LRRightBox[0], 0x20A9FFFF);
    TextDrawSetShadow(LRRightBox[0], 0);
    TextDrawSetOutline(LRRightBox[0], 0);
    TextDrawFont(LRRightBox[0], 0);

    LRRightBox[1] = TextDrawCreate(586.400024, 150.079940, "1:20");
    TextDrawLetterSize(LRRightBox[1], 0.449999, 1.600000);
    TextDrawAlignment(LRRightBox[1], 1);
    TextDrawColor(LRRightBox[1], -1);
    TextDrawSetShadow(LRRightBox[1], 0);
    TextDrawSetOutline(LRRightBox[1], 1);
    TextDrawBackgroundColor(LRRightBox[1], 51);
    TextDrawFont(LRRightBox[1], 2);
    TextDrawSetProportional(LRRightBox[1], 1);

    LRRightBox[2] = TextDrawCreate(502.600006, 185.426635, "_");// name 1
    TextDrawLetterSize(LRRightBox[2], 0.237199, 1.517866);
    TextDrawAlignment(LRRightBox[2], 1);
    TextDrawColor(LRRightBox[2], -1);
    TextDrawSetShadow(LRRightBox[2], 0);
    TextDrawSetOutline(LRRightBox[2], 1);
    TextDrawBackgroundColor(LRRightBox[2], 51);
    TextDrawFont(LRRightBox[2], 2);
    TextDrawSetProportional(LRRightBox[2], 1);

    LRRightBox[3] = TextDrawCreate(501.200042, 204.346710, "_");// name 2
    TextDrawLetterSize(LRRightBox[3], 0.237199, 1.517866);
    TextDrawAlignment(LRRightBox[3], 1);
    TextDrawColor(LRRightBox[3], -1);
    TextDrawSetShadow(LRRightBox[3], 0);
    TextDrawSetOutline(LRRightBox[3], 1);
    TextDrawBackgroundColor(LRRightBox[3], 51);
    TextDrawFont(LRRightBox[3], 2);
    TextDrawSetProportional(LRRightBox[3], 1);

    LRRightBox[4] = TextDrawCreate(284.000061, 380.053253, "LD_BEAT:cring");
    TextDrawLetterSize(LRRightBox[4], 0.000000, 0.000000);
    TextDrawTextSize(LRRightBox[4], 47.999984, 47.786636);
    TextDrawAlignment(LRRightBox[4], 1);
    TextDrawColor(LRRightBox[4], 0x20A9FFFF);
    TextDrawSetShadow(LRRightBox[4], 0);
    TextDrawSetOutline(LRRightBox[4], 0);
    TextDrawFont(LRRightBox[4], 4);
	// ifno TD
    TDInfo[0] = TextDrawCreate(201.058868, 311.833404, "usebox");
    TextDrawLetterSize(TDInfo[0], 0.000000, -3.298150);
    TextDrawTextSize(TDInfo[0], -3.882356, 0.000000);
    TextDrawUseBox(TDInfo[0], true);
    TextDrawBoxColor(TDInfo[0], 0x20A9FFFF);

    TDInfo[1] = TextDrawCreate(171.411697, 287.333374, "usebox");
    TextDrawLetterSize(TDInfo[1], 0.000000, 2.223529);
    TextDrawTextSize(TDInfo[1], 166.941101, 0.000000);
    TextDrawUseBox(TDInfo[1], true);
    TextDrawBoxColor(TDInfo[1], 102);

    TDInfo[2] = TextDrawCreate(174.588195, 285.249969, "ld_pool:ball");
    TextDrawLetterSize(TDInfo[2], 0.000000, 0.000000);
    TextDrawTextSize(TDInfo[2], 19.764677, 22.749961);
    TextDrawAlignment(TDInfo[2], 1);
    TextDrawColor(TDInfo[2], -1);
    TextDrawSetShadow(TDInfo[2], -121);
    TextDrawSetOutline(TDInfo[2], 0);
    TextDrawBackgroundColor(TDInfo[2], 16776960);
    TextDrawFont(TDInfo[2], 4);
    TextDrawSetPreviewModel(TDInfo[2], 19131);
    TextDrawSetPreviewRot(TDInfo[2], 0.000000, 90.000000, 90.000000, 1.000000);

    TDInfo[3] = TextDrawCreate(5.647051, 291.083404,"~W~Exe ~Y~Success");
    TextDrawLetterSize(TDInfo[3], 0.165764, 1.086666);
    TextDrawAlignment(TDInfo[3], 1);
    TextDrawBackgroundColor(TDInfo[3], 51);
    TextDrawFont(TDInfo[3], 2);

    TDInfo[4] = TextDrawCreate(195.764739, 286.416717, "New Textdraw");
    TextDrawLetterSize(TDInfo[4], 0.449999, 1.600000);
    TextDrawTextSize(TDInfo[4], -22.586164, 19.833333);
    TextDrawAlignment(TDInfo[4], 1);
    TextDrawColor(TDInfo[4], 255);
    TextDrawUseBox(TDInfo[4], true);
    TextDrawBoxColor(TDInfo[4], 16776960);
    TextDrawSetShadow(TDInfo[4], 0);
    TextDrawSetOutline(TDInfo[4], 1);
    TextDrawBackgroundColor(TDInfo[4], 16776960);
    TextDrawFont(TDInfo[4], 5);
    TextDrawSetProportional(TDInfo[4], 1);
    TextDrawSetPreviewModel(TDInfo[4], 1239);
    TextDrawSetPreviewRot(TDInfo[4], 0.000000, 0.000000, 0.000000, 1.000000);
	/// teleport
	Teleport[0] = TextDrawCreate(643.000000, 130.000000, "1");
    Teleport[1] = TextDrawCreate(643.000000, 146.000000, "2");
    Teleport[2] = TextDrawCreate(643.000000, 162.000000, "3");
    Teleport[3] = TextDrawCreate(643.000000, 178.000000, "4");
    Teleport[4] = TextDrawCreate(643.000000, 194.000000, "5");
    Teleport[5] = TextDrawCreate(643.000000, 210.000000, "6");
    Teleport[6] = TextDrawCreate(643.000000, 226.000000, "7");
    Teleport[7] = TextDrawCreate(643.000000, 242.000000, "8");
    Teleport[8] = TextDrawCreate(643.000000, 258.000000, "9");
    Teleport[9] = TextDrawCreate(643.000000, 274.000000, "10");
    Teleport[10] = TextDrawCreate(643.000000, 290.000000, "11");
    Teleport[11] = TextDrawCreate(643.000000, 306.000000, "12");
    Teleport[12] = TextDrawCreate(643.000000, 322.000000, "13");
    Teleport[13] = TextDrawCreate(643.000000, 338.000000, "14");
    Teleport[14] = TextDrawCreate(643.000000, 354.000000, "15");
    Teleport[15] = TextDrawCreate(643.000000, 370.000000, "16");
    Teleport[16] = TextDrawCreate(643.000000, 386.000000, "17");
    Teleport[17] = TextDrawCreate(643.000000, 402.000000, "18");
    Teleport[18] = TextDrawCreate(643.000000, 418.000000, "19");
    Teleport[19] = TextDrawCreate(643.000000, 434.000000, "20");
    for(new A; A < 20; A++)
    {
        TextDrawBackgroundColor(Teleport[A], 255);
        TextDrawFont(Teleport[A], 3);
        TextDrawLetterSize(Teleport[A], 0.009999, 1.000000);
        TextDrawColor(Teleport[A], -1);
        TextDrawSetOutline(Teleport[A], 0);
        TextDrawSetProportional(Teleport[A], 1);
        TextDrawSetShadow(Teleport[A], 1);
        TextDrawUseBox(Teleport[A], 1);
        TextDrawBoxColor(Teleport[A], 106589520);
        TextDrawTextSize(Teleport[A], 544.000000, 0.000000);
    }
    Teleport[20] = TextDrawCreate(556.000000, 128.000000, "Government"),TextDrawColor(Teleport[20], 106940927);
    Teleport[21] = TextDrawCreate(556.000000, 143.000000, "FBI"),TextDrawColor(Teleport[21], 106940927);
    Teleport[22] = TextDrawCreate(557.000000, 160.000000, "LSPD"),TextDrawColor(Teleport[22], 106940927);
    Teleport[23] = TextDrawCreate(557.000000, 177.000000, "Hospital"),TextDrawColor(Teleport[23], 106940927);
    Teleport[24] = TextDrawCreate(557.000000, 193.000000, "Orchard"),TextDrawColor(Teleport[24], 106940927);
    Teleport[25] = TextDrawCreate(557.000000, 209.000000, "Quarry"),TextDrawColor(Teleport[25], 106940927);
    Teleport[26] = TextDrawCreate(557.000000, 224.000000, "Vinewood"),TextDrawColor(Teleport[26], 106940927);
    Teleport[27] = TextDrawCreate(557.000000, 239.000000, "San Fierro"),TextDrawColor(Teleport[27], 106940927);
    Teleport[28] = TextDrawCreate(557.000000, 256.000000, "Las Venturas"),TextDrawColor(Teleport[28], 106940927);
    Teleport[29] = TextDrawCreate(557.000000, 272.000000, "Ghetto"),TextDrawColor(Teleport[29], 106940927);
    Teleport[30] = TextDrawCreate(557.000000, 288.000000, "Army"),TextDrawColor(Teleport[30], 106940927);
    Teleport[31] = TextDrawCreate(557.000000, 304.000000, "Prison"),TextDrawColor(Teleport[31], 106940927);
    Teleport[32] = TextDrawCreate(557.000000, 319.000000, "AutoSchool"),TextDrawColor(Teleport[32], 106940927);
    Teleport[33] = TextDrawCreate(557.000000, 336.000000, "Shop"),TextDrawColor(Teleport[33], 106940927);
    Teleport[34] = TextDrawCreate(557.000000, 352.000000, "Ciliad"),TextDrawColor(Teleport[34], 106940927);
    Teleport[35] = TextDrawCreate(557.000000, 368.000000, "Autopark"),TextDrawColor(Teleport[35], 106940927);
    Teleport[36] = TextDrawCreate(557.000000, 384.000000, "Santa Maria"),TextDrawColor(Teleport[36], 106940927);
    Teleport[37] = TextDrawCreate(557.000000, 401.000000, "Race"),TextDrawColor(Teleport[37], 106940927);
    Teleport[38] = TextDrawCreate(557.000000, 417.000000, "Station"),TextDrawColor(Teleport[38], 106940927);
    Teleport[39] = TextDrawCreate(557.000000, 432.000000, "Admin spawn"),TextDrawColor(Teleport[39], 106940927);
    for(new A = 20; A < 40; A++)
    {
        TextDrawBackgroundColor(Teleport[A], 255);
        TextDrawFont(Teleport[A], 3);
        TextDrawLetterSize(Teleport[A], 0.409999, 1.399999);
        TextDrawSetOutline(Teleport[A], 0);
        TextDrawSetProportional(Teleport[A], 1);
        TextDrawSetShadow(Teleport[A], 1);
        TextDrawTextSize(Teleport[A], 650.000000, 20.000000);
        TextDrawSetSelectable(Teleport[A], 1);
    }
    Aga = TextDrawCreate(479.500000, 263.822235, "Enemy: 0");
    TextDrawLetterSize(Aga, 0.449999, 1.600000);
    TextDrawAlignment(Aga, 1);
    TextDrawColor(Aga, -1);
    TextDrawSetShadow(Aga, 0);
    TextDrawSetOutline(Aga, 1);
    TextDrawBackgroundColor(Aga, 51);
    TextDrawFont(Aga, 2);
    TextDrawSetProportional(Aga, 1);

    Aga2 = TextDrawCreate(479.500000, 284.355499, "You: 0");
    TextDrawLetterSize(Aga2, 0.449999, 1.600000);
    TextDrawAlignment(Aga2, 1);
    TextDrawColor(Aga2, -1);
    TextDrawSetShadow(Aga2, 0);
    TextDrawSetOutline(Aga2, 1);
    TextDrawBackgroundColor(Aga2, 51);
    TextDrawFont(Aga2, 2);
    TextDrawSetProportional(Aga2, 1);
	// duel
	Box_1 = TextDrawCreate(644.500000, 237.944458, "usebox");
    TextDrawLetterSize(Box_1, 0.000000, 9.806178);
    TextDrawTextSize(Box_1, 475.500000, 0.000000);
    TextDrawAlignment(Box_1, 1);
    TextDrawColor(Box_1, 0);
    TextDrawUseBox(Box_1, true);
    TextDrawBoxColor(Box_1, 102);
    TextDrawSetShadow(Box_1, 0);
    TextDrawSetOutline(Box_1, 0);
    TextDrawFont(Box_1, 0);

    Box_2 = TextDrawCreate(665.500000, 237.944458, "usebox");
    TextDrawLetterSize(Box_2, 0.000000, 1.680862);
    TextDrawTextSize(Box_2, 475.500000, 0.000000);
    TextDrawAlignment(Box_2, 1);
    TextDrawColor(Box_2, 0);
    TextDrawUseBox(Box_2, true);
    TextDrawBoxColor(Box_2, 13500262);
    TextDrawSetShadow(Box_2, 0);
    TextDrawSetOutline(Box_2, 0);
    TextDrawFont(Box_2, 2);

    System = TextDrawCreate(500.000000, 237.066665, "Duel");
    TextDrawLetterSize(System, 0.449999, 1.600000);
    TextDrawAlignment(System, 1);
    TextDrawColor(System, -1);
    TextDrawSetShadow(System, 0);
    TextDrawSetOutline(System, 1);
    TextDrawBackgroundColor(System, 51);
    TextDrawFont(System, 2);
    TextDrawSetProportional(System, 1);

    Time = TextDrawCreate(480.500000, 303.022308, "Time: 00:00");
    TextDrawLetterSize(Time, 0.449999, 1.600000);
    TextDrawAlignment(Time, 1);
    TextDrawColor(Time, -1);
    TextDrawSetShadow(Time, 0);
    TextDrawSetOutline(Time, 1);
    TextDrawBackgroundColor(Time, 51);
    TextDrawFont(Time, 2);
    TextDrawSetProportional(Time, 1);
	/// командный бой
	Tdboi[0] = TextDrawCreate(485.000000, 186.000000, "_");
    TextDrawBackgroundColor(Tdboi[0], 255);
    TextDrawFont(Tdboi[0], 1);
    TextDrawLetterSize(Tdboi[0], 0.000000, 7.399995);
    TextDrawColor(Tdboi[0], -1);
    TextDrawSetOutline(Tdboi[0], 0);
    TextDrawSetProportional(Tdboi[0], 1);
    TextDrawSetShadow(Tdboi[0], 1);
    TextDrawUseBox(Tdboi[0], 1);
    TextDrawBoxColor(Tdboi[0], 48);
    TextDrawTextSize(Tdboi[0], 578.000000, 0.000000);

    Tdboi[1] = TextDrawCreate(487.000000, 191.000000, "TEAM RED: 10");
    TextDrawBackgroundColor(Tdboi[1], 255);
    TextDrawFont(Tdboi[1], 1);
    TextDrawLetterSize(Tdboi[1], 0.340000, 1.400000);
    TextDrawColor(Tdboi[1], -1);
    TextDrawSetOutline(Tdboi[1], 0);
    TextDrawSetProportional(Tdboi[1], 1);
    TextDrawSetShadow(Tdboi[1], 1);

    Tdboi[2] = TextDrawCreate(488.000000, 206.000000, "TEAM BLUE: 10");
    TextDrawBackgroundColor(Tdboi[2], 255);
    TextDrawFont(Tdboi[2], 1);
    TextDrawLetterSize(Tdboi[2], 0.310000, 1.400000);
    TextDrawColor(Tdboi[2], -1);
    TextDrawSetOutline(Tdboi[2], 0);
    TextDrawSetProportional(Tdboi[2], 1);
    TextDrawSetShadow(Tdboi[2], 1);

    Tdboi[3] = TextDrawCreate(511.000000, 228.000000, "0");
    TextDrawAlignment(Tdboi[3], 2);
    TextDrawBackgroundColor(Tdboi[3], 255);
    TextDrawFont(Tdboi[3], 1);
    TextDrawLetterSize(Tdboi[3], 0.500000, 2.399999);
    TextDrawColor(Tdboi[3], -16776961);
    TextDrawSetOutline(Tdboi[3], 0);
    TextDrawSetProportional(Tdboi[3], 1);
    TextDrawSetShadow(Tdboi[3], 1);

    Tdboi[4] = TextDrawCreate(550.000000, 228.000000, "0");
    TextDrawAlignment(Tdboi[4], 2);
    TextDrawBackgroundColor(Tdboi[4], 255);
    TextDrawFont(Tdboi[4], 1);
    TextDrawLetterSize(Tdboi[4], 0.500000, 2.399999);
    TextDrawColor(Tdboi[4], 65535);
    TextDrawSetOutline(Tdboi[4], 0);
    TextDrawSetProportional(Tdboi[4], 1);
    TextDrawSetShadow(Tdboi[4], 1);

    Tdboi[5] = TextDrawCreate(485.000000, 224.000000, "_");
    TextDrawBackgroundColor(Tdboi[5], 255);
    TextDrawFont(Tdboi[5], 1);
    TextDrawLetterSize(Tdboi[5], 0.000000, 0.200000);
    TextDrawColor(Tdboi[5], 80);
    TextDrawSetOutline(Tdboi[5], 0);
    TextDrawSetProportional(Tdboi[5], 1);
    TextDrawSetShadow(Tdboi[5], 1);
    TextDrawUseBox(Tdboi[5], 1);
    TextDrawBoxColor(Tdboi[5], 80);
    TextDrawTextSize(Tdboi[5], 578.000000, 0.000000);

    Tdboi[6] = TextDrawCreate(485.000000, 176.000000, "_");
    TextDrawBackgroundColor(Tdboi[6], 255);
    TextDrawFont(Tdboi[6], 1);
    TextDrawLetterSize(Tdboi[6], 0.000000, 1.200000);
    TextDrawColor(Tdboi[6], 80);
    TextDrawSetOutline(Tdboi[6], 0);
    TextDrawSetProportional(Tdboi[6], 1);
    TextDrawSetShadow(Tdboi[6], 1);
    TextDrawUseBox(Tdboi[6], 1);
    TextDrawBoxColor(Tdboi[6], 80);
    TextDrawTextSize(Tdboi[6], 578.000000, 0.000000);

    Tdboi[7] = TextDrawCreate(487.000000, 174.000000, "On round 10 minutes");
    TextDrawBackgroundColor(Tdboi[7], 255);
    TextDrawFont(Tdboi[7], 2);
    TextDrawLetterSize(Tdboi[7], 0.200000, 0.899999);
    TextDrawColor(Tdboi[7], -65281);
    TextDrawSetOutline(Tdboi[7], 0);
    TextDrawSetProportional(Tdboi[7], 1);
    TextDrawSetShadow(Tdboi[7], 1);
	//--------[Ruletka-SYSTEM]--------
    new Float:Y = 119.636962;
	Box = TextDrawCreate(477.333221, 83.633308, "usebox");
	TextDrawLetterSize(Box, 0.000000, 29.843835);
	TextDrawTextSize(Box, 157.000045, 0.000000);
	TextDrawAlignment(Box, 1);
	TextDrawColor(Box, 0);
	TextDrawUseBox(Box, true);
	TextDrawBoxColor(Box, 102);
	TextDrawSetShadow(Box, 0);
	TextDrawSetOutline(Box, 0);
	TextDrawFont(Box, 0);

	KeyStartGang = TextDrawCreate(168.999984, 315.674194, "Start");
	TextDrawLetterSize(KeyStartGang, 0.837332, 3.068445);
	TextDrawTextSize(KeyStartGang, 257.666748, 39.822223);
	TextDrawAlignment(KeyStartGang, 1);
	TextDrawColor(KeyStartGang, -1);
	TextDrawUseBox(KeyStartGang, true);
	TextDrawBoxColor(KeyStartGang, -2139062153);
	TextDrawSetShadow(KeyStartGang, 0);
	TextDrawSetOutline(KeyStartGang, 1);
	TextDrawBackgroundColor(KeyStartGang, 51);
	TextDrawFont(KeyStartGang, 3);
	TextDrawSetProportional(KeyStartGang, 1);
	TextDrawSetSelectable(KeyStartGang, true);

	KeyMoneyGang = TextDrawCreate(280.666748, 316.259368, "Money");
	TextDrawLetterSize(KeyMoneyGang, 0.837332, 3.068445);
	TextDrawTextSize(KeyMoneyGang, 374.666778, 18.251852);
	TextDrawAlignment(KeyMoneyGang, 1);
	TextDrawColor(KeyMoneyGang, -65281);
	TextDrawUseBox(KeyMoneyGang, true);
	TextDrawBoxColor(KeyMoneyGang, -2139062153);
	TextDrawSetShadow(KeyMoneyGang, 0);
	TextDrawSetOutline(KeyMoneyGang, 1);
	TextDrawBackgroundColor(KeyMoneyGang, 51);
	TextDrawFont(KeyMoneyGang, 3);
	TextDrawSetProportional(KeyMoneyGang, 1);
	TextDrawSetSelectable(KeyMoneyGang, true);

	KeyExitGang = TextDrawCreate(410.333221, 317.674102, "Exit");
	TextDrawLetterSize(KeyExitGang, 0.837332, 3.068445);
	TextDrawTextSize(KeyExitGang, 470.666717, 44.385173);
	TextDrawAlignment(KeyExitGang, 1);
	TextDrawColor(KeyExitGang, -1);
	TextDrawUseBox(KeyExitGang, true);
	TextDrawBoxColor(KeyExitGang, -2139062153);
	TextDrawSetShadow(KeyExitGang, 0);
	TextDrawSetOutline(KeyExitGang, 1);
	TextDrawBackgroundColor(KeyExitGang, 51);
	TextDrawFont(KeyExitGang, 3);
	TextDrawSetProportional(KeyExitGang, 1);
	TextDrawSetSelectable(KeyExitGang, true);

	KasinoGangBox = TextDrawCreate(230.333389, 98.311134, "~g~--------------------------~n~~n~~n~~n~~n~~g~--------------------------");
	TextDrawLetterSize(KasinoGangBox, 0.449999, 1.600000);
	TextDrawAlignment(KasinoGangBox, 1);
	TextDrawColor(KasinoGangBox, -1);
	TextDrawSetShadow(KasinoGangBox, 0);
	TextDrawSetOutline(KasinoGangBox, 1);
	TextDrawBackgroundColor(KasinoGangBox, 51);
	TextDrawFont(KasinoGangBox, 1);
	TextDrawSetProportional(KasinoGangBox, 1);

	// Cherries (x25)
	Digit1[0] = CreateSprite(229.999954,Y,"LD_SLOT:cherry");
	Digit2[0] = CreateSprite(291.333465,Y,"LD_SLOT:cherry");
	Digit3[0] = CreateSprite(354.000152,Y,"LD_SLOT:cherry");

	// grapes (x100)
	Digit1[1] = CreateSprite(229.999954,Y,"LD_SLOT:grapes");
	Digit2[1] = CreateSprite(291.333465,Y,"LD_SLOT:grapes");
	Digit3[1] = CreateSprite(354.000152,Y,"LD_SLOT:grapes");

	// 69's (x250)
	Digit1[2] = CreateSprite(229.999954,Y,"LD_SLOT:r_69");
	Digit2[2] = CreateSprite(291.333465,Y,"LD_SLOT:r_69");
	Digit3[2] = CreateSprite(354.000152,Y,"LD_SLOT:r_69");

	// bells (x500)
	Digit1[3] = CreateSprite(229.999954,Y,"LD_SLOT:bell");
	Digit2[3] = CreateSprite(291.333465,Y,"LD_SLOT:bell");
	Digit3[3] = CreateSprite(354.000152,Y,"LD_SLOT:bell");

	// Bars [1 bar] (x1000)
	Digit1[4] = CreateSprite(229.999954,Y,"LD_SLOT:bar1_o");
	Digit2[4] = CreateSprite(291.333465,Y,"LD_SLOT:bar1_o");
	Digit3[4] = CreateSprite(354.000152,Y,"LD_SLOT:bar1_o");

	// Bars [2 bar] (x2000)
	Digit1[5] = CreateSprite(229.999954,Y,"LD_SLOT:bar2_o");
	Digit2[5] = CreateSprite(291.333465,Y,"LD_SLOT:bar2_o");
	Digit3[5] = CreateSprite(354.000152,Y,"LD_SLOT:bar2_o");
    for(new i; i< sizeof(StolCoor);i++)
	{
		StolInfo[i][Crupe] = INVALID_PLAYER_ID;
		for(new h;h<5;h++){
			StolInfo[i][Gamer][h] = INVALID_PLAYER_ID;}
		StolInfo[i][GameStart] = 0;
		//----------------------------------------
		KostiBox[i] = TextDrawCreate(550,160,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~");
		TextDrawUseBox(KostiBox[i],1);
		TextDrawTextSize(KostiBox[i],100.0,100.0);
		TextDrawBoxColor(KostiBox[i],0x00000045);
		TextDrawAlignment(KostiBox[i],2);

		format(YCMDstr,sizeof(YCMDstr),"Table %d",i+1);
		TableName[i] = TextDrawCreate(550,160,YCMDstr);
		TextDrawFont(TableName[i],0);
		TextDrawLetterSize(TableName[i],0.500,1.200);
		TextDrawSetProportional(TableName[i],1);
		TextDrawColor(TableName[i],0x007fffFF);
		TextDrawSetOutline(TableName[i],1);
		TextDrawAlignment(TableName[i],2);

		KostiInfo[i] = TextDrawCreate(505,180,"~n~1.--___________________--~n~2.--___________________--~n~3.--___________________--~n~4.--___________________--~n~5.--___________________--~n~");
		TextDrawFont(KostiInfo[i],1);
		TextDrawLetterSize(KostiInfo[i],0.210,0.78);
		TextDrawSetProportional(KostiInfo[i],1);
		TextDrawColor(KostiInfo[i],0xFFFFFFFF);
		TextDrawSetOutline(KostiInfo[i],0);
		TextDrawSetShadow(KostiInfo[i],0);

		KostiGameInfo[i] = TextDrawCreate(505,230,"~w~Bet:_~r~N/A~n~~w~Bank:_~r~N/A~n~");
		TextDrawFont(KostiGameInfo[i],1);
		TextDrawLetterSize(KostiGameInfo[i],0.250,1.20);
		TextDrawSetProportional(KostiGameInfo[i],1);
		TextDrawColor(KostiGameInfo[i],0xFFFFFFFF);
		TextDrawSetOutline(KostiGameInfo[i],0);
		TextDrawSetShadow(KostiGameInfo[i],0);
	}
	KostiKeyStavka = TextDrawCreate(550,263,"SET BET");
	TextDrawFont(KostiKeyStavka,1);
	TextDrawLetterSize(KostiKeyStavka,0.400,1.40);
	TextDrawSetProportional(KostiKeyStavka,1);
	TextDrawColor(KostiKeyStavka,0xFFFFFFFF);
	TextDrawSetOutline(KostiKeyStavka,1);
	TextDrawSetShadow(KostiKeyStavka,0);
	TextDrawAlignment(KostiKeyStavka,2);
	TextDrawUseBox(KostiKeyStavka,1);
	TextDrawTextSize(KostiKeyStavka,10,70);
	TextDrawBoxColor(KostiKeyStavka,0x80808077);
	TextDrawSetSelectable(KostiKeyStavka,1);

	KostiKeyDone = TextDrawCreate(550,283,"DICE");
	TextDrawFont(KostiKeyDone,1);
	TextDrawLetterSize(KostiKeyDone,0.400,1.40);
	TextDrawSetProportional(KostiKeyDone,1);
	TextDrawColor(KostiKeyDone,0xFFFFFFFF);
	TextDrawSetOutline(KostiKeyDone,1);
	TextDrawSetShadow(KostiKeyDone,0);
	TextDrawAlignment(KostiKeyDone,2);
	TextDrawUseBox(KostiKeyDone,1);
	TextDrawTextSize(KostiKeyDone,10,70);
	TextDrawBoxColor(KostiKeyDone,0x80808077);
	TextDrawSetSelectable(KostiKeyDone,1);

	KostiKeyExit = TextDrawCreate(550,303,"EXIT");
 	TextDrawFont(KostiKeyExit,1);
  	TextDrawLetterSize(KostiKeyExit,0.400,1.40);
    TextDrawSetProportional(KostiKeyExit,1);
    TextDrawColor(KostiKeyExit,0xFFFFFFFF);
    TextDrawSetOutline(KostiKeyExit,1);
    TextDrawSetShadow(KostiKeyExit,0);
    TextDrawAlignment(KostiKeyExit,2);
    TextDrawUseBox(KostiKeyExit,1);
    TextDrawTextSize(KostiKeyExit,10,70);
    TextDrawBoxColor(KostiKeyExit,0x80808077);
    TextDrawSetSelectable(KostiKeyExit,1);
	//------------------------------
	for(new i;i<sizeof(StolCoor);i++)
	{
		format(YCMDstr,sizeof(YCMDstr),"Игровой стол %d",i+1);
		CreateDynamicObject(1824,StolCoor[i][0],StolCoor[i][1],StolCoor[i][2],0,0,0);
		StolCoorText[i] = CreateDynamic3DTextLabel(YCMDstr,-1,StolCoor[i][0],StolCoor[i][1],StolCoor[i][2]+1.5,10.5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1, -1);
	}
	/// акссесуары


    Accessories[0] = TextDrawCreate(164.444442, 132.408889, "LD_SPAC:white");
    TextDrawLetterSize(Accessories[0], 0.000000, 0.000000);
    TextDrawTextSize(Accessories[0], 54.666671, 123.448867);
    TextDrawAlignment(Accessories[0], 1);
    TextDrawColor(Accessories[0], -1);
    TextDrawSetShadow(Accessories[0], 1);
    TextDrawSetOutline(Accessories[0], 0);
    TextDrawFont(Accessories[0], 4);

    Accessories[1] = TextDrawCreate(164.000000, 132.408889, "LD_SPAC:white");
    TextDrawLetterSize(Accessories[1], 0.000000, 0.000000);
    TextDrawTextSize(Accessories[1], 2.666656, 123.946670);
    TextDrawAlignment(Accessories[1], 1);
    TextDrawColor(Accessories[1], 0x20A9FFFF);
    TextDrawSetShadow(Accessories[1], 1);
    TextDrawSetOutline(Accessories[1], 0);
    TextDrawFont(Accessories[1], 4);

    Accessories[2] = TextDrawCreate(164.444442, 132.408889, "LD_SPAC:white");
    TextDrawLetterSize(Accessories[2], 0.000000, 0.000000);
    TextDrawTextSize(Accessories[2], 54.222229, 2.986663);
    TextDrawAlignment(Accessories[2], 1);
    TextDrawColor(Accessories[2], 0x20A9FFFF);
    TextDrawSetShadow(Accessories[2], 1);
    TextDrawSetOutline(Accessories[2], 0);
    TextDrawFont(Accessories[2], 4);

    Accessories[3] = TextDrawCreate(219.111114, 132.408889, "LD_SPAC:white");
    TextDrawLetterSize(Accessories[3], 0.000000, 0.000000);
    TextDrawTextSize(Accessories[3], -2.666687, 123.448867);
    TextDrawAlignment(Accessories[3], 1);
    TextDrawColor(Accessories[3], 0x20A9FFFF);
    TextDrawSetShadow(Accessories[3], 1);
    TextDrawSetOutline(Accessories[3], 0);
    TextDrawFont(Accessories[3], 4);

    Accessories[4] = TextDrawCreate(164.444442, 254.364440, "LD_SPAC:white");
    TextDrawLetterSize(Accessories[4], 0.000000, 0.000000);
    TextDrawTextSize(Accessories[4], 54.222229, 2.986694);
    TextDrawAlignment(Accessories[4], 1);
    TextDrawColor(Accessories[4], 0x20A9FFFF);
    TextDrawSetShadow(Accessories[4], 1);
    TextDrawSetOutline(Accessories[4], 0);
    TextDrawFont(Accessories[4], 4);

    Accessories[5] = TextDrawCreate(164.444442, 192.639999, "LD_SPAC:white");
    TextDrawLetterSize(Accessories[5], 0.000000, 0.000000);
    TextDrawTextSize(Accessories[5], 53.333343, 3.982223);
    TextDrawAlignment(Accessories[5], 1);
    TextDrawColor(Accessories[5], 0x20A9FFFF);
    TextDrawSetShadow(Accessories[5], 1);
    TextDrawSetOutline(Accessories[5], 0);
    TextDrawFont(Accessories[5], 4);

    Accessories[6] = TextDrawCreate(158.222213, 282.239990, "LD_SPAC:white");
    TextDrawLetterSize(Accessories[6], 0.000000, 0.000000);
    TextDrawTextSize(Accessories[6], 365.333312, 137.884460);
    TextDrawAlignment(Accessories[6], 1);
    TextDrawColor(Accessories[6], 0x20A9FFFF);
    TextDrawSetShadow(Accessories[6], 1);
    TextDrawSetOutline(Accessories[6], 0);
    TextDrawFont(Accessories[6], 4);

    Accessories[7] = TextDrawCreate(164.000000, 286.720001, "LD_SPAC:white");
    TextDrawLetterSize(Accessories[7], 0.000000, 0.000000);
    TextDrawTextSize(Accessories[7], 55.111114, 58.737792);
    TextDrawAlignment(Accessories[7], 1);
    TextDrawColor(Accessories[7], -1);
    TextDrawSetShadow(Accessories[7], 1);
    TextDrawSetOutline(Accessories[7], 0);
    TextDrawFont(Accessories[7], 4);
    TextDrawSetPreviewModel(Accessories[7], 0);
    TextDrawSetPreviewRot(Accessories[7], 0.000000, 0.000000, 0.000000, 0.000000);

    Accessories[8] = TextDrawCreate(224.000000, 286.720001, "LD_SPAC:white");
    TextDrawLetterSize(Accessories[8], 0.000000, 0.000000);
    TextDrawTextSize(Accessories[8], 55.111114, 58.737792);
    TextDrawAlignment(Accessories[8], 1);
    TextDrawColor(Accessories[8], -1);
    TextDrawSetShadow(Accessories[8], 1);
    TextDrawSetOutline(Accessories[8], 0);
    TextDrawFont(Accessories[8], 4);
    TextDrawSetPreviewModel(Accessories[8], 0);
    TextDrawSetPreviewRot(Accessories[8], 0.000000, 0.000000, 0.000000, 0.000000);

    Accessories[9] = TextDrawCreate(284.000000, 286.720001, "LD_SPAC:white");
    TextDrawLetterSize(Accessories[9], 0.000000, 0.000000);
    TextDrawTextSize(Accessories[9], 55.111114, 58.737792);
    TextDrawAlignment(Accessories[9], 1);
    TextDrawColor(Accessories[9], -1);
    TextDrawSetShadow(Accessories[9], 1);
    TextDrawSetOutline(Accessories[9], 0);
    TextDrawFont(Accessories[9], 4);
    TextDrawSetPreviewModel(Accessories[9], 0);
    TextDrawSetPreviewRot(Accessories[9], 0.000000, 0.000000, 0.000000, 0.000000);

    Accessories[10] = TextDrawCreate(344.000000, 286.720001, "LD_SPAC:white");
    TextDrawLetterSize(Accessories[10], 0.000000, 0.000000);
    TextDrawTextSize(Accessories[10], 55.111114, 58.737792);
    TextDrawAlignment(Accessories[10], 1);
    TextDrawColor(Accessories[10], -1);
    TextDrawSetShadow(Accessories[10], 1);
    TextDrawSetOutline(Accessories[10], 0);
    TextDrawFont(Accessories[10], 4);
    TextDrawSetPreviewModel(Accessories[10], 0);
    TextDrawSetPreviewRot(Accessories[10], 0.000000, 0.000000, 0.000000, 0.000000);

    Accessories[11] = TextDrawCreate(404.000000, 286.720001, "LD_SPAC:white");
    TextDrawLetterSize(Accessories[11], 0.000000, 0.000000);
    TextDrawTextSize(Accessories[11], 55.111114, 58.737792);
    TextDrawAlignment(Accessories[11], 1);
    TextDrawColor(Accessories[11], -1);
    TextDrawSetShadow(Accessories[11], 1);
    TextDrawSetOutline(Accessories[11], 0);
    TextDrawFont(Accessories[11], 4);
    TextDrawSetPreviewModel(Accessories[11], 0);
    TextDrawSetPreviewRot(Accessories[11], 0.000000, 0.000000, 0.000000, 0.000000);

    Accessories[12] = TextDrawCreate(464.000000, 286.720001, "LD_SPAC:white");
    TextDrawLetterSize(Accessories[12], 0.000000, 0.000000);
    TextDrawTextSize(Accessories[12], 55.111114, 58.737792);
    TextDrawAlignment(Accessories[12], 1);
    TextDrawColor(Accessories[12], -1);
    TextDrawSetShadow(Accessories[12], 1);
    TextDrawSetOutline(Accessories[12], 0);
    TextDrawFont(Accessories[12], 4);
    TextDrawSetPreviewModel(Accessories[12], 0);
    TextDrawSetPreviewRot(Accessories[12], 0.000000, 0.000000, 0.000000, 0.000000);

    Accessories[13] = TextDrawCreate(164.000000, 356.720001, "LD_SPAC:white");
    TextDrawLetterSize(Accessories[13], 0.000000, 0.000000);
    TextDrawTextSize(Accessories[13], 55.111114, 58.737792);
    TextDrawAlignment(Accessories[13], 1);
    TextDrawColor(Accessories[13], -1);
    TextDrawSetShadow(Accessories[13], 1);
    TextDrawSetOutline(Accessories[13], 0);
    TextDrawFont(Accessories[13], 4);
    TextDrawSetPreviewModel(Accessories[13], 0);
    TextDrawSetPreviewRot(Accessories[13], 0.000000, 0.000000, 0.000000, 0.000000);

    Accessories[14] = TextDrawCreate(224.000000, 356.720001, "LD_SPAC:white");
    TextDrawLetterSize(Accessories[14], 0.000000, 0.000000);
    TextDrawTextSize(Accessories[14], 55.111114, 58.737792);
    TextDrawAlignment(Accessories[14], 1);
    TextDrawColor(Accessories[14], -1);
    TextDrawSetShadow(Accessories[14], 1);
    TextDrawSetOutline(Accessories[14], 0);
    TextDrawFont(Accessories[14], 4);
    TextDrawSetPreviewModel(Accessories[14], 0);
    TextDrawSetPreviewRot(Accessories[14], 0.000000, 0.000000, 0.000000, 0.000000);

    Accessories[15] = TextDrawCreate(284.000000, 356.720001, "LD_SPAC:white");
    TextDrawLetterSize(Accessories[15], 0.000000, 0.000000);
    TextDrawTextSize(Accessories[15], 55.111114, 58.737792);
    TextDrawAlignment(Accessories[15], 1);
    TextDrawColor(Accessories[15], -1);
    TextDrawSetShadow(Accessories[15], 1);
    TextDrawSetOutline(Accessories[15], 0);
    TextDrawFont(Accessories[15], 4);
    TextDrawSetPreviewModel(Accessories[15], 0);
    TextDrawSetPreviewRot(Accessories[15], 0.000000, 0.000000, 0.000000, 0.000000);

    Accessories[16] = TextDrawCreate(344.000000, 356.720001, "LD_SPAC:white");
    TextDrawLetterSize(Accessories[16], 0.000000, 0.000000);
    TextDrawTextSize(Accessories[16], 55.111114, 58.737792);
    TextDrawAlignment(Accessories[16], 1);
    TextDrawColor(Accessories[16], -1);
    TextDrawSetShadow(Accessories[16], 1);
    TextDrawSetOutline(Accessories[16], 0);
    TextDrawFont(Accessories[16], 4);
    TextDrawSetPreviewModel(Accessories[16], 0);
    TextDrawSetPreviewRot(Accessories[16], 0.000000, 0.000000, 0.000000, 0.000000);

    Accessories[17] = TextDrawCreate(404.000000, 356.720001, "LD_SPAC:white");
    TextDrawLetterSize(Accessories[17], 0.000000, 0.000000);
    TextDrawTextSize(Accessories[17], 55.111114, 58.737792);
    TextDrawAlignment(Accessories[17], 1);
    TextDrawColor(Accessories[17], -1);
    TextDrawSetShadow(Accessories[17], 1);
    TextDrawSetOutline(Accessories[17], 0);
    TextDrawFont(Accessories[17], 4);
    TextDrawSetPreviewModel(Accessories[17], 0);
    TextDrawSetPreviewRot(Accessories[17], 0.000000, 0.000000, 0.000000, 0.000000);

    Accessories[18] = TextDrawCreate(464.000000, 356.720001, "LD_SPAC:white");
    TextDrawLetterSize(Accessories[18], 0.000000, 0.000000);
    TextDrawTextSize(Accessories[18], 55.111114, 58.737792);
    TextDrawAlignment(Accessories[18], 1);
    TextDrawColor(Accessories[18], -1);
    TextDrawSetShadow(Accessories[18], 1);
    TextDrawSetOutline(Accessories[18], 0);
    TextDrawFont(Accessories[18], 4);
    TextDrawSetPreviewModel(Accessories[18], 0);
    TextDrawSetPreviewRot(Accessories[18], 0.000000, 0.000000, 0.000000, 0.000000);

    Accessories[19] = TextDrawCreate(423.111480, 266.311065, "Accessories");
    TextDrawLetterSize(Accessories[19], 0.449999, 1.600000);
    TextDrawAlignment(Accessories[19], 1);
    TextDrawColor(Accessories[19], -1);
    TextDrawSetShadow(Accessories[19], 1);
    TextDrawSetOutline(Accessories[19], 2);
    TextDrawBackgroundColor(Accessories[19], 51);
    TextDrawFont(Accessories[19], 1);
    TextDrawSetProportional(Accessories[19], 1);

    Accessories[20] = TextDrawCreate(164.889099, 265.315551, "Edit Hat");
    TextDrawLetterSize(Accessories[20], 0.288221, 1.037510);
    TextDrawTextSize(Accessories[20], 250.444610, 12);
    TextDrawAlignment(Accessories[20], 1);
    TextDrawColor(Accessories[20], -1);
    TextDrawSetShadow(Accessories[20], 1);
    TextDrawSetOutline(Accessories[20], 1);
    TextDrawBackgroundColor(Accessories[20], 51);
    TextDrawFont(Accessories[20], 2);
    TextDrawSetProportional(Accessories[20], 1);
    TextDrawSetSelectable(Accessories[20], true);
    //


    BuyAccesor[0] = TextDrawCreate(242.666641, 294.684448, "LD_BEAT:left");
    TextDrawLetterSize(BuyAccesor[0], 0.000000, 0.355555);
    TextDrawTextSize(BuyAccesor[0], 38.666671, 38.328887);
    TextDrawAlignment(BuyAccesor[0], 1);
    TextDrawColor(BuyAccesor[0], -1);
    TextDrawUseBox(BuyAccesor[0], true);
    TextDrawBoxColor(BuyAccesor[0], 255);
    TextDrawSetShadow(BuyAccesor[0], 0);
    TextDrawSetOutline(BuyAccesor[0], 0);
    TextDrawFont(BuyAccesor[0], 4);
    TextDrawSetSelectable(BuyAccesor[0], true);

    BuyAccesor[1] = TextDrawCreate(363.555572, 294.684448, "LD_BEAT:right");
    TextDrawLetterSize(BuyAccesor[1], 0.000000, 0.000000);
    TextDrawTextSize(BuyAccesor[1], 38.666671, 38.328887);
    TextDrawAlignment(BuyAccesor[1], 1);
    TextDrawColor(BuyAccesor[1], -1);
    TextDrawUseBox(BuyAccesor[1], true);
    TextDrawBoxColor(BuyAccesor[1], 255);
    TextDrawSetShadow(BuyAccesor[1], 0);
    TextDrawSetOutline(BuyAccesor[1], 0);
    TextDrawFont(BuyAccesor[1], 4);
    TextDrawSetSelectable(BuyAccesor[1], true);

    BuyAccesor[2] = TextDrawCreate(269.777801, 332.515716, "Hats");
    TextDrawLetterSize(BuyAccesor[2], 0.449999, 1.600000);
    TextDrawTextSize(BuyAccesor[2], 304.444610, 12);
    TextDrawAlignment(BuyAccesor[2], 1);
    TextDrawColor(BuyAccesor[2], -1);
    TextDrawSetShadow(BuyAccesor[2], 0);
    TextDrawSetOutline(BuyAccesor[2], 1);
    TextDrawBackgroundColor(BuyAccesor[2], 51);
    TextDrawFont(BuyAccesor[2], 1);
    TextDrawSetProportional(BuyAccesor[2], 1);
    TextDrawSetSelectable(BuyAccesor[2], true);

    BuyAccesor[3] = TextDrawCreate(312.888763, 332.515716, "Glasses");
    TextDrawLetterSize(BuyAccesor[3], 0.449999, 1.600000);
    TextDrawTextSize(BuyAccesor[3], 368.444427, 12);
    TextDrawAlignment(BuyAccesor[3], 1);
    TextDrawColor(BuyAccesor[3], -1);
    TextDrawSetShadow(BuyAccesor[3], 0);
    TextDrawSetOutline(BuyAccesor[3], 1);
    TextDrawBackgroundColor(BuyAccesor[3], 51);
    TextDrawFont(BuyAccesor[3], 1);
    TextDrawSetProportional(BuyAccesor[3], 1);
    TextDrawSetSelectable(BuyAccesor[3], true);

    BuyAccesor[4] = TextDrawCreate(290.666839, 353.422363, "Buy");
    TextDrawLetterSize(BuyAccesor[4], 0.732222, 2.680176);
    TextDrawTextSize(BuyAccesor[4], 344.889099, 26);
    TextDrawAlignment(BuyAccesor[4], 1);
    TextDrawColor(BuyAccesor[4], -1);
    TextDrawSetShadow(BuyAccesor[4], 0);
    TextDrawSetOutline(BuyAccesor[4], 1);
    TextDrawBackgroundColor(BuyAccesor[4], 51);
    TextDrawFont(BuyAccesor[4], 2);
    TextDrawSetProportional(BuyAccesor[4], 1);
    TextDrawSetSelectable(BuyAccesor[4], true);

    BuyAccesor[5] = TextDrawCreate(290.666809, 380.800048, "Exit");
    TextDrawLetterSize(BuyAccesor[5], 0.585554, 2.804620);
    TextDrawTextSize(BuyAccesor[5], 343.110992, 26);
    TextDrawAlignment(BuyAccesor[5], 1);
    TextDrawColor(BuyAccesor[5], -1);
    TextDrawSetShadow(BuyAccesor[5], 0);
    TextDrawSetOutline(BuyAccesor[5], 1);
    TextDrawBackgroundColor(BuyAccesor[5], 51);
    TextDrawFont(BuyAccesor[5], 2);
    TextDrawSetProportional(BuyAccesor[5], 1);
    TextDrawSetSelectable(BuyAccesor[5], true);
	// buy phone
	BPH[0] = TextDrawCreate(319.500000, 103.250000, "Sell Phone");
	TextDrawLetterSize(BPH[0], 0.449999, 1.600000);
	TextDrawTextSize(BPH[0], 69.000000, 150.062500);
	TextDrawAlignment(BPH[0], 2);
	TextDrawColor(BPH[0], -1);
	TextDrawUseBox(BPH[0], true);
	TextDrawBoxColor(BPH[0], 3473216);
	TextDrawSetShadow(BPH[0], 0);
	TextDrawSetOutline(BPH[0], 1);
	TextDrawBackgroundColor(BPH[0], 51);
	TextDrawFont(BPH[0], 2);
	TextDrawSetProportional(BPH[0], 1);

	BPH[1] = TextDrawCreate(399.000000, 120.500000, "usebox");
	TextDrawLetterSize(BPH[1], 0.000000, 24.037494);
	TextDrawTextSize(BPH[1], 240.500000, 0.000000);
	TextDrawAlignment(BPH[1], 1);
	TextDrawColor(BPH[1], 0);
	TextDrawUseBox(BPH[1], true);
	TextDrawBoxColor(BPH[1], 102);
	TextDrawSetShadow(BPH[1], 0);
	TextDrawSetOutline(BPH[1], 0);
	TextDrawFont(BPH[1], 0);

	BPH[2] = TextDrawCreate(245.500000, 106.312500, "LD_SPAC:white");
	TextDrawLetterSize(BPH[2], 0.006500, 0.026250);
	TextDrawTextSize(BPH[2], 109.500000, 105.000000);
	TextDrawAlignment(BPH[2], 1);
	TextDrawColor(BPH[2], -1);
	TextDrawUseBox(BPH[2], true);
	TextDrawBoxColor(BPH[2], 3473216);
	TextDrawSetShadow(BPH[2], 0);
	TextDrawSetOutline(BPH[2], 0);
	TextDrawBackgroundColor(BPH[2], 3473152);
	TextDrawFont(BPH[2], 5);
	TextDrawSetPreviewModel(BPH[2], 18867);
	TextDrawSetPreviewRot(BPH[2], 90.000000, 180.000000, 0.000000, 1.000000);

	PHONES[0] = TextDrawCreate(319.500000, 199.500000, "HTC");
	TextDrawLetterSize(PHONES[0], 0.361000, 1.569375);
	PHONES[1] = TextDrawCreate(319.500000, 219.500000, "LG");
	TextDrawLetterSize(PHONES[1], 0.356499, 1.621874);
	PHONES[2] = TextDrawCreate(319.500000, 239.500000, "Nokia");
	TextDrawLetterSize(PHONES[2], 0.345500, 1.608749);
	PHONES[3] = TextDrawCreate(319.500000, 259.500000, "Lenovo");
	TextDrawLetterSize(PHONES[3], 0.246000, 1.525625);
	PHONES[4] = TextDrawCreate(319.500000, 279.500000, "Samsung Galaxy S3");
	TextDrawLetterSize(PHONES[4], 0.238999, 1.578124);
	PHONES[5] = TextDrawCreate(319.500000, 299.500000, "Apple iPhone 5S");
	TextDrawLetterSize(PHONES[5], 0.252500, 1.678749);
	PHONES[6] = TextDrawCreate(319.500000, 319.500000, "Apple iPhone 6S");
	TextDrawLetterSize(PHONES[6], 0.250000, 1.643749);

	for(new x; x < 7; x ++)
	{
		TextDrawTextSize(PHONES[x], 20.500000, 150.937500);
		TextDrawAlignment(PHONES[x], 2);
		TextDrawColor(PHONES[x], -1);
		TextDrawUseBox(PHONES[x], true);
		TextDrawBoxColor(PHONES[x], 3473407);
		TextDrawSetShadow(PHONES[x], 0);
		TextDrawSetOutline(PHONES[x], 1);
		TextDrawBackgroundColor(PHONES[x], 51);
		TextDrawFont(PHONES[x], 2);
		TextDrawSetProportional(PHONES[x], 1);
		TextDrawSetSelectable(PHONES[x], true);
	}

	BPH[3] = TextDrawCreate(319.500000, 339.937500, "Close");
	TextDrawLetterSize(BPH[3], 0.449999, 1.600000);
	TextDrawTextSize(BPH[3], 20.500000, 150.500000);
	TextDrawAlignment(BPH[3], 2);
	TextDrawColor(BPH[3], -1);
	TextDrawUseBox(BPH[3], true);
	TextDrawBoxColor(BPH[3], 3473216);
	TextDrawSetShadow(BPH[3], 0);
	TextDrawSetOutline(BPH[3], 1);
	TextDrawBackgroundColor(BPH[3], 51);
	TextDrawFont(BPH[3], 2);
	TextDrawSetProportional(BPH[3], 1);
	TextDrawSetSelectable(BPH[3], true);
	// sms
	SMS = TextDrawCreate(604.500000, 192.937500, "CMC");
	TextDrawLetterSize(SMS, 0.439500, 1.818751);
	TextDrawTextSize(SMS, 2.000000, 73.500000);
	TextDrawAlignment(SMS, 2);
	TextDrawColor(SMS, -1);
	TextDrawUseBox(SMS, true);
	TextDrawBoxColor(SMS, -196083542);
	TextDrawSetShadow(SMS, 0);
	TextDrawSetOutline(SMS, 1);
	TextDrawBackgroundColor(SMS, 51);
	TextDrawFont(SMS, 2);
	TextDrawSetProportional(SMS, 1);
	// logotip
	URL[0] = TextDrawCreate(548.000061, 5.973311, "L");
	TextDrawLetterSize(URL[0], 0.750001, 3.235188);
	TextDrawAlignment(URL[0], 1);
	TextDrawColor(URL[0], 41215);
	TextDrawUseBox(URL[0], true);
	TextDrawBoxColor(URL[0], 0);
	TextDrawSetShadow(URL[0], 0);
	TextDrawSetOutline(URL[0], 1);
	TextDrawBackgroundColor(URL[0], 51);
	TextDrawFont(URL[0], 1);
	TextDrawSetProportional(URL[0], 1);

	URL[1] = TextDrawCreate(555.999877, 11.946643, "EGENDARY");
	TextDrawLetterSize(URL[1], 0.449999, 1.600000);
	TextDrawAlignment(URL[1], 1);
	TextDrawColor(URL[1], -1378294017);
	TextDrawSetShadow(URL[1], 0);
	TextDrawSetOutline(URL[1], 1);
	TextDrawBackgroundColor(URL[1], 51);
	TextDrawFont(URL[1], 1);
	TextDrawSetProportional(URL[1], 1);

	URL[2] = TextDrawCreate(562.399841, 23.146688, "Role Play Game");
	TextDrawLetterSize(URL[2], 0.449999, 1.600000);
	TextDrawAlignment(URL[2], 1);
	TextDrawColor(URL[2], -1378294017);
	TextDrawSetShadow(URL[2], 0);
	TextDrawSetOutline(URL[2], 1);
	TextDrawBackgroundColor(URL[2], 51);
	TextDrawFont(URL[2], 1);
	TextDrawSetProportional(URL[2], 1);

	URL[3] = TextDrawCreate(48.000015, 321.813537, "www.samp-pawn.cn");
	TextDrawLetterSize(URL[3], 0.225198, 1.062399);
	TextDrawAlignment(URL[3], 1);
	TextDrawColor(URL[3], -1378294017);
	TextDrawSetShadow(URL[3], 0);
	TextDrawSetOutline(URL[3], -1);
	TextDrawBackgroundColor(URL[3], 51);
	TextDrawFont(URL[3], 2);
	TextDrawSetProportional(URL[3], 1);

	URL[4] = TextDrawCreate(546.600097, 5.479979, "L");
	TextDrawLetterSize(URL[4], 0.750001, 3.235188);
	TextDrawAlignment(URL[4], 1);
	TextDrawColor(URL[4], -16776961);
	TextDrawUseBox(URL[4], true);
	TextDrawBoxColor(URL[4], 0);
	TextDrawSetShadow(URL[4], 0);
	TextDrawSetOutline(URL[4], 1);
	TextDrawBackgroundColor(URL[4], 51);
	TextDrawFont(URL[4], 1);
	TextDrawSetProportional(URL[4], 1);

	URL[5] = TextDrawCreate(545.600036, 7.466667, "LD_SPAC:white");
	TextDrawLetterSize(URL[5], 0.000000, 0.000000);
	TextDrawTextSize(URL[5], 87.199951, 2.986665);
	TextDrawAlignment(URL[5], 1);
	TextDrawColor(URL[5], -2147483393);
	TextDrawSetShadow(URL[5], 0);
	TextDrawSetOutline(URL[5], 0);
	TextDrawFont(URL[5], 4);

	URL[6] = TextDrawCreate(545.000000, 40.573329, "LD_SPAC:white");
	TextDrawLetterSize(URL[6], 0.000000, 0.000000);
	TextDrawTextSize(URL[6], 87.199951, 2.986665);
	TextDrawAlignment(URL[6], 1);
	TextDrawColor(URL[6], -2147483393);
	TextDrawSetShadow(URL[6], 0);
	TextDrawSetOutline(URL[6], 0);
	TextDrawFont(URL[6], 4);


//

	RegSkin[0] = TextDrawCreate(320.299560, 357.200134, "LD_SPAC:white");
	TextDrawLetterSize(RegSkin[0], 0.000000, 0.000000);
	TextDrawTextSize(RegSkin[0], 36.000000, 17.000000);
	TextDrawAlignment(RegSkin[0], 1);
	TextDrawColor(RegSkin[0], 252777471);
	TextDrawSetShadow(RegSkin[0], 0);
	TextDrawSetOutline(RegSkin[0], 0);
	TextDrawBackgroundColor(RegSkin[0], 255);
	TextDrawFont(RegSkin[0], 4);
	TextDrawSetProportional(RegSkin[0], 0);
	TextDrawSetShadow(RegSkin[0], 0);

	RegSkin[1] = TextDrawCreate(283.500000, 357.422332, "LD_SPAC:white");
	TextDrawLetterSize(RegSkin[1], 0.000000, 0.000000);
	TextDrawTextSize(RegSkin[1], 36.000000, 17.000000);
	TextDrawAlignment(RegSkin[1], 1);
	TextDrawColor(RegSkin[1], 252777471);
	TextDrawSetShadow(RegSkin[1], 0);
	TextDrawSetOutline(RegSkin[1], 0);
	TextDrawBackgroundColor(RegSkin[1], 255);
	TextDrawFont(RegSkin[1], 4);
	TextDrawSetProportional(RegSkin[1], 0);
	TextDrawSetShadow(RegSkin[1], 0);

	RegSkin[2] = TextDrawCreate(298.799560, 340.400115, "LD_SPAC:white");
	TextDrawLetterSize(RegSkin[2], 0.000000, 0.000000);
	TextDrawTextSize(RegSkin[2], 43.000000, 16.000000);
	TextDrawAlignment(RegSkin[2], 1);
	TextDrawColor(RegSkin[2], -1523963137);
	TextDrawSetShadow(RegSkin[2], 0);
	TextDrawSetOutline(RegSkin[2], 0);
	TextDrawBackgroundColor(RegSkin[2], 255);
	TextDrawFont(RegSkin[2], 4);
	TextDrawSetProportional(RegSkin[2], 0);
	TextDrawSetShadow(RegSkin[2], 0);

	RegSkin[3] = TextDrawCreate(305.000000, 343.066772, "select");
	TextDrawLetterSize(RegSkin[3], 0.188999, 1.114666);
	TextDrawTextSize(RegSkin[3], 333.000000, 3.000000);
	TextDrawAlignment(RegSkin[3], 1);
	TextDrawColor(RegSkin[3], -1);
	TextDrawBoxColor(RegSkin[3], -1);
	TextDrawSetShadow(RegSkin[3], 0);
	TextDrawSetOutline(RegSkin[3], 0);
	TextDrawBackgroundColor(RegSkin[3], 51);
	TextDrawFont(RegSkin[3], 2);
	TextDrawSetProportional(RegSkin[3], 1);
	TextDrawSetSelectable(RegSkin[3], true);

	RegSkin[4] = TextDrawCreate(328.000000, 359.866790, "NEXT");
	TextDrawLetterSize(RegSkin[4], 0.188999, 1.114666);
	TextDrawTextSize(RegSkin[4], 348.000000, 5.000000);
	TextDrawAlignment(RegSkin[4], 1);
	TextDrawColor(RegSkin[4], -1);
	TextDrawBoxColor(RegSkin[4], -1);
	TextDrawSetShadow(RegSkin[4], 0);
	TextDrawSetOutline(RegSkin[4], 0);
	TextDrawBackgroundColor(RegSkin[4], 51);
	TextDrawFont(RegSkin[4], 2);
	TextDrawSetProportional(RegSkin[4], 1);
	TextDrawSetSelectable(RegSkin[4], true);

	RegSkin[5] = TextDrawCreate(291.705871, 360.489013, "BACK");
	TextDrawLetterSize(RegSkin[5], 0.188999, 1.114666);
	TextDrawTextSize(RegSkin[5], 311.000000, 5.000000);
	TextDrawAlignment(RegSkin[5], 1);
	TextDrawColor(RegSkin[5], -1);
	TextDrawBoxColor(RegSkin[5], -1);
	TextDrawSetShadow(RegSkin[5], 0);
	TextDrawSetOutline(RegSkin[5], 0);
	TextDrawBackgroundColor(RegSkin[5], 51);
	TextDrawFont(RegSkin[5], 2);
	TextDrawSetProportional(RegSkin[5], 1);
	TextDrawSetSelectable(RegSkin[5], true);
///

	SkinMagazLeft = TextDrawCreate(50.0, 200.0, "LD_BEAT:left");
	TextDrawFont(SkinMagazLeft, 4);
	TextDrawTextSize(SkinMagazLeft, 50, 25);
	TextDrawSetSelectable(SkinMagazLeft, 1);

	SkinMagazRight = TextDrawCreate(530.0, 200.0, "LD_BEAT:right");
	TextDrawFont(SkinMagazRight, 4);
	TextDrawTextSize(SkinMagazRight, 50, 25);
	TextDrawSetSelectable(SkinMagazRight, 1);

	SkinMagazCancel = TextDrawCreate(157.000000, 371.000000,"LD_CHAT:thumbdn"); // cancel
	TextDrawFont(SkinMagazCancel, 4);
	TextDrawTextSize(SkinMagazCancel, 50, 25);
	TextDrawSetSelectable(SkinMagazCancel, 1);

	SkinMagazSelect = TextDrawCreate(382.000000, 371.000000,"LD_CHAT:thumbup"); // select
	TextDrawFont(SkinMagazSelect, 4);
	TextDrawTextSize(SkinMagazSelect, 50, 25);
	TextDrawSetSelectable(SkinMagazSelect, 1);

	SkinRabLeft = TextDrawCreate(50.0, 200.0, "LD_BEAT:left");
	TextDrawFont(SkinRabLeft, 4);
	TextDrawTextSize(SkinRabLeft, 50, 25);
	TextDrawSetSelectable(SkinRabLeft, 1);

	SkinRabRight = TextDrawCreate(530.0, 200.0, "LD_BEAT:right");
	TextDrawFont(SkinRabRight, 4);
	TextDrawTextSize(SkinRabRight, 50, 25);
	TextDrawSetSelectable(SkinRabRight, 1);

	SkinRabCancel = TextDrawCreate(157.000000, 371.000000, "LD_CHAT:thumbdn"); // cancel
	TextDrawFont(SkinRabCancel, 4);
	TextDrawTextSize(SkinRabCancel, 50, 25);
	TextDrawSetSelectable(SkinRabCancel, 1);

	SkinRabSelect = TextDrawCreate(382.000000, 371.000000, "LD_CHAT:thumbup"); // select
	TextDrawFont(SkinRabSelect, 4);
	TextDrawTextSize(SkinRabSelect, 50, 25);
	TextDrawSetSelectable(SkinRabSelect, 1);

	PlayTD[0] = TextDrawCreate(262.372039, 309.166778, "_");
    TextDrawTextSize(PlayTD[0], 100.732048, 95.083374);
    TextDrawFont(PlayTD[0], TEXT_DRAW_FONT_MODEL_PREVIEW);
    TextDrawAlignment(PlayTD[0], 2);
    TextDrawUseBox(PlayTD[0], true);
    TextDrawBoxColor(PlayTD[0], 0x00000000);
    TextDrawColor(PlayTD[0], -1);
    TextDrawBackgroundColor(PlayTD[0], 0x00000000);
    TextDrawSetPreviewModel(PlayTD[0], 2226);
    TextDrawSetPreviewRot(PlayTD[0], 0.000000, 0.000000, 0.000000, 1.000000);

    PlayTD[1] = TextDrawCreate(231.918014, 349.416778, "LD_BEAT:left");
    TextDrawTextSize(PlayTD[1], 25.000000, 25.000000);
    TextDrawAlignment(PlayTD[1], 2);
    TextDrawColor(PlayTD[1], -1);
    TextDrawFont(PlayTD[1], 4);
    TextDrawSetSelectable(PlayTD[1], true);

    PlayTD[2] = TextDrawCreate(365.447174, 348.249938, "LD_BEAT:right");
    TextDrawTextSize(PlayTD[2], 25.000000, 25.000000);
    TextDrawAlignment(PlayTD[2], 2);
    TextDrawColor(PlayTD[2], -1);
    TextDrawFont(PlayTD[2], 4);
    TextDrawSetSelectable(PlayTD[2], true);

    PlayTD[3] = TextDrawCreate(258.154693, 383.833343, "Play");
    TextDrawLetterSize(PlayTD[3], 0.449999, 1.600000);
    TextDrawTextSize(PlayTD[3], 18.000000, 47.833335);
    TextDrawAlignment(PlayTD[3], 2);
    TextDrawColor(PlayTD[3], -1378294017);
    TextDrawUseBox(PlayTD[3], true);
    TextDrawBoxColor(PlayTD[3], 1717986918);
    TextDrawSetShadow(PlayTD[3], 0);
    TextDrawSetOutline(PlayTD[3], 1);
    TextDrawBackgroundColor(PlayTD[3], 255);
    TextDrawFont(PlayTD[3], 2);
    TextDrawSetProportional(PlayTD[3], 1);
    TextDrawSetSelectable(PlayTD[3], true);

    PlayTD[4] = TextDrawCreate(312.503204, 383.833465, "Stop");
    TextDrawLetterSize(PlayTD[4], 0.449999, 1.600000);
    TextDrawTextSize(PlayTD[4], 18.000000, 51.916660);
    TextDrawAlignment(PlayTD[4], 2);
    TextDrawColor(PlayTD[4], -1378294017);
    TextDrawUseBox(PlayTD[4], true);
    TextDrawBoxColor(PlayTD[4], 1717986918);
    TextDrawSetShadow(PlayTD[4], 0);
    TextDrawSetOutline(PlayTD[4], 1);
    TextDrawBackgroundColor(PlayTD[4], 255);
    TextDrawFont(PlayTD[4], 2);
    TextDrawSetProportional(PlayTD[4], 1);
    TextDrawSetSelectable(PlayTD[4], true);

    PlayTD[5] = TextDrawCreate(365.914733, 383.833343, "Exit");
    TextDrawLetterSize(PlayTD[5], 0.449999, 1.600000);
    TextDrawTextSize(PlayTD[5], 18.000000, 46.083316);
    TextDrawAlignment(PlayTD[5], 2);
    TextDrawColor(PlayTD[5], -1378294017);
    TextDrawUseBox(PlayTD[5], true);
    TextDrawBoxColor(PlayTD[5], 1717986918);
    TextDrawSetShadow(PlayTD[5], 0);
    TextDrawSetOutline(PlayTD[5], 1);
    TextDrawBackgroundColor(PlayTD[5], 255);
    TextDrawFont(PlayTD[5], 2);
    TextDrawSetProportional(PlayTD[5], 1);
    TextDrawSetSelectable(PlayTD[5], true);
   	//Спиидометр

	VehBox[0] = TextDrawCreate(515.000000, 370.911254, "LD_SPAC:white");
	TextDrawLetterSize(VehBox[0], 0.000000, 0.000000);
	TextDrawTextSize(VehBox[0], 119.000000, 58.000000);
	TextDrawAlignment(VehBox[0], 1);
	TextDrawColor(VehBox[0], 252777471);
	TextDrawSetShadow(VehBox[0], 0);
	TextDrawSetOutline(VehBox[0], 0);
	TextDrawBackgroundColor(VehBox[0], 255);
	TextDrawFont(VehBox[0], 4);
	TextDrawSetProportional(VehBox[0], 0);
	TextDrawSetShadow(VehBox[0], 0);

	VehBox[1] = TextDrawCreate(518.200805, 387.811187, "hud:radar_centre");
	TextDrawLetterSize(VehBox[1], 0.000000, 0.000000);
	TextDrawTextSize(VehBox[1], 10.000000, 9.000000);
	TextDrawAlignment(VehBox[1], 1);
	TextDrawColor(VehBox[1], -1);
	TextDrawSetShadow(VehBox[1], 0);
	TextDrawSetOutline(VehBox[1], 0);
	TextDrawBackgroundColor(VehBox[1], 255);
	TextDrawFont(VehBox[1], 4);
	TextDrawSetProportional(VehBox[1], 0);
	TextDrawSetShadow(VehBox[1], 0);

	VehBox[2] = TextDrawCreate(519.000366, 373.400054, "hud:radar_impound");
	TextDrawLetterSize(VehBox[2], 0.000000, 0.000000);
	TextDrawTextSize(VehBox[2], 10.000000, 9.000000);
	TextDrawAlignment(VehBox[2], 1);
	TextDrawColor(VehBox[2], -1);
	TextDrawSetShadow(VehBox[2], 0);
	TextDrawSetOutline(VehBox[2], 0);
	TextDrawBackgroundColor(VehBox[2], 255);
	TextDrawFont(VehBox[2], 4);
	TextDrawSetProportional(VehBox[2], 0);
	TextDrawSetShadow(VehBox[2], 0);

	VehBox[3] = TextDrawCreate(518.200805, 387.811187, "hud:radar_centre");
	TextDrawLetterSize(VehBox[3], 0.000000, 0.000000);
	TextDrawTextSize(VehBox[3], 10.000000, 9.000000);
	TextDrawAlignment(VehBox[3], 1);
	TextDrawColor(VehBox[3], -1);
	TextDrawSetShadow(VehBox[3], 0);
	TextDrawSetOutline(VehBox[3], 0);
	TextDrawBackgroundColor(VehBox[3], 255);
	TextDrawFont(VehBox[3], 4);
	TextDrawSetProportional(VehBox[3], 0);
	TextDrawSetShadow(VehBox[3], 0);

	VehBox[4] = TextDrawCreate(518.600463, 417.122558, "hud:radar_modgarage");
	TextDrawLetterSize(VehBox[4], 0.000000, 0.000000);
	TextDrawTextSize(VehBox[4], 10.000000, 9.000000);
	TextDrawAlignment(VehBox[4], 1);
	TextDrawColor(VehBox[4], -1);
	TextDrawSetShadow(VehBox[4], 0);
	TextDrawSetOutline(VehBox[4], 0);
	TextDrawBackgroundColor(VehBox[4], 255);
	TextDrawFont(VehBox[4], 4);
	TextDrawSetProportional(VehBox[4], 0);
	TextDrawSetShadow(VehBox[4], 0);

	VehBox[5] = TextDrawCreate(519.101440, 402.633514, "EN");
	TextDrawLetterSize(VehBox[5], 0.253500, 0.884442);
	TextDrawAlignment(VehBox[5], 1);
	TextDrawColor(VehBox[5], -2147483393);
	TextDrawSetShadow(VehBox[5], 0);
	TextDrawSetOutline(VehBox[5], 0);
	TextDrawBackgroundColor(VehBox[5], 255);
	TextDrawFont(VehBox[5], 1);
	TextDrawSetProportional(VehBox[5], 1);
	TextDrawSetShadow(VehBox[5], 0);

	VehBox[6] = TextDrawCreate(533.399414, 373.689117, "SPEED:");
	TextDrawLetterSize(VehBox[6], 0.233500, 0.927999);
	TextDrawAlignment(VehBox[6], 1);
	TextDrawColor(VehBox[6], -1);
	TextDrawSetShadow(VehBox[6], 0);
	TextDrawSetOutline(VehBox[6], 0);
	TextDrawBackgroundColor(VehBox[6], 255);
	TextDrawFont(VehBox[6], 1);
	TextDrawSetProportional(VehBox[6], 1);
	TextDrawSetShadow(VehBox[6], 0);

	VehBox[7] = TextDrawCreate(533.098876, 388.911224, "FUEL:");
	TextDrawLetterSize(VehBox[7], 0.233500, 0.927999);
	TextDrawAlignment(VehBox[7], 1);
	TextDrawColor(VehBox[7], -1);
	TextDrawSetShadow(VehBox[7], 0);
	TextDrawSetOutline(VehBox[7], 0);
	TextDrawBackgroundColor(VehBox[7], 255);
	TextDrawFont(VehBox[7], 1);
	TextDrawSetProportional(VehBox[7], 1);
	TextDrawSetShadow(VehBox[7], 0);

	VehBox[8] = TextDrawCreate(533.098754, 402.333221, "ENGINE:");
	TextDrawLetterSize(VehBox[8], 0.233500, 0.927999);
	TextDrawAlignment(VehBox[8], 1);
	TextDrawColor(VehBox[8], -1);
	TextDrawSetShadow(VehBox[8], 0);
	TextDrawSetOutline(VehBox[8], 0);
	TextDrawBackgroundColor(VehBox[8], 255);
	TextDrawFont(VehBox[8], 1);
	TextDrawSetProportional(VehBox[8], 1);
	TextDrawSetShadow(VehBox[8], 0);

	VehBox[9] = TextDrawCreate(533.499023, 416.744689, "HEALTH:");
	TextDrawLetterSize(VehBox[9], 0.233500, 0.927999);
	TextDrawAlignment(VehBox[9], 1);
	TextDrawColor(VehBox[9], -1);
	TextDrawSetShadow(VehBox[9], 0);
	TextDrawSetOutline(VehBox[9], 0);
	TextDrawBackgroundColor(VehBox[9], 255);
	TextDrawFont(VehBox[9], 1);
	TextDrawSetProportional(VehBox[9], 1);
	TextDrawSetShadow(VehBox[9], 0);

	VehBox[10] = TextDrawCreate(608.701538, 374.333526, "KM/H");
	TextDrawLetterSize(VehBox[10], 0.179499, 0.722666);
	TextDrawAlignment(VehBox[10], 3);
	TextDrawColor(VehBox[10], -1);
	TextDrawSetShadow(VehBox[10], 0);
	TextDrawSetOutline(VehBox[10], 0);
	TextDrawBackgroundColor(VehBox[10], 255);
	TextDrawFont(VehBox[10], 1);
	TextDrawSetProportional(VehBox[10], 1);
	TextDrawSetShadow(VehBox[10], 0);

	VehBox[11] = TextDrawCreate(598.401733, 415.800262, "%");
	TextDrawLetterSize(VehBox[11], 0.179499, 0.722666);
	TextDrawAlignment(VehBox[11], 3);
	TextDrawColor(VehBox[11], -1);
	TextDrawSetShadow(VehBox[11], 0);
	TextDrawSetOutline(VehBox[11], 0);
	TextDrawBackgroundColor(VehBox[11], 255);
	TextDrawFont(VehBox[11], 1);
	TextDrawSetProportional(VehBox[11], 1);
	TextDrawSetShadow(VehBox[11], 0);
	TextDrawSetSelectable(VehBox[11], true);

	//

	RentDraw[0] = TextDrawCreate(263.411804, 132.677764, "box");
	TextDrawLetterSize(RentDraw[0], 0.000000, 8.750004);
	TextDrawTextSize(RentDraw[0], 388.000000, 0.000000);
	TextDrawAlignment(RentDraw[0], 1);
	TextDrawColor(RentDraw[0], -1);
	TextDrawUseBox(RentDraw[0], 1);
	TextDrawBoxColor(RentDraw[0], 412024831);
	TextDrawSetShadow(RentDraw[0], 0);
	TextDrawSetOutline(RentDraw[0], 0);
	TextDrawBackgroundColor(RentDraw[0], 255);
	TextDrawFont(RentDraw[0], 1);
	TextDrawSetProportional(RentDraw[0], 1);
	TextDrawSetShadow(RentDraw[0], 0);

	RentDraw[1] = TextDrawCreate(263.411804, 133.299987, "box");
	TextDrawLetterSize(RentDraw[1], 0.000000, 19.644104);
	TextDrawTextSize(RentDraw[1], 389.000000, 0.000000);
	TextDrawAlignment(RentDraw[1], 1);
	TextDrawColor(RentDraw[1], -1);
	TextDrawUseBox(RentDraw[1], 1);
	TextDrawBoxColor(RentDraw[1], 252777471);
	TextDrawSetShadow(RentDraw[1], 0);
	TextDrawSetOutline(RentDraw[1], 0);
	TextDrawBackgroundColor(RentDraw[1], 255);
	TextDrawFont(RentDraw[1], 1);
	TextDrawSetProportional(RentDraw[1], 1);
	TextDrawSetShadow(RentDraw[1], 0);

	RentDraw[2] = TextDrawCreate(277.911804, 147.611083, "box");
	TextDrawLetterSize(RentDraw[2], 0.000000, 1.549991);
	TextDrawTextSize(RentDraw[2], 372.000000, 0.000000);
	TextDrawAlignment(RentDraw[2], 1);
	TextDrawColor(RentDraw[2], -1);
	TextDrawUseBox(RentDraw[2], 1);
	TextDrawBoxColor(RentDraw[2], 412024831);
	TextDrawSetShadow(RentDraw[2], 0);
	TextDrawSetOutline(RentDraw[2], 0);
	TextDrawBackgroundColor(RentDraw[2], 255);
	TextDrawFont(RentDraw[2], 1);
	TextDrawSetProportional(RentDraw[2], 1);
	TextDrawSetShadow(RentDraw[2], 0);

	RentDraw[3] = TextDrawCreate(278.411712, 147.877990, "box");
	TextDrawLetterSize(RentDraw[3], 0.000000, 1.486986);
	TextDrawTextSize(RentDraw[3], 371.378692, 0.000000);
	TextDrawAlignment(RentDraw[3], 1);
	TextDrawColor(RentDraw[3], -1);
	TextDrawUseBox(RentDraw[3], 1);
	TextDrawBoxColor(RentDraw[3], 117967359);
	TextDrawSetShadow(RentDraw[3], 0);
	TextDrawSetOutline(RentDraw[3], 0);
	TextDrawBackgroundColor(RentDraw[3], 255);
	TextDrawFont(RentDraw[3], 1);
	TextDrawSetProportional(RentDraw[3], 1);
	TextDrawSetShadow(RentDraw[3], 0);

	RentDraw[4] = TextDrawCreate(292.411804, 184.322219, "box");
	TextDrawLetterSize(RentDraw[4], 0.000000, 9.499993);
	TextDrawTextSize(RentDraw[4], 357.000000, 0.000000);
	TextDrawAlignment(RentDraw[4], 1);
	TextDrawColor(RentDraw[4], -1);
	TextDrawUseBox(RentDraw[4], 1);
	TextDrawBoxColor(RentDraw[4], 412024831);
	TextDrawSetShadow(RentDraw[4], 0);
	TextDrawSetOutline(RentDraw[4], 0);
	TextDrawBackgroundColor(RentDraw[4], 255);
	TextDrawFont(RentDraw[4], 1);
	TextDrawSetProportional(RentDraw[4], 1);
	TextDrawSetShadow(RentDraw[4], 0);

	RentDraw[5] = TextDrawCreate(292.711578, 185.411361, "box");
	TextDrawLetterSize(RentDraw[5], 0.000000, 9.297932);
	TextDrawTextSize(RentDraw[5], 356.409240, 0.000000);
	TextDrawAlignment(RentDraw[5], 1);
	TextDrawColor(RentDraw[5], -1);
	TextDrawUseBox(RentDraw[5], 1);
	TextDrawBoxColor(RentDraw[5], 117967359);
	TextDrawSetShadow(RentDraw[5], 0);
	TextDrawSetOutline(RentDraw[5], 0);
	TextDrawBackgroundColor(RentDraw[5], 255);
	TextDrawFont(RentDraw[5], 1);
	TextDrawSetProportional(RentDraw[5], 1);
	TextDrawSetShadow(RentDraw[5], 0);

	RentDraw[6] = TextDrawCreate(292.911804, 260.855529, "box");
	TextDrawLetterSize(RentDraw[6], 0.000000, -0.450010);
	TextDrawTextSize(RentDraw[6], 357.000000, 0.000000);
	TextDrawAlignment(RentDraw[6], 1);
	TextDrawColor(RentDraw[6], -1);
	TextDrawUseBox(RentDraw[6], 1);
	TextDrawBoxColor(RentDraw[6], 412024831);
	TextDrawSetShadow(RentDraw[6], 0);
	TextDrawSetOutline(RentDraw[6], 0);
	TextDrawBackgroundColor(RentDraw[6], 255);
	TextDrawFont(RentDraw[6], 1);
	TextDrawSetProportional(RentDraw[6], 1);
	TextDrawSetShadow(RentDraw[6], 0);

	RentDraw[7] = TextDrawCreate(364.935424, 150.661224, "RENTING A SCOOTER");
	TextDrawLetterSize(RentDraw[7], 0.189999, 0.822221);
	TextDrawAlignment(RentDraw[7], 3);
	TextDrawColor(RentDraw[7], -1);
	TextDrawSetShadow(RentDraw[7], 0);
	TextDrawSetOutline(RentDraw[7], 0);
	TextDrawBackgroundColor(RentDraw[7], 255);
	TextDrawFont(RentDraw[7], 2);
	TextDrawSetProportional(RentDraw[7], 1);
	TextDrawSetShadow(RentDraw[7], 0);

	RentDraw[8] = TextDrawCreate(283.911804, 288.855560, "box");
	TextDrawLetterSize(RentDraw[8], 0.000000, 1.349992);
	TextDrawTextSize(RentDraw[8], 318.000000, 0.000000);
	TextDrawAlignment(RentDraw[8], 1);
	TextDrawColor(RentDraw[8], -1);
	TextDrawUseBox(RentDraw[8], 1);
	TextDrawBoxColor(RentDraw[8], 412024831);
	TextDrawSetShadow(RentDraw[8], 0);
	TextDrawSetOutline(RentDraw[8], 0);
	TextDrawBackgroundColor(RentDraw[8], 255);
	TextDrawFont(RentDraw[8], 1);
	TextDrawSetProportional(RentDraw[8], 1);
	TextDrawSetShadow(RentDraw[8], 0);

	RentDraw[9] = TextDrawCreate(325.911804, 288.855560, "box");
	TextDrawLetterSize(RentDraw[9], 0.000000, 1.329990);
	TextDrawTextSize(RentDraw[9], 359.838867, 0.000000);
	TextDrawAlignment(RentDraw[9], 1);
	TextDrawColor(RentDraw[9], -1);
	TextDrawUseBox(RentDraw[9], 1);
	TextDrawBoxColor(RentDraw[9], -1523963137);
	TextDrawSetShadow(RentDraw[9], 0);
	TextDrawSetOutline(RentDraw[9], 0);
	TextDrawBackgroundColor(RentDraw[9], 255);
	TextDrawFont(RentDraw[9], 1);
	TextDrawSetProportional(RentDraw[9], 1);
	TextDrawSetShadow(RentDraw[9], 0);

	RentDraw[10] = TextDrawCreate(341.870727, 261.922241, "hud:radar_cash");
	TextDrawLetterSize(RentDraw[10], 0.000000, 0.000000);
	TextDrawTextSize(RentDraw[10], 10.000000, 8.000000);
	TextDrawAlignment(RentDraw[10], 1);
	TextDrawColor(RentDraw[10], -1);
	TextDrawSetShadow(RentDraw[10], 0);
	TextDrawSetOutline(RentDraw[10], 0);
	TextDrawBackgroundColor(RentDraw[10], 255);
	TextDrawFont(RentDraw[10], 4);
	TextDrawSetProportional(RentDraw[10], 0);
	TextDrawSetShadow(RentDraw[10], 0);

	RentDraw[11] = TextDrawCreate(298.800109, 260.933380, "PRICE:100");
	TextDrawLetterSize(RentDraw[11], 0.219999, 0.971554);
	TextDrawAlignment(RentDraw[11], 1);
	TextDrawColor(RentDraw[11], -1);
	TextDrawSetShadow(RentDraw[11], 0);
	TextDrawSetOutline(RentDraw[11], 0);
	TextDrawBackgroundColor(RentDraw[11], 255);
	TextDrawFont(RentDraw[11], 2);
	TextDrawSetProportional(RentDraw[11], 1);
	TextDrawSetShadow(RentDraw[11], 0);

	RentDraw[12] = TextDrawCreate(283.911804, 288.855560, "box");
	TextDrawLetterSize(RentDraw[12], 0.000000, 1.378993);
	TextDrawTextSize(RentDraw[12], 318.000000, 0.000000);
	TextDrawAlignment(RentDraw[12], 1);
	TextDrawColor(RentDraw[12], -1);
	TextDrawUseBox(RentDraw[12], 1);
	TextDrawBoxColor(RentDraw[12], 117967359);
	TextDrawSetShadow(RentDraw[12], 0);
	TextDrawSetOutline(RentDraw[12], 0);
	TextDrawBackgroundColor(RentDraw[12], 255);
	TextDrawFont(RentDraw[12], 1);
	TextDrawSetProportional(RentDraw[12], 1);
	TextDrawSetShadow(RentDraw[12], 0);

	RentDraw[13] = TextDrawCreate(285.000030, 290.177825, "ACCEPT");
	TextDrawLetterSize(RentDraw[13], 0.204499, 0.946666);
	TextDrawTextSize(RentDraw[13], 316.000000, 5.000000);
	TextDrawAlignment(RentDraw[13], 1);
	TextDrawColor(RentDraw[13], -1);
	TextDrawBoxColor(RentDraw[13], -1);
	TextDrawSetShadow(RentDraw[13], 0);
	TextDrawSetOutline(RentDraw[13], 0);
	TextDrawBackgroundColor(RentDraw[13], 51);
	TextDrawFont(RentDraw[13], 2);
	TextDrawSetProportional(RentDraw[13], 1);
	TextDrawSetSelectable(RentDraw[13], true);

	RentDraw[14] = TextDrawCreate(331.729461, 289.889007, "EXIT");
	TextDrawLetterSize(RentDraw[14], 0.220498, 0.946666);
	TextDrawTextSize(RentDraw[14], 351.000000, 5.000000);
	TextDrawAlignment(RentDraw[14], 1);
	TextDrawColor(RentDraw[14], -1);
	TextDrawBoxColor(RentDraw[14], -1);
	TextDrawSetShadow(RentDraw[14], 0);
	TextDrawSetOutline(RentDraw[14], 0);
	TextDrawBackgroundColor(RentDraw[14], 51);
	TextDrawFont(RentDraw[14], 2);
	TextDrawSetProportional(RentDraw[14], 1);
	TextDrawSetSelectable(RentDraw[14], true);

	RentDraw[15] = TextDrawCreate(274.029418, 176.894485, "");
	TextDrawLetterSize(RentDraw[15], 0.000000, 0.000000);
	TextDrawTextSize(RentDraw[15], 97.000000, 95.000000);
	TextDrawAlignment(RentDraw[15], 1);
	TextDrawColor(RentDraw[15], -1);
	TextDrawSetShadow(RentDraw[15], 0);
	TextDrawSetOutline(RentDraw[15], 0);
	TextDrawBackgroundColor(RentDraw[15], 0x00000000);
	TextDrawFont(RentDraw[15], 5);
	TextDrawSetProportional(RentDraw[15], 0);
	TextDrawSetPreviewModel(RentDraw[15], 462);
	TextDrawSetPreviewRot(RentDraw[15], 0.000000, 0.000000, 20.000000, 1.000000);
	TextDrawSetPreviewVehCol(RentDraw[15], 1, 1);
	////

	DRAP = TextDrawCreate(510.0, 120.0, "~n~~n~\t~b~[]select~n~\t\t\t~g~next: ~w~q ~n~\t\t\t~g~last: ~w~e~n~~n~\t~b~[]select color ~n~\t\t\t~g~next: ~w~num4 ~n~\t\t\t~g~last: ~w~num6~n~~n~\t~b~[]other ~n~\t\t\t~g~switch color: ~w~space~n~~n~\t\t\t~g~accept: ~w~return ~n~\t\t\t~r~cancel: ~w~c ~n~");
	TextDrawFont(DRAP, 2);
	TextDrawLetterSize(DRAP, 0.20,0.80);
	TextDrawColor(DRAP, -1);
	TextDrawSetShadow(DRAP, 1);
	TextDrawBackgroundColor(DRAP, 0x00000044);
	TextDrawSetOutline(DRAP, 0);
	TextDrawSetProportional(DRAP, 3);
	TextDrawAlignment(DRAP, 1);
	TextDrawUseBox(DRAP, 1);
	TextDrawBoxColor(DRAP, COLOR_BOX);

	///
	RegisterTD[0] = TextDrawCreate(380.000000, 129.677780, "usebox");
	TextDrawLetterSize(RegisterTD[0], 0.000000, 19.254323);
	TextDrawTextSize(RegisterTD[0], 269.000000, 0.000000);
	TextDrawAlignment(RegisterTD[0], 1);
	TextDrawColor(RegisterTD[0], 0);
	TextDrawUseBox(RegisterTD[0], true);
	TextDrawBoxColor(RegisterTD[0], 412024831);
	TextDrawSetShadow(RegisterTD[0], 0);
	TextDrawSetOutline(RegisterTD[0], 0);
	TextDrawFont(RegisterTD[0], 0);

	RegisterTD[1] = TextDrawCreate(380.500000, 130.055557, "usebox");
	TextDrawLetterSize(RegisterTD[1], 0.000000, 19.204324);
	TextDrawTextSize(RegisterTD[1], 268.500000, 0.000000);
	TextDrawAlignment(RegisterTD[1], 1);
	TextDrawColor(RegisterTD[1], 0);
	TextDrawUseBox(RegisterTD[1], true);
	TextDrawBoxColor(RegisterTD[1], 252777471);
	TextDrawSetShadow(RegisterTD[1], 0);
	TextDrawSetOutline(RegisterTD[1], 0);
	TextDrawFont(RegisterTD[1], 0);

	RegisterTD[2] = TextDrawCreate(380.000000, 145.611129, "usebox");
	TextDrawLetterSize(RegisterTD[2], 0.000000, -0.445677);
	TextDrawTextSize(RegisterTD[2], 268.500000, 0.000000);
	TextDrawAlignment(RegisterTD[2], 1);
	TextDrawColor(RegisterTD[2], 0);
	TextDrawUseBox(RegisterTD[2], true);
	TextDrawBoxColor(RegisterTD[2], 412024831);
	TextDrawSetShadow(RegisterTD[2], 0);
	TextDrawSetOutline(RegisterTD[2], 0);
	TextDrawFont(RegisterTD[2], 0);

	RegisterTD[3] = TextDrawCreate(368.000000, 164.277816, "usebox");
	TextDrawLetterSize(RegisterTD[3], 0.000000, 1.304323);
	TextDrawTextSize(RegisterTD[3], 282.000000, 0.000000);
	TextDrawAlignment(RegisterTD[3], 1);
	TextDrawColor(RegisterTD[3], 0);
	TextDrawUseBox(RegisterTD[3], true);
	TextDrawBoxColor(RegisterTD[3], 117967359);
	TextDrawSetShadow(RegisterTD[3], 0);
	TextDrawSetOutline(RegisterTD[3], 0);
	TextDrawFont(RegisterTD[3], 0);

	RegisterTD[4] = TextDrawCreate(319.000000, 208.211196, "usebox");
	TextDrawLetterSize(RegisterTD[4], 0.000000, 1.204323);
	TextDrawTextSize(RegisterTD[4], 281.500000, 0.000000);
	TextDrawAlignment(RegisterTD[4], 1);
	TextDrawColor(RegisterTD[4], 0);
	TextDrawUseBox(RegisterTD[4], true);
	TextDrawBoxColor(RegisterTD[4], 117967359);
	TextDrawSetShadow(RegisterTD[4], 0);
	TextDrawSetOutline(RegisterTD[4], 0);
	TextDrawFont(RegisterTD[4], 0);

	RegisterTD[5] = TextDrawCreate(367.000000, 207.966781, "usebox");
	TextDrawLetterSize(RegisterTD[5], 0.000000, 1.254323);
	TextDrawTextSize(RegisterTD[5], 329.000000, 0.000000);
	TextDrawAlignment(RegisterTD[5], 1);
	TextDrawColor(RegisterTD[5], 0);
	TextDrawUseBox(RegisterTD[5], true);
	TextDrawBoxColor(RegisterTD[5], 117967359);
	TextDrawSetShadow(RegisterTD[5], 0);
	TextDrawSetOutline(RegisterTD[5], 0);
	TextDrawFont(RegisterTD[5], 0);

	RegisterTD[6] = TextDrawCreate(378.500000, 260.722229, "usebox");
	TextDrawLetterSize(RegisterTD[6], 0.000000, 4.454322);
	TextDrawTextSize(RegisterTD[6], 271.000000, 0.000000);
	TextDrawAlignment(RegisterTD[6], 1);
	TextDrawColor(RegisterTD[6], 0);
	TextDrawUseBox(RegisterTD[6], true);
	TextDrawBoxColor(RegisterTD[6], 412024831);
	TextDrawSetShadow(RegisterTD[6], 0);
	TextDrawSetOutline(RegisterTD[6], 0);
	TextDrawFont(RegisterTD[6], 0);

	RegisterTD[7] = TextDrawCreate(378.000000, 261.722229, "usebox");
	TextDrawLetterSize(RegisterTD[7], 0.000000, 4.254323);
	TextDrawTextSize(RegisterTD[7], 271.500000, 0.000000);
	TextDrawAlignment(RegisterTD[7], 1);
	TextDrawColor(RegisterTD[7], 0);
	TextDrawUseBox(RegisterTD[7], true);
	TextDrawBoxColor(RegisterTD[7], 252777471);
	TextDrawSetShadow(RegisterTD[7], 0);
	TextDrawSetOutline(RegisterTD[7], 0);
	TextDrawFont(RegisterTD[7], 0);

	RegisterTD[8] = TextDrawCreate(345.000000, 242.433456, "usebox");
	TextDrawLetterSize(RegisterTD[8], 0.000000, 1.104323);
	TextDrawTextSize(RegisterTD[8], 302.500000, 0.000000);
	TextDrawAlignment(RegisterTD[8], 1);
	TextDrawColor(RegisterTD[8], 0);
	TextDrawUseBox(RegisterTD[8], true);
	TextDrawBoxColor(RegisterTD[8], -1523963137);
	TextDrawSetShadow(RegisterTD[8], 0);
	TextDrawSetOutline(RegisterTD[8], 0);
	TextDrawFont(RegisterTD[8], 0);

	RegisterTD[9] = TextDrawCreate(295.500000, 130.666595, "registration");
	TextDrawLetterSize(RegisterTD[9], 0.193000, 0.865777);
	TextDrawAlignment(RegisterTD[9], 1);
	TextDrawColor(RegisterTD[9], -1);
	TextDrawSetShadow(RegisterTD[9], 0);
	TextDrawSetOutline(RegisterTD[9], 0);
	TextDrawBackgroundColor(RegisterTD[9], 51);
	TextDrawFont(RegisterTD[9], 2);
	TextDrawSetProportional(RegisterTD[9], 1);

	RegisterTD[10] = TextDrawCreate(304.000000, 152.822174, "PASSWORD:");
	TextDrawLetterSize(RegisterTD[10], 0.167500, 0.784889);
	TextDrawAlignment(RegisterTD[10], 1);
	TextDrawColor(RegisterTD[10], -1);
	TextDrawSetShadow(RegisterTD[10], 0);
	TextDrawSetOutline(RegisterTD[10], 0);
	TextDrawBackgroundColor(RegisterTD[10], 51);
	TextDrawFont(RegisterTD[10], 2);
	TextDrawSetProportional(RegisterTD[10], 1);

	RegisterTD[11] = TextDrawCreate(315.500000, 189.666656, "SEX:");
	TextDrawLetterSize(RegisterTD[11], 0.190000, 1.008889);
	TextDrawAlignment(RegisterTD[11], 1);
	TextDrawColor(RegisterTD[11], -1);
	TextDrawSetShadow(RegisterTD[11], 0);
	TextDrawSetOutline(RegisterTD[11], 0);
	TextDrawBackgroundColor(RegisterTD[11], 51);
	TextDrawFont(RegisterTD[11], 2);
	TextDrawSetProportional(RegisterTD[11], 1);

	RegisterTD[12] = TextDrawCreate(292.000000, 209.955566, "Male");
	TextDrawLetterSize(RegisterTD[12], 0.201500, 0.884444);
	TextDrawTextSize(RegisterTD[12], 308.500000, 5.599999);
	TextDrawAlignment(RegisterTD[12], 1);
	TextDrawColor(RegisterTD[12], -1);
	TextDrawBoxColor(RegisterTD[12], 255);
	TextDrawSetShadow(RegisterTD[12], 0);
	TextDrawSetOutline(RegisterTD[12], 0);
	TextDrawBackgroundColor(RegisterTD[12], 51);
	TextDrawFont(RegisterTD[12], 2);
	TextDrawSetProportional(RegisterTD[12], 1);
	TextDrawSetSelectable(RegisterTD[12], true);

	RegisterTD[13] = TextDrawCreate(334.500000, 208.466674, "Female");
	TextDrawLetterSize(RegisterTD[13], 0.184000, 1.058666);
	TextDrawTextSize(RegisterTD[13], 360.000000, 5.599991);
	TextDrawAlignment(RegisterTD[13], 1);
	TextDrawColor(RegisterTD[13], -1);
	TextDrawBoxColor(RegisterTD[13], -1);
	TextDrawSetShadow(RegisterTD[13], 0);
	TextDrawSetOutline(RegisterTD[13], 0);
	TextDrawBackgroundColor(RegisterTD[13], 51);
	TextDrawFont(RegisterTD[13], 2);
	TextDrawSetProportional(RegisterTD[13], 1);
	TextDrawSetSelectable(RegisterTD[13], true);

	RegisterTD[14] = TextDrawCreate(307.500000, 241.822265, "continue");
	TextDrawLetterSize(RegisterTD[14], 0.165500, 1.133333);
	TextDrawTextSize(RegisterTD[14], 340.000000, 9.955555);
	TextDrawAlignment(RegisterTD[14], 1);
	TextDrawColor(RegisterTD[14], -1);
	TextDrawBoxColor(RegisterTD[14], -1);
	TextDrawSetShadow(RegisterTD[14], 0);
	TextDrawSetOutline(RegisterTD[14], 0);
	TextDrawBackgroundColor(RegisterTD[14], 51);
	TextDrawFont(RegisterTD[14], 2);
	TextDrawSetProportional(RegisterTD[14], 1);
	TextDrawSetSelectable(RegisterTD[14], true);

	RegisterTD[15] = TextDrawCreate(277.500000, 265.688903, "LD_POOL:ball");
	TextDrawLetterSize(RegisterTD[15], 0.000000, 0.000000);
	TextDrawTextSize(RegisterTD[15], 24.500000, 29.244449);
	TextDrawAlignment(RegisterTD[15], 1);
	TextDrawColor(RegisterTD[15], 412024831);
	TextDrawSetShadow(RegisterTD[15], 0);
	TextDrawSetOutline(RegisterTD[15], 0);
	TextDrawFont(RegisterTD[15], 4);

	RegisterTD[16] = TextDrawCreate(278.500000, 266.688903, "LD_POOL:ball");
	TextDrawLetterSize(RegisterTD[16], 0.000000, 0.000000);
	TextDrawTextSize(RegisterTD[16], 22.500000, 27.377780);
	TextDrawAlignment(RegisterTD[16], 1);
	TextDrawColor(RegisterTD[16], 252777471);
	TextDrawSetShadow(RegisterTD[16], 0);
	TextDrawSetOutline(RegisterTD[16], 0);
	TextDrawFont(RegisterTD[16], 4);

	RegisterTD[17] = TextDrawCreate(281.000000, 267.555541, "LD_SPAC:white");
	TextDrawLetterSize(RegisterTD[17], 0.000000, 0.000000);
	TextDrawTextSize(RegisterTD[17], 18.000000, 24.266662);
	TextDrawAlignment(RegisterTD[17], 1);
	TextDrawColor(RegisterTD[17], -1);
	TextDrawUseBox(RegisterTD[17], true);
	TextDrawBoxColor(RegisterTD[17], 0);
	TextDrawSetShadow(RegisterTD[17], 0);
	TextDrawSetOutline(RegisterTD[17], 0);
	TextDrawBackgroundColor(RegisterTD[17], 0x00000000);
	TextDrawFont(RegisterTD[17], 5);
	TextDrawSetPreviewModel(RegisterTD[17], 1239);
	TextDrawSetPreviewRot(RegisterTD[17], 0.000000, 0.000000, 0.000000, 1.000000);

	RegisterTD[18] = TextDrawCreate(302.500000, 276.266662, "The account not~g~ registered");
	TextDrawLetterSize(RegisterTD[18], 0.114000, 0.890666);
	TextDrawAlignment(RegisterTD[18], 1);
	TextDrawColor(RegisterTD[18], -1);
	TextDrawSetShadow(RegisterTD[18], 0);
	TextDrawSetOutline(RegisterTD[18], 0);
	TextDrawBackgroundColor(RegisterTD[18], 51);
	TextDrawFont(RegisterTD[18], 2);
	TextDrawSetProportional(RegisterTD[18], 1);

}

stock LoadOthers()
{
	SendRconCommand("hostname Legendary Role Play Game | 传奇RPG!");
	SendRconCommand("mapname Los Santos");
	SetGameModeText("传奇 v-4.3.0");
	// nastroika
	ShowPlayerMarkers(2);
	SetWeather(2);
	SetNameTagDrawDistance(24.0);
	EnableStuntBonusForAll(0);
	DisableInteriorEnterExits();
	LimitPlayerMarkerRadius(70.0);
	ManualVehicleEngineAndLights();
	//
	new tmphour, tmpminute, tmpsecond;
	gettime(ghour,gminute,gsecond);
	SetWorldTime(ghour);
	logs = 1;
	addd[0] = 5;
	addd[1] = 5;
	addd[2] = 5;
	gettime(tmphour, tmpminute, tmpsecond);
	SetWorldTime(tmphour);
	if(!realtime)
	{
		SetWorldTime(wtime);
	}
	Furi[0][gBallas] = 0;
	Furi[0][gVagos] = 0;
	Furi[0][gGrove] = 0;
	Furi[0][gAztek] = 0;
	Furi[0][gRifa] = 0;
	Furi[0][gYakuza] = 0;
	Furi[0][gLcn] = 0;
	Furi[0][gRm] = 0;
	MatHaul[0][mCapasity] = 5000;
	MatHaul[1][mCapasity] = 5000;
	MatHaul[2][mCapasity] = 5000;
	MatHaul[3][mCapasity] = 5000;
	MatHaul[4][mCapasity] = 5000;
	for(new i = 0; i <= sizeof(Peds)-1; i++)
	{
		AddPlayerClass(Peds[i][0],1958.3783,1343.1572,1100.3746,269.1425,-1,-1,-1,-1,-1,-1);
	}
	for(new Vehicles = 0; Vehicles < MAX_VEHICLES; Vehicles++)
	{
		Fuell[Vehicles] = 200;
		SetVehicleNumberPlate(Vehicles, "Legendary");
	}
	CreateDynamicObject(3605, 230.42950, -1188.16870, 80.35710,   0.00000, 0.00000, 40.00000);
	vorota[0] = CreateObject(980, 259.26099, -1232.58557, 74.72000,   0.00000, 0.00000, 38.00000);
	vorota[2] = CreateObject(980, 268.48770, -1225.76587, 74.72000,   0.00000, 0.00000, 35.00000);
	CreateDynamicObject(13692, 252.23438, -1211.92969, 64.96094,   0.00000, 0.00000, 0.00000);
	vorota[1] = CreateObject(971, 263.70630, -1333.29663, 55.62000,   180.00000, 180.00000, 35.00000);
    Buyint = CreateMenu("BuyInt", 1, 25.0, 160.0, 100.0);
    AddMenuItem(Buyint,0,"Next");
    AddMenuItem(Buyint,0,"Buy");
    AddMenuItem(Buyint,0,"Exit");
	//-------------------------[ Icon's ] -------------------------
	CreateDynamicMapIcon(-72.9261,-1621.5245,3.5231,9,0);
	CreateDynamicMapIcon(1369.8450,-1898.7551,14.4922,27,0); // sto
	//biz icon
	CreateDynamicMapIcon(2097.5, 2224.7, 11.0234,56,0);
	CreateDynamicMapIcon(1598.99, 2221.73, 11.0625,56,0);
	CreateDynamicMapIcon(-1271.74, 2712.75, 50.2663,56,0);
	CreateDynamicMapIcon(999.862, -920.087, 42.3281,56,0);
	CreateDynamicMapIcon(-78.3443, -1169.8, 2.13592,56,0);
	CreateDynamicMapIcon(-2034.87, 148.614, 28.8359,56,0);
	CreateDynamicMapIcon(-2026.63, -102.061, 35.1641,56,0);
	CreateDynamicMapIcon(-1676.09, 432.009, 7.17969,56,0);
	CreateDynamicMapIcon(1356.93, 308.043, 19.7473,56,0);
	CreateDynamicMapIcon(639.128, 1683.41, 7.1875,56,0);
	CreateDynamicMapIcon(672.088, -497.016, 16.3359,56,0);
	CreateDynamicMapIcon(695.001, -500.127, 16.3359,56,0);
	CreateDynamicMapIcon(1940.01, -2116.06, 13.6953,56,0);
	CreateDynamicMapIcon(2747.41, -1615.91, 13.0165,56,0);
	CreateDynamicMapIcon(2424.12, -1742.9, 13.5445,56,0);
	CreateDynamicMapIcon(2081.52, -1205.13, 23.9332,56,0);
	CreateDynamicMapIcon(2724.46, -2026.5, 13.5547,56,0);
	CreateDynamicMapIcon(1848.33, -1871.74, 13.5781,56,0);
	//
	CreateDynamicMapIcon(2019.3177,1007.7430,10.8203,43,0); // Сasino 4 Dragons
	CreateDynamicMapIcon(1675.4163,-1633.3079,14.2266,40,0); // паращют
	CreateDynamicMapIcon(622.3818,877.1959,-42.9534,11,0);  // buldozer
	CreateDynamicMapIcon(385.3964,-1817.9346,7.8410,19,0);  // paintballa
	CreateDynamicMapIcon(532.7103,-1813.0652,6.5781,19,0);  // vodagonka
	CreateDynamicMapIcon(1419.1675,-1623.7498,13.5469,12,0);  // Hippy
	CreateDynamicMapIcon(-377.0795,-1419.8300,25.7266,56,0);  // Ferma
	CreateDynamicMapIcon(2228.5789,-1721.7820,13.5654,54,0);  // спортзал лс
	CreateDynamicMapIcon(2096.7178,-1182.6176,26.3931,59,0);  // баллас
	CreateDynamicMapIcon(2774.1741,-1627.7917,12.1775,60,0);  // вагос
	CreateDynamicMapIcon(2495.3684,-1688.0365,13.5553,62,0);  // грув
	CreateDynamicMapIcon(1696.5967,-2112.9131,13.4793,58,0);  // MS
	CreateDynamicMapIcon(2733.8982,-1952.5742,13.5469,61,0);  // рифа
	CreateDynamicMapIcon(472.4380,-1515.5332,40.5726,45,0); // Victim LS
	CreateDynamicMapIcon(-1882.5100,866.3918,35.1719,45,0); // Victim SF
	CreateDynamicMapIcon(542.1437,-1272.3624,51.3059,55,0); // AutoSalone LS
	CreateDynamicMapIcon(-1948.4501,278.1562,68.9698,55,0); // AutoSalone SF
	CreateDynamicMapIcon(2200.9758,1394.2899,11.0625,55,0); // AutoSalone LV
	CreateDynamicMapIcon(1481.2144,-1756.5200,17.5313,56,0); // Goverment
	CreateDynamicMapIcon(1552.8314,-1675.9022,16.1953,30,0); // Police LS
	CreateDynamicMapIcon(-1605.4998,710.2729,13.8672,30,0); // Police SF
	CreateDynamicMapIcon(2340.2075,2459.0200,14.9688,30,0); // Police LV
	CreateDynamicMapIcon(1173.6215,-1323.2500,15.1953,22,0); // Medics LS
	CreateDynamicMapIcon(-2664.6611,637.9663,14.4531,22,0); // Medics SF
	CreateDynamicMapIcon(1607.1716,1817.0586,10.8203,22,0); // Medics LV
	CreateDynamicMapIcon(1475.8000,-1360.7600,11.8828,52,0); // Bank LS
	CreateDynamicMapIcon(-179.1861,1133.1660,19.7422,52,0); // Bank LV
	CreateDynamicMapIcon(-1961.2843,434.2266,35.1719,52,0); // Bank SF
	CreateDynamicMapIcon(1416.1229,-1662.4886,13.5469,36,0); // Autoschool
	CreateDynamicMapIcon(1365.6863,-1279.8872,13.5469,6,0); // Ammo LS
	CreateDynamicMapIcon(-2626.6384,210.3960,4.5971,6,0); // Ammo SF
	CreateDynamicMapIcon(2159.5449,943.2165,10.8203,6,0); // Ammo LV
	CreateDynamicMapIcon(1554.4183,34.3577,24.1525,53,0); // Race
	CreateDynamicMapIcon(2166.8970,-1672.3124,15.0752,28,0); // duel
	CreateDynamicMapIcon(212.2816,1812.2374,21.8672,56,0); // Точка наблюдения
}

LoadPic()
{
	zanyat[0] = CreatePickup(1318,23,1378.2345,-1753.1057,14.1406,0);
	zanyat[1] = CreatePickup(1318,23,1659.3068,-817.4411,1271.0859,0);
	zanyat[2] =	CreatePickup(1314,2,1660.1324,-798.7468,1271.0859,0);
    lscmipic[0] = CreatePickup(1318, 23,71.1616,2239.0176,625.3364,-1);
    HorsesPICK[0] = CreatePickup(954,23,822.5153,2.9707,1004.1797);
	UniversetyPickup1[0] = CreatePickup(1239,23,29.9991,57.5402,1200.7729);
	UniversetyPickup1[1] = CreatePickup(1239,23,27.8198,57.5832,1200.7729);
	UniversetyPickup1[2] = CreatePickup(1239,23,27.7284,52.2251,1200.7729);
	UniversetyPickup1[3] = CreatePickup(1239,23,29.9998,52.2171,1200.7729);
	UniversetyPickup1[4] = CreatePickup(1239,23,30.5452,47.5712,1200.7729);
	UniversetyPickup1[5] = CreatePickup(1239,23,27.9769,47.4551,1200.7729);
	UniversetyPickup1[6] = CreatePickup(1239,23,27.9834,40.8884,1200.7729);
	UniversetyPickup1[7] = CreatePickup(1239,23,30.5423,41.0234,1200.7729);
	UniversetyPickup1[8] = CreatePickup(1239,23,28.0416,36.8449,1200.7729);
	UniversetyPickup1[9] = CreatePickup(1239,23,31.0310,36.7164,1200.7729);
	UniversetyPickup1[10] = CreatePickup(1239,23,28.0882,30.6544,1200.7729);
	UniversetyPickup1[11] = CreatePickup(1239,23,31.0304,30.8412,1200.7729);
    UniversetyPickup1[12] = CreatePickup(1239,23,28.2647,26.6376,1200.7729);
	UniversetyPickup1[13] = CreatePickup(1239,23,31.0069,26.6219,1200.7729);
	UniversetyPickup1[14] = CreatePickup(1239,23,28.1596,22.6137,1200.7729);
	UniversetyPickup1[15] = CreatePickup(1239,23,30.9867,22.6461,1200.7729);
    UniversetyPickup1[16] = CreatePickup(1239,23,27.9120,14.6192,1200.7729);
	UniversetyPickup1[17] = CreatePickup(1239,23,30.5409,14.5180,1200.7729);
	UniversetyPickup1[18] = CreatePickup(1239,23,30.4516,7.8342,1200.7729);
	UniversetyPickup1[19] = CreatePickup(1239,23,27.9655,8.1718,1200.7729);
	UniversetyPickup1[20] = CreatePickup(1239,23,33.2578,12.2517,1200.7729);
    duelpic[0] = CreatePickup(19228,2,2166.8970,-1672.3124,15.0752);// duel
    pickupcas = CreatePickup(1275,2,1963.4060,972.7579,994.4688,-1); // 4dr
    CasinoInfo[0] = CreatePickup(1239,2,1965.1003,1033.2429,992.4688,-1); // 4dr
    CasinoInfo[1] = CreatePickup(1239,2,1965.2747,1002.6561,992.4688,-1); // 4dr
	ammomery[0] = CreatePickup(19134, 23, -514.6949,316.2816,2004.5850);
	medicss[0] = CreatePickup(1318,23,1172.0767,-1323.3440,15.4030); // Медики LS Вход
	medicss[1] = CreatePickup(1318,23,1171.2557,-1323.6798,1001.0900); // Медики LS Выход
	fermpicjob[0] = CreatePickup(1275, 2, -382.9740,-1426.3134,26.3183); // ferma
	RudokopPick[0] = CreatePickup(1318,23,602.1812,867.9955,-42.9609); // Шахта Вход
	Tyrmasf[0] = CreatePickup(1559,23,-1532.8502,367.8904,13.9458);
	Tyrmaul[0] = CreatePickup(1559,23,-1562.4432,313.3884,7.1875);
	genSFa[0] = CreatePickup(1318,23,-1464.6960,455.4185,7.4190);//SFa вход
	genSFa[1] = CreatePickup(1318,23,-1467.6426,451.5421,26.2043);//SFa выход
	fbispy = CreatePickup(1275,19, 1018.5740,70.3914,998.4860,58); // fbispy
    SZal[0] = CreatePickup(1275,23,767.1782,14.1390,1000.7003);//Forma
	SZal[1] = CreatePickup(1239,2,765.4292,14.2640,1000.7014);//Info
	nomeravto[0] = CreatePickup(19134,23,1561.0408,-1674.0836,2110.5364); // nomer avto
	hit[0] = CreatePickup(1318,23,-718.2992,953.4348,12.1328); // vip
	hit[1] = CreatePickup(1318,23,-712.8011,953.2783,12.3173); // vip
	groovee[0] = CreatePickup(1318,23,2486.9846,-1645.1633,14.0703);
	groovee[1] = CreatePickup(1318,23,2486.0237,-1643.3458,14.2259);
	svadba[0] = CreatePickup(1314,23,-1988.5321,1112.6732,54.4794);
	TeamDeathmatch[0] = CreatePickup(19133,23,-2172.4397,252.0202,35.3393); // km boi
	TeamDeathmatch[1] = CreatePickup(19133,23,2036.6283,-1883.8629,999.9086,21);
	TeamDeathmatch[2] = CreatePickup(19134,23,2042.0046,-1886.6674,999.9086,21);
	RudokopPick[1] = CreatePickup(1318,23,-408.6538,-1057.6560,707.1757); // Шахта Выход
	RudokopPick[2] = CreatePickup(1275,2,-410.7504,-1071.2211,707.1809); // Шахта Устройство
	RudokopPick[3] = CreatePickup(1239,2,586.1669,868.3007,-42.4973); // Шахта Информация
	lspic[0] = CreatePickup(19130,23,649.1413,-1359.7137,13.5806); // LSN вход
	lspic[1] = CreatePickup(19130,23,43.3462,2248.1892,625.3364,1); // LSN выход
	chekmats[0] = CreatePickup(1239,2,-1297.3777,505.1444,11.1953); // Пикап 1
	chekmats[1] = CreatePickup(1239,2,-1405.5594,502.5779,11.1953); // Пикап 2
	chekmats[2] = CreatePickup(1239,2,-1336.0455,500.4789,11.3047); // Пикап 3
	gunarm[0] = CreatePickup(353,23,-1807.5232,2972.3188,1514.3453,57); // Оружие Армии СВ
	gunarm[1] = CreatePickup(353,23,311.9774,-165.2273,999.6010,3); // Оружие Армии тюрьм
	skinshop[0] = CreatePickup(1275,23,206.0302,-3.5463,1001.2109); // Магагазин Одежды
	skinshop[1] = CreatePickup(1275,23,205.9253,-12.9991,1001.2178); // Магагазин Одежды
	skinshop[2] = CreatePickup(1275,23,181.3787,-86.4860,1002.0234); // Магагазин Одежды
	skinshop[3] = CreatePickup(1275,23,181.5291,-89.3950,1002.0307); // Магагазин Одежды
	cerkva[0] = CreatePickup(1318,23,-1989.6212,1117.9498,54.4688);//Церковь, вход
    cerkva[1] = CreatePickup(1318,23,-2016.2227,1119.5647,26.0630);//Церковь, выход
   	univerpic[0] = CreatePickup(1318,23,1122.7098,-2037.0220,69.8942);
    univerpic[1] = CreatePickup(1318,23,15.4083,26.3935,1200.7729);
	Army = GangZoneCreate(-49.979476, 1695.982177, 414.020507, 2175.982177);
	CreatePickup(1314,23,765.3245,10.8755,1000.7081);
	KanPick[0] = CreatePickup(1578, 23,2490.0610,-1637.7688,14.2259); // grove
	KanPick[1] = CreatePickup(1578, 23,-733.1624,2409.1089,1500.9701,0); // ballas
	KanPick[2] = CreatePickup(1578, 23,2781.6243,-1630.9025,10.9139); // vagos
	KanPick[3] = CreatePickup(1578, 23,2014.1665,1345.0339,632.0748,0); // aztecas
	KanPick[4] = CreatePickup(1578, 23,2732.7583,-1769.5626,1117.2410); // rifa
	chekmatlva[0] = CreatePickup(1239,2,223.8502,1931.5122,17.6406); // пикап1
	chekmatlva[1] = CreatePickup(1239,2,190.7502,1931.7085,17.6406); // пикап1
	chekmatlva[2] = CreatePickup(1239,2,155.8935,1903.3306,18.6603); // пикап3
	chekmatlva[3] = CreatePickup(1239,2,137.4635,1880.8014,17.8359); // пикап4
	chekmatlva[4] = CreatePickup(1239,2,117.9774,1869.8710,17.8359); // пикап5
	chekmatlva[5] = CreatePickup(1239,2,112.7323,1875.2440,17.8359); // пикап6
	chekmatlva[6] = CreatePickup(1239,2,153.5131,1845.9530,17.6406); // пикап7
	chekmatlva[7] = CreatePickup(1239,2,171.9801,1834.7606,17.6406); // пикап8
	chekmatlva[8] = CreatePickup(1239,2,176.9783,1841.3126,17.6406); // пикап9
	chekmatlva[9]= CreatePickup(1239,2,233.3041,1842.0875,17.6406); // пикап10
	carpick = CreatePickup(19133, 23, 1717.2028,-1758.2454,13.9103, 0); // Автосалон 1 Вход
	carpick2 = CreatePickup(19133, 23, -1952.2794,297.8026,35.4688, 0); // Автосалон 2 Вход
	carpick3 = CreatePickup(19133, 23, 2200.8857,1394.2892,11.0625, 0); // Автосалон 3 Вход
	gvictim[0] = CreatePickup(1318,23,461.7025,-1500.7941,31.0454); // Магазин Одежды Вход
	gvictim[1] = CreatePickup(1318,23,227.5632,-8.0904,1002.2109); // Магазин Одежды Выход
	mysti = CreatePickup(19132,23,1212.0931,-25.8776,1000.9531); // Бар Mysti Выход
	zip[0] = CreatePickup(1318,23,-1882.5100,866.3918,35.1719); // Магазин ZIP Вход
	zip[1] = CreatePickup(1318,23,161.3232,-97.1035,1001.8047); // Магазин ZIP Выход
	shop[0] = CreatePickup(19132,23,-25.8496,-141.5474,1003.5469); // 24/7 выход
	shop[1] = CreatePickup(19132,23,-25.9730,-188.2542,1003.5469); // 24/7 выход
	shop[2] = CreatePickup(19132,23,6.0346,-31.6810,1003.5494); // 24/7 выход
	shop[3] = CreatePickup(19132,23,-31.0230,-92.0109,1003.5469); // 24/7 выход
	shop[4] = CreatePickup(19132,23,-27.3211,-31.7612,1003.5573); // 24/7 выход
	shop[5] = CreatePickup(19132,23,-27.3786,-58.2680,1003.5469); // 24/7 выход
	pdd = CreatePickup(1239,23,1410.2240,-1662.8906,13.6859); // Пикап ПДД
	buygunzakon[0] = CreatePickup(19134,23,960.8824,67.1266,996.4276,58); //gun FBI
	buygunzakon[1] = CreatePickup(353,23,311.9774,-165.2273,999.6010,5); //gun Police
	buygunzakon[2] = CreatePickup(353,23,311.9774,-165.2273,999.6010,1); //gun Police
	buygunzakon[3] = CreatePickup(353,23,302.5668,-127.6718,1004.0625,15); //gun Police
	lspd[0] = CreatePickup(1318,23,1555.1332,-1675.7180,16.1953);//LSPD вход
	lspd[1] = CreatePickup(1318,23,1553.1807,-1674.0898,2110.5356);//LSPD выход
	lspd[4] = CreatePickup(1318,23,316.6778,-170.0422,999.5938,5);//LSPD вых из аммо
	lspd[2] = CreatePickup(1318,23,1524.486938,-1677.990844,6.218750);//LSPD Вход
	lspd[5] = CreatePickup(1318,23,1568.6144,-1689.9901,6.2188);//LSPD Вход из гаража
	lspd[3] = CreatePickup(1318,23,1603.3545,-1651.0135,2107.0808);//lspd выход в гараже
	sf[4]  = CreatePickup(1318,23,-1606.4298,672.0637,-4.9063);//LSPD выход в гараже
	sf[0]  = CreatePickup(1318,23,316.3047,-170.2971,999.5938,1);//LSPD выход в гараже
	sf[1]  = CreatePickup(1318,23,213.9762,120.8990,999.0156);//LSPD выход в гараже
	sf[2] = CreatePickup(1318,23,-1594.2096,716.1803,-4.9063);//sfpd
	sf[3] = CreatePickup(1318,23,246.4636,107.2969,1003.2188);//сфпд
	lvpdpic[0] = CreatePickup(1318,23,2297.1138,2451.4346,10.8203);//lvpd вход с гаража
	lvpdpic[1] = CreatePickup(1318,23,238.7510,138.6254,1003.0234,122);//lvpd вход в гараж
	lvpdpic[2] = CreatePickup(1318,23,2337.1335,2459.3105,14.9742);//Центральный вход
	lvpdpic[3] = CreatePickup(1318,23,288.8456,166.9235,1007.1719,122);//Центральный выход
	lvpdpic[4] = CreatePickup(1318,23,2297.1165,2468.6892,10.8203);//lvpd оружие вход
	lvpdpic[5] = CreatePickup(1318,23,299.9460,-141.8767,1004.0625,15);//lvpd оружие выход
	lvpdpic[6] = CreatePickup(1318,23,2278.3835,2458.0950,38.6837);//крыша
	rmpic[0] = CreatePickup(1318,23,1298.7498,-797.0133,1084.0078,1);
	yakexit[0] = CreatePickup(1318,23,279.6201,231.2802,3340.9299);
	yakexit[1] = CreatePickup(1318,23,1456.1324,2773.4790,10.8203);
	Kazarma[0] = CreatePickup(1318,23,127.4449,1897.4637,18.4865);
	Kazarma[1] = CreatePickup(1318,23,-1797.5631,2985.7651,1514.3453,57);
	pickupmed = CreatePickup(2894,2,1150.9186,-1323.7882,1001.0910); // medik
	telefons[0] = CreatePickup(18867,2,2531.7886,-1813.5315,-65.2521,-1);
	ekspert[0] = CreatePickup(1247,23,1578.4735,-1682.6805,2110.5381);
	yablokapic[0] = CreatePickup(1275,2,1106.3994,-299.7129,74.5391); // яблок
	univerraz[0] = CreatePickup(1275,2,22.0168,79.2040,1200.7729); // univer
	avtougon[0] = CreatePickup(19627,2,-1548.1265,124.3447,3.5547); // ugon
	cpokras[0] = CreatePickup(19627,2,1391.5516,-1898.7189,13.4672); // гараж покраска
	otelvxod[0] = CreatePickup(19132,23,1307.3333,-1316.2549,13.9110);
	otelvxod[1] = CreatePickup(19132,23,123.8884,1075.2655,1015.6948);
	otelzasel[0] = CreatePickup(19792,2,1304.4785,-1344.9943,13.9110);
	otelicon[0] = CreatePickup(1239,2,1311.9155,-1344.9730,13.9110);
	sportzal[0] = CreatePickup(1318,23,2229.7566,-1721.5988,13.5646);//спортзал ЛС
	sportzal[1] = CreatePickup(1318,23,772.4290,-5.0806,1000.7289);//gym
	pokupudotka[0] = CreatePickup(1239,23,272.2261,305.8935,999.1484);
	pickbanklv[0] = CreatePickup(1318,23,-2170.3198,635.3892,1052.3750,10); // Банк выход пикап
	pickbanklv[1] = CreatePickup(1318,23,-179.1861,1133.1660,19.7422); // вход банк лв
	pickbanksf[0] = CreatePickup(1318,23,-2170.3796,635.3894,1052.3750,5); // Банк sf выход пикап
	pickbanksf[1] = CreatePickup(1318,23,-1961.2843,434.2266,35.1719); // вход банк sf
    picacsec[0] = CreatePickup(2710,2,208.7798,-3.5284,1001.2178); // акссесуар
	areaskutor[0] = CreatePickup(19134,2,599.9084,871.7839,-42.9609); // arenda
	areaskutor[1] = CreatePickup(19134,2,-382.7425,-1414.4114,25.7266); // arenda skutors 2
	areaskutor[2] = CreatePickup(19134,2,1106.5060,-313.3178,73.9922); // arenda яблока
	areaskutor[3] = CreatePickup(19134,2,2038.2102,-2028.7565,13.5918); // arenda spawn
	areaskutor[4] = CreatePickup(19134,2,1188.1263,-1344.9236,13.5659); // arenda bolka
	areaskutor[5] = CreatePickup(19134,2,2834.7300,1298.7158,10.7792); // arenda lv
	areaskutor[6] = CreatePickup(19134,2,-1984.7793,146.8315,27.6875); // arenda sf
	clubp[0] = CreatePickup(1559,23,1675.4163,-1633.3079,14.2266); // паращют
    clubp[1] = CreatePickup(1559,23,3.0235,34.0075,1199.5938); // pb
    parashuts[0] = CreatePickup(371,2,3.0260,29.2465,1199.6012,-1); // pb
    parashuts[1] = CreatePickup(371,2,0.4294,28.2367,1199.5938,-1); // pb
    parashuts[2] = CreatePickup(371,2,3.0185,26.9618,1199.5938,-1); // pb
    parashuts[3] = CreatePickup(371,2,0.4275,25.8316,1199.5938,-1); // pb
    med = CreatePickup(1240,19,0.4275,34.0084,1199.5938, -1); // parasyt conets
	racepickboat = CreatePickup(1314, 23, 532.7920,-1812.9646,6.5781); // gonka
	FBIpick[0] = CreatePickup(1318,23,-553.8525,2593.7571,53.9348); // M LS Вход
	FBIpick[1] = CreatePickup(1318,23,955.8723,67.3149,1001.9800,58); // М LS Выход
	paint[0] = CreatePickup(19133,23,387.1780,-1817.8134,7.8409);//Вход
	paint[1] = CreatePickup(19133,23,285.2720,-41.4266,1001.5156,1);//Выход
	paint[2] = CreatePickup(353,23,296.7181,-38.2277,1001.5156,1); //  Регистрация
	racepic[0] = CreatePickup(19134, 23,1547.6927,32.6802,24.1406);
	lcnpic[0] = CreatePickup(1318,23,937.6536,97.4692,1001.2659);
	lcnpic[1] = CreatePickup(1318,23,1455.8972,751.4310,11.0234);//lcn вход
	rmpic[1] = CreatePickup(1318,23,937.0892,1733.2124,8.8516);//RM вход
	AvtoshPic[0] = CreatePickup(1318,23,1416.1987,-1663.8602,13.5469);//autoschool
	AvtoshPic[1] = CreatePickup(1318,23,1415.0378,-1664.0076,13.6859);//autoschool
	ZavtohPic[0] = CreatePickup(1318,23,1406.6938,-1659.1694,13.6859);//autoschool2
	ZavtohPic[1] = CreatePickup(1318,23,1385.5007,-1663.4193,13.4528);//autoschool2
	armijavhod = CreatePickup(1318,23,140.0735,1939.5984,19.2991);
	armijavihod = CreatePickup(1318,23,153.8659,1944.3601,20.0000);
	marenter[0] = CreatePickup(1318,23,1481.1272,-1771.6830,18.7958);// Правительство
	marenter[1] = CreatePickup(1318,23,-501.2693,286.1048,2001.0950);// Выход из мэрии
	bankpic[0] = CreatePickup(1318,23,1475.8000,-1360.7600,11.8828);//Банк вход
	bankpic[1] = CreatePickup(1318,23,1484.2515,-1361.3306,89.6799);//Банк выход
	ballasvhod[0] = CreatePickup(1318,23,-725.3315,2400.7354,1500.9701,0);//Ballas на улицу
	ballasvhod[1] = CreatePickup(1318,23,2091.5627,-1184.9388,27.057);//Ballas в интерьр
	rifa[0] = CreatePickup(1318,23,2731.2544,-1761.6328,1117.2410);//Рифа вход на улицу
	rifa[1] = CreatePickup(1318,23,2736.6482,-1952.4193,13.5469);//Рифа вход
	ufobar = CreatePickup(19132,23,-229.2950,1401.2843,27.7656);//Ufo Bar
	vagospic[0] = CreatePickup(1318,23,2770.7471,-1628.7227,12.1775);//Vagos вход
	vagospic[1] = CreatePickup(1318,23,2787.8027,-1631.1185,10.9139);//Vagos выход
	aztecpic[0] = CreatePickup(1318,23,1667.52,-2106.94,14.07);//Aztec вход
	aztecpic[1] = CreatePickup(1318,23,2014.3749,1317.3358,632.0648,0);//Aztec выход
	plen[0] = CreatePickup(1318,23,305.6964,-159.2085,999.5938);//стрелка0
	plen[1] = CreatePickup(1318,23,306.4392,-159.2731,999.5938);//стрелка1
	zona = CreatePickup(1318,23,279.2340,1833.1393,18.0874);//стрелка2
	zonaa = CreatePickup(1318,23,291.8918,1833.7253,18.1027);//стрелка3
 	yashik[0] = CreatePickup(2358,23,318.3537,-166.9110,999.5938,0);
	yashik[1] = CreatePickup(2358,23,318.3537,-166.9110,999.5938,3);
	sklad[0] = CreatePickup(1318,23,340.5722,1949.2020,22.0172);//стрелка4
	sklad[1] = CreatePickup(1318,23,316.3806,-170.2857,999.5938);//стрелка5
	sklad[2] = CreatePickup(1318,23,316.3806,-170.2857,999.5938,3);//стрелка6
	sklad[3] = CreatePickup(1318,23,-1373.0463,498.9842,11.1953);//стрелка7
	rob = CreatePickup(1239, 23, 2755.9060,-2515.5491,13.6397, -1);
}

stock LoadCreate3d()
{
    Create3DTextLabel("Broken",0x6495EDFF,1914.2167,556.9664,-11.7873,1.0,0,1); //底部隐藏
    Create3DTextLabel("{ffff00}[矿井大门]\n{ffff00}打开: {42aaff}Left ALT",COLOR_YELLOW,-408.4905,-1084.0671,707.2973,10.0,0,1);
	Create3DTextLabel("{ffff00}[安排预约]\n{ffff00}输入: {42aaff}/fight [id] [数量]",COLOR_YELLOW,765.2737,10.7594,1000.7083,10.0,0,1);
	Create3DTextLabel("{ffff00}[提取矿石]\n{ffff00}按: {42aaff}鼠标右键",COLOR_YELLOW,-406.3484,-1112.1274,710.6781,15.0,0,1);
	Create3DTextLabel("{ffff00}[提取矿石]\n{ffff00}按: {42aaff}鼠标右键",COLOR_YELLOW,-417.4762,-1106.7123,711.1693,15.0,0,1);
	Create3DTextLabel("{dad37f}政府:\n{ffffff}管理国家权力 'SA'",0x39CDF2AA,1481.1272,-1771.6830,19.2000+0.8,20.0,0,1);
	Create3DTextLabel("{dad37f}执照中心:\n{ffffff}San Andreas",0x39CDF2AA,1416.1987,-1663.8602,13.5469+0.8,20.0,0,1);
	Create3DTextLabel("{dad37f}潜水员的工作:\n{ffffff}按下: ALT",0x39CDF2AA,-1376.1852,1493.3557,11.2031+0.8,20.0,0,1);
	Create3DTextLabel("{dad37f}仓库:\n{ffffff}按下: ALT",0x39CDF2AA,-1390.5680,1496.7119,1.8735+0.8,20.0,0,1);
	Create3DTextLabel("{dad37f}搜索材料:\n{ffffff}按下: ALT",0x39CDF2AA,-1320.9401,1650.8674,-31.6909+0.8,40.0,0,1);
	Create3DTextLabel("{dad37f}大学:\n{ffffff}San Andreas",0x39CDF2AA,1122.7098,-2037.0220,69.8942+0.8,20.0,0,1);
	Create3DTextLabel("{dad37f}军营:\n{ffffff}军队",0x39CDF2AA,127.4449,1897.4637,18.4865+0.8,20.0,0,1);
	Create3DTextLabel("{dad37f}矿场:\n{ffffff}Las Venturas",0x39CDF2AA,602.1812,867.9955,-42.9609+0.8,20.0,0,1);
	Create3DTextLabel("{dad37f}国家银行:\n{ffffff}San Fierro",0x39CDF2AA,-1961.2843,434.2266,35.1719+0.8,20.0,0,1);
	Create3DTextLabel("{dad37f}国家银行:\n{ffffff}Las Venturas",0x39CDF2AA,-179.1861,1133.1660,19.7422+0.8,20.0,0,1);
	Create3DTextLabel("{dad37f}国家银行:\n{ffffff}Los Santos",0x39CDF2AA,1475.8000,-1360.7600,11.8828+0.8,20.0,0,1);
	Create3DTextLabel("团队战斗",0xBFFF00AA,-2172.4397,252.0202,35.3393,20.0,0,0);
	CreateDynamic3DTextLabel("{FF0000}> {708090}前台 {FF0000}<",-1,1392.6676,-21.5595,1000.9370,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,-1,-1);
	Create3DTextLabel("这个是偷车贼的装置",0xBFFF00AA,-1548.1265,124.3447,3.5547,20.0,0,0);
	Create3DTextLabel("注册战斗",0xBFFF00AA,2042.0046,-1886.6674,999.9086,10.0,21,0);
	Horses3D = CreateDynamic3DTextLabel("赛马信息屏幕\n状态: {FF0000}准备{ffffff}\n按下: `H`", 0xFFFFFFFF,828.2830,6.6600,1004.1870,10);
	CreateDynamic3DTextLabel("{ffff00}[打开]\n{ffff00}按下: {42aaff}Left ALT",COLOR_YELLOW,-1546.1680,509.6950,7.1797,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,-1,-1);
    CreateDynamic3DTextLabel("电瓶车租用",COLOR_YELLOW,599.9084,871.7839,-42.9609,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,-1,-1);
    CreateDynamic3DTextLabel("电瓶车租用",COLOR_YELLOW,-382.7425,-1414.4114,25.7266,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,-1,-1);
    CreateDynamic3DTextLabel("电瓶车租用",COLOR_YELLOW,1106.5060,-313.3178,73.9922,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,-1,-1);
    CreateDynamic3DTextLabel("电瓶车租用",COLOR_YELLOW,2038.2102,-2028.7565,13.5918,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,-1,-1); // spawn
	Create3DTextLabel("{ffff00}[存款]\n{ffff00}输入: {42aaff}/bail",COLOR_YELLOW,1604.1353,-1654.4275,2107.0811,10.0,0,1);
	Create3DTextLabel("{ffff00}[相机管理]\n{ffff00}输入: {42aaff}/opencells - 打开, /closecells - 关闭.",COLOR_YELLOW,1852.8329,-1709.5317,5202.5859,10.0,16,1);
	Create3DTextLabel("{ffff00}[钓鱼]\n{ffff00}输入: {42aaff}/fishing",COLOR_YELLOW,349.8885,-2056.3311,7.8359,20.0,0,1);
	Create3DTextLabel("{ffff00}[结婚 (30.000$)]\n{ffff00}输入: {42aaff}/wedding",COLOR_YELLOW,-2032.8677,1119.3492,26.0531,10.0,0,1);
    Create3DTextLabel("{ffff00}[卸下- 山口组]\n{ffff00}输入: {42aaff}/unloading",COLOR_YELLOW,1459.5604,2765.9116,10.8203,10.0,0,1);
    Create3DTextLabel("{ffff00}[卸下- 14K]\n{ffff00}输入: {42aaff}/unloading",COLOR_YELLOW,961.8442,1685.2831,8.8516,10.0,0,1);
    Create3DTextLabel("{ffff00}[卸下- LCN]\n{ffff00}输入: {42aaff}/unloading",COLOR_YELLOW,1455.2224,758.3694,11.0234,10.0,0,1);
    Create3DTextLabel("{ffff00}[军队卸任部队]",COLOR_YELLOW,332.2979,1963.7013,17.6406,20.0,0,1);
	Create3DTextLabel("就业中心",0xFF9900AA,1378.2345,-1753.1057,14.1406,30.0,0,1);
	CreateDynamic3DTextLabel("{ffff00}[骰子]\n{FFFF00}输入: {42aaff}/dice",COLOR_YELLOW, 1920.3398,-706.3603,1825.7356,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("[Hippy]: /hbuy",COLOR_LIGHTGREEN, -105.9388,-10.6158,1000.7188,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	Create3DTextLabel("{FFFFFF}< 自动考试\n驾驶执照 >",0x008080FF,1410.4180,-1668.3036,13.6859+0.8,10.0,0,1);
	Create3DTextLabel("观察点\n/camera",COLOR_REDD,212.2816,1812.2374,21.8672,20.0,0,0);
	Create3DTextLabel("车辆商店\n类型: Nope",COLOR_REDD,1717.1105,-1758.1122,13.9103,7.0,0,1);
	Create3DTextLabel("车辆商店\n类型: C&D",COLOR_REDD,-1952.2794,297.8026,35.4688,7.0,0,1);
	Create3DTextLabel("车辆商店\n类型: A&B",COLOR_REDD,2200.8857,1394.2892,11.0625,7.0,0,1);
	CreateDynamic3DTextLabel("输入: /plist",COLOR_LIGHTGREEN, 2792.0034,-2456.1975,13.6326,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("输入: /flist",COLOR_LIGHTGREEN, 248.7008,1445.8474,10.5919,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	Fight3D = Create3DTextLabel("- 战斗 - \n所有地方都是免费的",COLOR_YELLOW,764.6810,0.3656,1000.7146,15.0,0,0);
 	new string[250];
	format(string, 250, "材料库存: {FF9900}%i{ffffff} 公斤", tdload[0]);
	tPickup[0] = Create3DTextLabel(string,0xFFFFFFFF,676.7978,827.5196,-28.1953,50.0,0,1);
	tPickup[1] = Create3DTextLabel(string,0xFFFFFFFF,688.2347,846.9025,-26.8710,50.0,0,1);
	format(string, 250, "工厂燃料: {FF9900}%i{ffffff} 升", tdload[2]);
	tPickup[2] = Create3DTextLabel(string,0xFFFFFFFF,252.1836,1361.4313,17.7510,50.0,0,0);
	tPickup[3] = Create3DTextLabel(string,0xFFFFFFFF,252.2269,1385.9399,17.7510,50.0,0,0);
	tPickup[4] = Create3DTextLabel(string,0xFFFFFFFF,252.3859,1410.4368,17.7510,50.0,0,0);
	tPickup[5] = Create3DTextLabel(string,0xFFFFFFFF,252.5156,1435.3085,17.7510,50.0,0,0);
	format(string, 250, "井里的燃料: {FF9900}%i{ffffff} 升", MafiaInfo[3][mFuel][0]);
	tPickup[6] = Create3DTextLabel(string,0xFFFFFFFF,433.6584,1576.0164,15.5696,50.0,0,0);
	format(string, 250, "井里的燃料: {FF9900}%i{ffffff} 升", MafiaInfo[3][mFuel][1]);
	tPickup[7] = Create3DTextLabel(string,0xFFFFFFFF,600.5330,1510.1200,11.2981,50.0,0,0);
	format(string, 250, "井里的燃料: {FF9900}%i{ffffff} 升", MafiaInfo[3][mFuel][2]);
	tPickup[8] = Create3DTextLabel(string,0xFFFFFFFF,578.1840,1434.5988,15.1006,50.0,0,0);
	format(string, 250, "井里的燃料: {FF9900}%i{ffffff} 升", MafiaInfo[3][mFuel][3]);
	tPickup[9] = Create3DTextLabel(string,0xFFFFFFFF,627.7645,1364.2751,16.3216,50.0,0,0);
	format(string, 250, "井里的燃料: {FF9900}%i{ffffff} 升", MafiaInfo[3][mFuel][4]);
	tPickup[10] = Create3DTextLabel(string,0xFFFFFFFF,353.3320,1312.0857,15.5642,50.0,0,0);
	format(string, 250, "在仓库里收获: {FF9900}%i 克毒品", tdload[1]);
	tnarksklad[0] = Create3DTextLabel(string,0xFFFFFFFF,-382.7895,-1438.8739,26.3156,50.0,0,0);


	/////
	Create3DTextLabel("{dad37f}从仓库拿起武器:\n{ffffff}/get guns",0x39CDF2AA,2417.6228,-1253.6012,3134.9993+0.8,20.0,0,1);
	Create3DTextLabel("{dad37f}从仓库拿起武器:\n{ffffff}/get guns",0x39CDF2AA,2767.1921,-1610.8207,11.0824+0.8,20.0,0,1);
	Create3DTextLabel("{dad37f}从仓库拿起武器:\n{ffffff}/get guns",0x39CDF2AA,2507.4646,-1697.9270,18.0824+0.8,20.0,0,1);
	Create3DTextLabel("{dad37f}从仓库拿起武器:\n{ffffff}/get guns",0x39CDF2AA,1660.6234,-2108.4814,13.6824+0.8,20.0,0,1);
	Create3DTextLabel("{dad37f}从仓库拿起武器:\n{ffffff}/get guns",0x39CDF2AA,2736.7432,-1771.2542,1117.2410+0.8,20.0,0,1);
}

publics: OnGameModeInit()
{
    Slak1 = CreateObject(968,67.97479248,-1530.02893066,4.71585941,0.00000000,90.00000000,88.00000000);
	Slak2 = CreateObject(968,67.69296265,-1545.35229492,4.79085970,0.00000000,90.00000000,86.49499512);
	Slak3 = CreateObject(968,627.99127197,-1194.02526855,17.91875076,0.00000000,90.00000000,24.00000000);
	Slak4 = CreateObject(968,607.03051758,-1202.02661133,17.89089012,0.00000000,90.00000000,16.75000000);
	sflvslak1 = CreateObject(968,1643.388671875,-40.182285308838,36.242427825928,0,270,20);
	sflvslak2 = CreateObject(968,1654.078125,-35.9287109375,36.295417785645,0,90,20.994873046875);
    RaceStarted = 0;
    gGamersLowRiders[0] = INVALID_PLAYER_ID;
    gGamersLowRiders[1] = INVALID_PLAYER_ID;
    for(new i;i<10;i++) ChetInfo[i][cheatid1]=-1;
   	new Float:DrawPos = 25.000000;
	Cheat1 = 0;
	for(new i;i<10;i++)
	{
		if(i > 0) DrawPos+=30.0;
		CheatText[i] = TextDrawCreate(DrawPos,428.000000,"-1");
		TextDrawColor(CheatText[i], 0x20A9FFFF);
		TextDrawFont(CheatText[i], 1);
		TextDrawSetOutline(CheatText[i], 1);
		TextDrawLetterSize(CheatText[i],0.3500,1.270);
	}
	/// timers
	synctimer = SetTimer("SyncUp", 60000, 1);
    SetTimer("UpdateTimers", 250, 1);
	/// казино
	gCasinoCP[0] = CreateDynamicCP(1956.8848,1047.3472,992.4688,0.5);
	gCasinoCP[1] = CreateDynamicCP(1961.3521,1042.8406,992.4688,0.5);
	gCasinoCP[2] = CreateDynamicCP(1963.8490,1036.9584,992.4688,0.5);
	gCasinoCP[3] = CreateDynamicCP(1963.8263,998.5096,992.4745,0.5);
	gCasinoCP[4] = CreateDynamicCP(1961.3284,992.6361,992.4688,0.5);
	gCasinoCP[5] = CreateDynamicCP(1957.0155,988.2988,992.4688,0.5);
	// Загрузка цен на тюнинг
	_TuningPriceWheels[0] = PRICE_SHADOW,_TuningPriceWheels[1] = PRICE_MEGA,_TuningPriceWheels[2] = PRICE_WIRES,_TuningPriceWheels[3] = PRICE_CLASSIC,_TuningPriceWheels[4] = PRICE_TWIST,_TuningPriceWheels[5] = PRICE_GROVE,_TuningPriceWheels[6] = PRICE_ATOMIC,_TuningPriceWheels[7] = PRICE_DOLLAR;
	_TuningPriceSpoilers[0] = PRICE_SPOILER_XFLOW,_TuningPriceSpoilers[1] = PRICE_SPOILER_ALIEN;
	_TuningPriceHydraulics = PRICE_HYDRAULICS;
	_TuningPriceHBumper[0] = PRICE_HBUMPER_XFLOW,_TuningPriceHBumper[1] = PRICE_HBUMPER_ALIEN,_TuningPriceBBumper[0] = PRICE_BBUMPER_XFLOW,_TuningPriceBBumper[1] = PRICE_BBUMPER_ALIEN;
	_TuningPriceNitro[0] = PRICE_NITRO_2X,_TuningPriceNitro[1] = PRICE_NITRO_5X,_TuningPriceNitro[2] = PRICE_NITRO_10X;
	//
    loadBasketBalls();
    loadBaskets();
    // yabloka
    for(new iS; iS < 15; iS++)
	{
		gTree[iS] = CreateDynamicObject(717, ObjectTree[iS][0], ObjectTree[iS][1], ObjectTree[iS][2], 0.00000, 0.00000, 359.23209);
		//gTreeCP[iS] = CreateDynamicCP(ObjectTree[iS][0],ObjectTree[iS][1],ObjectTree[iS][2]+(72.9820-69.38030),2.5);
		gTreeStatus[iS] = true;
		gTreeHealth[iS] = 100;
	}
	CreateActor(23,2019.9811,-2018.1111,13.5708,267.6753);
	Create3DTextLabel("要查看可用任务列表，请按ALT",0xFF8000FF,2019.9811,-2018.1111,13.5708,15.0,0,1);
	KTrenag[1] = CreateDynamicObject(2913, 774.354431,1.900340,1000.605163, 90.000038,0.999999,-0.900000);
	KTrenag[2] = CreateDynamicObject(2915, 771.865661,5.590106,999.889953, 0.000000,-1.000000,91.299919);
	mysql_connect(mysql_host, mysql_user, mysql_db, mysql_pass);
	mysql_debug(1);
	ServerTimer[0] = gettime()+100;
	Timer[0] = gettime()+1;
    Timer[1] = gettime()+3;
    Timer[2] = gettime()+60;
    Timer[3] = gettime()+500;
    Timer[4] = gettime()+1;
    Timer[13] = gettime()+5;
 	LoadTextdraw();
 	erp_map();
	LoadOthers();
	LoadPic();
	CreateVehicles();
	LoadCreate3d();
    foreach(Player, i)
    {
       ConnectTimed[i] = 0;
       IsConnected{i} = 0;
    }
	for(new i = 0; i < 20; i++)
	{
		if(i < 10) NounObject[i] = CreateObject(3930,560.3654+random(10),840.2457+random(75),-44.00700073,0.00000000,0.00000000,0.00000000);
		else NounObject[i] = CreateObject(3930,615.3654+random(55),815.2457+random(65),-43.6009,0.00000000,0.00000000,0.00000000);
	}
	return true;
}

publics: GetClosestPlayer(p1)
{
	new x,Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	for (x=0;x<MAX_PLAYERS;x++)
	{
		if(IsPlayerConnected(x))
		{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00)
				{
					dis = dis2;
					player = x;
				}
			}
		}
	}
	return player;
}

stock PayDay(playerid)
{
	new string[228];
	switch(PlayerInfo[playerid][pMember])
	{
		case 1,10,21:{ PlayerInfo[playerid][pPayCheck] += CopSal*PlayerInfo[playerid][pRank]; PlayerInfo[playerid][pInFrac]++; FracBank[9] -= CopSal; SetOtherInt("FracBank[9]", FracBank[9]); }
		case 19:{ PlayerInfo[playerid][pPayCheck] += TaxSal*PlayerInfo[playerid][pRank]; PlayerInfo[playerid][pInFrac]++; FracBank[9] -= TaxSal; SetOtherInt("FracBank[9]", FracBank[9]);}
		case 2:{ PlayerInfo[playerid][pPayCheck] += SudSal*PlayerInfo[playerid][pRank]; PlayerInfo[playerid][pInFrac]++; FracBank[9] -= SudSal; SetOtherInt("FracBank[9]", FracBank[9]);}
		case 3:{ PlayerInfo[playerid][pPayCheck] += TaxSal*PlayerInfo[playerid][pRank]; PlayerInfo[playerid][pInFrac]++; FracBank[9] -= TaxSal; SetOtherInt("FracBank[9]", FracBank[9]);}
		case 4:{ PlayerInfo[playerid][pPayCheck] += MhsSal*PlayerInfo[playerid][pRank]; PlayerInfo[playerid][pInFrac]++; FracBank[9] -= MhsSal; SetOtherInt("FracBank[9]", FracBank[9]);}
		case 7:{ PlayerInfo[playerid][pPayCheck] += SudSal*PlayerInfo[playerid][pRank]; PlayerInfo[playerid][pInFrac]++; FracBank[9] -= SudSal; SetOtherInt("FracBank[9]", FracBank[9]);}
		case 11:{ PlayerInfo[playerid][pPayCheck] += LicSal*PlayerInfo[playerid][pRank]; PlayerInfo[playerid][pInFrac]++; FracBank[9] -= LicSal; SetOtherInt("FracBank[9]", FracBank[9]);}
		case 16,9,20:{ PlayerInfo[playerid][pPayCheck] += 700*PlayerInfo[playerid][pRank]+Random(1, 3000); PlayerInfo[playerid][pInFrac]++;} // news, medik
		case 6,5,14:{ PlayerInfo[playerid][pPayCheck] += 500*PlayerInfo[playerid][pRank]+Random(1, 3000); PlayerInfo[playerid][pInFrac]++;} // mafia
		case 12,13,15,17,18: { PlayerInfo[playerid][pPayCheck] += 250*PlayerInfo[playerid][pRank]+Random(1, 3000); PlayerInfo[playerid][pInFrac]++;} // bands
        case 8: { PlayerInfo[playerid][pPayCheck] += 1000*PlayerInfo[playerid][pRank]+Random(1, 3000); PlayerInfo[playerid][pInFrac]++;} // univer
	}
	if(PlayerInfo[playerid][pDonateRank] > 0) PlayerInfo[playerid][pPayCheck] += 3000*3+Random(1, 3000);
	if(PlayerInfo[playerid][punWarns] == 1) PlayerInfo[playerid][punWarnstime] += 1, format(string, sizeof(string), "― 在 %i 小时自动移除警告", 10 - PlayerInfo[playerid][punWarnstime]), SendClientMessage(playerid,-1, string);
	if(PlayerInfo[playerid][punWarns] == 1 && PlayerInfo[playerid][punWarnstime] >= 10)
	{
		if(PlayerInfo[playerid][pWarns] == 1) PlayerInfo[playerid][punWarnstime] = 0, PlayerInfo[playerid][punWarns] = 0, PlayerInfo[playerid][pWarns] -= 1;
		else if(PlayerInfo[playerid][pWarns] > 1) PlayerInfo[playerid][punWarnstime] = 0, PlayerInfo[playerid][punWarns] = 1, PlayerInfo[playerid][pWarns] -= 1;
		SendServerMessage(playerid, "你的警告已经删除!");
	}
	if(PlayerInfo[playerid][pBank] > 50 && PlayerInfo[playerid][pKrisha] != 0) PlayerInfo[playerid][pBank] -= 50, PlayerInfo[playerid][pDolg] += 50;
	if(PlayerInfo[playerid][pCash] > 50 && PlayerInfo[playerid][pKrisha] != 0) PlayerInfo[playerid][pCash] -= 50, PlayerInfo[playerid][pDolg] += 50;
	if(armmatbi < 0) armmatbi = 0, SetOtherInt("armmatbi", armmatbi);
	if(armmatsf < 0) armmatsf = 0, SetOtherInt("armmatsf", armmatsf);
	seans[playerid] = 0;
	SetTimerEx("MoneyFriends",1000,0,"d",playerid);
	robhouse[playerid] = false;
	PlayerInfo[playerid][pTimeBP] = 0;
	if(GetPVarInt(playerid, "_GetBizz_") > 0)
	{
		if(GetPlayerBizz(playerid) == 1)
		{
			format(YCMDstr, sizeof(YCMDstr), "―  你的产业因为以下原因而被停止营业: 缺少货物或者缺少营业执照",BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bLockTime]);
			SendClientMessage(playerid, -1, YCMDstr);
			SendServerMessage(playerid,"― 产业停止营业 {ffffff}12 {FF6347}小时后将会自动出售给国家");
			DeletePVar(playerid, "_GetBizz_");
		}
	}
	if(GetPVarInt(playerid, "GetBizz_") > 0 && GetPVarInt(playerid, "_GetBizz_") == 0)
	{
		if(GetPlayerBizz(playerid) == 1)
		{
		    format(YCMDstr, sizeof(YCMDstr), "―  你的产业已关闭 {ffffff}%i {FF6347}小时",BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bLockTime]);
			SendClientMessage(playerid, -1, YCMDstr);
			SendServerMessage(playerid,"― 产业停止营业 {ffffff}12 {FF6347}小时后将会自动出售给国家");
			DeletePVar(playerid, "GetBizz_");
		}
	}
	if(GetPVarInt(playerid, "GetBizz") > 0)
	{
		SendErrorMessage(playerid,"你的产业因为不缴纳税款超过12个小时而被出售给国家");
		SendErrorMessage(playerid,"你的产业资金已转移到你的账户");
		DeletePVar(playerid, "GetBizz");
	}
	if(PlayerInfo[playerid][pBizpokup] != 0)
	{
		format(YCMDstr, sizeof(YCMDstr), "营业税: -$%d", electrich);
		SendClientMessage(playerid, -1, YCMDstr);
  		PlayerInfo[playerid][pBank] -= biztax;
  		FracBank[9] += biztax; SetOtherInt("FracBank[9]", FracBank[9]);
	}
	if(PlayerInfo[playerid][pWantedLevel] > 0)
	{
		SetPlayerWantedLevel(playerid,WantedLevel[playerid] -= 1);
		WantedLevel[playerid] -= 1;
		PlayerInfo[playerid][pWantedLevel] -=1;
	}
	if(PlayerInfo[playerid][pQuest] != 0)
	{
	    PlayerInfo[playerid][pOtel] -= 200;
	    SendServerMessage(playerid, "酒店房间的费用: {FF9900}200$");
	    if(PlayerInfo[playerid][pOtel] <= 0)
	    {
	        PlayerInfo[playerid][pOtel] = 0;
	        PlayerInfo[playerid][pQuest] = 0;
	        SendServerMessage(playerid, "您被驱逐出酒店是因为没有付款!");
	    }
	}
	if(PlayerInfo[playerid][pPayCheck] >= 500)
	{
		format(string, sizeof(string), "― 税务: {FF9900}$%i",TaxValue);
		SendClientMessage(playerid, -1, string);
		PlayerInfo[playerid][pPayCheck] -= TaxValue;
	 	SendClientMessage(playerid,-1, "― 你可以在任何一个银行里点击'Pick PayCheck' 领取薪水.");
	 	FracBank[9] += TaxValue; SetOtherInt("FracBank[9]", FracBank[9]);
	}
	if(PlayerInfo[playerid][pMember] == 19 && armmatsf <= 0) PlayerInfo[playerid][pPayCheck] = 0, SendServerMessage(playerid, "SA监狱仓库是空的,没有工资!");
	if(PlayerInfo[playerid][pPhousekey] != 799)
	{
		new house = PlayerInfo[playerid][pPhousekey];
		if(HouseInfo[house][hKlass] == 0) SendClientMessage(playerid,-1, "― 房费: {FF9900}50$");
		else if(HouseInfo[house][hKlass] == 1) SendClientMessage(playerid,-1, "― 房费: {FF9900}100$");
		else if(HouseInfo[house][hKlass] == 2) SendClientMessage(playerid,-1, "― 房费: {FF9900}150$");
		else if(HouseInfo[house][hKlass] == 3) SendClientMessage(playerid,-1, "― 房费: {FF9900}200$");
		else if(HouseInfo[house][hKlass] == 4) SendClientMessage(playerid,-1, "― 房费: {FF9900}300$");
		format(string,sizeof(string),"― 房屋账户: {FF9900}%i$",HouseInfo[house][hTakings]);
		SendClientMessage(playerid, -1, string);
		if(HouseInfo[house][hTakings] <= 0)
		{
			PlayerInfo[playerid][pPhousekey] = 799;
			HouseInfo[house][hHel] = 0;
			HouseInfo[house][hLock] = 0;
			HouseInfo[house][hOwned] = 0;
			HouseInfo[house][hTakings] = 0;
			strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
			SendErrorMessage(playerid, "你因支付不起税费而被驱逐. {FF6347}(拿不回房子里的钱)");
			foreach(Player,i)
            {
                if(PlayerInfo[i][pPhousekey2] == house)
                {
                    new name[64];
				    PlayerInfo[i][pPhousekey2] = 799;
				    GetPlayerName(i,name,sizeof(name));
				    SendServerMessage(i, "你租的房子被出售给国家.");
				    format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pPhousekey2 = '799' WHERE Name = '%s'",name);
			    }
            }
			BuyHouse(house);
			SaveProperty(house);
		}
	}
	return true;
}

stock split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc))
	{
		if(strsrc[i] == delimiter || i == strlen(strsrc))
		{
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return true;
}

publics: OnPlayerRegister(playerid)
{
	PlayerInfo[playerid][pLevel] = 1;
	PlayerInfo[playerid][pAdministration228] = 0;
	PlayerInfo[playerid][pSupport] = 0;
	PlayerInfo[playerid][pSHealth] = 100.0;
	PlayerInfo[playerid][pHealth] = 100.0;
	PlayerInfo[playerid][Promo] = 0;
	PlayerInfo[playerid][pRub] = 0;
	PlayerInfo[playerid][pHP] = 100;
	PlayerInfo[playerid][pInt] = 0;
	PlayerInfo[playerid][pLocal] = 255;
	new randphone = 100000 + random(899999);
	PlayerInfo[playerid][pPnumber] = randphone;
	PlayerInfo[playerid][pReg] = 1;
	PlayerInfo[playerid][pCarLic] = 0;
	PlayerInfo[playerid][pCash] = 5000;
	PlayerInfo[playerid][pBank] = 0;
	PlayerInfo[playerid][pMobile] = 0;
	PlayerInfo[playerid][pChar][1] = 230;
	PlayerInfo[playerid][pChar][2] = 230;
	PlayerInfo[playerid][pMarriedTo] = strval("-");
	strmid (PlayerInfo[playerid][pMarriedTo], "-", 0, strlen("-"), 255);
	PlayerInfo[playerid][pZakonp] = 0;
	PlayerInfo[playerid][pHousecash] = 0;
	PlayerInfo[playerid][pWantedLevel] = 0;
	PlayerInfo[playerid][pMuted] = 0;
	PlayerInfo[playerid][pMuteTime] = 0;
	PlayerInfo[playerid][pMember] = 0;
	PlayerInfo[playerid][pPhousekey] = 799;
	PlayerInfo[playerid][pPhousekey2] = 799;
	PlayerInfo[playerid][pDonatemoney] = 0;
	PlayerInfo[playerid][pCarLic] = 0;
	//PlayerInfo[playerid][pGolod] = 100;
	PlayerInfo[playerid][pMedcard] = 0;
	PlayerInfo[playerid][pAutoTime] = 0;
	PlayerInfo[playerid][pOtmbI4ka] = 0;
	PlayerInfo[playerid][pTimeBP] = 0;
	PlayerInfo[playerid][pAutoSkill] = 0;
	PlayerInfo[playerid][pTruckSkill] = 0;
	PlayerInfo[playerid][pSkillT] = 0;
	PlayerInfo[playerid][pSkate] = 0;
	PlayerInfo[playerid][pSgf] = 0;
	PlayerInfo[playerid][pBalon4ik] = 0;
	PlayerInfo[playerid][pBint] = 0;
	PlayerInfo[playerid][pCoster] = 0;
	PlayerInfo[playerid][pSerf] = 0;
	PlayerInfo[playerid][pBizpokup] = 0;
	PlayerInfo[playerid][pQuest] = 0;
	PlayerInfo[playerid][pSiga] = 0;
	PlayerInfo[playerid][pNazivka] = 0;
	PlayerInfo[playerid][pPhonePlayer] = 0;
	PlayerInfo[playerid][pDostup] = 0;
	PlayerInfo[playerid][pShtanga] = 0;
	PlayerInfo[playerid][pVelo] = 0;
	PlayerInfo[playerid][pGiri] = 0;
	PlayerInfo[playerid][pSpawnChange] = 1;
	PlayerInfo[playerid][pBeg] = 0;
	PlayerInfo[playerid][pEmailpod] = 0;
	PlayerInfo[playerid][pNumbercar] = 0;
	PlayerInfo[playerid][pWheels] = 0;
	PlayerInfo[playerid][pSpoilers] = 0;
	PlayerInfo[playerid][pHydraulics] = 0;
	PlayerInfo[playerid][pHBumper] = 0;
	PlayerInfo[playerid][pBBumper] = 0;
	PlayerInfo[playerid][pNitro] = 0;
	PlayerInfo[playerid][pOtel] = 0;
	PlayerInfo[playerid][pQuest_1] = 0;
	PlayerInfo[playerid][pQuest_2] = 0;
	PlayerInfo[playerid][pQuest_3] = 0;
	PlayerInfo[playerid][pQuest_4] = 0;
	PlayerInfo[playerid][pQuest_5] = 0;
	PlayerInfo[playerid][pLWarns] = 0;
	PlayerInfo[playerid][pMWarns] = 0;
	PlayerInfo[playerid][pAWarn] = 0;
	PlayerInfo[playerid][pDiplom] = 0;
	PlayerInfo[playerid][pMath] = 0;
	PlayerInfo[playerid][pHistory] = 0;
	PlayerInfo[playerid][pBiology] = 0;
	PlayerInfo[playerid][pInform] = 0;
	PlayerInfo[playerid][pRussian] = 0;
	PlayerInfo[playerid][pKeylog] = 0;
	PlayerInfo[playerid][pSuperKey] = 0;
	PlayerInfo[playerid][kickdm] = 0;
	for(new i; i<14;i++) AccInvInfo[playerid][i] = 0;
	PlayerInfo[playerid][pDataLeader] = strval("-");
	strmid (PlayerInfo[playerid][pDataLeader], "-", 0, strlen("-"), 32);
	PlayerInfo[playerid][pDataInvite] = strval("-");
	strmid (PlayerInfo[playerid][pDataInvite], "-", 0, strlen("-"), 32);
	SetPlayerColor(playerid, TEAM_HIT_COLOR);
	GivePlayerPPCash(playerid, 0);
	ClearMarriage(playerid);
	new year, month,day;
	new query[128];
	new string[300];
	new playersip[25];
	getdate(year, month, day);
	GetPlayerIp(playerid,playersip,sizeof(playersip));
	new strstre[100];
	format(strstre,sizeof(strstre), "%i/%i/%i",day,month,year);
	query = "UPDATE `"TABLE_ACCOUNT"` SET ";
	acc_str_strcat(query, sizeof(query), "pDataReg", strstre);
	acc_str_strcat(query, sizeof(query), "pIpReg", playersip);
	strdel(query, strlen(query)-1, strlen(query));
	format(string,sizeof(string)," WHERE `Name` = '%s'",Name(playerid));
	strcat(query, string);
	mysql_query(query);
	DollahScoreUpdate(playerid);
	OnPlayerUpdateAc(playerid);
	SpawnPlayer(playerid);
	/*SetPlayerPos(playerid, 2044.929, -2021.170, 14.034);
	SetPlayerFacingAngle(playerid, 92.531);*/
	return true;
}
publics: Hide_Damage_Text_Draw_3000ms_p(playerid)
{
    PlayerTextDrawHide(playerid, Damage_Text_Draw[playerid][0]);
    PlayerTextDrawHide(playerid, Damage_Text_Draw[playerid][1]);
	DeletePVar(playerid, "Hide_Damage");
}
publics: OnPlayerUpdateAc(playerid)
{
    new query[4000];
	new string[256];
	/*if(PlayerInfo[playerid][pExp] > 3)
	{
		SetPlayerHealth(playerid, 100);
		PlayerInfo[playerid][pGM] = 0;
	}*/
    new Float:vz, Float:z,
	surfing = GetPlayerSurfingVehicleID(playerid);
	GetPlayerVelocity(playerid, vz, vz, vz);
	GetPlayerPos(playerid, z, z, z);
	if (surfing && surfing == INVALID_VEHICLE_ID) {	surfing = GetPlayerSurfingObjectID(playerid) != INVALID_OBJECT_ID; }
	else { surfing = 1; }
	if (surfing || GetTickCount() - s_LastStop[playerid] < 2000) { vz = 0.0; s_LastZVelo[playerid] = 0.0; }
 	else { if (vz != 0.0) { s_LastZVelo[playerid] = vz; } }
	if (z - s_LastZ[playerid] > 1.0) { s_LastZVelo[playerid] = 0.1; vz = 0.1; }
	s_LastZ[playerid] = z;
	new anim = GetPlayerAnimationIndex(playerid);
	if (anim != s_LastAnim[playerid])
	{
		new prev = s_LastAnim[playerid];
		s_LastAnim[playerid] = anim;
		if (((prev == 1130 && vz == 0.0) || 1128 <= anim <= 1134 || anim == 1208))
		{
			new Float:amount = -1.0,
			Float: oldhp;

		 	GetPlayerHealth(playerid, oldhp);

			new Float:infinity = 2139095040.0,
			int_inf = floatround(infinity,floatround_round),
			int_oldhp = floatround(oldhp,floatround_round),
			newhp = int_oldhp + int_inf;
			SetPlayerHealthAC(playerid, newhp);
			vz = s_LastZVelo[playerid];
			if (vz <= s_FallDeathVelocity) { amount = 0.0; }
			else if (vz <= -0.2)
			{
				if (vz == -0.2) { amount = 50.0 * 0.2; }
				else { amount = (vz + 0.2) / (s_FallDeathVelocity + 0.2); amount *= 50.0; }
			}
			if (GetPlayerWeapon(playerid) == WEAPON_PARACHUTE && anim == 1134) { amount = -1.0; SetPlayerHealthAC(playerid, int_oldhp); }
			if (amount > 0.0)
			{
			    new int_amount = floatround(amount,floatround_round);
                //SetPlayerHealthAC(playerid, -1, 1, (newhp - int_inf) - int_amount);
			    if(!PlayerInfo[playerid][pGM]) SetPlayerHealthAC(playerid, (newhp - int_inf) - int_amount);
			    else SetPlayerHealthAC(playerid, newhp - int_inf);
		    	if(GetPVarInt(playerid, "Hide_Damage") != 0)
				{
				    KillTimer(HideDamage[playerid]);
			     	Hide_Damage_Text_Draw_3000ms_p(playerid);
				}
				SetPVarInt(playerid, "Hide_Damage", 1);
				new stringer[50];
   				format(stringer,sizeof(stringer),"%s - Collision +%d", PlayerInfo[playerid][pName], int_amount);
			    PlayerTextDrawSetString(playerid,Damage_Text_Draw[playerid][0],stringer);
			    PlayerTextDrawShow(playerid, Damage_Text_Draw[playerid][0]);
			    PlayerPlaySound(playerid, 17802, 0.0, 0.0, 0.0);
			    HideDamage[playerid] = SetTimerEx("Hide_Damage_Text_Draw_3000ms_p", 3000, 0, "i", playerid);
			}
			else { SetPlayerHealthAC(playerid, int_oldhp); }
		}
	}
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pLogin] == 1)
		{
			query = "UPDATE `"TABLE_ACCOUNT"` SET ";
			acc_int_strcat(query, sizeof(query), "pLevel", PlayerInfo[playerid][pLevel]);
			acc_int_strcat(query, sizeof(query), "pPhousekey", PlayerInfo[playerid][pPhousekey]);
			acc_int_strcat(query, sizeof(query), "pAdministration228", PlayerInfo[playerid][pAdministration228]);
			acc_int_strcat(query, sizeof(query), "pSupport", PlayerInfo[playerid][pSupport]);
			acc_int_strcat(query, sizeof(query), "pJobHeal", PlayerInfo[playerid][pJobHeal]);
			acc_int_strcat(query, sizeof(query), "pJobHealLeader", PlayerInfo[playerid][pJobHealLeader]);
			acc_float_strcat(query, sizeof(query), "pFuelcar", PlayerInfo[playerid][pFuelcar]);
            acc_int_strcat(query, sizeof(query), "pText", PlayerInfo[playerid][pText]);
			acc_int_strcat(query, sizeof(query), "pHP", PlayerInfo[playerid][pHP]);
			//acc_int_strcat(query, sizeof(query), "pGolod", PlayerInfo[playerid][pGolod]);
			acc_int_strcat(query, sizeof(query), "pPhoneBook", PlayerInfo[playerid][pPhoneBook]);
			acc_int_strcat(query, sizeof(query), "pDirectory", PlayerInfo[playerid][pDirectory]);
			acc_int_strcat(query, sizeof(query), "pCar", PlayerInfo[playerid][pCar]);
			acc_int_strcat(query, sizeof(query), "pDonatechet", PlayerInfo[playerid][pDonatechet]);
			acc_int_strcat(query, sizeof(query), "pDonatemoney", PlayerInfo[playerid][pDonatemoney]);
			acc_int_strcat(query, sizeof(query), "pDonateRank", PlayerInfo[playerid][pDonateRank]);
			acc_int_strcat(query, sizeof(query), "pSex", PlayerInfo[playerid][pSex]);
			acc_int_strcat(query, sizeof(query), "pArrested", PlayerInfo[playerid][pArrested]);
			acc_int_strcat(query, sizeof(query), "pMuted", PlayerInfo[playerid][pMuted]);
			acc_int_strcat(query, sizeof(query), "pCrimes", PlayerInfo[playerid][pCrimes]);
			acc_int_strcat(query, sizeof(query), "pExp", PlayerInfo[playerid][pExp]);
			acc_int_strcat(query, sizeof(query), "pCash", PlayerInfo[playerid][pCash]);
			acc_int_strcat(query, sizeof(query), "pKills", PlayerInfo[playerid][pKills]);
			acc_int_strcat(query, sizeof(query), "pPayCheck", PlayerInfo[playerid][pPayCheck]);
			acc_int_strcat(query, sizeof(query), "pJailed", PlayerInfo[playerid][pJailed]);
			acc_int_strcat(query, sizeof(query), "pJailTime", PlayerInfo[playerid][pJailTime]);
			acc_int_strcat(query, sizeof(query), "pMats", PlayerInfo[playerid][pMats]);
			acc_int_strcat(query, sizeof(query), "pDrugs", PlayerInfo[playerid][pDrugs]);
			acc_int_strcat(query, sizeof(query), "pLeader", PlayerInfo[playerid][pLeader]);
			acc_int_strcat(query, sizeof(query), "pMember", PlayerInfo[playerid][pMember]);
			acc_int_strcat(query, sizeof(query), "pRank", PlayerInfo[playerid][pRank]);
			acc_int_strcat(query, sizeof(query), "pCarLic", PlayerInfo[playerid][pCarLic]);
			acc_int_strcat(query, sizeof(query), "pFlyLic", PlayerInfo[playerid][pFlyLic]);
			acc_int_strcat(query, sizeof(query), "pBoatLic", PlayerInfo[playerid][pBoatLic]);
			acc_int_strcat(query, sizeof(query), "pFishLic", PlayerInfo[playerid][pFishLic]);
			acc_int_strcat(query, sizeof(query), "pGunLic", PlayerInfo[playerid][pGunLic]);
			acc_int_strcat(query, sizeof(query), "pSlot1", PlayerInfo[playerid][pSlot][0]);
			acc_int_strcat(query, sizeof(query), "pSlot2", PlayerInfo[playerid][pSlot][1]);
			acc_int_strcat(query, sizeof(query), "pSlot3", PlayerInfo[playerid][pSlot][2]);
			acc_int_strcat(query, sizeof(query), "pSlot4", PlayerInfo[playerid][pSlot][3]);
			acc_int_strcat(query, sizeof(query), "pSlot5", PlayerInfo[playerid][pSlot][4]);
			acc_int_strcat(query, sizeof(query), "pSlot6", PlayerInfo[playerid][pSlot][5]);
			acc_int_strcat(query, sizeof(query), "pSlot7", PlayerInfo[playerid][pSlot][6]);
			acc_int_strcat(query, sizeof(query), "pSlot8", PlayerInfo[playerid][pSlot][7]);
			acc_int_strcat(query, sizeof(query), "pSlot9", PlayerInfo[playerid][pSlot][8]);
			acc_int_strcat(query, sizeof(query), "pSlot10", PlayerInfo[playerid][pSlot][9]);
			acc_int_strcat(query, sizeof(query), "pSlot11", PlayerInfo[playerid][pSlot][10]);
			acc_int_strcat(query, sizeof(query), "pSlotammo1", PlayerInfo[playerid][pSlotammo][0]);
			acc_int_strcat(query, sizeof(query), "pSlotammo2", PlayerInfo[playerid][pSlotammo][1]);
			acc_int_strcat(query, sizeof(query), "pSlotammo3", PlayerInfo[playerid][pSlotammo][2]);
			acc_int_strcat(query, sizeof(query), "pSlotammo4", PlayerInfo[playerid][pSlotammo][3]);
			acc_int_strcat(query, sizeof(query), "pSlotammo5", PlayerInfo[playerid][pSlotammo][4]);
			acc_int_strcat(query, sizeof(query), "pSlotammo6", PlayerInfo[playerid][pSlotammo][5]);
			acc_int_strcat(query, sizeof(query), "pSlotammo7", PlayerInfo[playerid][pSlotammo][6]);
			acc_int_strcat(query, sizeof(query), "pSlotammo8", PlayerInfo[playerid][pSlotammo][7]);
			acc_int_strcat(query, sizeof(query), "pSlotammo9", PlayerInfo[playerid][pSlotammo][8]);
			acc_int_strcat(query, sizeof(query), "pSlotammo10", PlayerInfo[playerid][pSlotammo][9]);
			acc_int_strcat(query, sizeof(query), "pSlotammo11", PlayerInfo[playerid][pSlotammo][10]);
			acc_int_strcat(query, sizeof(query), "pGunSkill1", PlayerInfo[playerid][pGunSkill][0]);
			acc_int_strcat(query, sizeof(query), "pGunSkill2", PlayerInfo[playerid][pGunSkill][1]);
			acc_int_strcat(query, sizeof(query), "pGunSkill3", PlayerInfo[playerid][pGunSkill][2]);
			acc_int_strcat(query, sizeof(query), "pGunSkill4", PlayerInfo[playerid][pGunSkill][3]);
			acc_int_strcat(query, sizeof(query), "pGunSkill5", PlayerInfo[playerid][pGunSkill][4]);
			acc_int_strcat(query, sizeof(query), "pGunSkill6", PlayerInfo[playerid][pGunSkill][5]);
			acc_int_strcat(query, sizeof(query), "pChar", PlayerInfo[playerid][pChar][0]);
			acc_int_strcat(query, sizeof(query), "pChar1", PlayerInfo[playerid][pChar][1]);
			acc_int_strcat(query, sizeof(query), "pChar2", PlayerInfo[playerid][pChar][2]);
			acc_float_strcat(query, sizeof(query), "pSHealth", PlayerInfo[playerid][pSHealth]);
			acc_float_strcat(query, sizeof(query), "pHealth", PlayerInfo[playerid][pHealth]);
			acc_int_strcat(query, sizeof(query), "pInt", PlayerInfo[playerid][pInt]);
			acc_int_strcat(query, sizeof(query), "pLocal", PlayerInfo[playerid][pLocal]);
			acc_int_strcat(query, sizeof(query), "pModel", PlayerInfo[playerid][pModel]);
			acc_int_strcat(query, sizeof(query), "pPnumber", PlayerInfo[playerid][pPnumber]);
			acc_int_strcat(query, sizeof(query), "pWarns", PlayerInfo[playerid][pWarns]);
			acc_int_strcat(query, sizeof(query), "punWarns", PlayerInfo[playerid][punWarns]);
			acc_int_strcat(query, sizeof(query), "punWarnstime", PlayerInfo[playerid][punWarnstime]);
			acc_int_strcat(query, sizeof(query), "pFuel", PlayerInfo[playerid][pFuel]);
			acc_int_strcat(query, sizeof(query), "pMarried", PlayerInfo[playerid][pMarried]);
			acc_str_strcat(query, sizeof(query), "pMarriedTo", PlayerInfo[playerid][pMarriedTo]);
			acc_int_strcat(query, sizeof(query), "pDrugmoney", PlayerInfo[playerid][pDrugmoney]);
			acc_int_strcat(query, sizeof(query), "pMuteTime", PlayerInfo[playerid][pMuteTime]);
			acc_int_strcat(query, sizeof(query), "pMobile", PlayerInfo[playerid][pMobile]);
			acc_int_strcat(query, sizeof(query), "pBank", PlayerInfo[playerid][pBank]);
			acc_int_strcat(query, sizeof(query), "pLocked", PlayerInfo[playerid][pLocked]);
			acc_int_strcat(query, sizeof(query), "pBanTime", PlayerInfo[playerid][pBanTime]);
			acc_int_strcat(query, sizeof(query), "pBanData", PlayerInfo[playerid][pBanData]);
			acc_int_strcat(query, sizeof(query), "pKrisha", PlayerInfo[playerid][pKrisha]);
			acc_int_strcat(query, sizeof(query), "pUseKrisha", PlayerInfo[playerid][pUseKrisha]);
			acc_int_strcat(query, sizeof(query), "pDolg", PlayerInfo[playerid][pDolg]);
			acc_str_strcat(query, sizeof(query), "pDostup", PlayerInfo[playerid][pDostup]);
			acc_int_strcat(query, sizeof(query), "pZakonp", PlayerInfo[playerid][pZakonp]);
			acc_int_strcat(query, sizeof(query), "pAddiction", PlayerInfo[playerid][pAddiction]);
			acc_int_strcat(query, sizeof(query), "pMats", PlayerInfo[playerid][pMats]);
			acc_int_strcat(query, sizeof(query), "pNarcoLomka", PlayerInfo[playerid][pNarcoLomka]);
			acc_int_strcat(query, sizeof(query), "pProcents", PlayerInfo[playerid][pProcents]);
			acc_int_strcat(query, sizeof(query), "pWheels", PlayerInfo[playerid][pWheels]);
			acc_int_strcat(query, sizeof(query), "pSpoilers", PlayerInfo[playerid][pSpoilers]);
			acc_int_strcat(query, sizeof(query), "pHBumper", PlayerInfo[playerid][pHBumper]);
			acc_int_strcat(query, sizeof(query), "pBBumper", PlayerInfo[playerid][pBBumper]);
			acc_int_strcat(query, sizeof(query), "pColor1", PlayerInfo[playerid][pColor][0]);
			acc_int_strcat(query, sizeof(query), "pColor2", PlayerInfo[playerid][pColor][1]);
			acc_int_strcat(query, sizeof(query), "prefix_id", PlayerInfo[playerid][prefix_id]);
			acc_int_strcat(query, sizeof(query), "pNitro", PlayerInfo[playerid][pNitro]);
			acc_int_strcat(query, sizeof(query), "pHydraulics", PlayerInfo[playerid][pHydraulics]);
			acc_int_strcat(query, sizeof(query), "pMestoJail", PlayerInfo[playerid][pMestoJail]);
			acc_int_strcat(query, sizeof(query), "pHousecash", PlayerInfo[playerid][pHousecash]);
			acc_int_strcat(query, sizeof(query), "pWantedLevel", PlayerInfo[playerid][pWantedLevel]);
			acc_int_strcat(query, sizeof(query), "pChas", PlayerInfo[playerid][pChas]);
			acc_int_strcat(query, sizeof(query), "pMin", PlayerInfo[playerid][pMin]);
	        acc_int_strcat(query, sizeof(query), "pMedcard",PlayerInfo[playerid][pMedcard]);
	        acc_str_strcat(query, sizeof(query), "pEmail", PlayerInfo[playerid][pEmail]);
	        acc_int_strcat(query, sizeof(query), "pEmailpod",PlayerInfo[playerid][pEmailpod]);
	        acc_int_strcat(query, sizeof(query), "pTruckSkill", PlayerInfo[playerid][pTruckSkill]);
	        acc_int_strcat(query, sizeof(query), "pOtmbI4ka", PlayerInfo[playerid][pOtmbI4ka]);
	        acc_int_strcat(query, sizeof(query), "pAutoSkill", PlayerInfo[playerid][pAutoSkill]);
			acc_int_strcat(query, sizeof(query), "pAutoTime", PlayerInfo[playerid][pAutoTime]);
			acc_int_strcat(query, sizeof(query), "pSkillT", PlayerInfo[playerid][pSkillT]);
			acc_int_strcat(query, sizeof(query), "pShtanga", PlayerInfo[playerid][pShtanga]);
			acc_int_strcat(query, sizeof(query), "pVelo", PlayerInfo[playerid][pVelo]);
			acc_int_strcat(query, sizeof(query), "pGiri", PlayerInfo[playerid][pGiri]);
			acc_int_strcat(query, sizeof(query), "pBeg", PlayerInfo[playerid][pBeg]);
			acc_int_strcat(query, sizeof(query), "pTimeBP", PlayerInfo[playerid][pTimeBP]);
			acc_int_strcat(query, sizeof(query), "pPhousekey2", PlayerInfo[playerid][pPhousekey2]);
			acc_int_strcat(query, sizeof(query), "pSkate", PlayerInfo[playerid][pSkate]);
			acc_int_strcat(query, sizeof(query), "pSgf", PlayerInfo[playerid][pSgf]);
			acc_int_strcat(query, sizeof(query), "pBalon4ik", PlayerInfo[playerid][pBalon4ik]);
			acc_int_strcat(query, sizeof(query), "pSiga", PlayerInfo[playerid][pSiga]);
			acc_int_strcat(query, sizeof(query), "pPhonePlayer", PlayerInfo[playerid][pPhonePlayer]);
			acc_int_strcat(query, sizeof(query), "pSpawnChange", PlayerInfo[playerid][pSpawnChange]);
			acc_str_strcat(query, sizeof(query), "pNumbercar", PlayerInfo[playerid][pNumbercar]);
			acc_int_strcat(query, sizeof(query), "pBint", PlayerInfo[playerid][pBint]);
			acc_int_strcat(query, sizeof(query), "pQuest", PlayerInfo[playerid][pQuest]);
			acc_float_strcat(query, sizeof(query), "dCarx", PlayerInfo[playerid][dCarx]);
			acc_float_strcat(query, sizeof(query), "dCary", PlayerInfo[playerid][dCary]);
			acc_float_strcat(query, sizeof(query), "dCarz", PlayerInfo[playerid][dCarz]);
			acc_float_strcat(query, sizeof(query), "dCarc", PlayerInfo[playerid][dCarc]);
			acc_int_strcat(query, sizeof(query), "pOtel", PlayerInfo[playerid][pOtel]);
			acc_int_strcat(query, sizeof(query), "pQuest_1", PlayerInfo[playerid][pQuest_1]);
			acc_int_strcat(query, sizeof(query), "pQuest_2", PlayerInfo[playerid][pQuest_2]);
			acc_int_strcat(query, sizeof(query), "pQuest_3", PlayerInfo[playerid][pQuest_3]);
			acc_int_strcat(query, sizeof(query), "pQuest_4", PlayerInfo[playerid][pQuest_4]);
			acc_int_strcat(query, sizeof(query), "pQuest_5", PlayerInfo[playerid][pQuest_5]);
			acc_int_strcat(query, sizeof(query), "pLWarns", PlayerInfo[playerid][pLWarns]);
			acc_int_strcat(query, sizeof(query), "pAWarn", PlayerInfo[playerid][pAWarn]);
			acc_int_strcat(query, sizeof(query), "pMWarns", PlayerInfo[playerid][pMWarns]);
			acc_int_strcat(query, sizeof(query), "pKeylog", PlayerInfo[playerid][pKeylog]);
			acc_str_strcat(query, sizeof(query), "pSuperKey", PlayerInfo[playerid][pSuperKey]);
			acc_int_strcat(query, sizeof(query), "pDiplom", PlayerInfo[playerid][pDiplom]);
			acc_int_strcat(query, sizeof(query), "pMath", PlayerInfo[playerid][pMath]);
			acc_int_strcat(query, sizeof(query), "pHistory", PlayerInfo[playerid][pHistory]);
			acc_int_strcat(query, sizeof(query), "pBiology", PlayerInfo[playerid][pBiology]);
			acc_int_strcat(query, sizeof(query), "pInform", PlayerInfo[playerid][pInform]);
			acc_int_strcat(query, sizeof(query), "pRussian", PlayerInfo[playerid][pRussian]);
			acc_int_strcat(query, sizeof(query), "pCoster", PlayerInfo[playerid][pCoster]);
			acc_int_strcat(query, sizeof(query), "pSerf", PlayerInfo[playerid][pSerf]);
			acc_int_strcat(query, sizeof(query), "pBizpokup", PlayerInfo[playerid][pBizpokup]);
			acc_str_strcat(query, sizeof(query), "pTimeDayS", PlayerInfo[playerid][pTimeDayS]);
			acc_int_strcat(query, sizeof(query), "Promo", PlayerInfo[playerid][Promo]);
			acc_int_strcat(query, sizeof(query), "pRub", PlayerInfo[playerid][pRub]);
			format(string,sizeof(string),"%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d",
            AccInvInfo[playerid][0],AccInvInfo[playerid][1],AccInvInfo[playerid][2],AccInvInfo[playerid][3],AccInvInfo[playerid][4],
            AccInvInfo[playerid][5],AccInvInfo[playerid][6],AccInvInfo[playerid][7],AccInvInfo[playerid][8],AccInvInfo[playerid][9],
            AccInvInfo[playerid][10],AccInvInfo[playerid][11],AccInvInfo[playerid][12],AccInvInfo[playerid][13]);
            acc_str_strcat(query, sizeof(query), "pAccesories", string);
			new year, month, day;
			getdate(year, month, day);
			new strstre[50];
			format(strstre,sizeof(strstre), "%i/%i/%i",day,month,year);
			acc_str_strcat(query, sizeof(query), "pOnline", strstre);
			format(strstre,sizeof(strstre), "%i:%i",PlayerInfo[playerid][pChas],PlayerInfo[playerid][pMin]);
			acc_str_strcat(query, sizeof(query), "pOnlineLid", strstre);
			acc_int_strcat(query, sizeof(query), "pKicka", PlayerInfo[playerid][pKicka]);
			acc_int_strcat(query, sizeof(query), "pBana", PlayerInfo[playerid][pBana]);
			acc_int_strcat(query, sizeof(query), "pWarna", PlayerInfo[playerid][pWarna]);
			acc_int_strcat(query, sizeof(query), "pMpa", PlayerInfo[playerid][pMpa]);
			acc_int_strcat(query, sizeof(query), "pReg", PlayerInfo[playerid][pReg]);
			acc_int_strcat(query, sizeof(query), "pInFrac", PlayerInfo[playerid][pInFrac]);
			acc_int_strcat(query, sizeof(query), "pJob", PlayerInfo[playerid][pJob]);
			acc_str_strcat(query, sizeof(query), "pDataInvite",PlayerInfo[playerid][pDataInvite]);
			acc_str_strcat(query, sizeof(query), "pDataLeader",PlayerInfo[playerid][pDataLeader]);
			strdel(query, strlen(query)-1, strlen(query));
			format(string,sizeof(string)," WHERE `Name` = '%s'",Name(playerid));
			strcat(query, string);
			mysql_query(query);
			if(strlen(query) >= 4000) printf("警告!账户 %s 无法保存!",Name(playerid));
		}
	}
	return true;
}

BaseGet(fields[],perms[])
{
	new fetch[128];
	mysql_fetch_field_row(fetch,fields);
	strmid(perms, fetch, 0, strlen(fetch), 255);
}

BaseGetInt(fieldi[],&permi)
{
	new fetch[128];
	mysql_fetch_field_row(fetch,fieldi);
	permi = strval(fetch);
}

BaseGetFloat(fieldf[],&Float:permf)
{
	new fetch[256];
	mysql_fetch_field_row(fetch,fieldf);
	permf = floatstr(fetch);
}

stock OnPlayerLoginToServer(playerid, password[])
{
	new string[300];
	if(strcmp(PlayerInfo[playerid][pKey],password, true) != 0)
	{
		if(GetPVarInt(playerid, "wrongPass") == 2) return SendErrorMessage(playerid,"密码错误!请使用 /q 退出游戏."), Kick(playerid);
		SetPVarInt(playerid, "wrongPass", GetPVarInt(playerid, "wrongPass")+1);
		format(string,256, "{FFFFFF}警告! 您输入的密码不正确!\n尝试了 {FF0000}(%i) {FFFFFF}次.",3-GetPVarInt(playerid, "wrongPass"));
		ShowPlayerDialog(playerid,1091,DIALOG_STYLE_MSGBOX, "{1E90FF}信息",string, "重试", "退出");
		mysql_free_result();
		return true;
	}
	/*BaseGetInt("pGolod", PlayerInfo[playerid][pGolod]);*/
	new query[128];
	new playersip[25];
	GetPlayerIp(playerid,playersip,sizeof(playersip));
	format(query, sizeof(query), "UPDATE `"TABLE_ACCOUNT"` SET `pIp`='%s' WHERE `Name` = '%s'",playersip,Name(playerid));
	mysql_query(query);
	BaseGet("pKey",PlayerInfo[playerid][pKey]); BaseGetInt("pID", PlayerInfo[playerid][pID]); BaseGetInt("pLevel", PlayerInfo[playerid][pLevel]);
	BaseGetInt("prefix_id", PlayerInfo[playerid][prefix_id]);BaseGetInt("pPhousekey", PlayerInfo[playerid][pPhousekey]); BaseGetInt("pAdministration228", PlayerInfo[playerid][pAdministration228]);
	BaseGetInt("pSupport", PlayerInfo[playerid][pSupport]); BaseGetInt("pSkillT", PlayerInfo[playerid][pSkillT]); BaseGetInt("pShtanga", PlayerInfo[playerid][pShtanga]);
 	BaseGetInt("pJobHeal", PlayerInfo[playerid][pJobHeal]); BaseGetInt("pJobHealLeader", PlayerInfo[playerid][pJobHealLeader]); BaseGetInt("pTimeBP", PlayerInfo[playerid][pTimeBP]);
	BaseGetFloat("pFuelcar", PlayerInfo[playerid][pFuelcar]); BaseGetInt("pText", PlayerInfo[playerid][pText]); BaseGetInt("pVelo", PlayerInfo[playerid][pVelo]);
 	BaseGetInt("pHP", PlayerInfo[playerid][pHP]); BaseGetInt("pAutoSkill", PlayerInfo[playerid][pAutoSkill]); BaseGetInt("pAutoTime", PlayerInfo[playerid][pAutoTime]);BaseGetInt("Promo", PlayerInfo[playerid][Promo]);
 	BaseGetInt("pTruckSkill", PlayerInfo[playerid][pTruckSkill]); BaseGetInt("pOtmbI4ka", PlayerInfo[playerid][pOtmbI4ka]); BaseGetInt("pRub", PlayerInfo[playerid][pRub]);
	BaseGetInt("pMes", PlayerInfo[playerid][pMes]); BaseGet("pDataReg", PlayerInfo[playerid][pDataReg]); BaseGetInt("pVhoddata", PlayerInfo[playerid][pVhoddata]);
	BaseGetInt("pVhodMes", PlayerInfo[playerid][pVhodMes]); BaseGetInt("pVhodchas", PlayerInfo[playerid][pVhodchas]); BaseGetInt("pVhodminute", PlayerInfo[playerid][pVhodminute]);
	BaseGetInt("pPhoneBook", PlayerInfo[playerid][pPhoneBook]); BaseGetInt("pDirectory", PlayerInfo[playerid][pDirectory]); BaseGetInt("pQuest_5", PlayerInfo[playerid][pQuest_5]);
	BaseGet("pIp", PlayerInfo[playerid][pIp]); BaseGet("pIpReg", PlayerInfo[playerid][pIpReg]); BaseGetInt("pGiri", PlayerInfo[playerid][pGiri]);
	BaseGetInt("pCar", PlayerInfo[playerid][pCar]); BaseGetInt("pDonatechet", PlayerInfo[playerid][pDonatechet]); BaseGetInt("pBeg", PlayerInfo[playerid][pBeg]);
	BaseGetInt("pDonatemoney", PlayerInfo[playerid][pDonatemoney]); BaseGetInt("pDonateRank", PlayerInfo[playerid][pDonateRank]); BaseGetInt("pSex", PlayerInfo[playerid][pSex]);
	BaseGetInt("pArrested", PlayerInfo[playerid][pArrested]); BaseGetInt("pMuted", PlayerInfo[playerid][pMuted]); BaseGetInt("pCrimes", PlayerInfo[playerid][pCrimes]);
	BaseGetInt("pExp", PlayerInfo[playerid][pExp]); BaseGetInt("pCash", PlayerInfo[playerid][pCash]); BaseGetInt("pKills", PlayerInfo[playerid][pKills]);
 	BaseGetInt("pPayCheck", PlayerInfo[playerid][pPayCheck]); BaseGetInt("pJailed", PlayerInfo[playerid][pJailed]); BaseGet("pTimeDayS", PlayerInfo[playerid][pTimeDayS]);
    BaseGetInt("pJailTime", PlayerInfo[playerid][pJailTime]); BaseGetInt("pMats", PlayerInfo[playerid][pMats]); BaseGetInt("pPhousekey2", PlayerInfo[playerid][pPhousekey2]);
	BaseGetInt("pDrugs", PlayerInfo[playerid][pDrugs]); BaseGetInt("pLeader", PlayerInfo[playerid][pLeader]); BaseGetInt("pMember", PlayerInfo[playerid][pMember]);
	BaseGetInt("pRank", PlayerInfo[playerid][pRank]); BaseGetInt("pCarLic", PlayerInfo[playerid][pCarLic]); BaseGetInt("pSkate", PlayerInfo[playerid][pSkate]);
	BaseGetInt("pFlyLic", PlayerInfo[playerid][pFlyLic]); BaseGetInt("pBoatLic", PlayerInfo[playerid][pBoatLic]); BaseGetInt("pFishLic", PlayerInfo[playerid][pFishLic]);
	BaseGetInt("pGunLic", PlayerInfo[playerid][pGunLic]); BaseGetInt("pSlot1", PlayerInfo[playerid][pSlot][0]); BaseGetInt("pSlot2", PlayerInfo[playerid][pSlot][1]);
	BaseGetInt("pSlot3", PlayerInfo[playerid][pSlot][2]); BaseGetInt("pSlot4", PlayerInfo[playerid][pSlot][3]); BaseGetInt("pSlot5", PlayerInfo[playerid][pSlot][4]);
	BaseGetInt("pSlot6", PlayerInfo[playerid][pSlot][5]); BaseGetInt("pSlot7", PlayerInfo[playerid][pSlot][6]); BaseGetInt("pSlot8", PlayerInfo[playerid][pSlot][7]);
	BaseGetInt("pSlot9", PlayerInfo[playerid][pSlot][8]); BaseGetInt("pSlot10", PlayerInfo[playerid][pSlot][9]); BaseGetInt("pSlot11", PlayerInfo[playerid][pSlot][10]);
	BaseGetInt("pSlotammo1", PlayerInfo[playerid][pSlotammo][0]); BaseGetInt("pSlotammo2", PlayerInfo[playerid][pSlotammo][1]); BaseGetInt("pSlotammo3", PlayerInfo[playerid][pSlotammo][2]);
	BaseGetInt("pSlotammo4", PlayerInfo[playerid][pSlotammo][3]); BaseGetInt("pSlotammo5", PlayerInfo[playerid][pSlotammo][4]); BaseGetInt("pSlotammo6", PlayerInfo[playerid][pSlotammo][5]);
	BaseGetInt("pSlotammo7", PlayerInfo[playerid][pSlotammo][6]); BaseGetInt("pSlotammo8", PlayerInfo[playerid][pSlotammo][7]); BaseGetInt("pSlotammo9", PlayerInfo[playerid][pSlotammo][8]);
	BaseGetInt("pSlotammo10", PlayerInfo[playerid][pSlotammo][9]); BaseGetInt("pSlotammo11", PlayerInfo[playerid][pSlotammo][10]); BaseGetInt("pGunSkill1", PlayerInfo[playerid][pGunSkill][0]);
	BaseGetInt("pGunSkill2", PlayerInfo[playerid][pGunSkill][1]); BaseGetInt("pGunSkill3", PlayerInfo[playerid][pGunSkill][2]); BaseGetInt("pGunSkill4", PlayerInfo[playerid][pGunSkill][3]);
	BaseGetInt("pGunSkill5", PlayerInfo[playerid][pGunSkill][4]); BaseGetInt("pGunSkill6", PlayerInfo[playerid][pGunSkill][5]); BaseGetInt("pSpawnChange", PlayerInfo[playerid][pSpawnChange]);
	BaseGetInt("pChar", PlayerInfo[playerid][pChar][0]); BaseGetInt("pChar1", PlayerInfo[playerid][pChar][1]); BaseGetInt("pChar2", PlayerInfo[playerid][pChar][2]);
	BaseGetFloat("pSHealth", PlayerInfo[playerid][pSHealth]); BaseGetFloat("pHealth", PlayerInfo[playerid][pHealth]); BaseGetInt("pBint", PlayerInfo[playerid][pBint]);
	BaseGetInt("pInt", PlayerInfo[playerid][pInt]); BaseGetInt("pLocal", PlayerInfo[playerid][pLocal]); BaseGetInt("pModel", PlayerInfo[playerid][pModel]);
	BaseGetInt("pPnumber", PlayerInfo[playerid][pPnumber]); BaseGetInt("pWarns", PlayerInfo[playerid][pWarns]); BaseGetInt("punWarns", PlayerInfo[playerid][punWarns]);
	BaseGetInt("punWarnstime", PlayerInfo[playerid][punWarnstime]); BaseGetInt("pFuel", PlayerInfo[playerid][pFuel]); BaseGetInt("pMarried", PlayerInfo[playerid][pMarried]);
	BaseGet("pDrug", PlayerInfo[playerid][pDrug]); BaseGet("pMarriedTo", PlayerInfo[playerid][pMarriedTo]); BaseGetInt("pDrugmoney", PlayerInfo[playerid][pDrugmoney]);
 	BaseGetInt("pMuteTime", PlayerInfo[playerid][pMuteTime]); BaseGetInt("pMobile", PlayerInfo[playerid][pMobile]); BaseGetInt("pBalon4ik", PlayerInfo[playerid][pBalon4ik]);
	BaseGetInt("pBank", PlayerInfo[playerid][pBank]); BaseGetInt("pLocked", PlayerInfo[playerid][pLocked]); BaseGetInt("pBanTime", PlayerInfo[playerid][pBanTime]);
	BaseGetInt("pBanData", PlayerInfo[playerid][pBanData]); BaseGetInt("pSgf", PlayerInfo[playerid][pSgf]); BaseGetInt("pSiga", PlayerInfo[playerid][pSiga]);
 	BaseGetInt("pDolg", PlayerInfo[playerid][pDolg]); BaseGetInt("pKrisha", PlayerInfo[playerid][pKrisha]); BaseGetInt("pPhonePlayer", PlayerInfo[playerid][pPhonePlayer]);
	BaseGetInt("pUseKrisha", PlayerInfo[playerid][pUseKrisha]); BaseGet("pDostup", PlayerInfo[playerid][pDostup]); BaseGet("pNumbercar", PlayerInfo[playerid][pNumbercar]);
	BaseGetInt("pZakonp", PlayerInfo[playerid][pZakonp]); BaseGetInt("pAddiction", PlayerInfo[playerid][pAddiction]); BaseGetInt("pNarcoLomka", PlayerInfo[playerid][pNarcoLomka]);
	BaseGetInt("pProcents", PlayerInfo[playerid][pProcents]); BaseGetInt("pMestoJail", PlayerInfo[playerid][pMestoJail]); BaseGetInt("pHousecash", PlayerInfo[playerid][pHousecash]);
	BaseGetInt("pWantedLevel", PlayerInfo[playerid][pWantedLevel]); BaseGetInt("pChas", PlayerInfo[playerid][pChas]); BaseGetInt("pMin", PlayerInfo[playerid][pMin]);
	BaseGetInt("pKicka", PlayerInfo[playerid][pKicka]); BaseGetInt("pBana", PlayerInfo[playerid][pBana]); BaseGetInt("pWarna", PlayerInfo[playerid][pWarna]);
	BaseGetInt("pMpa", PlayerInfo[playerid][pMpa]); BaseGetInt("pReg", PlayerInfo[playerid][pReg]); BaseGetInt("pJob", PlayerInfo[playerid][pJob]);
	BaseGetInt("pInFrac", PlayerInfo[playerid][pInFrac]); BaseGet("pDataInvite", PlayerInfo[playerid][pDataInvite]); BaseGet("pDataLeader", PlayerInfo[playerid][pDataLeader]);
    BaseGetInt("pMedcard", PlayerInfo[playerid][pMedcard]); BaseGet("pEmail", PlayerInfo[playerid][pEmail]); BaseGetInt("pEmailpod", PlayerInfo[playerid][pEmailpod]);
	BaseGetInt("pWheels", PlayerInfo[playerid][pWheels]); BaseGetInt("pSpoilers", PlayerInfo[playerid][pSpoilers]); BaseGetInt("pHBumper", PlayerInfo[playerid][pHBumper]);
	BaseGetInt("pBBumper", PlayerInfo[playerid][pBBumper]); BaseGetInt("pColor1", PlayerInfo[playerid][pColor][0]); BaseGetInt("pColor2", PlayerInfo[playerid][pColor][1]);
	BaseGetInt("pNitro", PlayerInfo[playerid][pNitro]); BaseGetInt("pHydraulics", PlayerInfo[playerid][pHydraulics]); BaseGetInt("pQuest", PlayerInfo[playerid][pQuest]);
    BaseGetFloat("dCarx", PlayerInfo[playerid][dCarx]); BaseGetFloat("dCary", PlayerInfo[playerid][dCary]); BaseGetFloat("dCarz", PlayerInfo[playerid][dCarz]);
    BaseGetFloat("dCarc", PlayerInfo[playerid][dCarc]); BaseGetInt("pOtel", PlayerInfo[playerid][pOtel]); BaseGetInt("pQuest_1", PlayerInfo[playerid][pQuest_1]);
    BaseGetInt("pQuest_2", PlayerInfo[playerid][pQuest_2]); BaseGetInt("pQuest_3", PlayerInfo[playerid][pQuest_3]); BaseGetInt("pQuest_4", PlayerInfo[playerid][pQuest_4]);
    BaseGetInt("pKeylog", PlayerInfo[playerid][pKeylog]); BaseGet("pSuperKey", PlayerInfo[playerid][pSuperKey]); BaseGetInt("pDiplom", PlayerInfo[playerid][pDiplom]);
    BaseGetInt("pMath", PlayerInfo[playerid][pMath]); BaseGetInt("pHistory", PlayerInfo[playerid][pHistory]); BaseGetInt("pBiology", PlayerInfo[playerid][pBiology]);
    BaseGetInt("pInform", PlayerInfo[playerid][pInform]); BaseGetInt("pRussian", PlayerInfo[playerid][pRussian]); BaseGetInt("pLWarns", PlayerInfo[playerid][pLWarns]);
	BaseGetInt("pMWarns", PlayerInfo[playerid][pMWarns]); BaseGetInt("pCoster", PlayerInfo[playerid][pCoster]); BaseGetInt("pSerf", PlayerInfo[playerid][pSerf]); BaseGetInt("pAWarn", PlayerInfo[playerid][pAWarn]);
	BaseGetInt("pBizpokup", PlayerInfo[playerid][pBizpokup]); BaseGet("pRinvitation",PlayerInfo[playerid][pRinvitation]);
	new accesor[256];
    new asd[14][10];
    BaseGet("pAccesories",accesor);
    split(accesor,asd,'|');
    AccInvInfo[playerid][0] = strval(asd[0]);
    AccInvInfo[playerid][1] = strval(asd[1]);
    AccInvInfo[playerid][2] = strval(asd[2]);
    AccInvInfo[playerid][3] = strval(asd[3]);
    AccInvInfo[playerid][4] = strval(asd[4]);
    AccInvInfo[playerid][5] = strval(asd[5]);
    AccInvInfo[playerid][6] = strval(asd[6]);
    AccInvInfo[playerid][7] = strval(asd[7]);
    AccInvInfo[playerid][8] = strval(asd[8]);
    AccInvInfo[playerid][9] = strval(asd[9]);
    AccInvInfo[playerid][10] = strval(asd[10]);
    AccInvInfo[playerid][11] = strval(asd[11]);
    AccInvInfo[playerid][12] = strval(asd[12]);
    AccInvInfo[playerid][13] = strval(asd[13]);
	mysql_free_result();
	for(new td; td < 17; td++) TextDrawHideForPlayer(playerid,STDAUTO[td]);
	PlayerTextDrawHide(playerid,TDAUTO[playerid]);
	CancelSelectTextDraw(playerid);
	if(PlayerInfo[playerid][pKeylog] == 1)
	{
        SendErrorMessage(playerid, "{17D4AE}[安全系统]{FFFFFF} 要完成登录阶段，您需要通过验证.");
        SendErrorMessage(playerid, "{17D4AE}[安全系统]{FFFFFF} 为此，请单击您在安全代码中指定的数字.");
	    for(new i = 0, cindex = 0; i < sizeof(Captcha); i++)
		{
			if(i == 0)
			{
	            Captcha[i] = CreatePlayerTextDraw(playerid, 321.0, 80.0, "SECURITY CODE:");
	  			PlayerTextDrawUseBox(playerid, Captcha[i], 1);
				PlayerTextDrawBoxColor(playerid, Captcha[i], 0x000000AA);
				PlayerTextDrawTextSize(playerid, Captcha[i], 800.0, 200.0);
	        }
			if(i == 1)
			{
			    Captcha[i] = CreatePlayerTextDraw(playerid, 321.0, 303.0, "-----");
	            PlayerTextDrawUseBox(playerid, Captcha[i], 1);
				PlayerTextDrawBoxColor(playerid, Captcha[i], 0x000000AA);
				PlayerTextDrawTextSize(playerid, Captcha[i], 800.0, 200.0);
	        }
			if(i > 1)
			{
			    format(string, sizeof(string), "%c", TextArray[i - 2]);
		        if(i >= 2) Captcha[i] = CreatePlayerTextDraw(playerid, 280.0 + (41.0 * cindex), 130.0, string);
				if(i == 5) cindex = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 280.0 + (41.0 * cindex), 171.0, string);
	            if(i > 5) Captcha[i] = CreatePlayerTextDraw(playerid, 280.0 + (41.0 * cindex), 171.0, string);
				if(i == 8) cindex = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 280.0 + (41.0 * cindex), 212.0, string);
				if(i > 8) Captcha[i] = CreatePlayerTextDraw(playerid, 280.0 + (41.0 * cindex), 212.0, string);
				if(i == 11) cindex = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 321.5 + (41.0 * cindex), 253.0, string);
				if(i > 11) Captcha[i] = CreatePlayerTextDraw(playerid, 321.5 + (41.0 * cindex), 253.0, string);
			    PlayerTextDrawUseBox(playerid, Captcha[i], 1);
			    PlayerTextDrawBoxColor(playerid, Captcha[i], 102);
			    PlayerTextDrawTextSize(playerid, Captcha[i], 29.0, 29.0);
			    PlayerTextDrawSetSelectable(playerid, Captcha[i], 1);
			    cindex++;
	        }
		    PlayerTextDrawLetterSize(playerid, Captcha[i], 0.50, 2.5);
			PlayerTextDrawAlignment(playerid, Captcha[i], 2);
			PlayerTextDrawSetOutline(playerid, Captcha[i], 1);
			PlayerTextDrawShow(playerid, Captcha[i]);
			SelectTextDraw(playerid, 0xFDE39DFF);
		}
	}
	else
	{
		OnPlayerLoginToServer1(playerid);
	}
	TogglePlayerControllable(playerid, 1);
	return true;
}

stock OnPlayerLoginToServer1(playerid)
{
	PlayerInfo[playerid][kickdm] =0;
	format(YCMDstr, sizeof(YCMDstr), "UPDATE `"TABLE_ACCOUNT"` SET `pLogin`='1' WHERE `Name` = '%s'",Name(playerid));
	mysql_query(YCMDstr);
	PlayerInfo[playerid][pLogin] = 1;
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	if(PlayerInfo[playerid][pPhousekey] == 255 && strcmp(playername, HouseInfo[255][hOwner], true) != 0) PlayerInfo[playerid][pPhousekey] = 799;
	new curdate = getdate();
	new ostalos=PlayerInfo[playerid][pBanTime]-curdate;
	if(PlayerInfo[playerid][pLocked] == 1)
	{
		if(PlayerInfo[playerid][pBanTime] <= 0)
		{
			SendServerMessage(playerid, "封禁处罚时间已到,封禁已经自动解除!");
 			PlayerInfo[playerid][pLocked] = 0;
 			PlayerInfo[playerid][pBanTime] = 0;
 			PlayerInfo[playerid][pBanData] = 0;
		}
		else
		{
	    	format(YCMDstr, sizeof(YCMDstr), "{FFFFFF}警告! 此账户已封禁\n在{17D4AE}%d {FFFFFF}天后自动解封.",ostalos);
	    	ShowPlayerDialog(playerid,D_NONE,0,"{17D4AE}封禁",YCMDstr,"关闭","");
	    	GKick(playerid);
	    	return 1;
		}
	}
	if(PlayerInfo[playerid][pCash] <= 0) PlayerInfo[playerid][pCash] = 0;
	if(PlayerInfo[playerid][pProcents] <= 0) PlayerInfo[playerid][pProcents] = 0;
	if(PlayerInfo[playerid][pText] == 4)
	{
		SendErrorMessage(playerid, "你收到了离线警告*warn*或者领导权限被移除!");
		PlayerInfo[playerid][pText] = 0;
	}
	if (PlayerInfo[playerid][pText] == 3)
	{
		PlayerInfo[playerid][pText] = 0;
		SendServerMessage(playerid, "邀请了朋友来玩, 获得了 10000 $");
		PlayerInfo[playerid][pCash] += 10000;
		PlayerInfo[playerid][pDrugmoney] = 0;
	}
	if (PlayerInfo[playerid][pText] == 1)
	{
		SendServerMessage(playerid, "你因没有支付租金而被驱逐酒店");
		SendServerMessage(playerid, "你可以在银行获得房子的租金 -> \"银行菜单 > 收租金.\"");
		PlayerInfo[playerid][pText] = 0;
	}
	if(PlayerInfo[playerid][pText] == 2)
	{
		SendErrorMessage(playerid, "你的产业因为没有支付电费而被政府回收了");
		PlayerInfo[playerid][pText] = 0;
	}
	if(PlayerInfo[playerid][pCar] != 0)
	{
		caridhouse[playerid] = CreateVehicle(PlayerInfo[playerid][pCar], PlayerInfo[playerid][dCarx], PlayerInfo[playerid][dCary], PlayerInfo[playerid][dCarz], PlayerInfo[playerid][dCarc] , PlayerInfo[playerid][pColor][0] ,PlayerInfo[playerid][pColor][1], 86400);
		LockCar(caridhouse[playerid]);
		Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelcar];
		CompVeh(playerid,caridhouse[playerid]);
	}
	PEfir[playerid] = 255;
	Pefir[playerid] = MAX_SLOTS;
	SpawnPlayer(playerid);
	InitLockDoors(playerid);
	GangZoneShowForPlayer(playerid, Army, COLOR_YELLOW2);
	SetPlayerHealthAC(playerid, PlayerInfo[playerid][pHP]);
	ResetPlayerMoney(playerid);
/*	if(PlayerInfo[playerid][pExp] < 3)
	{
		PlayerInfo[playerid][pGM] = 1;
	}*/
	ShowPlayerDialog(playerid,23101,DIALOG_STYLE_MSGBOX,"服务器新闻","\t\
	{FFFF00}欢迎来到服务器 {FF0000}Legendary Role Play Game\n\
	{FFFF00}暂无其他新闻\n\
	","明白","关闭");
	//if(PlayerInfo[playerid][pAdministration228] >= 1) ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{1E90FF}管理员授权", "输入您的个人密码进行授权.", "确定", "退出");
	if(PlayerInfo[playerid][pAdministration228] >= 1) SendSyntaxMessage(playerid, "请使用 [/alogin] 登录管理员.");
	//format(YCMDstr,sizeof(YCMDstr),"{00FF00}Авторизация прошла успешно. Игровой аккаунт: {FF0000}%s. {00FF00}Ваш номер аккаунта: {FF0000}%i",Name(playerid),PlayerInfo[playerid][pID]);
	//SendClientMessage(playerid,-1,YCMDstr);
	if(ExpUping == 1) return SendSyntaxMessage(playerid, "提示! 经验有x2活动!");
	return true;
}
stock SaveProperty(h)
{
	new query[600];
	new string[128];
	query = "UPDATE `"TABLE_HOUSE"` SET ";
	acc_float_strcat(query, sizeof(query), "hEntrancex", HouseInfo[h][hEntrancex]);
	acc_float_strcat(query, sizeof(query), "hEntrancey", HouseInfo[h][hEntrancey]);
	acc_float_strcat(query, sizeof(query), "hEntrancez", HouseInfo[h][hEntrancez]);
	acc_float_strcat(query, sizeof(query), "hExitx", HouseInfo[h][hExitx]);
	acc_float_strcat(query, sizeof(query), "hExity", HouseInfo[h][hExity]);
	acc_float_strcat(query, sizeof(query), "hExitz", HouseInfo[h][hExitz]);
	acc_str_strcat(query, sizeof(query), "hOwner", HouseInfo[h][hOwner]);
	acc_int_strcat(query, sizeof(query), "hValue", HouseInfo[h][hValue]);
	acc_int_strcat(query, sizeof(query), "hHel", HouseInfo[h][hHel]);
	acc_int_strcat(query, sizeof(query), "hInt", HouseInfo[h][hInt]);
	acc_int_strcat(query, sizeof(query), "hLock", HouseInfo[h][hLock]);
	acc_int_strcat(query, sizeof(query), "hOwned", HouseInfo[h][hOwned]);
	acc_int_strcat(query, sizeof(query), "hTakings", HouseInfo[h][hTakings]);
	acc_int_strcat(query, sizeof(query), "hVec", HouseInfo[h][hVec]);
	acc_int_strcat(query, sizeof(query), "hKlass", HouseInfo[h][hKlass]);
	acc_int_strcat(query, sizeof(query), "hVehSost", HouseInfo[h][hVehSost]);
	acc_int_strcat(query, sizeof(query), "hDeagle", HouseInfo[h][hDeagle]);
	acc_int_strcat(query, sizeof(query), "hShotgun", HouseInfo[h][hShotgun]);
	acc_int_strcat(query, sizeof(query), "hM4", HouseInfo[h][hM4]);
	acc_int_strcat(query, sizeof(query), "hAK47", HouseInfo[h][hAK47]);
	acc_int_strcat(query, sizeof(query), "hDrugs", HouseInfo[h][hDrugs]);
	acc_int_strcat(query, sizeof(query), "hMaterials", HouseInfo[h][hMaterials]);
	acc_float_strcat(query, sizeof(query), "hCarx", HouseInfo[h][hCarx]);
	acc_float_strcat(query, sizeof(query), "hCary", HouseInfo[h][hCary]);
	acc_float_strcat(query, sizeof(query), "hCarz", HouseInfo[h][hCarz]);
	acc_float_strcat(query, sizeof(query), "hCarc", HouseInfo[h][hCarc]);
	strdel(query, strlen(query)-1, strlen(query));
	format(string,sizeof(string)," WHERE `hID` = '%i'",HouseInfo[h][hID]);
	strcat(query, string);
	mysql_query(query);
}

stock BroadCast(color,const string[])
{
	SendClientMessageToAll(color, string);
	return true;
}

publics: ABroadCast(color,const string[],level)
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pAdministration228] >= level)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
	return true;
}

stock OOCOff(color,const string[])
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			if(!gOoc[i])
			{
				SendClientMessage(i, color, string);
			}
		}
	}
}

stock LSNews(color,const string[])
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			if(!lNews[i])
			{
				SendClientMessage(i, color, string);
			}
		}
	}
}

publics: SendTeamMessage(team, color, string[])
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			if(IsAArm(i) || IsAMedic(i) || IsAMayor(i) || IsACop(i))
			{
				SendClientMessage(i, color, string);
			}
		}
	}
}
publics: SendTeamMessageGang(team, color, string[])
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			if(IsAGang(i))
			{
				SendClientMessage(i, color, string);
			}
		}
	}
}
publics: SendTeamMessageMafia(team, color, string[])
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			if(IsAMafia(i))
			{
				SendClientMessage(i, color, string);
			}
		}
	}
}
stock SendPoliceMessage(color, string[])
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pLeader] == 1 || PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 9 || PlayerInfo[i][pMember] == 9 || PlayerInfo[i][pLeader] == 20 || PlayerInfo[i][pMember] == 20)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
}

stock SendRadioMessage(member, color, string[])
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pMember] == member || PlayerInfo[i][pLeader] == member)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
}

publics: SendFamilyMessage(family, color, string[])
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pMember] == family || PlayerInfo[i][pLeader] == family)
			{
				if(!gFam[i])
				{
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}

publics: SendGangMessage(family, color, string[])
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pMember] == 12 || PlayerInfo[i][pMember] == 13 || PlayerInfo[i][pMember] == 15 || PlayerInfo[i][pMember] == 17 || PlayerInfo[i][pMember] == 18 )
			{
				if(!gFam[i])
				{
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}

publics: SendMafiaMessage(family, color, string[])
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pMember] == 5 || PlayerInfo[i][pMember] == 6 || PlayerInfo[i][pMember] == 14 )
			{
				if(!gFam[i])
				{
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}

publics: SendCopsMessage(family, color, string[])
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pMember] == 2 || PlayerInfo[i][pMember] == 9 || PlayerInfo[i][pMember] == 20 )
			{
				if(!gFam[i])
				{
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}

cmd:spikes(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(!IsACop(playerid)) return SendErrorMessage(playerid, "你不是警察.");
	if(GetPlayerVirtualWorld(playerid) != 0) return 1;
	if(GetPlayerInterior(playerid) != 0) return 1;
	if(IsPlayerInAnyVehicle(playerid)) return SendErrorMessage(playerid, "不能在车里使用.");
	new Float: X, Float: Y, Float: Z, Float: ANGLE;
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, ANGLE);
	if(block[playerid] == 0)
	{
		Ships[playerid] = CreateDynamicSphere(X, Y, Z, 3.5, -1, -1, -1);
		ObjectShip[playerid] = CreateDynamicObject(2899, X, Y, Z-0.8, 0, 0, ANGLE);
		block[playerid] = 1;
		SendServerMessage(playerid, "已经放置钉刺,如果要取消请再次输入!");
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 1, 1);
	}
	else DestroyDynamicObject(ObjectShip[playerid]), DestroyDynamicArea(Ships[playerid]),block[playerid] = 0, Ships[playerid] = 0,SendServerMessage(playerid, "钉刺撤回");
	return 1;
}
cmd:wanted(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(!IsACop(playerid)) return SendErrorMessage(playerid, "你不是警察.");
	new s = -1;
	new str[150];
	new strcop[500];
	foreach(new i : Player)
	{
	    if(PlayerInfo[i][pWantedLevel] == 0) continue;
	    if(s > 6) continue;
	    format(str, sizeof(str),"{ffffff}%d 犯罪等级.\t%s (%d id)\n",PlayerInfo[i][pWantedLevel],Name(i),i);
	    strcat(strcop,str);
	    s++;
	    wantedList[playerid][s] = i;
	}
	if(s == -1) return SendErrorMessage(playerid, "目前没有人犯罪.");
	return ShowPlayerDialog(playerid, 204, DIALOG_STYLE_LIST, "{4080FF}通缉名单",strcop,"追踪","关闭");
}
cmd:getmrace(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pJob] != 10) return 1;
	if(GetPlayerVehicleID(playerid) == 0 || GetVehicleModel(GetPlayerVehicleID(playerid)) != 418) return SendErrorMessage(playerid,"你不在巴士上");
	if(sscanf(params,"u",params[0])) return SendServerMessage(playerid, "/getmrace [ID]");
	if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(params[0])) return 1;
	if(PlayerInfo[params[0]][pCash] < SummaRace[playerid]) return SendErrorMessage(playerid,"玩家没有钱旅行.");
	format(YCMDstr,sizeof(YCMDstr),"{FFFFFF}巴士司机 %s 要求您支付票价 %d$", GetName(playerid),SummaRace[playerid]);
 	ShowPlayerDialog(params[0], 107, DIALOG_STYLE_MSGBOX, "旅行付款",YCMDstr, "付款", "退出");
  	SetPVarInt(params[0],"vod_id",playerid);
	return 1;
}
cmd:racecash(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pJob] != 10) return 1;
	if(GetPlayerVehicleID(playerid) == 0 || GetVehicleModel(GetPlayerVehicleID(playerid)) != 418) return SendErrorMessage(playerid,"你不在巴士上");
	if(sscanf(params,"d",params[0])) return SendErrorMessage(playerid, "/racecash [金额]");
	if(params[0] < 10 || params[0] > 100) return SendErrorMessage(playerid,"金额限制 10 - 100$");
	SummaRace[playerid] = params[0];
	SendServerMessage(playerid, "您已成功更改了票价");
	return 1;
}
cmd:race(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
 	if(PlayerInfo[playerid][pJob] != 10) return 1;
  	if(sscanf(params,"i",params[0])) return SendServerMessage(playerid,"请选择路线 5号路线 ( /race 5 ) 或者 55号路线 ( /race 55 )");
	SetPVarInt(playerid,"avtobusid",GetPlayerVehicleID(playerid));
	if(GetPVarInt(playerid,"avtobusid") == 0 || GetVehicleModel(GetPlayerVehicleID(playerid)) != 418) return SendErrorMessage(playerid,"你不在巴士上");
	if(GetPVarInt(playerid,"compayD") > gettime()) return SendErrorMessage(playerid,"请等待一段时间后再使用!");
	if(params[0] == 5)//Lawyer
	{
		if(PlayerInfo[playerid][pJob] == 10)
		{
			if(OnReic[playerid] == 0)
			{
				SendServerMessage(playerid,"转到最后一站");
				ost[0] = SetPlayerCheckpoint(playerid,1767.5684,-1858.0479,13.5070,10);
				OnReic[playerid]=2;
				RaceBus[playerid] = 1;
				format(YCMDstr,sizeof(YCMDstr),"~w~The fare: ~r~%d$~w~~n~Route: ~r~5",SummaRace[playerid]);
				PlayerTextDrawSetString(playerid, BusInfo[playerid][1], YCMDstr);
				format(YCMDstr,sizeof(YCMDstr),"%d",Zarabotok[playerid]);
				PlayerTextDrawSetString(playerid, BusInfo[playerid][0], YCMDstr);
				for(new td; td < sizeof(BusWork); td++) TextDrawShowForPlayer(playerid,BusWork[td]);
				for(new td; td < 2; td++) PlayerTextDrawShow(playerid,BusInfo[playerid][td]);
				SetPVarInt(playerid,"compayD",gettime()+60);
			}
		}
	}
	if(params[0] == 55)//Lawyer
	{
		if(PlayerInfo[playerid][pJob] == 10)
		{
			if(OnReic[playerid] == 0)
			{
				SendServerMessage(playerid,"转到最后一站");
				ost[0] = SetPlayerCheckpoint(playerid,383.9613,-2040.2288,7.9292,10);
				OnReic[playerid]=12;
				RaceBus[playerid] = 2;
				format(YCMDstr,sizeof(YCMDstr),"~w~The fare: ~r~%d$~w~~n~Route: ~r~55",SummaRace[playerid]);
				PlayerTextDrawSetString(playerid, BusInfo[playerid][1], YCMDstr);
				format(YCMDstr,sizeof(YCMDstr),"%d",Zarabotok[playerid]);
				PlayerTextDrawSetString(playerid, BusInfo[playerid][0], YCMDstr);
				for(new td; td < sizeof(BusWork); td++) TextDrawShowForPlayer(playerid,BusWork[td]);
				for(new td; td < 2; td++) PlayerTextDrawShow(playerid,BusInfo[playerid][td]);
				SetPVarInt(playerid,"compayD",gettime()+60);
			}
		}
	}
	return 1;
}
cmd:economy(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pLeader] != 7 || PlayerInfo[playerid][pAdministration228] != 10) return 1;
	new str[128],sctring[2000];
	format(str,sizeof(str),"\n\n{4080FF}国家组织的薪酬:");
	strcat(sctring,str);
	format(str,sizeof(str),"\n{FFFFFF}工资 {5da130}警察局 SA: {4080FF}$%d.", CopSal);
	strcat(sctring,str);
	format(str,sizeof(str),"\n{FFFFFF}工资 {5da130}政府: {4080FF}$%d.", SudSal);
	strcat(sctring,str);
	format(str,sizeof(str),"\n{FFFFFF}工资 {5da130}医院 SA: {4080FF}$%d.", MhsSal);
	strcat(sctring,str);
	format(str,sizeof(str),"\n{FFFFFF}工资 {5da130}FBI SA: {4080FF}$%d.", MerSal);
	strcat(sctring,str);
	format(str,sizeof(str),"\n{FFFFFF}工资 {5da130}监狱 SA: {4080FF}$%d.", TaxSal);
	strcat(sctring,str);
	format(str,sizeof(str),"\n{FFFFFF}工资 {5da130}驾驶学校 SA: {4080FF}$%d.", LicSal);
	strcat(sctring,str);
	format(str,sizeof(str),"\n{FFFFFF}工资 {5da130}军队 SA: {4080FF}$%d.", MehSal);
	strcat(sctring,str);
	format(str,sizeof(str),"\n\n{FFFFFF}{4080FF}税:");
	strcat(sctring,str);
	format(str,sizeof(str),"\n{FFFFFF}个人税: {4080FF}$%d.", TaxValue);
	strcat(sctring,str);
	format(str,sizeof(str),"\n{FFFFFF}产业营业税: {4080FF}$%d.", biztax);
	strcat(sctring,str);
	format(str,sizeof(str),"\n{FFFFFF}电费: {4080FF}$%d.", electrich);
	strcat(sctring,str);
	format(str,sizeof(str),"\n\n{FFFFFF}{4080FF}国库:");
	strcat(sctring,str);
	format(str,sizeof(str),"\n{FFFFFF}目前国库: {4080FF}$%d.", FracBank[9]);
	strcat(sctring,str);
	ShowPlayerDialog(playerid,82,DIALOG_STYLE_MSGBOX,"{1E90FF}经济管理",sctring,"修改","关闭");
	return 1;

}
cmd:serf(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pSerf] == 0) return SendErrorMessage(playerid,"你没有冲浪板,可以在24/7购买.");
	ShowPlayerDialog(playerid, 22829, DIALOG_STYLE_LIST, "{1E90FF}冲浪板菜单", "{FFFFFF}管理版面\n拿出冲浪板\n放回冲浪板", "选择", "退出");
	return 1;
}
cmd:coster(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pCoster] == 0) return SendErrorMessage(playerid,"你没有篝火,可以在24/7购买.");
    ShowPlayerDialog(playerid,22828,DIALOG_STYLE_MSGBOX,"{1E90FF}篝火","{ffffff}你想在这个地方点燃一个篝火吗?","确定","退出");
	return 1;
}
cmd:unput(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsAMafia(playerid)) return true;
 	new Float:xX,Float:yY,Float:zZ,Float:distance = 6,carblij = 9999;
	for(new i; i < MAX_VEHICLES; i++)
	{
		if(VehicleInfo[i][vInt] != GetPlayerInterior(playerid)) continue;
		if(GetVehicleVirtualWorld(i) != GetPlayerVirtualWorld(playerid)) continue;
		GetCoordBootVehicle(i, xX, yY, zZ);
		new Float:odist = GetPlayerDistanceFromPoint(playerid, xX, yY, zZ);
		if(odist < distance && GetPlayerVehicleID(playerid) != i) carblij = i,distance = odist;
	}
	if(carblij == 9999) return SendErrorMessage(playerid,"附近没有车辆!");
 	if(VehicleInfo[carblij][vInputID] == 0) return SendErrorMessage(playerid,"后备箱里没有人!");
	if(GetPVarInt(VehicleInfo[carblij][vInputID],"INCAROK") > 0)
	{
 		if(playerid == VehicleInfo[carblij][vInputID]) return SendErrorMessage(playerid,"你在后备箱里!");
   		format(YCMDstr,sizeof(YCMDstr),"%s 将你从后备箱里拉出来",PlayerInfo[playerid][pName]);
	    SendClientMessage(VehicleInfo[carblij][vInputID],-1,YCMDstr);
	    format(YCMDstr,sizeof(YCMDstr),"你将 %s 从后备箱里拉出来",PlayerInfo[VehicleInfo[carblij][vInputID]][pName]);
	    SendClientMessage(playerid,-1,YCMDstr);
	    TogglePlayerSpectating(VehicleInfo[carblij][vInputID], 0);
		TextDrawHideForPlayer(VehicleInfo[carblij][vInputID],CheckSobClosed);
		//SpawnPlayer(VehicleInfo[carblij][vInputID]);
		TogglePlayerControllable(VehicleInfo[carblij][vInputID],1);
		GetCoordBootVehicle(GetPVarInt(VehicleInfo[carblij][vInputID],"INCAROK"), xX, yY, zZ);
		DestroyDynamic3DTextLabel(Player3DTextIn[VehicleInfo[carblij][vInputID]]);
  		Q_SetPlayerPos(playerid,xX, yY, zZ);
  		SetPVarInt(VehicleInfo[carblij][vInputID],"INCAROK",0);
  		VehicleInfo[GetPVarInt(VehicleInfo[carblij][vInputID],"INCAROK")][vInputID] = 0;
	}
	return true;
}
cmd:input(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsAMafia(playerid)) return true;
 	new Float:xX,Float:yY,Float:zZ,Float:distance = 6,carblij = 9999;
	for(new i; i < MAX_VEHICLES; i++)
	{
		if(VehicleInfo[i][vInt] != GetPlayerInterior(playerid)) continue;
		if(GetVehicleVirtualWorld(i) != GetPlayerVirtualWorld(playerid)) continue;
		GetCoordBootVehicle(i, xX, yY, zZ);
		new Float:odist = GetPlayerDistanceFromPoint(playerid, xX, yY, zZ);
		if(odist < distance && GetPlayerVehicleID(playerid) != i) carblij = i,distance = odist;
	}
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/input {B4B5B7}[id]");
	if(carblij == 9999) return SendErrorMessage(playerid,"附近没有车辆!");
 	if(VehicleInfo[carblij][vInputID] != 0) return SendErrorMessage(playerid,"后备箱里面已经装有人了!");
	if(!IsPlayerConnected(params[0])) return SendErrorMessage(playerid,"无效玩家ID!");
	if(GetPlayerState(params[0]) == PLAYER_STATE_SPECTATING) return SendErrorMessage(playerid,"这个玩家操作不了!");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SendErrorMessage(playerid,"距离太远了!");
	new bool:checkcar = false;
	for(new p = 0;p < 63;p++)
 	{
  		if(GetVehicleModel(carblij) == AutoRobPeople[p])
  		{
    		checkcar = true;
      		break;
       	}
  	}
   	if(checkcar == false) return SendErrorMessage(playerid,"这辆车不能用!");
	format(YCMDstr,sizeof(YCMDstr),"{ffffff}%s 试图将你推入汽车后备箱.\n\n如果这种情况发生在RP并且您拒绝，那么这将与RP有所不同，这将受到服务器规则的惩罚.\n\n确认情况:",PlayerInfo[playerid][pName]);
 	ShowPlayerDialog(params[0],22826,DIALOG_STYLE_MSGBOX,"{1E90FF}确认",YCMDstr,"确认","退出");
  	SetPVarInt(params[0],"GIVEPLAYERID",playerid);
   	SetPVarInt(params[0],"VeHiCleId",carblij);
    return true;
}
cmd:givediplom(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(!IsAuniver(playerid))return SendErrorMessage(playerid,"你不属于大学!");
    if(PlayerInfo[playerid][pRank] < 2) return SendErrorMessage(playerid,"您无权签发文凭!");
    if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/givediplom {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
    if(
	PlayerInfo[params[0]][pMath] < 100 &&
	PlayerInfo[params[0]][pHistory] < 100 &&
	PlayerInfo[params[0]][pBiology] < 100 &&
	PlayerInfo[params[0]][pInform]  < 100 &&
	PlayerInfo[params[0]][pRussian] < 100) return SendErrorMessage(playerid,"这个人所有科目都没达到100分!");
	{
	    PlayerInfo[params[0]][pDiplom] = 1;
	    SendServerMessage(playerid,"你颁发了文凭");
		SendServerMessage(params[0],"恭喜！ 你获得了文凭! ( /diplom )");
		SendServerMessage(params[0],"现在你在公职可以升级到4阶级.");
		SetPlayerChatBubble(playerid, "颁发文凭", COLOR_PURPLE, 30.0, 10000);
	}
    return 1;
}
cmd:univeristyoff(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(GetPVarInt(playerid, "learnobject") == 1)
	{
		SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "", 0, 140, "Arial", 24, 0, -1, 0, 1);
		DestroyPlayerObject(playerid, LearnObject[playerid]);
		KillTimer(LearnTimer[playerid]);
		LearnObject[playerid] = 0;
 		SetCameraBehindPlayer(playerid);
		SetPVarInt(playerid,"learnobject",0);
		SetPVarInt(playerid,"learn", 0);
		TogglePlayerControllable(playerid, 1);
	}
	return 1;
}
cmd:diplom(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(Flood[playerid] > 0) return SendErrorMessage(playerid,"Flood!");
   	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/diplom {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	YCMDstr = "";
	new veher[50];
	veher = (PlayerInfo[playerid][pDiplom]) ? ("{33AAFF}有") : ("{FF5030}无");
	format(YCMDstr,sizeof(YCMDstr),"{4682B4}文凭: {FFFFFF}%s 的资料\n\n{FFFFFF}数学: %d\n信息学: %d\n史学: %d\n中文: %d\n基因理论: %d\n\n文凭: %s",Name(playerid),PlayerInfo[playerid][pMath], PlayerInfo[playerid][pInform], PlayerInfo[playerid][pHistory], PlayerInfo[playerid][pRussian], PlayerInfo[playerid][pBiology], veher);
	ShowPlayerDialog(params[0], D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}学科分数", YCMDstr, "关闭", "");
	SetPlayerChatBubble(playerid, "显示文凭", COLOR_PURPLE, 30.0, 10000);
	Flood[playerid] = 2;
	return 1;
}
cmd:sellsim(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(sscanf(params, "ui", params[0], params[1])) return SendServerMessage(playerid, "帮助: /sellsim [玩家id] [价格]");
	if(!PlayerToPoint(20.0,playerid,1390.2570,-22.9229,1000.9370)) return SendErrorMessage(playerid,"您只能在24/7商店出售!");
	if(!IsPlayerConnected(params[0])) return SendErrorMessage(playerid, "无效玩家ID");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SendErrorMessage(playerid,"玩家不在你身边!");
	if(playerid == params[0]) return SendErrorMessage(playerid, "你不能卖给自己!");
	if(params[1] < 1000 || params[1] > 250000) return SendErrorMessage(playerid, "价格限制 1000$ 到 250.000$");
	format(YCMDstr, sizeof(YCMDstr), "― 你向 %s 出售SIM卡. 价格: %i$", GetName(params[0]), params[1]);
	SendClientMessage(playerid, COLOR_BLUE, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― %s 向你出售SIM卡. 价格: %i$ (H - 购买, N - 不购买)", GetName(playerid), params[1]);
	SendClientMessage(params[0], COLOR_BLUE, YCMDstr);
	SetPVarInt(params[0], "KeySim", 1);
	SetPVarInt(params[0], "PlayerSim", playerid);
	SetPVarInt(params[0], "SimPrice", params[1]);
	return 1;
}
cmd:sellbizzto(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new stringer[128];
	if(PlayerInfo[playerid][pBizpokup] == 0) return SendErrorMessage(playerid,"你没有产业!");
	if(GetPlayerBizz(playerid) != 1) return SendErrorMessage(playerid, "你没有产业!");
	if(sscanf(params,"dd",params[0],params[1])) return SendServerMessage(playerid, "/sellbizzto [playerid] [价格]");
	if(!IsPlayerConnected(params[0])) return SendErrorMessage(playerid, "无效玩家ID");
	if(params[1] < 100000 || params[1] > 50000000) return SendErrorMessage(playerid, "价格限制 100.000$ - 50.000.000$");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SendErrorMessage(playerid,"距离太远了!");
	if(params[0] == playerid) return SendErrorMessage(playerid, "目标不能为自己");
	if(GetPlayerBizz(params[0]) == 1) return SendErrorMessage(playerid, "对方有产业了");
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bEntrx],BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bEntry],BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bEntrz])) return SendErrorMessage(playerid, "你需要接近产业!");
	SetPVarInt(params[0],"bizzProdaet",playerid + 1);
	SetPVarInt(playerid,"bizzPokupaet",params[0] + 1);
	SetPVarInt(params[0],"bizzCena",params[1]);
	format(stringer,128,"― %s [%i] 向你提供了产业出售,价格 %i$",Name(playerid),playerid,params[1]);
	SendClientMessage(params[0], -1, stringer);
	SendClientMessage(params[0], -1, "― 按 {63BD4E}H{FFFFFF} ( 购买 ) 或者按 {F04245}N{FFFFFF} ( 不购买 )");
	format(stringer,128,"― 你向 %s [%d] 提供了产业出售,价格 %i$",Name(params[0]),params[0],params[1]);
	SendClientMessage(playerid, COLOR_WHITE, stringer);
	return 1;
}
CMD:mvig(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pLeader] < 1) return SendErrorMessage(playerid,"你不是领导人!");
    {
		new reason[150];
        if(sscanf(params,"us[150]",params[0],reason)) return SendErrorMessage(playerid, "帮助: /mvig [id] [谴责的原因]");
        if(params[0] == playerid)  return  SendErrorMessage(playerid,"ID不能为自己");
        if(PlayerInfo[playerid][pMember] != PlayerInfo[params[0]][pMember]) return SendErrorMessage(playerid,"该玩家不在你的组织中!");
        if(IsPlayerConnected(params[0]))
        {
         	PlayerInfo[params[0]][pMWarns] ++;
         	format(YCMDstr,sizeof(YCMDstr),"― 你谴责了 %s 理由: %s",Name(params[0]),reason);
          	SendClientMessage(playerid,COLOR_LIGHTBLUE,YCMDstr);
           	format(YCMDstr,sizeof(YCMDstr),"{FF3300}― 领导人 %s 谴责了你. (原因: %s)",Name(playerid),reason);
           	SendClientMessage(params[0],-1,YCMDstr);
            if(PlayerInfo[params[0]][pMWarns] >= 3)
            {
            	PlayerInfo[params[0]][pMWarns] = 0;
            	SendServerMessage(playerid,"该玩家被谴责三次以上,自动踢出该玩家!");
                SendServerMessage(params[0],"你被谴责三次以上,自动将你踢出组织!");
               	PlayerInfo[params[0]][pMember] = 0;
				PlayerInfo[params[0]][pInFrac] = 0;
				PlayerInfo[params[0]][pLeader] = 0;
				PlayerInfo[params[0]][pRank] = 0;
				PlayerInfo[params[0]][pJobHealLeader] = 0;
				PlayerInfo[params[0]][pJobHeal] = 0;
				SetPlayerColor(params[0], TEAM_HIT_COLOR);
				SetPlayerSkin(params[0],PlayerInfo[id][pChar][0]);
            }
        }
    }
    return true;
}
CMD:munvig(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pLeader] < 1) return SendErrorMessage(playerid,"你不是领导人!");
    {
        if(sscanf(params,"u",params[0])) return SendServerMessage(playerid, "帮助: /munvig [id]");
        if(PlayerInfo[playerid][pMember] != PlayerInfo[params[0]][pMember]) return SendErrorMessage(playerid,"对方不是你组织成员!");
        if(IsPlayerConnected(params[0]))
        {
        	if(PlayerInfo[params[0]][pMWarns] > 0)
         	{
          		PlayerInfo[params[0]][pMWarns] --;
            	format(YCMDstr,sizeof(YCMDstr),"你清除了一个 %s 的警告",Name(params[0]));
             	SendClientMessage(playerid,-1,YCMDstr);
              	format(YCMDstr,sizeof(YCMDstr),"领导人 %s 消除了你一个警告",Name(playerid));
               	SendClientMessage(id,-1,YCMDstr);
            }
        }
    }
    return true;
}
CMD:lwarn(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pAdministration228] < 8 || dostup[playerid] == 0) return true;
    {
		new reason[150];
        if(sscanf(params,"us[150]",params[0],reason)) return SendErrorMessage(playerid, "帮助: /lwarn [id] [谴责领导人理由]");
        if(IsPlayerConnected(params[0]))
        {
         	PlayerInfo[params[0]][pLWarns] ++;
         	format(YCMDstr,sizeof(YCMDstr),"― 你谴责了领导人 %s, 理由: %s",Name(params[0]),reason);
          	SendClientMessage(playerid,COLOR_LIGHTBLUE,YCMDstr);
           	format(YCMDstr,sizeof(YCMDstr),"{FF3300}― 管理员 %s 谴责了你. (理由: %s)",Name(playerid),reason);
           	SendClientMessage(params[0],-1,YCMDstr);
            if(PlayerInfo[params[0]][pLWarns] >= 3)
            {
            	PlayerInfo[params[0]][pLWarns] = 0;
                SendServerMessage(params[0],"你因多次被管理员谴责,自动删除领导人职位!");
                format(YCMDstr,sizeof(YCMDstr),"{FF3300}― 领导人 %s 因多次被管理员谴责,自动删除领导人职位!",Name(params[0]));
                SendClientMessageToAll(-1,YCMDstr);
               	PlayerInfo[params[0]][pMember] = 0;
				PlayerInfo[params[0]][pInFrac] = 0;
				PlayerInfo[params[0]][pLeader] = 0;
				PlayerInfo[params[0]][pRank] = 0;
				PlayerInfo[params[0]][pJobHealLeader] = 0;
				PlayerInfo[params[0]][pJobHeal] = 0;
				SetPlayerColor(params[0], TEAM_HIT_COLOR);
				SetPlayerSkin(params[0],PlayerInfo[id][pChar][0]);
				PlayerInfo[params[0]][pWarns] += 1;
				PlayerInfo[params[0]][punWarns] = 1;
				PlayerInfo[params[0]][punWarnstime] = 0;
				GKick(params[0]);
            }
        }
    }
    return true;
}
CMD:unlwarn(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pAdministration228] < 8 || dostup[playerid] == 0) return true;
    {
        if(sscanf(params,"u",params[0])) return SendServerMessage(playerid, "帮助: /unlwarn [id]");
        if(IsPlayerConnected(params[0]))
        {
        	if(PlayerInfo[params[0]][pLWarns] > 0)
         	{
          		PlayerInfo[params[0]][pLWarns] --;
            	format(YCMDstr,sizeof(YCMDstr),"你删除了一个 %s 的谴责",Name(params[0]));
             	SendClientMessage(playerid,-1,YCMDstr);
              	format(YCMDstr,sizeof(YCMDstr),"管理员 %s 删了一个关于你的谴责",Name(playerid));
               	SendClientMessage(id,-1,YCMDstr);
            }
        }
    }
    return true;
}
cmd:supports(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	{
		SendServerMessage(playerid, "在线辅导员:");
		foreach(new i : Player)
		{
			if(!IsPlayerConnected(i)) continue;
			if(PlayerInfo[i][pSupport] < 1) continue;
			format(YCMDstr, 256, "― %s(ID:%i)",Name(i),i);
			SendClientMessage(playerid, -1, YCMDstr);
		}
		return true;
	}
}
CMD:mechanic(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pJob] != 6) return SendErrorMessage(playerid,"你不是汽修工!");
    new idM;
    if(sscanf(params,"u",idM)) return SendErrorMessage(playerid,"帮助: /mechanic [id]");
    if(!IsPlayerConnected(idM)) return false;
    if(!MehanON[idM]) return SendErrorMessage(playerid,"该玩家没有呼叫汽修工,或者被其他汽修工接下了订单!");
    new string[100];
    format(string,sizeof(string),"― 汽修工 %s 接受了你的订单,请等待..",Name(playerid));
    SendClientMessage(idM,COLOR_LIGHTBLUE,string);
    format(string,sizeof(string),"― 玩家 %s 已在地图上定位",Name(idM));
    SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
    new Float:X,Float:Y,Float:Z;
	GetPlayerPos(idM, X, Y, Z);
	SetPlayerCheckpoint(playerid, X, Y, Z, 5);
    MehanON[id] = false;
    format(string,sizeof(string),"― 汽修共 %s 接下了 %s 的订单",Name(playerid),Name(idM));
	foreach(new i : Player)
	{
	    if(!IsPlayerConnected(i)) continue;
	    if(PlayerInfo[i][pJob] == 6) SendClientMessage(i,COLOR_LIGHTBLUE,string);
	}
	return true;
}
cmd:slock(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new nearveh = GetNearestVehicle(playerid);
	new carid;
	carid = nearveh;
	new Float:cx,Float:cy,Float:cz;
	GetVehiclePos(carid, cx, cy, cz);
	if(!PlayerToPoint(4.0, playerid, cx, cy, cz)) return true;
	if(GetPVarInt(playerid, "FaggioRent"))
	{
	    if(GetVehicleModel(carid) == 462)
	 	{
			if(IsLocked[carid] == 1)
			{
				GameTextForPlayer(playerid, "~w~CAR ~g~UNLOCK", 5000, 3);
				UnLockCar(carid);
				IsLocked[carid] = 0;
			}
			else
			{
				GameTextForPlayer(playerid, "~w~CAR ~r~LOCK", 5000, 3);
				LockCar(carid);
				IsLocked[carid] = 1;
			}
		}
	}
	return 1;
}
cmd:quest(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(GetPVarInt(playerid,"quest_rab") > 0) return SendErrorMessage(playerid, "你已经通过了任务 - >收入!");
	if(GetPVarInt(playerid,"quest_auto") > 0) return SendErrorMessage(playerid, "你已经通过了任务 - >身份证!");
	if(GetPVarInt(playerid,"quest_odezda") > 0) return SendErrorMessage(playerid, "你已经通过了任务 - >服装!");
	if(GetPVarInt(playerid,"quest_riba") > 0) return SendErrorMessage(playerid, "你已经完成了任务 - >钓鱼!");
	if(GetPVarInt(playerid,"quest_otel") > 0) return SendErrorMessage(playerid, "你已经通过了任务 - >酒店!");
    new
		quest_1 = PlayerInfo[playerid][pQuest_1],
		quest_2 = PlayerInfo[playerid][pQuest_2],
		quest_3 = PlayerInfo[playerid][pQuest_3],
		quest_4 = PlayerInfo[playerid][pQuest_4],
		quest_5 = PlayerInfo[playerid][pQuest_5];
    format(YCMDstr,sizeof(YCMDstr),"名称:\t\t状态:\n{BDB76B}[1] - 收入.\t{ffffff}%s\
	\n{BDB76B}[2] - 身份证.\t{ffffff}%s\
	\n{BDB76B}[3] - 服装.\t{ffffff}%s\
	\n{BDB76B}[4] - 钓鱼.\t{ffffff}%s\
	\n{BDB76B}[5] - 酒店.\t{ffffff}%s",!quest_1?("未完成"):("完成"),!quest_2?("未完成"):("完成"),!quest_3?("未完成"):("完成"),!quest_4?("未完成"):("完成"),!quest_5?("未完成"):("完成"));
    ShowPlayerDialog(playerid,22813,DIALOG_STYLE_TABLIST_HEADERS,"{1E90FF}任务",YCMDstr, !"选择", !"退出");
    return true;
}
cmd:lowrider(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pCash] < 5000) return SendErrorMessage(playerid,"需要 5.000$!");
    if(lowriders == 1) return SendErrorMessage(playerid, "你已经开始游戏了");
    if(!IsAGang(playerid)) return true;
	SelectTextDraw(playerid, 0xFFFFE0AA);
	lowriders = 1;
	PlayerTextDrawSetPreviewModel(playerid, LRShowVehicle[playerid], gChangeLRVehicle[gNumberLRList[playerid]]);
	for(new i; i <= 3; i++) TextDrawShowForPlayer(playerid, LRRegister[i]);
	PlayerTextDrawShow(playerid,LRShowVehicle[playerid]);
	clicktd[playerid] = true;
	return true;
}
cmd:todo(playerid, params[])
{
   	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMuted] == 1) return PlayerMuteMessage(playerid);
	if(Flood[playerid] > 0) return SendErrorMessage(playerid,"该命令5秒使用一次.");
    new dstr[300],allstr[400];
    if(sscanf(params, "p<*>s[128]s[128]", dstr, YCMDstr)) return SendServerMessage(playerid,"/todo 短语*行动");
    if( IsAIP(dstr) || IsAIP(YCMDstr) ) return false;
    format(allstr, sizeof(allstr), "― %s 说 \"%s\",{FF99FF} %s.",Name(playerid),dstr,YCMDstr);
    ProxDetector(30.0, playerid, allstr, -1, -1, -1, -1, -1);
	Flood[playerid] = 5;
    return 1;
}
cmd:request(playerid, params[])
{
	new str[800], string[800];
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pAdministration228] < 1 || dostup[playerid] == 0) return true;
    if(sscanf(params, "d",params[0])) return SendErrorMessage(playerid,"使用: {4080FF}/request {B4B5B7}[id]");
    new speed = GetPlayerSpeed(params[0]);
    //
    new podoz = gettime();
    new result = podoz - time_podoz;
    if(result >= 10000000) result = 0;
    //
    new pick = gettime();
    new result1 = pick - time_pick;
    if(result1 >= 10000000) result1 = 0;
    //
    new spawn = gettime();
    new result2 = spawn - time_lspawn;
    if(result2 >= 10000000) result2 = 0;
    //
    new vhcar = gettime();
    new result3 = vhcar - time_vcar;
    if(result3 >= 10000000) result3 = 0;
    //
    new zohcar = gettime();
    new result4 = zohcar - time_zcar;
    if(result4 >= 10000000) result4 = 0;
    //
	format(str,sizeof(str),"{1E90FF}名称: {FFFFFF}%s\n",Name(params[0]));
	strcat(string,str);
	format(str,sizeof(str),"{1E90FF}报告时间: {FFFFFF}%d 秒前\n", result);
	strcat(string,str);
	if(addchet[playerid]==1)
	{
		if(GetPlayerState(playerid)!=2) strcat(string,"{1E90FF}报告原因: {FFFFFF}(步行) - 传送/飞行/airbrake\n\n");
		else strcat(string,"{1E90FF}报告原因: {FFFFFF)(车辆) - speed-hack/传送\n\n");
	}
	else strcat(string,"{1E90FF}报告原因: {FFFFFF}玩家没有被举报\n\n");
	strcat(string,"{1E90FF}证据由 Anti-Cheat 提供:\n");
	format(str,sizeof(str),"{ffffff}- 一秒移动 %d 米\n\n", speed);
	strcat(string,str);
	format(str,sizeof(str),"{ffffff}- 最后一次合法传送 (拾捡/管理/内饰): %d 秒前\n", result1);
	strcat(string,str);
	format(str,sizeof(str),"{ffffff}- 上次上车: %d 秒前\n", result4);
	strcat(string,str);
	format(str,sizeof(str),"{ffffff}- 最后下车: %d 秒前\n", result3);
	strcat(string,str);
	format(str,sizeof(str),"{ffffff}- 最后合法出生: %d 秒前\n\n", result2);
	strcat(string,str);
	strcat(string,"{1E90FF}Anti-Cheat提示. 观察第二行和显示最后一个操作日志.\n");
	strcat(string,"{1E90FF}很容易理解: {ffffff}'反作弊信息是否真实'.\n\n\n\n");
	if(addchet[playerid]==1) strcat(string,"{248daa}次要 Anti-Cheat 的判断: {FFFFFF}作弊者或受害者 [有必要遵循]\n");
	else if(addchet[playerid]==2) strcat(string,"{248daa}次要 Anti-Cheat 的判断: {FFFFFF}作弊者 [80％]\n");
	else strcat(string,"{248daa}次要 Anti-Cheat 的判断: {FFFFFF}玩家没有被举报\n");
    ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX, "{1E90FF}Anti-Cheat",string,"关闭","");
	return true;
}
cmd:redice(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(KostiName[playerid] == INVALID_PLAYER_ID) return SendErrorMessage(playerid,"无效玩家!");
	Predlog[playerid]=0;
	Predlog[KostiName[playerid]]=0;
	KostiMoney[playerid] = 0;
	KostiMoney[KostiName[playerid]] = 0;
	ZapretDice[playerid] = 0;
	ZapretDice[KostiName[playerid]] = 0;
	SendServerMessage(KostiName[playerid], "玩家拒绝下注!");
 	SendServerMessage(playerid, "你拒绝下注!");
	KostiName[KostiName[playerid]]= INVALID_PLAYER_ID;
	KostiName[playerid] = INVALID_PLAYER_ID;
	return true;
}
cmd:dice(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(!IsPlayerInRangeOfPoint(playerid,3.4,1920.4830,-706.4519,1825.7356)) return SendErrorMessage(playerid,"你必须在桌旁!");
    if(KostiMoney[playerid] !=0 || ZapretDice[playerid]!=0)return SendErrorMessage(playerid,"你已经开始游戏了!");
    if(sscanf(params, "ud", params[0],params[1])) return SendErrorMessage(playerid,"使用 /dice [玩家id] [金额]");
    if(params[1] < 100 || params[1] > 250000) return SendErrorMessage(playerid,"金额限制 100$ - 250.000$.");
    if(ZapretDice[params[0]] == 1) return SendErrorMessage(playerid,"此刻，玩家无法上场!");
	if(!ProxDetectorS(6.0, playerid, params[0])) return true;
	if(kostiKos[playerid]>0) return SendErrorMessage(playerid, "现在你无法启动游戏!");
    if(params[0] == playerid) return true;
   	new fiski;
	fiski=PlayerInfo[playerid][pCash];
	if(fiski < params[1]) return SendErrorMessage(playerid,"你没有足够的钱!");
 	SendServerMessage(playerid,"要放弃你的赌注，请输入 [/redice]");
    format(YCMDstr, 80, "― 你建议 %s 掷骰子,下注金额: %i",Name(params[0]),params[1]);
    SendClientMessage(playerid, -1,YCMDstr);
    format(YCMDstr, 80, "― %s 建议你掷骰子,下注金额: %i",Name(playerid),params[1]);
    SendClientMessage(params[0], -1,YCMDstr);
    SendServerMessage(params[0], "输入 {48FC23}'/yes'{FFFFFF}接受,或者 {FF0000}'/no' {FFFFFF}拒绝");
    ZapretDice[playerid] = 1;
    ZapretDice[params[0]] = 1;
    KostiName[playerid] = params[0];
    KostiName[params[0]] = playerid;
    KostiMoney[params[0]] = params[1];
    KostiMoney[playerid] = params[1];
    Predlog[playerid]=1;
    return true;
}
cmd:no(playerid)
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(KostiName[playerid] == INVALID_PLAYER_ID) return 1;
	Predlog[KostiName[playerid]]=0;
	KostiMoney[playerid] = 0;
	ZapretDice[playerid] = 0;
	ZapretDice[KostiName[playerid]] = 0;
	SendServerMessage(KostiName[playerid], "玩家拒绝下注!");
 	SendServerMessage(playerid, "你拒绝下注!");
	KostiName[KostiName[playerid]]= INVALID_PLAYER_ID;
	KostiName[playerid] = INVALID_PLAYER_ID;
	return 1;
}
cmd:yes(playerid)
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(KostiName[playerid] == INVALID_PLAYER_ID) return SendErrorMessage(playerid, "你没有被建议掷骰子");
    if(kostiKos[playerid]>0) return SendErrorMessage(playerid, "现在你无法接受游戏!");
    new dice = random(5)+2;
    new dice1 = random(5)+2;
	if(!ProxDetectorS(6.0, playerid, KostiName[playerid])) return true;
	if(Predlog[playerid]!=0) return SendErrorMessage(playerid,"你无法接受游戏!");
	new fiski;
	fiski=PlayerInfo[playerid][pCash];
	new fiski1;
	fiski1=PlayerInfo[KostiName[playerid]][pCash];
	if(fiski < KostiMoney[playerid] || fiski1 < KostiMoney[KostiName[playerid]])
	{
	    SendErrorMessage(playerid,"你们中的一个人没有足够的钱玩骰子.");
	    SendErrorMessage(KostiName[playerid],"你们中的一个人没有足够的钱玩骰子.");
	    callcmd::redice(playerid,"");
	    return false;
	}
    format(YCMDstr, 110, "%s 和 %s 投掷骰子,结果: {CC9900}%i : %i",Name(KostiName[playerid]),Name(playerid),dice,dice1);
    ProxDetector(10.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    if(dice > dice1)
    {
        fiski1+=KostiMoney[playerid];
        fiski-=KostiMoney[playerid];
        SetFiski(KostiName[playerid], fiski1);
        SetFiski(playerid, fiski);
        SendSyntaxMessage(KostiName[playerid], "恭喜! 你赢了!");
        SendSyntaxMessage(playerid, "不幸的是, 你输了!");
        format(YCMDstr, 20, "~g~+%d $", KostiMoney[playerid]);
        GameTextForPlayer(KostiName[playerid],YCMDstr, 3000, 1);
        format(YCMDstr, 20, "~r~-%d $", KostiMoney[playerid]);
        GameTextForPlayer(playerid,YCMDstr, 3000, 1);
        OnPlayerUpdateAc(KostiName[playerid]);
        OnPlayerUpdateAc(playerid);
    }
    else if(dice < dice1)
    {
        fiski1-=KostiMoney[playerid];
        fiski+=KostiMoney[playerid];
        SetFiski(KostiName[playerid], fiski1);
        SetFiski(playerid, fiski);
        SendSyntaxMessage(playerid, "恭喜! 你赢了!");
        SendSyntaxMessage(KostiName[playerid], "不幸的是, 你输了!");
        format(YCMDstr, 20, "~g~+%d $", KostiMoney[playerid]);
        GameTextForPlayer(playerid,YCMDstr, 3000, 1);
        format(YCMDstr, 20, "~r~-%d $", KostiMoney[playerid]);
        GameTextForPlayer(KostiName[playerid],YCMDstr, 3000, 1);
        OnPlayerUpdateAc(KostiName[playerid]);
        OnPlayerUpdateAc(playerid);
    }
    else if(dice == dice1)
    {
        SendSyntaxMessage(playerid, "平局!");
        SendSyntaxMessage(KostiName[playerid], "平局!");
    }
    switch(dice1)
	{
	    case 1: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 90.0000, 0.0000);//+
	    case 2: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 180.0000, 0.0000);//+
	    case 3: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 90.0000);//+
	    case 4: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 270.0000);
	    case 5: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 0.0000); //+
	    case 6: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 270.0000, 0.0000); //+
	    default: SendErrorMessage(playerid,"发生错误!!!");
	}
	switch(dice)
	{
     	case 1: SetPlayerAttachedObject(KostiName[playerid], 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 90.0000, 0.0000);//+
	    case 2: SetPlayerAttachedObject(KostiName[playerid], 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 180.0000, 0.0000);//+
	    case 3: SetPlayerAttachedObject(KostiName[playerid], 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 90.0000);//+
	    case 4: SetPlayerAttachedObject(KostiName[playerid], 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 270.0000);
	    case 5: SetPlayerAttachedObject(KostiName[playerid], 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 0.0000); //+
	    case 6: SetPlayerAttachedObject(KostiName[playerid], 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 270.0000, 0.0000); //+
	    default: SendErrorMessage(KostiName[playerid],"发生错误!!!");
	}
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,1,0,0,1,1);
	ApplyAnimation(KostiName[playerid],"CARRY","crry_prtial",4.1,1,0,0,1,1);
	kostiKos[KostiName[playerid]]=5;
    kostiKos[playerid] = 5;
	format(YCMDstr,14, "点数: %i",dice1);
	SetPlayerChatBubble(playerid,YCMDstr,-1,30.0,10000);
	format(YCMDstr,14, "点数: %i",dice);
	SetPlayerChatBubble(KostiName[playerid],YCMDstr,COLOR_VALIK,30.0,10000);
 	ZapretDice[playerid] = 0;
	ZapretDice[KostiName[playerid]] = 0;
	KostiMoney[playerid] = 0;
	KostiMoney[KostiName[playerid]] = 0;
	Predlog[KostiName[playerid]]=0;
	KostiName[KostiName[playerid]] = INVALID_PLAYER_ID;
	KostiName[playerid] = INVALID_PLAYER_ID;
    return true;
}
cmd:re(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if (PlayerInfo[playerid][pAdministration228] < 1 || dostup[playerid] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(sscanf(params, "d",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/re {B4B5B7}[id]");
	if(params[0] == playerid) return SendErrorMessage(playerid,"目标不能为自己!");
	if(PlayerInfo[params[0]][pAdministration228] > PlayerInfo[playerid][pAdministration228]) return SendErrorMessage(playerid,"禁止监督行政!");
	if(params[0] == INVALID_PLAYER_ID) return SendErrorMessage(playerid,"无效玩家!");
	if(!IsPlayerConnected(params[0])) return true;
	if(GetPlayerState(params[0]) == PLAYER_STATE_SPECTATING && gSpectateID[params[0]] != INVALID_PLAYER_ID) return SendErrorMessage(playerid,"管理员处于监控模式");
	if(GetPlayerState(params[0]) != 1 && GetPlayerState(params[0]) != 2 && GetPlayerState(params[0]) != 3) return SendErrorMessage(playerid,"玩家没有加入游戏");
	if(params[0] == playerid) return StartSpecPanel(playerid, params[0]+1),SelectTextDraw(playerid, 0xFF4040AA);
	StartSpecPanel(playerid, params[0]);
	return true;
}
cmd:specoff(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	StopRecon(playerid);
	GameTextForPlayer(playerid,"~r~SPEC: PANEL IS OFF", 5000, 3);
	SpecPanelClose(playerid);
	CancelSelectTextDraw(playerid);
	return true;
}
cmd:bandage(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pBint] == 0) return SendErrorMessage(playerid,"你没有绷带了,你可以去 24/7 购买.");
	SetPlayerHealthAC(playerid,100.0);
	PlayerInfo[playerid][pHealth] = 100;
	PlayerInfo[playerid][pBint]--;
	SetPlayerHealthAC(playerid,100.0);
	SetPlayerChatBubble(playerid, "使用绷带包扎伤口", COLOR_PURPLE, 30.0, 10000);
	ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
 	format(YCMDstr,sizeof(YCMDstr),"~b~+100 hp");
	GameTextForPlayer(playerid, YCMDstr, 5000, 3);
	SetPlayerAttachedObject(playerid, 5, 11736, 6, 0.055994, 0.018028, 0.045403, 348.699523, 154.366394, 0.000000, 1.000000, 1.000000, 1.000000);
	SetTimerEx("Carryobject",5000,false,"i",playerid);
	return true;
}
cmd:tune(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsATune(playerid)) return SendErrorMessage(playerid,"你不在服务站!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendErrorMessage(playerid,"你不在车里!");
	if(GetPlayerVehicleID(playerid) != caridhouse[playerid]) return SendErrorMessage(playerid,"这不是你的车!");
	if(stotuning == 1) return SendErrorMessage(playerid,"被其他人占用中,请稍候..");
	for(new i; i < 11; i++) PlayerTextDrawShow(playerid,TuningTD[i][playerid]);
	NullComponents(playerid);
	InTuning[playerid] = 1;
	stotuning = 1;
	SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
 	TogglePlayerControllable(playerid, 0);
	Q_SetVehiclePos(GetPlayerVehicleID(playerid), 2222.4160,-2530.7881,2054.8455);
	SetVehicleZAngle(GetPlayerVehicleID(playerid),0);
	SelectTextDraw(playerid, COLOR_PAYCHEC);
	SetPVarInt(playerid,"TuningCar",1);
	SetPVarInt(playerid,"Selected1",1);
	SetPVarInt(playerid,"Selected2",1);
	SetPVarInt(playerid,"Wheels",9);
	RepairVehicle(GetPlayerVehicleID(playerid));
	PlayerTextDrawSetString(playerid,TuningTD[2][playerid],"WHEELS");
	PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Shadow");
	TuningCamera(playerid);
	return 1;
}
cmd:burn(playerid,params[])
{
    SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Vehicle Cheat )");
	GKick(playerid);
}
cmd:flip(playerid,params[])
{
    SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Vehicle Cheat )");
	GKick(playerid);
}
cmd:anim(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)return 1;
	else if(sscanf(params,"i",params[0]))
	{
		ShowPlayerDialog(playerid, 2008, DIALOG_STYLE_LIST, "{1E90FF}动作", "[1] 致敬\n[2] 坐下\n[3] 舞蹈 1\n[4] 舞蹈 2\n[5] 脱衣舞\n[6] 举起手来\n[7] 坐下\n[8] 站起来\n[9] 倒下\n[10] 倒下\n[11] 握手\n[12] 挥拳头\n[13] 靠墙\n[14] 站立\n[15] Facepalm\n[16] 跪下来\n[17] Crack (sit)\n[18] 睡觉\n[19] 坐\n[20] 站\n[21] Dealer\n[22] Gopnik\n[23] 躺在床上\n[24] 推开\n[25] 醉酒走路", "选择", "退出");
		return 1;
	}
	else
	{
		switch(params[0])
		{
			case 0:
			{
				Animited[playerid] = 0;
				ClearAnimations(playerid, 1);
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0,1);
				return 1;
			}
			case 1:
			{
				ApplyAnimation(playerid,"VENDING","VEND_Drink2_P",25.5,0,1,0,1,1,1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 2:
			{
				ApplyAnimation(playerid,"PED","SEAT_down", 4.1, 0, 0, 0, 1, 1 ,1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 3:
			{
				SetPlayerSpecialAction(playerid, 5);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 4:
			{
				ApplyAnimation(playerid, "DANCING", "DAN_Loop_A", 4.1, 1, 1, 1, 1, 1, 1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 5:
			{
				SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE4);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 6:
			{
				SetPlayerSpecialAction(playerid, 10);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 7:
			{
				ApplyAnimation(playerid, "Attractors", "Stepsit_in", 4.1, 0, 1, 1, 1, 1, 1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 8:
			{
				ApplyAnimation(playerid, "Attractors", "Stepsit_out", 4.1, 0, 1, 1, 1, 1, 1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 9:
			{
				ApplyAnimation(playerid, "FOOD", "SHP_Tray_Lift_Out", 4.1, 0, 1, 1, 1, 1, 1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 10:
			{
				ApplyAnimation(playerid, "FOOD", "SHP_Tray_Out", 4.1, 0, 1, 1, 1, 1, 1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 11:
			{
				ApplyAnimation(playerid, "GANGS", "hndshkca", 4.1, 0, 1, 1, 1, 1, 1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 12:
			{
				ApplyAnimation(playerid, "GANGS", "hndshkda", 4.1, 0, 1, 1, 1, 1, 1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 13:
			{
				ApplyAnimation(playerid, "GANGS", "hndshkea", 4.1, 0, 1, 1, 1, 1, 1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 14:
			{
				ApplyAnimation(playerid, "GANGS", "leanIN", 4.1, 0, 1, 1, 1, 1, 1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 15:
			{
				ApplyAnimation(playerid, "OTB", "wtchrace_lose", 4.1, 0, 1, 1, 1, 1, 1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 16:
			{
				ApplyAnimation(playerid, "COP_AMBIENT", "Copbrowse_shake", 4.1, 0, 1, 1, 1, 1,1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 17:
			{
				ApplyAnimation(playerid, "CRACK", "crckidle1", 4.1, 0, 1, 1, 1, 1, 1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 18:
			{
				ApplyAnimation(playerid, "CRACK", "crckidle2", 4.1, 0, 1, 1, 1, 1, 1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 19:
			{
				ApplyAnimation(playerid, "JST_BUISNESS", "girl_02", 4.1, 0, 1, 1, 1, 1, 1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 20:
			{
				ApplyAnimation(playerid, "DAM_JUMP", "DAM_Dive_Loop", 4.1, 0, 1, 1, 1, 1, 1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 21:
			{
				ApplyAnimation(playerid, "DEALER", "DEALER_IDLE", 4.1, 0, 1, 1, 1, 1, 1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 22:
			{
				ApplyAnimation(playerid, "TATTOOS", "TAT_ArmL_Out_T", 4.1, 0, 1, 1, 1, 1, 1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 23:
			{
				ApplyAnimation(playerid,"BEACH","Lay_Bac_Loop",4.1,0,1,1,1,1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 24:
			{
				ApplyAnimation( playerid, "DEALER", "DRUGS_BUY", 4.1, 1, 1, 1, 1, 1 ,1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			case 25:
			{
				ApplyAnimation( playerid, "RYDER", "RYD_Die_PT1", 4.1, 1, 1, 1, 1, 1 ,1);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			default: return 1;
		}
		Animited[playerid] = 1;
	}
	return 1;
}
cmd:attack(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if (!IsAGang(playerid)) return SendErrorMessage(playerid,"你不是帮派成员");
 	if(PlayerInfo[playerid][pRank] < 7) return SendErrorMessage(playerid,"阶级必须在7阶级以上");
	if(FrakCD[PlayerInfo[playerid][pMember]]) return SendErrorMessage(playerid,"你的帮派已经开战过了( 等待1小时 )");
	if(StoreInfo[10][oFreazy] == 1) return SendErrorMessage(playerid,"地盘战被冻结中!");
	new t; gettime(t);
	if(t < 12 || t > 23 ) return SendErrorMessage(playerid,"地盘战时间是 12:00 到 23:00");
	if(zahvat) return SendErrorMessage(playerid,"目前正在抢夺一个地盘.");
	if(CaptureTime)
	{
 		format(YCMDstr,144,"下次抢夺 %i 分钟后",CaptureTime);
		SendErr(playerid,YCMDstr);
		return 1;
	}
	new captureghetto = 0;
	for(new i; i < TOTALGZ; i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && GZInfo[i][ZoneOnBattle] == 0)
		{
			if(GZInfo[i][gzSpawn] == 1) return SendErrorMessage(playerid,"你不能抢夺帮派出生区域.");
			if(PlayerInfo[playerid][pMember] == GZInfo[i][gFrakVlad]) return SendErrorMessage(playerid,"你需要站在地盘里");
			if(FrakCD[GZInfo[i][gFrakVlad]]) return SendErrorMessage(playerid,"已经打过了( 等待1个小时 )");
            if(!IsPlayerInBandOnline(GZInfo[i][gFrakVlad])) return SendErrorMessage(playerid,"你想攻击的地盘目前没有成员在线!");
			switch(PlayerInfo[playerid][pMember])
			{
				case 13: attemptslot = 0;
				case 12: attemptslot = 1;
				case 15: attemptslot = 2;
				case 18: attemptslot = 3;
				case 17: attemptslot = 4;
			}
			if(attemptslot != -1)
			{
				if(CaptureAttempt[attemptslot] > MAX_ATTEMPT_GANG) return SendErrorMessage(playerid,"你的帮派今天已经开战过5次了 (/gtemp)");
				CaptureAttempt[attemptslot] ++;
				format(YCMDstr,128,"{006400}你成功抢夺了敌人帮派的地盘, 使用 %i 次开战机会(一天最多5次)",MAX_ATTEMPT_GANG-CaptureAttempt[attemptslot]);
				SendFamilyMessage(PlayerInfo[playerid][pMember],-1,YCMDstr);
				captureghetto++;
				GZInfo[i][gTime] = 600;
				GZInfo[i][gNapad] = PlayerInfo[playerid][pMember];
				format(YCMDstr, 144, "― [A] %s 和 %s 之间的战争开始了",GFrac(PlayerInfo[playerid][pMember]),GFrac(GZInfo[i][gFrakVlad]));
				ABroadCast(COLOR_YELLOW, YCMDstr, 1);
				format(YCMDstr,256,"{FFFFFF}%s {006400}开始抢夺 {FFFFFF}%s {006400}帮派的领土: {FFFFFF}%s",GFrac(PlayerInfo[playerid][pMember]),GFrac(GZInfo[i][gFrakVlad]),GetPlayerZone(playerid));
				SendBand(-1,YCMDstr);
				format(YCMDstr,128,"{006400}开始抢夺: {FFFFFF}%s[%i]",PlayerInfo[playerid][pName], playerid);
				SendBand(-1,YCMDstr);
				GangZoneFlashForAll(GZInfo[i][gID],GetGangColor(GZInfo[i][gNapad]));
				GZInfo[i][ZoneOnBattle] = 1;
				FrakCD[GZInfo[i][gFrakVlad]] = 60;
    			FrakCD[PlayerInfo[playerid][pMember]] = 60;
   				FracVoina[GZInfo[i][gFrakVlad]] = 1;
				FracVoina[PlayerInfo[playerid][pMember]] = 1;
				CountOnZone[PlayerInfo[playerid][pMember]]++;
				DelPvars();
				GZInfo[i][gzTimer] = SetTimerEx("GzCheck",1000,1,"iii",i,PlayerInfo[playerid][pMember],GZInfo[i][gFrakVlad]);
				zahvat = true;
			}
			break;
		}
	}
	if(captureghetto == 0) return SendErrorMessage(playerid,"你需要站在地盘里");
	return 1;
}
cmd:gtemp(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    attemptslot = -1;
	switch(PlayerInfo[playerid][pMember])
	{
		case 13: attemptslot = 0;
		case 12: attemptslot = 1;
		case 15: attemptslot = 2;
		case 18: attemptslot = 3;
		case 17: attemptslot = 4;
	}

	if(attemptslot == -1) return 1;

 	format(YCMDstr,128,"― 现在已经开战过 %i 次了",MAX_ATTEMPT_GANG-CaptureAttempt[attemptslot]);
    SendClientMessage(playerid,-1,YCMDstr);
	return 1;
}
cmd:opendoor(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
   	if(!IsAArm(playerid)) return true;
	if(PlayerInfo[playerid][pRank] < 3) return SendSyntaxMessage(playerid,"无法使用! (需要 3-阶级以上)");
    if(IsPlayerInRangeOfPoint(playerid, 2.0,1849.32995605,-1714.31005859,5201.54003906))
    {
        MoveObject(door1,1849.32995605-1.25,-1714.31005859,5201.54003906,0.50);
        SendSyntaxMessage(playerid,"1-号门打开了!");
        return 1;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0,1847.31994629,-1722.56994629,5201.54003906))
    {
	    MoveObject(door2,1847.31994629,-1722.56994629-1.25,5201.54003906,0.50);
        SendSyntaxMessage(playerid,"2-号门打开了!");
        return 1;
    }
    else if(IsPlayerInRangeOfPoint(playerid, 2.0,1854.01953125,-1726.27343750,5201.54003906))
    {
        MoveObject(door3,1854.01953125,-1726.27343750-1.25,5201.54003906,0.50);
        SendSyntaxMessage(playerid,"3-号门打开了!");
        return 1;
    }
    else if(IsPlayerInRangeOfPoint(playerid, 2.0,1862.02246094,-1710.91992188,5201.54003906))
    {
        MoveObject(door4,1862.02246094-1.25,-1710.91992188,5201.54003906,0.50);
        SendSyntaxMessage(playerid,"4-号门打开了!");
        return 1;
    }
    else SendErrorMessage(playerid,"附近没有门!");
    return 1;
}
cmd:closedoor(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
   	if(!IsAArm(playerid)) return true;
	if(PlayerInfo[playerid][pRank] < 3) return SendSyntaxMessage(playerid,"无法使用! (需要 3-阶级以上)");
    if(IsPlayerInRangeOfPoint(playerid, 2.0,1849.32995605,-1714.31005859,5201.54003906))
    {
        MoveObject(door1,1849.32995605,-1714.31005859,5201.54003906,0.50);
        SendSyntaxMessage(playerid,"1-号门关闭了!");
        return 1;
    }
    else if(IsPlayerInRangeOfPoint(playerid, 2.0,1847.31994629,-1722.56994629,5201.54003906))
    {
        MoveObject(door2,1847.31994629,-1722.56994629,5201.54003906,0.50);
        SendSyntaxMessage(playerid,"2-号门关闭了!");
	    return 1;
    }
    else if(IsPlayerInRangeOfPoint(playerid, 2.0,1854.01953125,-1726.27343750,5201.54003906))
    {
        MoveObject(door3,1854.01953125,-1726.27343750,5201.54003906,0.50);
        SendSyntaxMessage(playerid,"3-号门关闭了!");
        return 1;
    }
    else if(IsPlayerInRangeOfPoint(playerid, 2.0,1862.02246094,-1710.91992188,5201.54003906))
    {
        MoveObject(door4,1862.02246094,-1710.91992188,5201.54003906,0.50);
        SendSyntaxMessage(playerid,"4-号门关闭了!");
        return 1;
    }
    else SendErrorMessage(playerid,"附近没有门!");
    return 1;
}
cmd:opencells(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(IsPlayerInRangeOfPoint(playerid, 2.0,1852.8329,-1709.5317,5202.5859))
    {
        if(PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pRank] >= 7)
        {
            MoveObject(cell0,1827.80004883+1.25,-1729.19995117,5202.79980469,0.50);
            MoveObject(cell1,1831.00000000+1.25,-1729.19995117,5202.79980469,0.50);
            MoveObject(cell2,1834.19995117+1.25,-1729.19995117,5202.79980469,0.50);
            MoveObject(cell3,1837.40002441+1.25,-1729.19995117,5202.79980469,0.50);
            MoveObject(cell4,1840.59997559+1.25,-1729.19995117,5202.79980469,0.50);
            MoveObject(cell5,1827.80004883+1.25,-1729.19995117,5206.39990234,0.50);
            MoveObject(cell6,1831.00000000+1.25,-1729.19995117,5206.39990234,0.50);
            MoveObject(cell7,1834.19995117+1.25,-1729.19995117,5206.39990234,0.50);
            MoveObject(cell8,1837.40002441+1.25,-1729.19995117,5206.39990234,0.50);
            MoveObject(cell9,1840.59997559+1.25,-1729.19995117,5206.39990234,0.50);
            MoveObject(cell10,1843.80004883+1.25,-1729.19995117,5206.39990234,0.50);
            MoveObject(cell11,1843.80004883+1.25,-1729.19995117,5202.79980469,0.50);
            MoveObject(cell12,1843.80004883+1.25,-1729.19995117,5209.89990234,0.50);
            MoveObject(cell13,1840.59997559+1.25,-1729.19995117,5209.89990234,0.50);
            MoveObject(cell14,1837.40002441+1.25,-1729.19995117,5209.89990234,0.50);
            MoveObject(cell15,1834.19995117+1.25,-1729.19995117,5209.89990234,0.50);
            MoveObject(cell16,1831.00000000+1.25,-1729.19995117,5209.89990234,0.50);
            MoveObject(cell17,1827.80004883+1.25,-1729.19995117,5209.89990234,0.50);
            MoveObject(cell18,1827.80004883+1.25,-1714.30004883,5202.79980469,0.50);
    	    MoveObject(cell19,1831.00000000+1.25,-1714.30004883,5202.79980469,0.50);
	        MoveObject(cell20,1834.19995117+1.25,-1714.30004883,5202.79980469,0.50);
	        MoveObject(cell21,1837.40002441+1.25,-1714.30004883,5202.79980469,0.50);
	        MoveObject(cell22,1840.59997559+1.25,-1714.30004883,5202.79980469,0.50);
	        MoveObject(cell23,1843.80004883+1.25,-1714.30004883,5202.79980469,0.50);
	        MoveObject(cell24,1843.80004883+1.25,-1714.30004883,5206.39990234,0.50);
	        MoveObject(cell25,1840.59997559+1.25,-1714.30004883,5206.39990234,0.50);
	        MoveObject(cell26,1837.40002441+1.25,-1714.30004883,5206.39990234,0.50);
	        MoveObject(cell27,1834.19995117+1.25,-1714.30004883,5206.39990234,0.50);
	        MoveObject(cell28,1831.00000000+1.25,-1714.30004883,5206.39990234,0.50);
	        MoveObject(cell29,1827.80004883+1.25,-1714.30004883,5206.39990234,0.50);
	        MoveObject(cell30,1827.80004883+1.25,-1714.30004883,5209.89990234,0.50);
	        MoveObject(cell31,1831.00000000+1.25,-1714.30004883,5209.89990234,0.50);
	        MoveObject(cell32,1834.19995117+1.25,-1714.30004883,5209.89990234,0.50);
	        MoveObject(cell33,1837.40002441+1.25,-1714.30004883,5209.89990234,0.50);
	        MoveObject(cell34,1840.59997559+1.25,-1714.30004883,5209.89990234,0.50);
	        MoveObject(cell35,1843.80004883+1.25,-1714.30004883,5209.89990234,0.50);
	        SendSyntaxMessage(playerid,"打开了所有监狱门!");
	        return 1;
        }
        else SendErrorMessage(playerid,"无法使用! (需要 7-阶级以上)");
    }
    else SendSyntaxMessage(playerid,"你不在控制台!");
    return 1;
}
cmd:closecells(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(IsPlayerInRangeOfPoint(playerid, 2.0,1852.6150,-1709.7290,5202.5859))
    {
        if(PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pRank] >= 7)
        {
            MoveObject(cell0,1827.80004883,-1729.19995117,5202.79980469,0.50);
            MoveObject(cell1,1831.00000000,-1729.19995117,5202.79980469,0.50);
            MoveObject(cell2,1834.19995117,-1729.19995117,5202.79980469,0.50);
            MoveObject(cell3,1837.40002441,-1729.19995117,5202.79980469,0.50);
            MoveObject(cell4,1840.59997559,-1729.19995117,5202.79980469,0.50);
            MoveObject(cell5,1827.80004883,-1729.19995117,5206.39990234,0.50);
            MoveObject(cell6,1831.00000000,-1729.19995117,5206.39990234,0.50);
            MoveObject(cell7,1834.19995117,-1729.19995117,5206.39990234,0.50);
            MoveObject(cell8,1837.40002441,-1729.19995117,5206.39990234,0.50);
            MoveObject(cell9,1840.59997559,-1729.19995117,5206.39990234,0.50);
            MoveObject(cell10,1843.80004883,-1729.19995117,5206.39990234,0.50);
            MoveObject(cell11,1843.80004883,-1729.19995117,5202.79980469,0.50);
            MoveObject(cell12,1843.80004883,-1729.19995117,5209.89990234,0.50);
            MoveObject(cell13,1840.59997559,-1729.19995117,5209.89990234,0.50);
            MoveObject(cell14,1837.40002441,-1729.19995117,5209.89990234,0.50);
            MoveObject(cell15,1834.19995117,-1729.19995117,5209.89990234,0.50);
            MoveObject(cell16,1831.00000000,-1729.19995117,5209.89990234,0.50);
            MoveObject(cell17,1827.80004883,-1729.19995117,5209.89990234,0.50);
            MoveObject(cell18,1827.80004883,-1714.30004883,5202.79980469,0.50);
	        MoveObject(cell19,1831.00000000,-1714.30004883,5202.79980469,0.50);
	        MoveObject(cell20,1834.19995117,-1714.30004883,5202.79980469,0.50);
	        MoveObject(cell21,1837.40002441,-1714.30004883,5202.79980469,0.50);
	        MoveObject(cell22,1840.59997559,-1714.30004883,5202.79980469,0.50);
	        MoveObject(cell23,1843.80004883,-1714.30004883,5202.79980469,0.50);
	        MoveObject(cell24,1843.80004883,-1714.30004883,5206.39990234,0.50);
	        MoveObject(cell25,1840.59997559,-1714.30004883,5206.39990234,0.50);
	        MoveObject(cell26,1837.40002441,-1714.30004883,5206.39990234,0.50);
	        MoveObject(cell27,1834.19995117,-1714.30004883,5206.39990234,0.50);
	        MoveObject(cell28,1831.00000000,-1714.30004883,5206.39990234,0.50);
	        MoveObject(cell29,1827.80004883,-1714.30004883,5206.39990234,0.50);
	        MoveObject(cell30,1827.80004883,-1714.30004883,5209.89990234,0.50);
	        MoveObject(cell31,1831.00000000,-1714.30004883,5209.89990234,0.50);
	        MoveObject(cell32,1834.19995117,-1714.30004883,5209.89990234,0.50);
	        MoveObject(cell33,1837.40002441,-1714.30004883,5209.89990234,0.50);
	        MoveObject(cell34,1840.59997559,-1714.30004883,5209.89990234,0.50);
	        MoveObject(cell35,1843.80004883,-1714.30004883,5209.89990234,0.50);
	        SendSyntaxMessage(playerid,"关闭了所有监狱门!");
            return 1;
        }
        else SendSyntaxMessage(playerid,"无法使用! (需要 7-阶级以上)");
	}
	else SendSyntaxMessage(playerid,"你不在控制台!");
    return 1;
}
cmd:smoke(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pSiga] < 1) return SendErrorMessage(playerid,"你没有香烟.");
    ShowPlayerDialog(playerid, 8533, DIALOG_STYLE_LIST, "{1E90FF}香烟", "点燃一支烟\n查看烟盒", "选择", "退出");
	return true;
}
cmd:smokeq(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pSiga] < 1) return SendErrorMessage(playerid,"你没有香烟.");
	new marka[15];
	PlayerInfo[playerid][pSiga]--;
	SetPVarInt(playerid, "SMOKE", gettime()+75);
	SetPlayerAttachedObject(playerid, 3, 19625, 6, 0.103999,0.022999,0.018999,-37.600025,24.899974,55.599994,1.000000,1.000000,1.000000);
	SendSyntaxMessage(playerid,"抽烟, 按下 {FFCC00}'ALT'.");
	switch(PlayerInfo[playerid][pSgf])
	{
	    case 1: marka = "中华";
	    case 2: marka = "玉溪";
	    case 3: marka = "软云";
	    case 4: marka = "大重九";
	    case 5: marka = "万宝路";
	}
	format(YCMDstr, sizeof(YCMDstr), "%s 点燃了一支 %s", Name(playerid), marka);
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
	return 1;
}
cmd:smokeinfo(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new marka[15];
    switch(PlayerInfo[playerid][pSgf])
	{
	    case 1: marka = "中华";
	    case 2: marka = "玉溪";
	    case 3: marka = "软云";
	    case 4: marka = "大重九";
	    case 5: marka = "万宝路";
		default: return SendErrorMessage(playerid,"你没有香烟");
	}
	format(YCMDstr, sizeof(YCMDstr), "{FFFFFF}香烟: {FF6F00}%i {FFFFFF}根\n牌子: {FF6F00}%s", PlayerInfo[playerid][pSiga], marka);
	ShowPlayerDialog(playerid, 0000, 0, "{1E90FF}查看烟盒",YCMDstr, "关闭","");
    format(YCMDstr, sizeof(YCMDstr), "%s 打开 %s 烟盒看了看", Name(playerid), marka);
    ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
	return 1;
}
cmd:skate(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pSkate] == 0) return SendErrorMessage(playerid,"你没有滑板!");
    if(!IsPlayerInAnyVehicle(playerid))
    {
        ApplyAnimation(playerid, "CARRY","null",0,0,0,0,0,0,0);
        ApplyAnimation(playerid, "SKATE","null",0,0,0,0,0,0,0);
        ApplyAnimation(playerid, "CARRY","crry_prtial",4.0,0,0,0,0,0);
        SetPlayerArmedWeapon(playerid,0);
        if(!InfoSkate[playerid][sActive])
        {
            InfoSkate[playerid][sActive] = true;
            DestroyObject(InfoSkate[playerid][sSkate]);
            RemovePlayerAttachedObject(playerid,INDEX_SKATE);
            #if TYPE_SKATE == 0
            SetPlayerAttachedObject(playerid,INDEX_SKATE,19878,6,-0.055999,0.013000,0.000000,-84.099983,0.000000,-106.099998,1.000000,1.000000,1.000000);
            #else
            SetPlayerAttachedObject(playerid,INDEX_SKATE,19878,1,0.055999,-0.173999,-0.007000,-95.999893,-1.600010,24.099992,1.000000,1.000000,1.000000);
            #endif
            PlayerPlaySound(playerid,21000,0,0,0);
            SendSyntaxMessage(playerid, "你拿出了滑板.");
        }
        else
        {
            InfoSkate[playerid][sActive] = false;
            DestroyObject(InfoSkate[playerid][sSkate]);
            RemovePlayerAttachedObject(playerid,INDEX_SKATE);
            PlayerPlaySound(playerid,21000,0,0,0);
            SendSyntaxMessage(playerid, "你移除了滑板.");
        }
    }
    else
    SendErrorMessage(playerid,"不能在车里使用! ");
    return true;
}
cmd:vipiska(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pPhousekey2] == 799) return SendErrorMessage(playerid,"你没有租其他房子");
	PlayerInfo[playerid][pPhousekey2] = 799;
	for ( new i = 0;  i < 5; i++ ) TextDrawShowForPlayer(playerid, TDInfo[i]);
	SetTimerEx("InfoTime", 2000, false, "d", playerid);
	return true;
}
cmd:freazy(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pAdministration228] < 10 || dostup[playerid] == 0) return true;
    {
        format(YCMDstr, 512, "{B4B5B7}解除冻结/冻结帮派地盘战,请点击按钮.");
        if(PlayerInfo[playerid][pAdministration228] >= 10) ShowPlayerDialog(playerid,1406,DIALOG_STYLE_MSGBOX,"{1E90FF}帮派地盘战.",YCMDstr,"解除","冻结");
    }
	return true;
}
cmd:close(playerid, params[])
{
   if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
   if(!IsAGang(playerid) && !IsAMafia(playerid)) return SendErrorMessage(playerid,"你不是帮派或者黑手党");
   if(PlayerInfo[playerid][pRank] < 9) return SendErrorMessage(playerid,"你需要9阶级以上");
   format(YCMDstr, 512, "{FFFFFF}这个仓库隶属于帮派 {00CC00}格罗夫");
   if(PlayerInfo[playerid][pMember] == 15) ShowPlayerDialog(playerid,1401,DIALOG_STYLE_MSGBOX,"{1E90FF}仓库管理.",YCMDstr,"打开","关闭");
   format(YCMDstr, 512, "{FFFFFF}这个仓库隶属于帮派 {CC00FF}巴拉斯");
   if(PlayerInfo[playerid][pMember] == 12) ShowPlayerDialog(playerid,1402,DIALOG_STYLE_MSGBOX,"{1E90FF}仓库管理.",YCMDstr,"打开","关闭");
   format(YCMDstr, 512, "{FFFFFF}这个仓库隶属于帮派 {00F5FF}阿兹特克");
   if(PlayerInfo[playerid][pMember] == 17) ShowPlayerDialog(playerid,1403,DIALOG_STYLE_MSGBOX,"{1E90FF}仓库管理.",YCMDstr,"打开","关闭");
   format(YCMDstr, 512, "{FFFFFF}这个仓库隶属于帮派 {ffcd00}瓦戈斯");
   if(PlayerInfo[playerid][pMember] == 13) ShowPlayerDialog(playerid,1404,DIALOG_STYLE_MSGBOX,"{1E90FF}仓库管理.",YCMDstr,"打开","关闭");
   format(YCMDstr, 512, "{FFFFFF}这个仓库隶属于帮派 {6666ff}14K");
   if(PlayerInfo[playerid][pMember] == 18) ShowPlayerDialog(playerid,1405,DIALOG_STYLE_MSGBOX,"{1E90FF}仓库管理.",YCMDstr,"打开","关闭");
   format(YCMDstr, 512, "{FFFFFF}这个仓库隶属于黑手党 {993366}La Cosa Nostra");
   if(PlayerInfo[playerid][pMember] == 5) ShowPlayerDialog(playerid,1407,DIALOG_STYLE_MSGBOX,"{1E90FF}仓库管理.",YCMDstr,"打开","关闭");
   format(YCMDstr, 512, "{FFFFFF}这个仓库隶属于黑手党 {bb0000}山口组");
   if(PlayerInfo[playerid][pMember] == 6) ShowPlayerDialog(playerid,1409,DIALOG_STYLE_MSGBOX,"{1E90FF}仓库管理.",YCMDstr,"打开","关闭");
   format(YCMDstr, 512, "{FFFFFF}这个仓库隶属于黑手党 {007575}俄罗斯黑手党");
   if(PlayerInfo[playerid][pMember] == 14) ShowPlayerDialog(playerid,1408,DIALOG_STYLE_MSGBOX,"{1E90FF}仓库管理.",YCMDstr,"打开","关闭");
   return true;
}
cmd:sellyourhome(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pPhousekey] == 799) return SendErrorMessage(playerid,"你没有房子");
    SendServerMessage(playerid, "警告: 要出售/交换您你房屋，你需要在家.");
    new bouse = PlayerInfo[playerid][pPhousekey];
    if(bouse == 999 || strcmp(Name(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == -1) return true;
   	if(!PlayerToPoint(20, playerid,HouseInfo[bouse][hExitx], HouseInfo[bouse][hExity], HouseInfo[bouse][hExitz])) return true;
    if(sscanf(params, "ud", params[0],params[1])) return SendErrorMessage(playerid,"帮助: {4080FF}/sellyourhome [id] [价格]");
    if(params[1] < 50000 || params[0] > 5000000) return SendErrorMessage(playerid,"价格限制 50.000$ - 5.000.000$.");
    if(!IsPlayerConnected(params[0])) return true;
    if(!ProxDetectorS(9.0, playerid, params[0])) return SendErrorMessage(playerid,"双方距离太远了");
    if(params[0] == playerid) return SendErrorMessage(playerid,"目标不能为自己!");
    format(YCMDstr, sizeof(YCMDstr), "― 你想出售房子给 %s ,价格是: %d $.",Name(params[0]),params[1]);
    SendClientMessage(playerid, -1, YCMDstr);
    format(YCMDstr, sizeof(YCMDstr), "― %s 想出售房子给你,价格是: %d $. {4080FF}( 输入: /accept house,达成协议 ).",Name(playerid),params[1]);
    SendClientMessage(params[0], -1, YCMDstr);
    format(YCMDstr, sizeof(YCMDstr), "%s 想要将房子出售给 %s.",Name(playerid) ,Name(params[0]));
    ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    HouseOffer[params[0]] = playerid;
    HousePrice[params[0]] = params[1];
	return true;
}
cmd:teamlist(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    TeamList(playerid);
    return true;
}
cmd:vpanel(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    {
        if(PlayerInfo[playerid][pDonateRank] < 1) return SendErrorMessage(playerid,"你不是 {FFa500}VIP {FFFFFF}账户");
		format(YCMDstr,sizeof(YCMDstr),"{FFFFFF}1. 开/关电话\n2. 在线管理\n3. 在线VIP玩家");
		ShowPlayerDialog(playerid,1957,DIALOG_STYLE_LIST,"{1E90FF}VIP 面板",YCMDstr,"选择","返回");
    }
    return true;
}
cmd:fstyle(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(sscanf(params, "d",params[0])) return SendServerMessage(playerid,"帮助: {4080FF} /fstyle [0-3]");
    if(params[0] < 0 || params[0] > 3) return SendServerMessage(playerid,"帮助: {4080FF} /fstyle [0-3]");
    switch(params[0])
    {
    case 0: SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
    case 1: { if(PlayerInfo[playerid][pSkillT] <1) return SendErrorMessage(playerid,"你没有学习这种战斗姿势."); SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING); }
    case 2: { if(PlayerInfo[playerid][pSkillT] <2) return SendErrorMessage(playerid,"你没有学习这种战斗姿势."); SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU); }
    case 3: { if(PlayerInfo[playerid][pSkillT] <3) return SendErrorMessage(playerid,"你没有学习这种战斗姿势."); SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD); }
    }
    ApplyAnimation( playerid, "Freeweights", "gym_free_celebrate", 4.1, 0, 0, 0, 0, 0 );
    SendSyntaxMessage(playerid,"你切换了战斗姿势");
    return 1;
}
cmd:fight(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(GetPVarInt(playerid,"FormaSport")==0) return SendErrorMessage(playerid,"你需要去体育馆.{FFFFFF} ( /gps - 娱乐 - 体育馆)");
	if(PlayerInfo[playerid][pJob]== 9) return SendErrorMessage(playerid,"教练不能使用");
    if(sscanf(params, "ud",params[0],params[1])) return SendServerMessage(playerid,"帮助: {4080FF}/fight [id] [金额]");
    if(params[0] == INVALID_PLAYER_ID) return SendErrorMessage(playerid,"找不到玩家!");
    if(PlayerInfo[params[0]][pJob] == 9) return SendErrorMessage(playerid,"教练不能使用");
    if(GetPVarInt(params[0],"FormaSport")==0) return SendErrorMessage(playerid,"该玩家没有运动.");
    if(params[1] < 1000 || params[1] > 20000) return SendErrorMessage(playerid,"金额限制 $1000 - $20000.");
    if(PlayerInfo[playerid][pCash]<params[1]) return SendErrorMessage(playerid,"对方没有足够的钱.");
    fightID[playerid]=params[0];
    fightID[params[0]]=playerid;
    fightSID[playerid]=params[0];
    fightSID[params[0]]=playerid;
    fightM=params[1];
    format(YCMDstr, sizeof(YCMDstr), "―  你想与 %s 打擂台, 赌注: $%d.",Name(params[0]),params[1]);
	SendClientMessage(playerid, -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "―  %s 想与你打擂台, 赌注: $%d. {FFFFFF}( 按下 'H' 同意 | 按下 'N' 拒绝 )",Name(playerid),params[1]);
	SendClientMessage(params[0], -1, YCMDstr);
    return 1;
}
cmd:startfight(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(GetPVarInt(playerid,"FormaSport")==0) return SendErrorMessage(playerid,"你需要去体育馆.{FFFFFF} ( /gps - 娱乐 - 体育馆)");
	if(PlayerInfo[playerid][pJob] != 9) return SendErrorMessage(playerid,"你不是体育馆的教练.");
	if(TotalFight==0) return SendErrorMessage(playerid,"没有人申请打擂台");
	if(GoFight==1) return SendErrorMessage(playerid,"已经有人在打擂台了");
	new id1 = GFID1, id2 = GFID2;
	SetPlayerFacingAngle(id1,131.7461);
	Q_SetPlayerPos(id1,762.6210,2.1879,1001.5942);
	SetPlayerFacingAngle(id2,181.4750);
	Q_SetPlayerPos(id2,759.3476,-1.3171,1001.5942);
    SetPlayerHealthAC(id1,100); SetPlayerHealthAC(id2,100);
	SendServerMessage(id1,"战斗准备 5秒."); SendServerMessage(id2,"战斗准备 5秒.");
	format(YCMDstr, sizeof(YCMDstr), "―  你的工资增加了: $%d.", fightM / 10);
	SendClientMessage(playerid, -1, YCMDstr);
	PlayerInfo[playerid][pPayCheck]+= fightM / 10; GoFight=1;
	return 1;

}
cmd:dropcar(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pJob] != 8) return SendErrorMessage(playerid,"你不是偷车贼!");
    if(VehiclePlayer(GetPlayerVehicleID(playerid)) == -1) return SendErrorMessage(playerid,"这辆车没有车主.");
    {
        if(PlayerInfo[playerid][pAutoTime] == 0)
        {
            new newcar = GetPlayerVehicleID(playerid);
			if(!IsPlayerInAnyVehicle(playerid)) return  SendErrorMessage(playerid,"你不在车里!");
			if(newcar >= LicCar[0] && newcar <= LicCar[10] || newcar >= lsnewscar[0] && newcar <= lsnewscar[5]
			    || newcar >= ruscar[0] && newcar <= ruscar[14] || newcar >= lvpdcar[0] && newcar <= lvpdcar[16]
				|| newcar >= lcncar[0] && newcar <= lcncar[14] || newcar >= yakcar[0] && newcar <= yakcar[11]
				|| newcar >= govcar[0] && newcar <= govcar[4] || newcar >= matsfura && newcar <= matsfura
				|| newcar >= fbicar[0] && newcar <= fbicar[11] || newcar >= SapdCar[0] && newcar <= SapdCar[34]
				|| newcar >= medicsls[0] && newcar <= medicsls[8] || newcar >= sfpdcar[0] && newcar <= sfpdcar[27]
				|| newcar >= matsfuragrove && newcar <= matsfuragrove || newcar >= matsfuraactek && newcar <= matsfuraactek
				|| newcar >= matsfuravagos && newcar <= matsfuravagos || newcar >= matslcn && newcar <= matslcn
				|| newcar >= matsrm && newcar <= matsrm || newcar >= matsyakuza && newcar <= matsyakuza
				|| newcar >= matsfurarifa && newcar <= matsfurarifa || newcar >= ballascar[0] && newcar <= ballascar[6]
				|| newcar >= grovecar[0] && newcar <= grovecar[6] || newcar >= coronoscar[0] && newcar <= coronoscar[6]
				|| newcar >= vagoscar[0] && newcar <= vagoscar[6] || newcar >= rifacar[0] && newcar <= rifacar[7]
				|| newcar >= gunscar[0] && newcar <= gunscar[1] || newcar >= armycarsf[0] && newcar <= armycarsf[26]
				|| newcar >= armcar[0] && newcar <= armcar[38] || newcar >= armycarsf[0] && newcar <= armycarsf[26]) return SendErrorMessage(playerid,"你不能偷这辆车!");
			SetPlayerCheckpoint(playerid,-1549.0081,122.8916,3.1145,8);
		 	SendServerMessage(playerid, "交货地点标在地图上.");
        }
        else SendErrorMessage(playerid,"请等待,冷却中!");
    }
    return true;
}
cmd:jackcar(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pJob] != 8) return SendErrorMessage(playerid,"你不是偷车贼!");
    if(PlayerInfo[playerid][pOtmbI4ka] == 0) return SendErrorMessage(playerid,"你没有万能钥匙,可以去 24/7 购买.");
    if(jackcar[playerid] > 0) return  SendErrorMessage(playerid,"你已经在偷车了!");
    if(IsPlayerInAnyVehicle(playerid)) return  SendErrorMessage(playerid,"不能在车上使用!");
	new nearveh = GetNearestVehicle(playerid);
	new carid;
	carid = nearveh;
	new Float:cx,Float:cy,Float:cz;
	GetVehiclePos(carid, cx, cy, cz);
	if(!PlayerToPoint(4.0, playerid, cx, cy, cz)) return true;
    {


        jackcar[playerid] = 10;
        TogglePlayerControllable(playerid, 0);
        ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_01",4.1,1,0,0,0,0,0);
        if(IsACop(playerid)) format(YCMDstr, sizeof(YCMDstr), "偷车贼 %s 试图破解车锁.", Name(playerid));
        else if(PlayerInfo[playerid][pJob] == 8) format(YCMDstr, sizeof(YCMDstr), "陌生人试图破解车锁.", Name(playerid));
        ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    }
    return 1;
}
cmd:tskill(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pJob] != 7) return SendErrorMessage(playerid,"你不是卡车司机!");
	if(PlayerInfo[playerid][pTruckSkill] <= 10000)
	{
		format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: {98FB98}初学者\n{BDB76B}经验: {98FB98}%d/10000",PlayerInfo[playerid][pTruckSkill]);
		ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 卡车司机的技能 <",YCMDstr,"关闭","");
	}
	else if(PlayerInfo[playerid][pTruckSkill] <= 50000)
	{
		format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: 老司机\n{BDB76B}经验: {98FB98}%d/50000",PlayerInfo[playerid][pTruckSkill]);
		ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 卡车司机的技能 <",YCMDstr,"关闭","");
	}
	else if(PlayerInfo[playerid][pTruckSkill] >= 50000)
	{
		format(YCMDstr, sizeof(YCMDstr),"{BDB76B}你的卡车司机等级: 卡车司机之王\n{BDB76B}经验: {98FB98}最大经验");
		ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 卡车司机的技能 <",YCMDstr,"关闭","");
	}
	return true;
}
cmd:askill(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pJob] != 8) return SendErrorMessage(playerid,"你不是偷车贼!");
	new nado, skilles;
	{
        switch(PlayerInfo[playerid][pAutoSkill])
        {
	        case 0..19: skilles = 1;
	        case 20..39: skilles = 2;
			case 40..59: skilles = 3;
			case 60..79: skilles = 4;
			case 80..120: SendServerMessage(playerid,"你的职业已经达到顶峰.");
        }
	    switch(skilles)
        {
            case 1: nado = 20;
            case 2: nado = 40;
            case 3: nado = 60;
            case 4: nado = 80;
        }
	    format(YCMDstr, sizeof(YCMDstr), "{BDB76B}你的技能: {98FB98}%d. {BDB76B}要提升等级,你还需要偷 {98FB98}%d 辆车.", skilles, nado - PlayerInfo[playerid][pAutoSkill]);
	    ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 偷车贼的技能 <",YCMDstr,"关闭","");
    }
    return true;
}

cmd:changeskin(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMember] == 0) return SendErrorMessage(playerid,"你必须在组织中!");
    if(sscanf(params, "d", params[0])) return SendServerMessage(playerid,"使用: {4080FF}/changeskin [id]");
	if(PlayerInfo[playerid][pMember] == 0) return SendErrorMessage(playerid,"你必须在组织中!");
	if(PlayerInfo[playerid][pMember] != PlayerInfo[params[0]][pMember]) return SendErrorMessage(playerid,"对方不在你的组织中!");
	if(PlayerInfo[playerid][pLeader] < 1) return SendErrorMessage(playerid,"你必须是领导人!");
    {
        SetPVarInt(playerid,"SKIN",params[0]);
        ShowPlayerDialog(playerid, 2351, DIALOG_STYLE_LIST,"{1E90FF}分配皮肤", "皮肤 No.1\n皮肤 No.2\n皮肤 No.3\n皮肤 No.4\n皮肤 No.5\n皮肤 No.6\n皮肤 No.7\n皮肤 No.8","选择","退出");
        return true;
    }
}

cmd:seatbelt(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) return SendErrorMessage(playerid,"只能上车使用");
    if(PlayerRemen[playerid] == 1)
    {
        PlayerRemen[playerid] = 0;
        new ftext[32];
        if(PlayerInfo[playerid][pSex] == 1) { ftext = "男性"; }
        else if(PlayerInfo[playerid][pSex] == 2) { ftext = "女性"; }
        format(YCMDstr, sizeof(YCMDstr), "%s %s 已系安全带.", PlayerInfo[playerid][pName] , ftext);
        ProxDetector(15.0, playerid, YCMDstr, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
        return 1;
    }
    else if(PlayerRemen[playerid] == 0)
    {
        PlayerRemen[playerid] = 1;
		new ftext[32];
		if(PlayerInfo[playerid][pSex] == 1) { ftext = "男性"; }
		else if(PlayerInfo[playerid][pSex] == 2) { ftext = "女性"; }
		format(YCMDstr, sizeof(YCMDstr), " %s %s 未系安全带.", PlayerInfo[playerid][pName] , ftext);
		ProxDetector(15.0, playerid, YCMDstr, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
		return 1;
	}
	return true;
}
cmd:radar(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(!IsACop(playerid))return SendErrorMessage(playerid,"你不是警察/FBI");
    if(PlayerInfo[playerid][pRank] < 3) return SendErrorMessage(playerid,"你的阶级必须大于 3!");
    {
        if(PlayerInfo[playerid][pRadar] >= 1)
        {
            if(PlayerToPoint(10,playerid,X777[playerid],Y777[playerid],Z777[playerid]))
            {
                SendErrorMessage(playerid,"你移除雷达");
				X777[playerid] = 0; Y777[playerid] = 0; Z777[playerid]=0;
				PlayerInfo[playerid][pRadar] = 0;
				DisablePlayerCheckpoint(playerid);
				DestroyDynamicObject(objectradar[playerid]);
            }
            else
            {
				SetPlayerCheckpoint(playerid, X777[playerid],Y777[playerid],Z777[playerid],6);
				SendErrorMessage(playerid,"您的雷达已标记在地图上 ( /gps - 关闭 )");
            }
            return true;
        }
        GetPlayerPos(playerid,X777[playerid],Y777[playerid],Z777[playerid]);
        ShowPlayerDialog(playerid,30067,DIALOG_STYLE_INPUT,"{1E90FF}雷达","输入速度限制:","OK","");
    }
    return 1;
}
cmd:loadgruz(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pJob] != 7) return SendErrorMessage(playerid,"你不是卡车司机!");
    if(GetPVarInt(playerid,"dalnaboirab") > 0) return SendErrorMessage(playerid, "已在地图上标记的位置!");
    new vehicleid = GetPlayerVehicleID(playerid);
	if(!IsTrailerAttachedToVehicle(vehicleid))
	{
	    SendErrorMessage(playerid,"你没有挂车!去地图标注地点.");
	    SendErrorMessage(playerid,"然后输入 {4080FF}/loadgruz");
	    SetPlayerCheckpoint(playerid, 896.7841,-1218.6033,16.9766,5.0);
        return true;
	}
	new rands = random(sizeof(RandomGruzZag));
	SetPlayerCheckpoint(playerid, RandomGruzZag[rands][0], RandomGruzZag[rands][1], RandomGruzZag[rands][2], 5);
 	SendServerMessage(playerid,"位置标注在地图上了.");
 	SetPVarInt(playerid,"dalnaboirab",1);
	return 1;
}
cmd:fishing(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pNazivka] < 1) return SendErrorMessage(playerid,"你的诱饵用完了!");
    if(GetPVarInt(playerid,"Fishing") != 0 ) return SendErrorMessage(playerid,"你已经开始钓鱼");
    if(PlayerInfo[playerid][pFishLic] == 0) return SendErrorMessage(playerid,"你没有钓鱼执照 ( /gps - 公共场所 - 执照中心 )");
	if(PlayerInfo[playerid][pUdotka] == 0) return SendErrorMessage(playerid,"你没有鱼竿,在码头附近可以购买.");
	if(!IsPlayerInRangeOfPoint(playerid, 150.0,349.8885,-2056.3311,7.8359)) return SendErrorMessage(playerid,"你不在码头");
	{
	    if(Fishing[playerid] == 0)
	    {
            TogglePlayerControllable(playerid, 0);
            ApplyAnimation(playerid,"SWORD","sword_block",50.0,0,1,0,1,1);
            Fishing[playerid] = 1;
            SetTimerEx("FishTimer", 10000, false, "i", playerid);
            SetTimerEx("AnimFixer", 1000, false, "i", playerid);
            SendServerMessage(playerid,"你开始钓鱼了! ( 停止钓鱼 /endfish )");
            GameTextForPlayer(playerid,"~w~fishing ~g~started", 49000, 3);
            PlayerInfo[playerid][pNazivka]--;
	    }
	}
	return 1;
}
cmd:endfish(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(Fishing[playerid] == 1)
	{
        Fishing[playerid] = 0;
        TogglePlayerControllable(playerid, 1);
        ApplyAnimation(playerid, "CARRY", "crry_prtial", 2.0, 0, 0, 0, 0, 0);
        SendErrorMessage(playerid," 钓鱼停了");
        GameTextForPlayer(playerid,"~w~fishing ~r~stopped", 3000, 3);
	}
	else return SendErrorMessage(playerid," 你没有开始钓鱼");
	return true;
}
cmd:trailer(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525)return SendErrorMessage(playerid,"你必须在修车工的车里!");
    if(GetPlayerState(playerid)!=2)return SendErrorMessage(playerid,"你需要开车!");
    new Float:pX,Float:pY,Float:pZ;
	GetPlayerPos(playerid,pX,pY,pZ);
	new Float:vX,Float:vY,Float:vZ;
	new Found=0;
	new vid=0;
	while((vid<MAX_VEHICLES)&&(!Found))
	{
		vid++;
		GetVehiclePos(vid,vX,vY,vZ);
		if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
		{
			Found=1;
			if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
			else AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
		}
	}
	if(!Found) SendErrorMessage(playerid," 附近没有车");
    return true;
}
cmd:untrailer(playerid, params[])
{
    if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525)return SendErrorMessage(playerid,"你必须在修车工的车里!");
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    new vehplid=GetPlayerVehicleID(playerid);
	DetachTrailerFromVehicle(vehplid);
	SendSyntaxMessage(playerid, "你放下了这辆车");
	return true;
}
cmd:caska(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(!IsAArm(playerid)) return SendErrorMessage(playerid,"您无法使用此命令!");
    {
        SetPlayerAttachedObject(playerid,3 , 19101, 2,0.13,0.013,0.00);
        SetPlayerColor(playerid, 0x00000000);
        SendSyntaxMessage(playerid,"你戴上了军用头盔");
        ashlem[playerid] = 1;
    }
    return 1;
}
cmd:caskaoff(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(!IsAArm(playerid)) return SendErrorMessage(playerid,"您无法使用此命令!");
    {
        RemovePlayerAttachedObject(playerid,3);
        if(ashlem[playerid] == 0)
        {
        SendErrorMessage(playerid,"你还没有戴上头盔");
        return 1;
        }
        SendErrorMessage(playerid,"你脱下了军用头盔");
        RemovePlayerAttachedObject(playerid,3);
        ashlem[playerid] = 0;
        SetPlayerToTeamColor(playerid);
    }
    return true;
}
cmd:mtp(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pAdministration228] < 3 || dostup[playerid] == 0) return true;
    Q_SetPlayerPos(playerid,593.4829, -2304.8823, 985.8533);
    return true;
}
cmd:hpanel(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pPhousekey] == 799) return SendErrorMessage(playerid,"你没有家");
	ShowPlayerDialog(playerid, 228, DIALOG_STYLE_LIST, "{1E90FF}房屋管理", "1. 门锁 {FF0000}[关闭{FFFFFF} | {00FF00}开启]\n2. 房子出租\n3. GPS标注房屋\n4. 卖房子\n5. 传送车辆到家门口\n6. 更改内饰\n7. 更改户型\n8. 邀请一个人搬进房屋\n9. 踢出一个人\n10. 保险柜", "选择", "返回");
	return true;
}
cmd:bail(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/bail {B4B5B7}[id]");
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, 1604.1353,-1654.4275,2107.0811)) return SendErrorMessage(playerid,"你不在Los Santos的警察局.");
	if(PlayerInfo[params[0]][pJailed] != 1) return SendErrorMessage(playerid,"该玩家不在监狱!");
	if(PlayerInfo[playerid][pCash] < 10000) return SendErrorMessage(playerid,"你没有 10.000$.");
	if(!IsPlayerConnected(params[0])) return true;
	SendServerMessage(playerid, "囚犯被拉出监狱");
	format(YCMDstr, sizeof(YCMDstr), "― 玩家: %s 将你保释出来了,你自由了!",Name(playerid));
	SendClientMessage(params[0], -1, YCMDstr);
	PlayerInfo[params[0]][pJailTime] = 0;
	PlayerInfo[params[0]][pJailed] = 0;
	TogglePlayerControllable(params[0], 1);
	PlayerInfo[params[0]][pBolnicad] = 0;
	SpawnPlayer(params[0]);
	PlayerInfo[playerid][pCash] -= 10000;
	return true;
}
cmd:useeat(playerid)
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pBomjj] == 0) return SendErrorMessage(playerid,"你没有食物");
    new Float:health;
    GetPlayerHealth(playerid,health);
    if(health < 100) SetPlayerHealthAC(playerid, health+30.0);
	PlayerInfo[playerid][pBomjj] = 0;
	//PlayerInfo[playerid][pGolod] += 50;
	//if(PlayerInfo[playerid][pGolod] > 100) PlayerInfo[playerid][pGolod] = 100;
	ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
	if(IsPlayerAttachedObjectSlotUsed(playerid,5)) RemovePlayerAttachedObject(playerid,5);
	SetPVarInt(playerid,"respeat",0);
	/*GameTextForPlayer(playerid, "~g~+30 hp / +50 satiety", 1000, 1);
    format(YCMDstr,sizeof(YCMDstr), "― Сытость пополнена до: %d", PlayerInfo[playerid][pGolod]);*/
    //SendClientMessage(playerid, -1, YCMDstr);
    return 1;
}
cmd:pgun(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
	new f = MAX_OBJ+1;
	forEx(a, MAX_OBJ) { if(IsPlayerInRangeOfPoint(playerid, 1.0, dGunData[a][ObjPos][0], dGunData[a][ObjPos][1], dGunData[a][ObjPos][2])) { f = a; break; } }
	if(f > MAX_OBJ) return SendErrorMessage(playerid,"附近没有武器");
	DestroyDynamicObject(dGunData[f][ObjID]);
	GiveWeapon(playerid, dGunData[f][ObjData][0], dGunData[f][ObjData][1]);
	dGunData[f][ObjPos][0] = 0.0;
	dGunData[f][ObjPos][1] = 0.0;
	dGunData[f][ObjPos][2] = 0.0;
	dGunData[f][ObjID] = -1;
	dGunData[f][ObjData][1] = 0;
	new buffer[50];
	format(buffer, sizeof(buffer), "― 你捡起了 %s", GunNames[dGunData[f][ObjData][0]]);
	SendClientMessage(playerid, -1, buffer);
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
	return 1;
}
cmd:dgun(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
	new GunID = GetPlayerWeapon(playerid);
	new GunAmmo = GetPlayerAmmo(playerid);
	if(GunID > 0 && GunAmmo != 0)
	{
		new f = MAX_OBJ+1;
		forEx(a, MAX_OBJ)
		{
			if(dGunData[a][ObjPos][0] == 0.0)
			{
				f = a;
				break;
			}
		}
		if(f > MAX_OBJ) return SendErrorMessage(playerid,"你不能扔掉武器。 超出最大限制");
		RemovePlayerWeaponn(playerid, GunID);
		dGunData[f][ObjData][0] = GunID;
		dGunData[f][ObjData][1] = GunAmmo;
		GetPlayerPos(playerid, dGunData[f][ObjPos][0], dGunData[f][ObjPos][1], dGunData[f][ObjPos][2]);
		dGunData[f][ObjID] = CreateDynamicObject(GunObjects[GunID], dGunData[f][ObjPos][0], dGunData[f][ObjPos][1], dGunData[f][ObjPos][2]-1, 93.7, 120.0, 120.0);
		new buffer[50];
		format(buffer, sizeof(buffer), "― 你扔掉了 %s", GunNames[dGunData[f][ObjData][0]]);
		SendClientMessage(playerid, -1, buffer);
	}
	return 1;
}
cmd:brace(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pAdministration228] < 5) return SendErrorMessage(playerid," 你没有权限!");
    raceActionboat = 1;
    racetimeboat = 1200;
	SendClientMessageToAll(0x73B461FF,"警告! 水上比赛开始于5分钟后. ( /gps > [8] > [3] )");
    return 1;
}
cmd:refill(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!GetPVarInt(playerid, "zapravka"))return SendErrorMessage(playerid,"你没有合同!");
    if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525)return SendErrorMessage(playerid,"你需要驾驶拖车!");
    if(sscanf(params, "dd",params[0]))return SendErrorMessage(playerid,"帮助: /refill [id]");
    if(GetPVarInt(params[0],"refillcar"))return SendErrorMessage(playerid,"你已经提出给玩家加油!");
    if(PlayerInfo[playerid][pCash] < params[0]) return SendErrorMessage(playerid,"对方没有足够的钱!");
    if(!ProxDetectorS(10.0, playerid, params[0]))return SendErrorMessage(playerid,"距离太远了!");
	SetPVarInt(params[0], "refillcar", playerid+1);
    new str[150], price = (BizzInfo[GetPVarInt(playerid, "zapravka")][bTill]/3)*300;
    format(str, sizeof str,"{8FD660}%s {ffffff}提供给你车加油\n - 价格: %d $\n\n{BABABA}你接受吗?",Name(playerid),price);
    ShowPlayerDialog(params[0],1673,DIALOG_STYLE_MSGBOX,"{1E90FF}确认е",str,"接受","退出");
    format(str,sizeof(str),"― 你给 %s 提供加油服务,价格: %d $",Name(params[0]),price);
	SendClientMessage(playerid,-1,str);
    return 1;
}
cmd:repair(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525)return SendErrorMessage(playerid,"你需要驾驶拖车!");
    if(sscanf(params, "dd",params[0],params[1])) return SendErrorMessage(playerid,"帮助: /repair [id] [价格]");
    if(params[1] < 10 || params[1] > 1000) return SendErrorMessage(playerid,"价格限制 10$ - 1.000$");
    if(GetPVarInt(params[0],"repaircar")) return SendErrorMessage(playerid,"你已经提出给玩家修车!");
    if(PlayerInfo[params[0]][pCash] < params[1]) return SendErrorMessage(playerid,"对方没有足够的钱!");
    if(!ProxDetectorS(10.0, playerid, params[0])) return SendErrorMessage(playerid,"距离太远了!");
	SetPVarInt(params[0], "repaircar", playerid+1);
    SetPVarInt(params[0], "repairprice", params[1]);
    new str[150];
    format(str, sizeof str,"{8FD660}%s {ffffff}提给修理你的车辆\n - 价格: %d $\n\n{BABABA}你接受吗?",Name(playerid),params[1]);
    ShowPlayerDialog(params[0],1653,DIALOG_STYLE_MSGBOX,"{1E90FF}确认",str,"接受","退出");
    format(str,sizeof(str),"― 你给 %s 提供修理服务,价格: %d $",Name(params[0]),params[1]);
	SendClientMessage(playerid,-1,str);
    return 1;
}
cmd:mcontract(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525)return SendErrorMessage(playerid,"你需要驾驶拖车!");
	for(new idx; idx <= TOTALBIZZ; idx++)
	{
	    if(BizzInfo[idx][bType] == 2) {
			if(IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]))
			{
				if(!strcmp(BizzInfo[idx][bOwner],"None",true) || BizzInfo[idx][bLockTime])return SendErrorMessage(playerid,"该产业停止营业了!");
				SetPVarInt(playerid, "zapravka", idx);
				new str[128];
				format(str,sizeof(str),"― 你签了一份加油合同: %s",BizzInfo[idx][bName]);
				SendClientMessage(playerid, -1,str);
				format(str,sizeof(str),"― 加油价格: %d ( /refill )",(BizzInfo[idx][bTill]/3)*300);
				SendClientMessage(playerid, -1,str);
				format(str,sizeof(str),"> 填充 %d $ - 300 升 <",(BizzInfo[idx][bTill]/3)*300);
				if(MexText3D[playerid])Delete3DTextLabel(MexText3D[playerid]);
				MexText3D[playerid] = Create3DTextLabel(str, 0xE8053A88, 0.0, 0.0, 0.0, 50.0, 0, 1);
				Attach3DTextLabelToVehicle(MexText3D[playerid], GetPlayerVehicleID(playerid), 0.0, 0.0, 2.25);
				return 1;
			}
		}
	}
	return SendErrorMessage(playerid,"你应该在加油站附近!");
}
cmd:play(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    for(new t; t != 6; t++) TextDrawShowForPlayer(playerid, PlayTD[t]);
    SelectTextDraw(playerid, 0xAFAFAFAA);
    SetPlayerAttachedObject(playerid, 3, 19424, 2,0.05,0.0,0.0,90.0,360.0,270.0);
    clicktd[playerid] = true;
    return 1;
}
cmd:gps(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(GetPVarInt(playerid, "FuelID") > 0) return SendErrorMessage(playerid,"请先完成送燃料!");
    if(GetPVarInt(playerid, "ProductID") > 0) return SendErrorMessage(playerid,"请先完成送货!");
    if(GetPVarInt(playerid, "FuelCarLittle") > 0) return SendErrorMessage(playerid,"请先完成炼油厂的工作!");
    if(GetPVarInt(playerid, "Noun") > 0) return SendErrorMessage(playerid,"请先完成矿工的工作!");
    if(GetPVarInt(playerid, "PriceBus") > 0) return SendErrorMessage(playerid,"请先完成公交车司机的工作!");
    DisablePlayerRaceCheckpoint(playerid);
    for(new i; i < 3; i++) TextDrawHideForPlayer(playerid, GPSEnabled[i]);
    ShowPlayerDialog(playerid, 705, 2, "{1E90FF}GPS 导航", "[1] 公共场所\n[2] 工作\n[3] 国家公职\n[4] 汽车市场/维修站\n[5] 租赁公司\n[6] 武器商店\n[7] 银行/服装店\n[8] 娱乐\n[9] 帮派/黑手党\n[10] {B3B3B3}关闭 GPS", "选择", "退出");
    return true;
}
cmd:showmed(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(Flood[playerid] > 0) return SendErrorMessage(playerid,"该命令限制5秒输入一次.");
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid," 帮助: /showmed [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
    new medcards[50];
    switch(PlayerInfo[playerid][pMedcard])
    {
        case 1: { medcards = "{07F72B}持有"; }
        case 0: { medcards = "{FE2E2E}无"; }
    }
    format(YCMDstr,256,"{FFFFFF}医疗卡 {FF8000}%s: {FFFFFF}[%s{FFFFFF}]",Name(playerid),medcards);
	ShowPlayerDialog(params[0], 69, DIALOG_STYLE_MSGBOX, "{1E90FF}医疗卡",YCMDstr, "关闭", "");
	format(YCMDstr, sizeof(YCMDstr), "%s 将医疗卡出示给 %s",Name(playerid),Name(params[0]));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	format(YCMDstr,sizeof(YCMDstr), "将医疗卡出示给 %s",Name(params[0]));
	SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
	Flood[playerid] = 5;
	return true;
}
cmd:hospital(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    new Float:health;
    GetPlayerHealth(playerid, health);
    if(health > 99) return 1;
    if(PlayerInfo[playerid][pKouka][0] == 1 || PlayerInfo[playerid][pKouka][1] == 1 || PlayerInfo[playerid][pKouka][2] == 1 || PlayerInfo[playerid][pKouka][3] == 1 || PlayerInfo[playerid][pKouka][4] == 1
	|| PlayerInfo[playerid][pKouka][5] == 1 || PlayerInfo[playerid][pKouka][6] == 1 || PlayerInfo[playerid][pKouka][7] == 1 || PlayerInfo[playerid][pKouka][8] == 1 || PlayerInfo[playerid][pKouka][9] == 1
	|| PlayerInfo[playerid][pKouka][10] == 1 || PlayerInfo[playerid][pKouka][11] == 1 || PlayerInfo[playerid][pKouka][12] == 1 || PlayerInfo[playerid][pKouka][13] == 1) return SendErrorMessage(playerid,"你已经在医院了");
    if(PlayerToPoint(4.0,playerid,1153.7266,-1352.6769,1002.6752))
    {
        SendSyntaxMessage(playerid, "你躺在了医院的床上.根据健康状况,治疗可能需要一些时间.");
        PlayerInfo[playerid][pKouka][0] = 1;
    }
    else if(PlayerToPoint(4.0,playerid,1157.8014,-1353.1970,1002.6752))
    {
        SendSyntaxMessage(playerid, "你躺在了医院的床上.根据健康状况,治疗可能需要一些时间.");
        PlayerInfo[playerid][pKouka][1] = 1;
    }
    else if(PlayerToPoint(4.0,playerid,1157.6548,-1361.0490,1002.6752))
    {
        SendSyntaxMessage(playerid, "你躺在了医院的床上.根据健康状况,治疗可能需要一些时间.");
        PlayerInfo[playerid][pKouka][2] = 1;
    }
    else if(PlayerToPoint(4.0,playerid,1153.6941,-1360.1923,1002.6752)) // 4
    {
        SendSyntaxMessage(playerid, "你躺在了医院的床上.根据健康状况,治疗可能需要一些时间.");
        PlayerInfo[playerid][pKouka][3] = 1;
	}
    else if(PlayerToPoint(4.0,playerid,1152.9781,-1368.3589,1002.6752))
    {
        SendSyntaxMessage(playerid, "你躺在了医院的床上.根据健康状况,治疗可能需要一些时间.");
        PlayerInfo[playerid][pKouka][4] = 1;
    }
    else if(PlayerToPoint(4.0,playerid,1153.2960,-1371.6844,1002.6752))
    {
        SendSyntaxMessage(playerid, "你躺在了医院的床上.根据健康状况,治疗可能需要一些时间.");
        PlayerInfo[playerid][pKouka][5] = 1;
    }
    else if(PlayerToPoint(4.0,playerid,1152.9525,-1364.3013,1002.6752))
    {
        SendSyntaxMessage(playerid, "你躺在了医院的床上.根据健康状况,治疗可能需要一些时间.");
        PlayerInfo[playerid][pKouka][6] = 1;
    }
    else if(PlayerToPoint(4.0,playerid,1153.5874,-1341.5757,1002.6323))
    {
        SendSyntaxMessage(playerid, "你躺在了医院的床上.根据健康状况,治疗可能需要一些时间.");
        PlayerInfo[playerid][pKouka][7] = 1;
    }
    else if(PlayerToPoint(4.0,playerid,1156.5293,-1341.3545,1002.6323))
    {
        SendSyntaxMessage(playerid, "你躺在了医院的床上.根据健康状况,治疗可能需要一些时间.");
        PlayerInfo[playerid][pKouka][8] = 1;
    }
    else if(PlayerToPoint(4.0,playerid,1159.4921,-1341.3715,1002.6323))
    {
        SendSyntaxMessage(playerid, "你躺在了医院的床上.根据健康状况,治疗可能需要一些时间.");
        PlayerInfo[playerid][pKouka][9] = 1;
    }
    else if(PlayerToPoint(4.0,playerid,1159.4258,-1371.3348,1002.6752))
    {
        SendSyntaxMessage(playerid, "你躺在了医院的床上.根据健康状况,治疗可能需要一些时间.");
        PlayerInfo[playerid][pKouka][10] = 1;
    }
    else if(PlayerToPoint(4.0,playerid,1159.2462,-1364.9856,1002.6752))
    {
        SendSyntaxMessage(playerid, "你躺在了医院的床上.根据健康状况,治疗可能需要一些时间.");
        PlayerInfo[playerid][pKouka][11] = 1;
    }
    else if(PlayerToPoint(4.0,playerid,1159.1984,-1348.9681,1002.6752))
    {
        SendSyntaxMessage(playerid, "你躺在了医院的床上.根据健康状况,治疗可能需要一些时间.");
        PlayerInfo[playerid][pKouka][12] = 1;
    }
    else if(PlayerToPoint(4.0,playerid,1154.0118,-1349.1304,1002.6752))
    {
        SendSyntaxMessage(playerid, "你躺在了医院的床上.根据健康状况,治疗可能需要一些时间.");
        PlayerInfo[playerid][pKouka][13] = 1;
    }
	HPTimer[playerid] = SetTimerEx("lechenie", 9000, true, "d", playerid);
	return true;
}
CMD:pull(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsACop(playerid)) return SendErrorMessage(playerid,"你不是警察!");
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: /pull [playerid]");
	if(!IsPlayerConnected(params[0])) return SendErrorMessage(playerid,"无效玩家");
	if(!ProxDetectorS(7.0, playerid, params[0])) return SendErrorMessage(playerid,"距离太远了.");
	if(!PlayerCuffed[params[0]]) return SendErrorMessage(playerid,"玩家没有戴上手铐!");
	if(IsPlayerInAnyVehicle(playerid)) return SendErrorMessage(playerid,"你不能在车里");
	if(IsPlayerInAnyVehicle(params[0])) return SendErrorMessage(playerid,"对方在车里");
	new Float:p[3];
	GetPlayerPos(playerid, p[0], p[1], p[2]);
	TogglePlayerControllable(params[0], 1);
	Q_SetPlayerPos(params[0], p[0], p[1]+1, p[2]);
	TogglePlayerControllable(params[0], 0);
	SetPlayerInterior(params[0],GetPlayerInterior(playerid));
	SetPlayerVirtualWorld(params[0],GetPlayerVirtualWorld(playerid));
	format(YCMDstr,sizeof(YCMDstr), "警官 %s[%d] 拖着你走",PlayerInfo[playerid][pName],playerid);
	SendClientMessage(params[0],-1,YCMDstr);
	format(YCMDstr,sizeof(YCMDstr), "你拖着 %s[%d] 开始走",PlayerInfo[params[0]][pName],params[0]);
	SendClientMessage(playerid,-1,YCMDstr);
	return true;
}
cmd:do(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(Flood[playerid] > 0) return SendErrorMessage(playerid,"该命令限制2秒一次.");
    if(sscanf(params, "s[64]", params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/do {B4B5B7}[环境/效果]");
    if(PlayerInfo[playerid][pMuted] == 1) return PlayerMuteMessage(playerid);
	format(YCMDstr, sizeof(YCMDstr), "― %s (%s)", params[0], Name(playerid));
 	ProxDetector(30.0, playerid, YCMDstr, 0xDD90FFFF, 0xDD90FFFF, 0xDD90FFFF, 0xDD90FFFF, 0xDD90FFFF);
 	SetPlayerChatBubble(playerid,params[0],0xDD90FFFF,30.0,10000);
 	Flood[playerid] = 2;
	return 1;
}
cmd:hbuy(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerToPoint(10.0,playerid,-105.9388,-10.6158,1000.7188))
	ShowPlayerDialog(playerid, 9595, 2, "{1E90FF}商店 'Hippy'", "- 鹦鹉\n- 套件\n- 火星\n- 鸡帽子\n- 面具\n- 印花大手帕 No.1\n- 印花大手帕 No.2\n- 印花大手帕 No.3\n- 印花大手帕 No.4\n- 印花大手帕 No.5\n- 龙面具\n- 激光\n- Big M4(手里)\n- 鹦鹉的服装\n- Shocker\n- 手杖\n- 帽子 No.1\n- 帽子 No.2\n- NG帽子\n- 帽子 No.3\n- 鸭子\n- 面具 No.1\n- 面具 No.2\n- 面具 No.3\n- 冬天的帽子 No.1\n- 冬天的帽子 No.2\n- 冬天的帽子 No.3", "选择", "退出");
	return 1;
}
cmd:unbanall(playerid, params[])
{
	if(Rucovod(playerid))
	{
        /*if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	    if(PlayerInfo[playerid][pAdministration228] < 10) return SendErrorMessage(playerid,"你没有权限!");*/
		if(sscanf(params, "d", params[0])) return SendServerMessage(playerid, "帮助: /unbanall [组织id]");
		new Query[128];
		format(Query,sizeof(Query),"UPDATE "TABLE_ACCOUNT" SET pLocked = '0',pBanTime = '0' WHERE pMember = '%d'",params[0]);
		mysql_query(Query);
		SendServerMessage(playerid, "解封!");
	}
	return 1;
}
cmd:blats(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 8) return SendErrorMessage(playerid,"你没有权限!");
	if(sscanf(params, "d", params[0])) return SendServerMessage(playerid, "帮助: /blats [组织id]");
	new Query[128];
	format(Query,sizeof(Query),"UPDATE "TABLE_ACCOUNT" SET pMember = '0',pRank = '0' WHERE pMember = '%d'",params[0]);
	mysql_query(Query);
	foreach(new i: Player)
	{
	    if(PlayerInfo[i][pMember] == params[0])
		{
		 	SendServerMessage(i, "你现在是一个公民");
			PlayerInfo[i][pMember] = 0;
			PlayerInfo[i][pInFrac] = 0;
			PlayerInfo[i][pLeader] = 0;
			PlayerInfo[i][pRank] = 0;
			PlayerInfo[i][pJobHealLeader] = 0;
			PlayerInfo[i][pJobHeal] = 0;
			SetPlayerArmourAC(i,0);
			DelGun(i);
			SetPlayerColor(i, TEAM_HIT_COLOR);
			SetPlayerSkin(i,PlayerInfo[params[0]][pChar][0]);
		}
	}
	return true;
}
cmd:try(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(Flood[playerid] > 0) return SendErrorMessage(playerid,"不能输入这么快");
    if(sscanf(params, "s[64]", params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/try {B4B5B7}[尝试]");
    if(PlayerInfo[playerid][pMuted] == 1) return PlayerMuteMessage(playerid);
	new result = random(2);
	if(result == 1){
		format(YCMDstr, 90, "― %s %s {33AA33}[成功]", Name(playerid),params[0]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,YCMDstr);
		SetPlayerChatBubble(playerid, params[0], COLOR_PURPLE, 30.0, 7000);
		Flood[playerid] = 1;
	}else{
	    format(YCMDstr, 90, "― %s %s {ff0000}[失败]", Name(playerid),params[0]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,YCMDstr);
		SetPlayerChatBubble(playerid, params[0], COLOR_PURPLE, 30.0, 7000);
		Flood[playerid] = 1;
	}
    return 1;
}
cmd:gg(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 2) return SendErrorMessage(playerid,"你没有权限!");
    GetPlayerName(playerid, sn, sizeof(sn));
    format(YCMDstr, sizeof(YCMDstr), "{FFC125}― 管理员 {A9A9A9}%s[%d]: {FFC125}祝你在我们的服务器上玩得愉快! 感谢支持本服务器 :)", sn, playerid);
    SendClientMessageToAll(-1,YCMDstr);
    return true;
}
cmd:changeinteriorq(playerid, params[])
{
    if(PlayerInfo[playerid][pPhousekey] == 799) return SendErrorMessage(playerid,"你没有房子");
   	new bouse = PlayerInfo[playerid][pPhousekey];
	if(bouse == 999 || strcmp(Name(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == -1) return true;
	if(!PlayerToPoint(30, playerid,HouseInfo[bouse][hExitx], HouseInfo[bouse][hExity], HouseInfo[bouse][hExitz])) return true;
 	SendServerMessage(playerid, "重要提示：在更换内饰时，必须在房屋内.");
    ShowMenuForPlayer(Buyint,playerid);
    pokupka[playerid] = 1;
    SendSyntaxMessage(playerid,"这个内饰的价格: 50.000$");
    Q_SetPlayerPos(playerid,2233.6919,-1112.8107,1050.8828);
    SetPlayerInterior(playerid, 5);
    return true;
}
cmd:dell(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(Rucovod(playerid))
	{
    	/*if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
		if(PlayerInfo[playerid][pAdministration228] < 10) return SendErrorMessage(playerid,"你没有权限!");*/
    	if(sscanf(params, "s[128]",params[0])) return SendServerMessage(playerid,"帮助: {4080FF}/dell {B4B5B7}[name_account]");
   		format(YCMDstr, sizeof(YCMDstr), "SELECT * FROM `"TABLE_ACCOUNT"` WHERE Name = '%s'",params[0]);
		mysql_query(YCMDstr);
		mysql_store_result();
		if(!mysql_fetch_row_format(YCMDstr)) return SendErrorMessage(playerid,"此帐户不存在!"), mysql_free_result();
    	format(YCMDstr,sizeof(YCMDstr), "DELETE FROM `accounts` WHERE `Name` = '%s'",params[0]);
    	mysql_query(YCMDstr);
   		format(YCMDstr,sizeof(YCMDstr), "― 名为 %s 的账户已删除",params[0]);
	    SendClientMessage(playerid,-1,YCMDstr);
	    SendErrorMessage(GetPlayerID(params[0]),"您的帐户因违反服务器规则而被删除账户");
    	GKick(GetPlayerID(params[0]));
	}
 	return true;
}
cmd:object(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 3) return SendErrorMessage(playerid,"你没有权限!");
	if(sscanf(params,"d",params[0])) return SendServerMessage(playerid,"帮助: {4080FF}/object {B4B5B7}[ID]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return true;
	SetPVarInt(playerid,"vidalobj",params[0]);
	ShowPlayerDialog(playerid,8000,DIALOG_STYLE_LIST,"{1E90FF}OBJECT","[1] - 鸡帽子\n[2] - 火星\n[3] - 闪烁的灯光\n[4] - 面具\n[5] - 头巾 No.1\n[6] - 头巾 No.2\n[7] - 头巾 No.3\n[8] - 僵尸服装\n[9] - 死亡之套\n[10] - 龙面具\n[11] - 激光\n[12] - 全能套装\n[13] - 鹦鹉\n[14] - 明亮的光线\n[15] - Big M4\n[16] - 阴茎\n[17] - 鹦鹉的服装\n[18] - 大头\n[19] - 删除所有OBJ","选择","返回");
	return 1;
}
cmd:obj(playerid, params[])
{
	if(Rucovod(playerid))
	{
	    ShowPlayerDialog(playerid,22815,DIALOG_STYLE_LIST,"{1E90FF}编辑","[1] 创建OBJ\n[2] 编辑OBJ","选择","退出");
	}
	return true;
}
/*cmd:hunger(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    format(YCMDstr, sizeof(YCMDstr),"― Ваша сытость: %d/100", PlayerInfo[playerid][pGolod]);
    SendClientMessage(playerid, -1, YCMDstr);
	return true;
}*/
cmd:start(playerid, params[])
{
    if(!PlayerToPoint(150.0,playerid,642.0316,884.7268,-42.8719)) return SendErrorMessage(playerid,"你不在指定位置");
    if(IsPlayerInAnyVehicle(playerid)) return SendErrorMessage(playerid,"不能驾驶车辆");
    if(PlayerInfo[playerid][pJob] != 5) return SendErrorMessage(playerid,"你不是矿工!");
	if(GetPVarInt(playerid, "Noun") == 0) ShowPlayerDialog(playerid, D_JOB+63, 0, "{1E90FF}矿工", "你想开始矿工的工作吗?", "是的", "不了");
	else ShowPlayerDialog(playerid, D_JOB+64, 0, "{1E90FF}矿工", "你想完成矿工的工作吗?", "是的", "不了");
  	return true;
}
cmd:route(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 4) return SendClientMessage(playerid, COLOR_GREEN, YouCanNot);
	if(GetPlayerState(playerid) != 2) return SendErrorMessage(playerid,"你没有驾驶车辆!");
	new carid = GetPlayerVehicleID(playerid);
	if(carid >= buscar[0] && carid <= buscar[40])
	{
		if(GetPVarInt(playerid, "PriceBus") > 0)
		{
            SendErrorMessage(playerid,"你已经开始工作了! 完成工作.");
			return 1;
		}
		ShowPlayerDialog(playerid, D_JOB+55, 1, "{1E90FF}票价", "输入票价:", "确定", "退出");
	}
	else SendErrorMessage(playerid,"你必须在公共汽车上!");
	return 1;
}
cmd:fuelbanks(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 8) return SendErrorMessage(playerid,"你没有权限!");
	if(sscanf(params, "d", params[0])) return SendServerMessage(playerid,"帮助: {4080FF}/fuelbanks [数量]");
	if(params[0] < 1 || params[0] > 500000) return SendErrorMessage(playerid,"限制 1 - 500000");
	tdload[2] = params[0];
 	SetOtherInt("tdload[2]", tdload[2]);
 	new string[50];
	format(string, 50, "工厂燃料: {FF9900}%i{ffffff} 升", tdload[2]);
	Update3DTextLabelText(tPickup[2], 0xFFFFFFFF, string);
	Update3DTextLabelText(tPickup[3], 0xFFFFFFFF, string);
	Update3DTextLabelText(tPickup[4], 0xFFFFFFFF, string);
	Update3DTextLabelText(tPickup[5], 0xFFFFFFFF, string);
	return true;
}
cmd:product(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(GetPlayerBizz(playerid) == 0) return SendErrorMessage(playerid,"你没有产业!");
	new full = 0, idx = GetPVarInt(playerid, "PlayerBizz");
	if(BizzInfo[idx][bType] == 2) return SendErrorMessage(playerid,"你的产业是加油站,需要的是燃料!");
	if(IsABank(playerid))
	{
		ProductEnter(playerid);
  		full++;
	}
	else
	{
		return true;
	}
	if(full == 0) SendErrorMessage(playerid,"您必须在银行或ATM旁边!");
	return true;
}
cmd:fill(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	for(new x; x < 4; x ++) TextDrawShowForPlayer(playerid, Filling[x]);
	SelectTextDraw(playerid,0xFFFFFFFF);
	clicktd[playerid] = true;
	return true;
}

cmd:fuel(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(GetPlayerBizz(playerid) == 0) return SendErrorMessage(playerid,"你没有产业!");
	new full, idx = GetPVarInt(playerid, "PlayerBizz");
	if(BizzInfo[idx][bType] != 2) return SendErrorMessage(playerid,"你的产业不是加油站!");
	if(IsABank(playerid))
	{
		FuelEnter(playerid);
  		full++;
	}
	else
	{
	   	return true;
	}
	if(full == 0) SendErrorMessage(playerid,"您必须在银行或ATM旁边!");
	return 1;
}
cmd:binfo(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new full = 0;
   	for(new i = 1; i <= TOTALBIZZ; i++)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[i][bEntrx],BizzInfo[i][bEntry],BizzInfo[i][bEntrz]))
	    {
     		if(!strcmp(BizzInfo[i][bOwner],"None",true)) return SendErrorMessage(playerid,"该产业没有业主!");
			BizzStats(playerid, i);
			full++;
		}
	}
 	if(full == 0) SendErrorMessage(playerid,"你必须靠近产业!");
	return 1;
}
cmd:bpanel(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pBizpokup] == 0) return SendErrorMessage(playerid,"你没有产业!");
    if(PlayerInfo[playerid][pLevel] == 1 && PlayerInfo[playerid][pExp] < 3) return SendErrorMessage(playerid,"需要在服务器上游戏三个小时才能使用.");
	new string[256];
	if(GetPlayerBizz(playerid) == 0) return SendErrorMessage(playerid,"你没有产业!");
	format(string, 256, "1. 产业信息\n2. 开始营业\n3. 设定商品的价格\n4. 设置入门费\n{FF6347}5. 出售产业\n6. 从产业中拿出资金");
	ShowPlayerDialog(playerid, D_HEAL+10, 2, "{1E90FF}产业版面", string, "选择", "退出");
	return 1;
}

cmd:flist(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pJob] != 3) return SendErrorMessage(playerid,"你不是送油司机!");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendErrorMessage(playerid,"你没有驾驶车辆!");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 403) return SendErrorMessage(playerid,"你需要驾驶卡车(403)!");
    if(!IsPlayerInRangeOfPoint(playerid, 5.0,248.7008,1445.8474,11.1919)) return SendErrorMessage(playerid,"你必须在工厂!");
    if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return SendErrorMessage(playerid,"你后面必须挂车!");
	if(GetPVarInt(playerid, "FuelID") > 0) return SendErrorMessage(playerid,"您已在执行订单!");
	FuelList(playerid);
	return 1;
}

cmd:plist(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pJob] != 1) return SendErrorMessage(playerid,"你不是送货员!");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendErrorMessage(playerid,"你没有驾驶车辆!");
    if(!IsPlayerInRangeOfPoint(playerid, 5.0,2791.9639,-2456.1118,13.6326)) return SendErrorMessage(playerid,"你必须在仓库!");
    if(GetPlayerVehicleID(playerid) >= jobproduct[0] && GetPlayerVehicleID(playerid) <= jobproduct[13])
    {
        if(GetPVarInt(playerid, "ProductID") > 0) return SendErrorMessage(playerid,"您已在执行订单!");
		ProductList(playerid);
 	}
    else SendErrorMessage(playerid,"你必须在送货车里!");
	return 1;
}
cmd:buybizz(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pLevel] == 1 && PlayerInfo[playerid][pExp] < 3) return SendErrorMessage(playerid,"你需要在服务器游戏三个小时才能购买");
	if(GetPlayerBizz(playerid) == 1) return SendErrorMessage(playerid,"你已经有产业了!");
	new full, full_;
 	for(new idx = 1; idx <= TOTALBIZZ; idx++)
    {
  		if(IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]))
		{
		    full++;
			if(!strcmp(BizzInfo[idx][bOwner],"None",true))
     		{
     		    full_++;
				if(PlayerInfo[playerid][pBank] < BizzInfo[idx][bPrice]) return SendClientMessage(playerid, COLOR_GREEN, YouDoNotHaveEnoughMoney);
				else
				{
					new query[256];
					PlayerInfo[playerid][pBizpokup] = 1;
					PlayerInfo[playerid][pBank] -= BizzInfo[idx][bPrice];
					BizzInfo[idx][bBuyPrice] = BizzInfo[idx][bPrice];
					GameTextForPlayer(playerid, "The busines was bought", 3000, 5);
					format(YCMDstr, sizeof(YCMDstr), "―  恭喜你购买了一个产业,价格: %i 美元. 银行账户: %i 美元",BizzInfo[idx][bPrice], PlayerInfo[playerid][pBank]);
					SendClientMessage(playerid, -1, YCMDstr);
					SendErrorMessage(playerid,"― 警告! 别忘了补充货物以及办理营业执照");
					strmid(BizzInfo[idx][bOwner],Name(playerid), 0, strlen(Name(playerid)), MAX_PLAYER_NAME);
					format(query, sizeof(query), "UPDATE "TABLE_BIZZ" SET owner = '%s', buyprice = %i WHERE id = '%d' LIMIT 1", BizzInfo[idx][bOwner], BizzInfo[idx][bBuyPrice], idx);
					mysql_query(query);
					UpdateBizz(idx);
				}
		    }
		    else full_++;
		}
    }
	if(full == 0) return SendErrorMessage(playerid,"附近没有产业!");
	if(full_ == 0) return SendErrorMessage(playerid,"该产业已经有业主了!");
	return 1;
}
cmd:sellcarto(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(caridhouse[playerid] == -1) return SendErrorMessage(playerid,"你没有车辆");
	if(GetPlayerVehicleID(playerid) != caridhouse[playerid]) return SendErrorMessage(playerid,"你没有开你自己的车!");
	if(sscanf(params, "ud", params[0],params[1])) return SendErrorMessage(playerid,"帮助: {4080FF}/sellcarto {B4B5B7}[id] [价格]");
	if(params[1] < 10000 || params[0] > 2000000) return SendErrorMessage(playerid,"价格限制 10.000$ - 2.000.000$ $!");
	if(Flood[playerid] > 0) return SendErrorMessage(playerid,"该命令30秒使用一次.");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	if(params[0] == playerid) return SendErrorMessage(playerid,"目标不能为自己!");
    new str[256];
    format(str, sizeof str,"{8FD660}%s {ffffff}向你出售一辆汽车\n\n - 价格: %d$\n - 状态: %d\n - 车牌: %d\n - 型号: %s\n\n{BABABA}你接受吗?",Name(playerid),params[1],PlayerInfo[playerid][pProcents],PlayerInfo[playerid][pNumbercar],VehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
    ShowPlayerDialog(params[0],804,DIALOG_STYLE_MSGBOX,"{1E90FF}确认",str,"接受","退出");
    format(str,sizeof(str),"― 你向 %s 出售汽车,价格: %d $",Name(params[0]),params[1]);
	SendClientMessage(playerid,-1,str);
	format(YCMDstr, sizeof(YCMDstr), "%s 向 %s 提供车辆购买合同.",Name(playerid) ,Name(params[0]));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	CarOffer[params[0]] = playerid;
	CarPrice[params[0]] = params[1];
	Flood[playerid] = 30;
	OnPlayerUpdateAc(playerid);
	return true;
}
cmd:paintlist(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	format(YCMDstr, sizeof(YCMDstr), "{FFFFFF}1. - %s\n{FFFFFF}2. - %s",NickPaintPobed,NickPaintPobed2);
	ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX,"{1E90FF}Paint List", YCMDstr, "OK", "");
	return true;
}
cmd:racelist(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new str[600];
	format(str, sizeof(str), "{FFFFFF}1. - %s\n{FFFFFF}2. - %s\n{FFFFFF}3. - %s\n{FFFFFF}4. - %s\n{FFFFFF}5. - %s\n{FFFFFF}6. - %s\n{FFFFFF}7. - %s\n{FFFFFF}8. - %s\n{FFFFFF}9. - %s\n{FFFFFF}10. - %s",NickPobed,NickPobed2,NickPobed3,NickPobed4,NickPobed5,NickPobed6,NickPobed7,NickPobed8,NickPobed9,NickPobed10);
	ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX,"{1E90FF}Race List", str, "OK", "");
	return true;
}
cmd:racego(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 5) return SendErrorMessage(playerid,"你没有权限!");
	if(EndingRaceRound == 0) return SendErrorMessage(playerid,"赛车已经开始了!");
	format(YCMDstr, sizeof(YCMDstr), "警告! 在6分钟内开始'史诗般的比赛' ( /gps > [8] > [2] )");
	OOCOff(0x73B461FF,YCMDstr);
	EndingRaceRound = 0;
	RaceGo = 0;
	Timer[12] = 0;
	RacingPlayers = 0;
	strmid(NickPobed,"-", 0, strlen("-"), 32);
	strmid(NickPobed2,"-", 0, strlen("-"), 32);
	strmid(NickPobed3,"-", 0, strlen("-"), 32);
	strmid(NickPobed4,"-", 0, strlen("-"), 32);
	strmid(NickPobed5,"-", 0, strlen("-"), 32);
	strmid(NickPobed6,"-", 0, strlen("-"), 32);
	strmid(NickPobed7,"-", 0, strlen("-"), 32);
	strmid(NickPobed8,"-", 0, strlen("-"), 32);
	strmid(NickPobed9,"-", 0, strlen("-"), 32);
	strmid(NickPobed10,"-", 0, strlen("-"), 32);
	Timer[12] = gettime()+2;
	return true;
}
cmd:paint(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 5) return SendErrorMessage(playerid,"你没有权限!");
	if(PaintballRound == 0) return SendErrorMessage(playerid,"彩弹比赛 已经开始了!");
	format(YCMDstr, sizeof(YCMDstr), "警告!在4分钟内开始彩弹比赛. ( /gps > [8] > [1] )");
	OOCOff(0x73B461FF,YCMDstr);
	Timer[10] = gettime()+2;
	PaintballRound = 0;
	PaintBallGo = 0;
	return true;
}
cmd:unrent(playerid, params[])
{
	if(!TaxiJobStarted[playerid]) return SendServerMessage(playerid,"你没有租一辆出租车.");
	ShowPlayerDialog(playerid, TAXI_DIALOG+3, DIALOG_STYLE_MSGBOX, "{1E90FF}取消租约", "{00FFFF}\
	你确定要退租吗?", "确定", "不了");
	return 1;
}
cmd:quitjob(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	PlayerInfo[playerid][pJob] = 0;
	SendSyntaxMessage(playerid, "你现在失业了!");
	return true;
}
CMD:donate(playerid)
{
	ShowPlayerDialog(playerid,29213,DIALOG_STYLE_MSGBOX,"捐赠","选择您需要的类型","人民币商店","捐赠点商店");
	return 1;
}
cmd:donate2(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    new str[256],sctring[500];
	format(str,sizeof(str),"{FFFFFF}在您的帐户中: {8B658B}%d {FFFFFF}捐赠点\n",PlayerInfo[playerid][pDonatemoney]);
	strcat(sctring,str);
	format(str,sizeof(str),"\n\n{8B658B}在下面输入所需的操作编号，然后按 {00FF00}'确定'\n\n");
	strcat(sctring,str);
	format(str,sizeof(str),"{FFFFFF}\t1. 其他功能\n\t2. 将人民币转换为游戏货币 $");
	strcat(sctring,str);
	ShowPlayerDialog(playerid,7999,DIALOG_STYLE_INPUT,"{1E90FF}捐赠菜单",sctring,"确定","返回");
	return true;
}
cmd:donate1(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"您尚未登录!");
	ShowPlayerDialog(playerid,197,DIALOG_STYLE_MSGBOX,"{1E90FF}捐赠菜单","确定想用人民币兑换游戏币吗?\n\n\n\t{FFFFFF}1 人民币等于 {00FF00}30{FFFFFF} 游戏币","确定","返回");
	return true;
}
cmd:goloslist(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 5 || dostup[playerid] == 0) return true;
	format(YCMDstr,sizeof(YCMDstr),"%s - %i 投票\n%s - %i 投票\n%s - %i 投票\n%s - %i 投票\n%s - %i 投票",GolosText1,Golosa[0],GolosText2,Golosa[1],GolosText3,Golosa[2],GolosText4,Golosa[3],GolosText5,Golosa[4]);
	SendClientMessage(playerid,-1,YCMDstr);
	return true;
}
cmd:golos(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 5 || dostup[playerid] == 0) return true;
	ShowPlayerDialog(playerid,1947,DIALOG_STYLE_INPUT, ""D_COL"{1E90FF}创建投票","输入投票名称", "确定", "退出");
	return true;
}
cmd:fstat(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    new dialog[256];
    if(sscanf(params, "d", params[0])) return SendServerMessage(playerid,"帮助: {B4B5B7}/fstat [id]");
	if(PlayerInfo[playerid][pMember] == 0) return SendErrorMessage(playerid,"你必须在组织中!");
	if(PlayerInfo[playerid][pMember] != PlayerInfo[params[0]][pMember]) return SendErrorMessage(playerid,"对方不在你的组织中!");
	if(PlayerInfo[playerid][pRank] < 3) return SendErrorMessage(playerid,"你的阶级低于 3");
	if(PlayerInfo[params[0]][pLeader] == 0)
	{
		format(dialog,sizeof(dialog), "{B3EE3A}在组织中的年龄(小时数): "WHITE"%d\n\
				   {B3EE3A}阶级: "WHITE"%d\n\
				   {B3EE3A}加入日期: "WHITE"%s",PlayerInfo[params[0]][pInFrac], PlayerInfo[params[0]][pRank],PlayerInfo[params[0]][pDataInvite]);
		ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, ""D_COL"{1E90FF}信息", dialog,"关闭","");
	}
	else
	{
		format(dialog,sizeof(dialog), "{B3EE3A}在组织中的年龄(小时数): "WHITE"%d\n\
		   {B3EE3A}阶级: "WHITE"''领导人''\n\
		   {B3EE3A}加入日期: "WHITE"%s\n\
		   {B3EE3A}任命领导人职位的日期: "WHITE"%s",PlayerInfo[params[0]][pInFrac], PlayerInfo[params[0]][pDataInvite], PlayerInfo[params[0]][pDataLeader]);
  		ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, ""D_COL"{1E90FF}信息", dialog,"关闭","");
	}
	return true;
}
cmd:atune(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if (PlayerInfo[playerid][pAdministration228] < 3 || dostup[playerid] == 0) return true;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendErrorMessage(playerid,"你没有驾驶车辆!");
	ShowPlayerDialog(playerid, 8004, 2, "{1E90FF}调整菜单", "轮胎\n液压系统\n车身\n颜色\n喷漆\n氮气 ", "选择", "返回");
	return true;
}
cmd:radio(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(sscanf(params, "d", params[0]))
	{
		SendErrorMessage(playerid,"帮助: {4080FF}/radio {B4B5B7}[编号 0-1]");
		SendServerMessage(playerid," [0] 关闭");
		SendServerMessage(playerid," [1] 大众媒体");
		return true;
	}
	switch (params[0])
	{
	case 1:
		{
			lNews[playerid] = 0;
			SendSyntaxMessage(playerid, "频率转到大众媒体");
		}
	case 0:
		{
			lNews[playerid] = 1;
			SendSyntaxMessage(playerid, "关闭了收音机");
		}
	}
	return true;
}

cmd:givenewskeys(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(sscanf(params, "u", params[0])) return SendServerMessage(playerid,"帮助: {4080FF}/givenewskeys [id]");
	if(PlayerInfo[playerid][pMember] == 16)
	{
		if(!IsPlayerConnected(params[0])) return true;
		if(params[0] == INVALID_PLAYER_ID) return true;
		PlayerInfo[params[0]][pNkeys] = 1;
		format(YCMDstr, sizeof(YCMDstr), "员工 %s 将办公室钥匙给了 %s",Name(playerid),Name(params[0]));
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return true;
}
cmd:news(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new newcar = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][pMuted] == 1) { PlayerMuteMessage(playerid); return true; }
	if(sscanf(params, "s[64]", params[0])) return SendServerMessage(playerid,"帮助: {4080FF}/news [内容]");
	AntiReklama(playerid,params[1],"SMS");
	if(antireklamka[playerid] == 1)
	{
		antireklamka[playerid] = 0;
		return true;
	}
	switch(PlayerInfo[playerid][pMember])
	{
	case 16:
		{
			if(newcar >= lsnewscar[0] && newcar <= lsnewscar[5] || PlayerToPoint(5.0,playerid,77.8179,2253.7339,632.2575)) { } else { SendErrorMessage(playerid," 你不在记着的车里 / 直升机 / 办公室!"); return true;}
			format(YCMDstr, sizeof(YCMDstr), "< 大众媒体 > %s: %s",Name(playerid),params[0]);
			LSNews(0x0073B7AA,YCMDstr);
			lNews[playerid] = 0;
		}
	}
	return true;
}
cmd:n(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new model = GetVehicleModel(GetPlayerVehicleID(playerid));
	if(model != 582 && model != 488 && !PlayerToPoint(5.0,playerid,77.8179,2253.7339,632.2575) && !PlayerToPoint(15.0,playerid,64.3343,2230.8262,632.2675)) return SendErrorMessage(playerid,"你不在车里或者办公室.");
	switch(PlayerInfo[playerid][pMember])
	{
	case 16: ShowPlayerDialog(playerid,2224, DIALOG_STYLE_LIST, "{1E90FF}[ NEWS MENU ]", " [ 1 ] 直播\n [ 2 ] 退出直播\n [ 3 ] 开始接听电话/短信\n [ 4 ] 结束接听电话/短信\n [ 5 ] 设置通话和短信的价格\n [ 6 ] 设置广告的价格\n [ 7 ] 广告", "选择", "返回");
	default: SendErrorMessage(playerid,"你不是媒体");
	}
	return true;
}
cmd:l(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMuted] == 1) { PlayerMuteMessage(playerid); return true; }
	if(sscanf(params, "u", params[0])) return SendErrorMessage(playerid," 帮助: {4080FF}/l [id/name]");
	if(params[0] == playerid) { SendErrorMessage(playerid,"目标不能为自己!"); return true; }
	if (ProxDetectorS(5.0, playerid, params[0])){} else { SendErrorMessage(playerid,"距离太远了!"); return true; }
	if(params[0] == INVALID_PLAYER_ID) { SendErrorMessage(playerid,"无效玩家ID!"); return true; }
	new newcar = GetPlayerVehicleID(playerid);
	switch(PlayerInfo[playerid][pMember])
	{
	case 16:
		{
			if(newcar >= lsnewscar[0] && newcar <= lsnewscar[5] || PlayerToPoint(30.0,playerid,77.8179,2253.7339,632.2575)) { } else { SendErrorMessage(playerid,"你不在记着的车里 / 直升机 / 办公室!"); return true;}
			if(TalkingLivels[playerid] != 255)
			{
				SendSyntaxMessage(playerid, "现场直播结束了!");
			 	SendServerMessage(params[0], "现场直播结束了");
				TogglePlayerControllable(playerid, 1);
				TogglePlayerControllable(params[0], 1);
				TalkingLivels[params[0]] = 255;
				TalkingLivels[playerid] = 255;
				return true;
			}
			format(YCMDstr, sizeof(YCMDstr), "― 你想采访 %s",Name(params[0]));
			SendClientMessage(playerid,-1, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "― %s 想采访你",Name(playerid));
			SendClientMessage(params[0], -1, YCMDstr);
			SendClientMessage(params[0], -1,"输入 {4080FF}/accept livels{B4B5B7}, 接受采访");
			LiveOfferls[params[0]] = playerid;
		}
	}
	return true;
}
cmd:selldrugs(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsAGang(playerid)) return SendErrorMessage(playerid,"你不是帮派!");
	if(sscanf(params, "udd", params[0],params[1],params[2])) return SendErrorMessage(playerid,"帮助: {4080FF}/selldrugs {B4B5B7}[id] [数量] [价格]");
	if(params[1] < 1 || params[1] > 150) { SendErrorMessage(playerid,"数量限制 1 - 150!"); return true; }
	if(params[2] < 1 || params[2] > 10000) { SendErrorMessage(playerid,"价格限制 1 - 10000 $!"); return true; }
	if(params[1] > PlayerInfo[playerid][pDrugs]) { SendErrorMessage(playerid,"你没有那么多毒品!"); return true; }
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return SendErrorMessage(playerid,"距离太远了");
	if(params[0] == playerid) return SendErrorMessage(playerid,"目标不能为自己!");
	format(YCMDstr, sizeof(YCMDstr), "― 你想出售给 %s 毒品,数量: %i 克,价格: %i $",Name(params[0]),params[1],params[2]);
	SendClientMessage(playerid, -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― %s 想出售给你毒品,数量: %i 克,价格: %i $. {4080FF}( 输入 /accept drugs 购买 )",Name(playerid),params[1],params[2]);
	SendClientMessage(params[0], -1, YCMDstr);
	DrugOffer[params[0]] = playerid;
	DrugPrice[params[0]] = params[2];
	DrugGram[params[0]] = params[1];
	OnPlayerUpdateAc(playerid);
	return true;
}

cmd:mask(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(!IsAMafia(playerid) && !IsAGang(playerid)) return true;
    if(PlayerInfo[playerid][pMaskON] == 0)
    {
        GetPlayerName(playerid, sn, sizeof(sn));
        PlayerInfo[playerid][pMaskON] = 1;
        format(YCMDstr, sizeof(YCMDstr), "%s 戴上了面具.", sn);
        ProxDetector(20.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        format(YCMDstr,sizeof(YCMDstr),"~b~Invisible on");
		GameTextForPlayer(playerid, YCMDstr, 5000, 3);
		ApplyAnimation(playerid, "shop","ROB_Shifty",4.0,0,0,0,0,0,1);
		SetPlayerChatBubble(playerid, "戴上面具", COLOR_PURPLE, 30.0, 10000);
		PlayerPlaySound(playerid, 21000, 0.0, 0.0, 0.0);
		SetPlayerColor(playerid, 0x665E5E01);
		switch(PlayerInfo[playerid][pMember])
        {
            case 15: SetPlayerAttachedObject(playerid, 0, 18918, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
            case 12: SetPlayerAttachedObject(playerid, 0, 18915, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
            case 17: SetPlayerAttachedObject(playerid, 0, 18912, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
            case 13: SetPlayerAttachedObject(playerid, 0, 18916, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
            case 18: SetPlayerAttachedObject(playerid, 0, 18917, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
        }
		if(IsAMafia(playerid)) SetPlayerAttachedObject(playerid, 0, 19801, 2, 0.111052, 0.021643, -0.000846, 100.280899, 100.752510, 445.071044, 1.100000, 1.300000, 1.300000);
    }
    else
    {
        GetPlayerName(playerid, sn, sizeof(sn));
        RemovePlayerAttachedObject(playerid, 0);
        SetPlayerToTeamColor(playerid);
        PlayerInfo[playerid][pMaskON] = 0;
        PlayerPlaySound(playerid, 21001, 0.0, 0.0, 0.0);
        format(YCMDstr, sizeof(YCMDstr), "%s 取下了面具",  sn);
        ProxDetector(20.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
    return true;
}
cmd:mafiawar(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new t; gettime(t);
	if(t < 14 || t > 23) return SendErrorMessage(playerid,"黑手党战争开放时间: 14:00 到 23:00");
	new string[80];
	if(IsAMafia(playerid))
	{
		if(startwar == 1) return SendErrorMessage(playerid,"战争已经开始!");
		for(new h = 1; h <= TOTALBIZZ;h++)
		{
			if(PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] >= 7 || PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] >= 7 || PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] >= 7)
			{
				if(PlayerToPoint(3, playerid,BizzInfo[h][bEntrx], BizzInfo[h][bEntry], BizzInfo[h][bEntrz]) && BizzInfo[h][bMafia] != PlayerInfo[playerid][pMember])
				{
					if(war > 0)
					{
						format(string,sizeof(string),"― 战争在 %i 秒内开始",war);
						SendClientMessage(playerid,-1,string);
						return true;
					}
					if(BizzInfo[h][bMafia] == 0)
					{
						BizzInfo[h][bMafia] = PlayerInfo[playerid][pMember];
						SendServerMessage(playerid,"产业受到控制");
						SetBizzInt(h, "mafia", BizzInfo[h][bMafia]);
						return true;
					}
					if(BizzInfo[h][bMafia] > 0)
					{
						startwar = 1;
						format(string,sizeof(string),"― %s 向 %s 发动进攻,隶属于: %s",Name(playerid),BizzInfo[h][bName],GetMafiaName(BizzInfo[h][bMafia]));
						SendFamilyMessage(PlayerInfo[playerid][pMember],COLOR_RED,string);
						format(YCMDstr, 144, "― [A] 黑手党之间爆发了战争.");
						ABroadCast(COLOR_YELLOW, YCMDstr, 1);
						format(string,sizeof(string),"― 产业 %s 受到了来自 %s 的进攻 =-",BizzInfo[h][bName],GetMafiaName(PlayerInfo[playerid][pMember]));
						SendFamilyMessage(BizzInfo[h][bMafia],COLOR_RED,string);
						BizzInfo[h][bCapture] = 1;
						war = 6000;
						MZInfo[0][mNapad] = PlayerInfo[playerid][pMember];
						MZInfo[0][mFrakVlad] = BizzInfo[h][bMafia];
						ZoneTimerm[0] = 900;
						ZoneOnBattlem[0] = 1;
						zons = GangZoneCreate(328.755706, 2412.644531, 448.755706, 2564.644531);
						GangZoneShowForAll(zons, COLOR_NEWS);
						GangZoneFlashForAll(zons,COLOR_REDD);
						mafiawars++;
						if(MafiACheckGz == 0)
						{
							Timer[11] = gettime()+1;
							MafiACheckGz = 1;
						}
					}
				}
			}
		}
	}
	return true;
}
cmd:bizlist(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new string[128];
	SendServerMessage(playerid, "受控制的产业:");
	for(new h = 1; h <= TOTALBIZZ;h++)
	{
	    new mafiapay = BizzInfo[h][bTill]*3;
		switch(PlayerInfo[playerid][pMember])
		{
			case 6:
			{
			    if(BizzInfo[h][bMafia] == 6)
			    {
					format(string, sizeof(string), "");
					if (BizzInfo[h][bMafia] == 6) format(string, sizeof(string), "― {4080FF}%s {FFFFFF}| 利润: %d",BizzInfo[h][bName],mafiapay);
					if (strlen(string) > 1) SendClientMessage(playerid, -1, string);
				}
			}
			case 5:
			{
			    if(BizzInfo[h][bMafia] == 5)
			    {
					format(string, sizeof(string), "");
					if (BizzInfo[h][bMafia] == 5) format(string, sizeof(string), "― {4080FF}%s {FFFFFF}| 利润: %d",BizzInfo[h][bName],mafiapay);
					if (strlen(string) > 1) SendClientMessage(playerid, -1, string);
				}
			}
			case 14:
			{
			    if(BizzInfo[h][bMafia] == 14)
			    {
					format(string, sizeof(string), "");
					if (BizzInfo[h][bMafia] == 14) format(string, sizeof(string), "― {4080FF}%s {FFFFFF}| 利润: %d",BizzInfo[h][bName],mafiapay);
					if (strlen(string) > 1) SendClientMessage(playerid, -1, string);
				}
			}
		}
	}
	return true;
}
cmd:spwcar(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsPlayerConnected(playerid)) return true;
	if(PlayerInfo[playerid][pAdministration228] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d", params[0])) return SendServerMessage(playerid,"帮助: {4080FF}/spwcar [id]");
	SetVehicleToRespawn(params[0]);
	return true;
}
cmd:buyhouse(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsPlayerConnected(playerid)) return true;
	if(PlayerInfo[playerid][pQuest] == 1) return SendErrorMessage(playerid,"您在酒店注册了房间,请先退房.");
	if(Flood[playerid] > 0) return SendErrorMessage(playerid,"请不要输入这么快..");
	new cklass[15];
	for(new h = 1; h <= TotalHouse; h++)
	{
		if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 0)
		{
			if(PlayerInfo[playerid][pPhousekey] != 799 && strcmp(Name(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				SendErrorMessage(playerid,"你已经有了一个家!");
				return true;
			}
			if(PlayerInfo[playerid][pCash] < HouseInfo[h][hValue]) return SendErrorMessage(playerid,"你没有足够的钱!");
			PlayerInfo[playerid][pPhousekey] = h;
			PlayerInfo[playerid][pSpawnChange] = 1;
			HouseInfo[h][hOwned] = 1;
			HouseInfo[h][hHel] = 0;
			HouseInfo[h][hTakings] = 500;
			strmid(HouseInfo[h][hOwner],Name(playerid), 0, strlen(Name(playerid)), 255);
			PlayerInfo[playerid][pCash] -= HouseInfo[h][hValue];
			SetPlayerInterior(playerid,HouseInfo[h][hInt]);
			Q_SetPlayerPos(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
			PlayerInfo[playerid][pInt] = HouseInfo[h][hInt];
			SetPlayerVirtualWorld(playerid,h+50);
			PlayerInfo[playerid][pLocal] = h;
			if(HouseInfo[h][hKlass] == 0) { cklass = "50"; }
			else if(HouseInfo[h][hKlass] == 1) { cklass = "100"; }
			else if(HouseInfo[h][hKlass] == 2) { cklass = "150"; }
			else if(HouseInfo[h][hKlass] == 3) { cklass = "200"; }
			else if(HouseInfo[h][hKlass] == 4) { cklass = "300"; }
			SendServerMessage(playerid,"恭喜购买新房!");
			format(YCMDstr, sizeof(YCMDstr), "― 现在每个发薪日都会扣除你房屋的水电费等 {4080FF}%s $",cklass);
			SendClientMessage(playerid, -1,YCMDstr);
			SendServerMessage(playerid,"如果账户中没有足够的资金,你将会被驱逐,房屋归于国家.");
			SendServerMessage(playerid,"房屋版面输入指令 {4080FF}/hpanel");
			GameTextForPlayer(playerid,"~w~welcome home~n~print:~g~/exit and ALT", 5000, 3);
			PlayerInfo[playerid][pPhousekey2] = 799;
			BuyHouse(h);
			SaveProperty(h);
			if(caridhouse[playerid] != -1)
			{
				DestroyVehicle(caridhouse[playerid]);
				caridhouse[playerid] = -1;
			}
			new randik = random(sizeof(gparkcar));
			PlayerInfo[playerid][dCarx] = gparkcar[randik][0];
			PlayerInfo[playerid][dCary] = gparkcar[randik][1];
			PlayerInfo[playerid][dCarz] = gparkcar[randik][2];
			PlayerInfo[playerid][dCarc] = gparkcar[randik][3];
			caridhouse[playerid] = CreateVehicle(PlayerInfo[playerid][pCar], PlayerInfo[playerid][dCarx], PlayerInfo[playerid][dCary], PlayerInfo[playerid][dCarz], PlayerInfo[playerid][dCarc] , PlayerInfo[playerid][pColor][0] ,PlayerInfo[playerid][pColor][1], 86400);
            Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelcar];
			LockCar(caridhouse[playerid]);
			OnPlayerUpdateAc(playerid);
			Flood[playerid] = 10;
			return true;
		}
	}
	return true;
}
cmd:healaddict(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsPlayerConnected(playerid)) return true;
	if(PlayerInfo[playerid][pMember] != 4 && PlayerInfo[playerid][pMember] != 22 && PlayerInfo[playerid][pMember] != 33) return SendErrorMessage(playerid,"你不是医生!");
	if(sscanf(params, "u", params[0]))  return SendErrorMessage(playerid,"帮助: {4080FF}/healaddict {B4B5B7}[id/name]");
	if(!PlayerToPoint(100.0,playerid,1154.5562,-1323.7495,1001.0910) && !PlayerToPoint(100.0,playerid,1250.9677,-1160.1375,-47.4634)) return true;
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == INVALID_PLAYER_ID) return true;
	if(seans[params[0]] == 1)return SendErrorMessage(playerid,"目标正在戒毒!");
	if(PlayerInfo[params[0]][pAddiction] <=2000)return SendErrorMessage(playerid,"毒瘾不到 2000");
	if(params[0] == playerid)return SendErrorMessage(playerid,"目标不能为自己");
	PlayerInfo[params[0]][pAddiction] -=500;
	format(YCMDstr,sizeof(YCMDstr), "― 医生 %s 和你一起度过戒毒期",Name(playerid));
	SendClientMessage(params[0],-1,YCMDstr);
	format(YCMDstr,sizeof(YCMDstr), "― 你和 %s 一起度过戒毒期",Name(params[0]));
	SendClientMessage(playerid,-1,YCMDstr);
	seans[params[0]] = 1;
	return true;
}
cmd:drugs(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsPlayerConnected(playerid)) return true;
	if(sscanf(params, "d", params[0])) return SendServerMessage(playerid, "帮助: {4080FF}/drugs {B4B5B7}[数量]");
	new Float:health;
	GetPlayerHealth(playerid, health);
	if(PlayerInfo[playerid][pDrugs] < params[0]) return SendErrorMessage(playerid,"你没有那么多!");
	if(PlayerInfo[playerid][pDrugtime] > 0) return SendErrorMessage(playerid,"请等待2分钟再使用");
	if(PlayerInfo[playerid][pAddiction] < 2000 && params[0] < 1 || PlayerInfo[playerid][pAddiction] < 2000 && params[0] > 3) return SendErrorMessage(playerid,"现在不能超过3克");
	else if(PlayerInfo[playerid][pAddiction] < 5000 && params[0] < 1 || PlayerInfo[playerid][pAddiction] < 5000 && params[0] > 5) return SendErrorMessage(playerid,"现在不能超过5克");
	else if(PlayerInfo[playerid][pAddiction] > 5000 && params[0] < 1 || params[0] > 8) return SendErrorMessage(playerid,"现在不能超过8克");
	if(PlayerInfo[playerid][pAddiction] < 2000 && PlayerInfo[playerid][pNarcoLomka] != 2 && health > 120.0 ||
			PlayerInfo[playerid][pAddiction] < 5000 && PlayerInfo[playerid][pNarcoLomka] != 2 && health > 140.0 ||
			PlayerInfo[playerid][pAddiction] > 5000 && PlayerInfo[playerid][pNarcoLomka] != 2 && health > 180.0)
	{
		PlayerInfo[playerid][pNarcoLomka] = 2;
		SetPlayerTime(playerid,17,0);
		SetPlayerWeather(playerid, -68);
		PlayerStoned[playerid] = 0;
		ApplyAnimation(playerid, "CRACK", "crckdeth3", 4.0, 0, 0, 0, 1, 0);
		return true;
	}
	if(PlayerInfo[playerid][pAddiction] < 2000 && health+ 8.0*params[0] > 120)
	{
		SetPlayerHealthAC(playerid,120);
		PlayerInfo[playerid][pHP] +=120;
		SetPlayerTime(playerid,17,0);
		SetPlayerWeather(playerid, -67);
		SetPVarInt(playerid, "AddictionTimer", gettime()+120);
	}
	else if(PlayerInfo[playerid][pAddiction] < 5000 && health+ 8.0*params[0] > 140)
	{
		SetPlayerHealthAC(playerid,140);
		PlayerInfo[playerid][pHP] +=140;
		SetPVarInt(playerid, "AddictionTimer", gettime()+120);
	}
	else if(PlayerInfo[playerid][pAddiction] > 5000 && health+ 8.0*params[0] > 180)
	{
		SetPlayerHealthAC(playerid,180);
		PlayerInfo[playerid][pHP] +=180;
		SetPVarInt(playerid, "AddictionTimer", gettime()+120);
	}
	else
	{
		SetPlayerHealthAC(playerid, health + 8.0*params[0]);
		PlayerInfo[playerid][pHP] +=8*params[0];
		if(PlayerInfo[playerid][pAddiction] < 2000)
		{
			SetPlayerTime(playerid,17,0);
			SetPlayerWeather(playerid, -68);
			SetPVarInt(playerid, "AddictionTimer", gettime()+120);
		}
	}
	PlayerStoned[playerid] += 1;
	PlayerInfo[playerid][pNarcoLomka] = 0;
	SetPlayerDrunkLevel (playerid, 0);
	PlayerInfo[playerid][pDrugtime] = 120;
	PlayerInfo[playerid][pDrugs] -= params[0];
	ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
	SetPlayerChatBubble(playerid,"开始吸毒",COLOR_PURPLE,30.0,10000);
	format(YCMDstr,sizeof(YCMDstr), "%s 正在吸毒",Name(playerid));
	ProxDetector(10.0, playerid,YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	PlayerInfo[playerid][pAddiction] += 5*params[0];
	PlayerInfo[playerid][pAddiction] += 5*params[0];
	if(startaddiction[playerid] == 1)
	{
		startaddiction[playerid] = 0;
		ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
		PlayerInfo[playerid][pNarcoLomka] = 0;
	}
	return true;
}
cmd:makegun(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsAGang(playerid) && !IsAMafia(playerid)) return SendErrorMessage(playerid,"你不是帮派/黑手党!");
	for(new x; x < 25; x ++) TextDrawShowForPlayer(playerid, playergun[x]);
	SelectTextDraw(playerid, 0x20B2AAFF);
    clicktd[playerid] = true;
	return 1;
}
cmd:getgun(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	switch(PlayerInfo[playerid][pMember])
	{
	case 5:
		{
			if(PlayerToPoint(5.0,playerid,954.2139,94.2906,1001.2659))
			{
				if(PlayerInfo[playerid][pRank] < 3)return SendErrorMessage(playerid,"你的阶级低于 3!");
				if(StoreInfo[6][oLock] == 1) return SendErrorMessage(playerid,"仓库关闭了!");
				new listitems[] = " [1] Deagle\t[70 材料/50 发子弹]\n [2] Shotgun\t[50 材料/15 发子弹]\n [3] Rifle\t[100 材料/10 发子弹]\n [4] M4\t[500 材料/100 发子弹]\n [5] AK-47\t[500 材料/100 发子弹]\n [6] MP5\t[400 材料/200 发子弹]\n [7] SDPistol\t[100 材料/100 发子弹])";
				ShowPlayerDialog(playerid, 2014, DIALOG_STYLE_LIST, "{1E90FF}仓库: LCN", listitems, "选择", "退出");
			}
		}
	case 6:
		{
			if(PlayerToPoint(5.0,playerid,281.9512,238.4670,3340.9226))
			{
				if(PlayerInfo[playerid][pRank] < 3) return SendErrorMessage(playerid,"你的阶级低于 3!");
				if(StoreInfo[8][oLock] == 1) return SendErrorMessage(playerid,"仓库关闭了!");
				new listitems[] = " [1] Deagle\t[70 材料/50 发子弹]\n [2] Shotgun\t[50 材料/15 发子弹]\n [3] Rifle\t[100 材料/10 发子弹]\n [4] M4\t[500 材料/100 发子弹]\n [5] AK-47\t[500 材料/100 发子弹]\n [6] MP5\t[400 材料/200 发子弹]\n [7] SDPistol\t[100 材料/100 发子弹])";
				ShowPlayerDialog(playerid, 2013, DIALOG_STYLE_LIST, "{1E90FF}仓库: 山口组", listitems, "选择", "退出");
			}
		}
	case 14:
		{
			if(PlayerToPoint(5.0,playerid,1258.4004,-791.0316,1084.0078))
			{
				if(PlayerInfo[playerid][pRank] < 3)return SendErrorMessage(playerid,"你的阶级低于 3!");
				if(StoreInfo[7][oLock] == 1) return SendErrorMessage(playerid,"仓库关闭了!");
				new listitems[] = " [1] Deagle\t[70 材料/50 发子弹]\n [2] Shotgun\t[50 材料/15 发子弹]\n [3] Rifle\t[100 材料/10 发子弹]\n [4] M4\t[500 材料/100 发子弹]\n [5] AK-47\t[500 材料/100 发子弹]\n [6] MP5\t[400 材料/200 发子弹]\n [7] SDPistol\t[100 材料/100 发子弹])";
				ShowPlayerDialog(playerid, 2015, DIALOG_STYLE_LIST, "{1E90FF}仓库: 俄罗斯黑手党", listitems, "选择", "退出");
			}
		}
	}
	return true;
}
cmd:unloading(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new tmpcar = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482) return SendErrorMessage(playerid,"车辆不是面包车(482)!");
	if(PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] >= 1)
	{
		if(Furi[tmpcar-matsfura][gBallas] <= 0) return SendErrorMessage(playerid,"材料不足");
		if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
		{
			lcnmats += Furi[tmpcar-matsfura][gBallas];
			Furi[tmpcar-matsfura][gBallas] = 0;
			format(YCMDstr, sizeof(YCMDstr), "― 材料卸货! 面包车容量: %i/5000 材料", Furi[tmpcar-matsfura][gBallas]);
			SendClientMessage(playerid, -1, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "― 黑手党 LCN 仓库: %i 材料", lcnmats);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
		{
			rmmats += Furi[tmpcar-matsfura][gBallas];
			Furi[tmpcar-matsfura][gBallas] = 0;
			format(YCMDstr, sizeof(YCMDstr), "― 材料卸货! 面包车容量: %i/5000 材料", Furi[tmpcar-matsfura][gBallas]);
			SendClientMessage(playerid, -1, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "― 俄罗斯黑手党仓库: %i 材料", rmmats);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
		{
			yakuzamats += Furi[tmpcar-matsfura][gBallas];
			Furi[tmpcar-matsfura][gBallas] = 0;
			format(YCMDstr, sizeof(YCMDstr), "― 材料卸货! 面包车容量: %i/5000 材料",Furi[tmpcar-matsfura][gBallas]);
			SendClientMessage(playerid, -1, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "― 黑手党 山口组 仓库: %i 材料", yakuzamats);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
		if(!IsATerra (playerid)) return SendErrorMessage(playerid,"你不在你的基地");
		if(ballasmatbi > 50000) return  SendErrorMessage(playerid,"仓库已满");
		ballasmatbi += Furi[tmpcar-matsfura][gBallas];
		Furi[tmpcar-matsfura][gBallas] = 0;
		SendSyntaxMessage(playerid, "材料卸货");
	}
	else if(PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] >= 1)
	{
		if(Furi[tmpcar-matsfuravagos][gVagos] <= 0) return SendErrorMessage(playerid,"材料不足");
		if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
		{
			lcnmats += Furi[tmpcar-matsfuravagos][gVagos];
			Furi[tmpcar-matsfuravagos][gVagos] = 0;
			format(YCMDstr, sizeof(YCMDstr), "― 材料卸货! 面包车容量: %i/5000 材料", Furi[tmpcar-matsfuravagos][gVagos]);
			SendClientMessage(playerid, -1, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "― 黑手党 LCN 仓库: %i 材料", lcnmats);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
		{
			rmmats += Furi[tmpcar-matsfuravagos][gVagos];
			Furi[tmpcar-matsfuravagos][gVagos] = 0;
			format(YCMDstr, sizeof(YCMDstr), "― 材料卸货! 面包车容量: %i/5000 材料", Furi[tmpcar-matsfuravagos][gVagos]);
			SendClientMessage(playerid, -1, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "― 俄罗斯黑手党仓库: %i 材料", rmmats);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
		{
			yakuzamats += Furi[tmpcar-matsfuravagos][gVagos];
			Furi[tmpcar-matsfuravagos][gVagos] = 0;
			format(YCMDstr, sizeof(YCMDstr), "― 材料卸货! 面包车容量: %i/5000 材料", Furi[tmpcar-matsfuravagos][gVagos]);
			SendClientMessage(playerid, -1, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "― 黑手党 山口组 仓库: %i 材料", yakuzamats);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
		if(!IsATerra (playerid)) return SendErrorMessage(playerid,"你不在你的基地");
		if(vagosmatbi > 50000) return SendErrorMessage(playerid,"仓库已满");
		vagosmatbi += Furi[tmpcar-matsfuravagos][gVagos];
		Furi[tmpcar-matsfuravagos][gVagos] = 0;
		SendSyntaxMessage(playerid, "材料卸货");
	}
	else if(PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pRank] >= 1)
	{
		if(Furi[tmpcar-matsfuragrove][gGrove] <= 0) return   SendErrorMessage(playerid,"材料不足");
		if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
		{
			lcnmats +=  Furi[tmpcar-matsfuragrove][gGrove];
			Furi[tmpcar-matsfuragrove][gGrove] = 0;
			format(YCMDstr, sizeof(YCMDstr), "― 材料卸货! 面包车容量: %i/5000 材料", Furi[tmpcar-matsfuragrove][gGrove]);
			SendClientMessage(playerid, -1, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "― 黑手党 LCN 仓库: %i 材料", lcnmats);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
		{
			rmmats += Furi[tmpcar-matsfuragrove][gGrove];
			Furi[tmpcar-matsfuragrove][gGrove] = 0;
			format(YCMDstr, sizeof(YCMDstr), "― 材料卸货! 面包车容量: %i/5000 材料", Furi[tmpcar-matsfuragrove][gGrove]);
			SendClientMessage(playerid, -1, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "― 俄罗斯黑手党仓库: %i 材料", rmmats);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
		{
			yakuzamats += Furi[tmpcar-matsfuragrove][gGrove];
			Furi[tmpcar-matsfuragrove][gGrove] = 0;
			format(YCMDstr, sizeof(YCMDstr), "― 材料卸货! 面包车容量: %i/5000 材料", Furi[tmpcar-matsfuragrove][gGrove]);
			SendClientMessage(playerid, -1, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "― 黑手党 山口组 仓库: %i 材料", yakuzamats);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
		if(!IsATerra (playerid)) return SendErrorMessage(playerid,"你不在你的基地");
		if(groovmatbi > 50000) return   SendErrorMessage(playerid,"仓库已满");
		groovmatbi += Furi[tmpcar-matsfuragrove][gGrove];
		Furi[tmpcar-matsfuragrove][gGrove] = 0;
		SendSyntaxMessage(playerid, "材料卸货");
	}
	else if(PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pRank] >= 1)
	{
		if(Furi[tmpcar-matsfuraactek][gAztek] <= 0) return  SendErrorMessage(playerid,"材料不足");
		if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
		{
			lcnmats +=  Furi[tmpcar-matsfuraactek][gAztek];
			Furi[tmpcar-matsfuraactek][gAztek] = 0;
			format(YCMDstr, sizeof(YCMDstr), "― 材料卸货! 面包车容量: %i/5000 材料", Furi[tmpcar-matsfuraactek][gAztek]);
			SendClientMessage(playerid, -1, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "― 黑手党 LCN 仓库: %i 材料", lcnmats);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
		{
			rmmats += Furi[tmpcar-matsfuraactek][gAztek];
			Furi[tmpcar-matsfuraactek][gAztek] = 0;
			format(YCMDstr, sizeof(YCMDstr), "― 材料卸货! 面包车容量: %i/5000 材料", Furi[tmpcar-matsfuraactek][gAztek]);
			SendClientMessage(playerid, -1, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "― 俄罗斯黑手党仓库: %i 材料", rmmats);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
		{
			yakuzamats += Furi[tmpcar-matsfuraactek][gAztek];
			Furi[tmpcar-matsfuraactek][gAztek] = 0;
			format(YCMDstr, sizeof(YCMDstr), "― 材料卸货! 面包车容量: %i/5000 材料", Furi[tmpcar-matsfuraactek][gAztek]);
			SendClientMessage(playerid, -1, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "― 黑手党 山口组 仓库: %i 材料", yakuzamats);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
		if(!IsATerra (playerid)) return SendErrorMessage(playerid,"你不在你的基地");
		if(aztekmatbi > 50000) return SendErrorMessage(playerid,"仓库已满");
		aztekmatbi += Furi[tmpcar-matsfuraactek][gAztek];
		Furi[tmpcar-matsfuraactek][gAztek] = 0;
		SendSyntaxMessage(playerid, "材料卸货");
	}
	else if(PlayerInfo[playerid][pMember] == 18 && PlayerInfo[playerid][pRank] >= 1)
	{
		if(Furi[tmpcar-matsfurarifa][gRifa] <= 0) return SendErrorMessage(playerid,"材料不足");
		if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
		{
			lcnmats +=  Furi[tmpcar-matsfurarifa][gRifa];
			Furi[tmpcar-matsfurarifa][gRifa] = 0;
			format(YCMDstr, sizeof(YCMDstr), "― 材料卸货! 面包车容量: %i/5000 材料", Furi[tmpcar-matsfurarifa][gRifa]);
			SendClientMessage(playerid, -1, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "― 黑手党 LCN 仓库: %i 材料", lcnmats);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
		{
			rmmats += Furi[tmpcar-matsfurarifa][gRifa];
			Furi[tmpcar-matsfurarifa][gRifa] = 0;
			format(YCMDstr, sizeof(YCMDstr), "― 材料卸货! 面包车容量: %i/5000 材料", Furi[tmpcar-matsfurarifa][gRifa]);
			SendClientMessage(playerid, -1, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "― 俄罗斯黑手党仓库: %i 材料", rmmats);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
		{
			yakuzamats += Furi[tmpcar-matsfurarifa][gRifa];
			Furi[tmpcar-matsfurarifa][gRifa] = 0;
			format(YCMDstr, sizeof(YCMDstr), "― 材料卸货! 面包车容量: %i/5000 材料", Furi[tmpcar-matsfurarifa][gRifa]);
			SendClientMessage(playerid, -1, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "― 黑手党 山口组 仓库: %i 材料", yakuzamats);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
		if(!IsATerra (playerid)) return SendErrorMessage(playerid,"你不在你的基地");
		if(rifamatbi > 50000) return   SendErrorMessage(playerid,"仓库已满");
		rifamatbi += Furi[tmpcar-matsfurarifa][gRifa];
		Furi[tmpcar-matsfurarifa][gRifa] = 0;
		SendSyntaxMessage(playerid, "材料卸货");
	}
	else if(PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] >= 1)
	{
		if(Furi[tmpcar-matslcn][gLcn] <= 0) return SendErrorMessage(playerid,"材料不足");
		if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
		{
			lcnmats +=  Furi[tmpcar-matslcn][gLcn];
			Furi[tmpcar-matslcn][gLcn] = 0;
			format(YCMDstr, sizeof(YCMDstr), "― 材料卸货! 面包车容量: %i/5000 材料", Furi[tmpcar-matslcn][gLcn]);
			SendClientMessage(playerid, -1, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "― 黑手党 LCN 仓库: %i 材料", lcnmats);
			SendClientMessage(playerid, -1, YCMDstr);
        }
        return true;
	}
	else if(PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] >= 1)
	{
		if(Furi[tmpcar-matsyakuza][gYakuza] <= 0) return SendErrorMessage(playerid,"材料不足");
		if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
		{
			yakuzamats += Furi[tmpcar-matsyakuza][gYakuza];
			Furi[tmpcar-matsyakuza][gYakuza] = 0;
			format(YCMDstr, sizeof(YCMDstr), "― 材料卸货! 面包车容量: %i/5000 材料", Furi[tmpcar-matsyakuza][gYakuza]);
			SendClientMessage(playerid, -1, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "― 黑手党 山口组 仓库: %i 材料", yakuzamats);
			SendClientMessage(playerid, -1, YCMDstr);
        }
        return true;
	}
	else if(PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] >= 1)
	{
		if(Furi[tmpcar-matsrm][gRm] <= 0) return SendErrorMessage(playerid,"材料不足");
		if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
		{
			rmmats += Furi[tmpcar-matsrm][gRm];
			Furi[tmpcar-matsrm][gRm] = 0;
			format(YCMDstr, sizeof(YCMDstr), "― 材料卸货! 面包车容量: %i/5000 材料", Furi[tmpcar-matsrm][gRm]);
			SendClientMessage(playerid, -1, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "―俄罗斯黑手党仓库: %i 材料", rmmats);
			SendClientMessage(playerid, -1, YCMDstr);
        }
	}
	return true;
}
cmd:carmat(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMember] != 3) return true;
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 548) return SendErrorMessage(playerid,"你不在装载直升机(548)!");
	SetPlayerCheckpoint(playerid,-1420.4194,1485.6796,11.8084,14.0);
	SendSyntaxMessage(playerid, "跟随检查点");
	VertMats[playerid] = 1;
	return true;
}
cmd:gbank(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	switch(PlayerInfo[playerid][pMember])
	{
	case 15:
		{
			format(YCMDstr, sizeof(YCMDstr), "格罗夫帮派账户: {4080FF}%i $", FracBank[6]);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
	case 12:
		{
			format(YCMDstr, sizeof(YCMDstr), "巴拉斯帮派账户: {4080FF}%i $", FracBank[4]);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
	case 13:
		{
			format(YCMDstr, sizeof(YCMDstr), "瓦戈斯帮派账户: {4080FF}%i $", FracBank[5]);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
	case 17:
		{
			format(YCMDstr, sizeof(YCMDstr), "阿兹特克帮派账户: {4080FF}%i $", FracBank[7]);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
	case 18:
		{
			format(YCMDstr, sizeof(YCMDstr), "14K帮派账户: {4080FF}%i $", FracBank[8]);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
	}
	return true;
}
cmd:gbankwithdraw(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pLeader] == 18)
	if(sscanf(params, "d", params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/gbankwithdraw {B4B5B7}[数量]");
	if(PlayerInfo[playerid][pSnyal] == 1) return SendErrorMessage(playerid," 你每天只能使用一次.");
	if(PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] == 10)
	{
	    if(params[1] < 0 || params[1] > 50000) return SendErrorMessage(playerid,"数量不能超过 50.000$");
		if(FracBank[4] == 0) return SendErrorMessage(playerid,"没有钱!");
		if(FracBank[4] < params[0]) return SendErrorMessage(playerid,"没有那么多钱!");
		FracBank[4] -= params[0];
		SetOtherInt("FracBank[4]", FracBank[4]);
		PlayerInfo[playerid][pCash] += params[0];
		PlayerInfo[playerid][pSnyal] = 1;
		format(YCMDstr, sizeof(YCMDstr), "― 从帮派取出: %i $", params[0]);
		SendClientMessage(playerid, -1, YCMDstr);
	}
	else if(PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] == 10)
	{
		if(FracBank[5] == 0) return SendErrorMessage(playerid,"没有钱!");
		if(FracBank[5] < params[0]) return SendErrorMessage(playerid,"没有那么多钱!");
		if(params[0] > 50000 || params[0] < 1) return SendErrorMessage(playerid,"数量不能超过 50.000$");
		FracBank[5] -= params[0];
		SetOtherInt("FracBank[5]", FracBank[5]);
		PlayerInfo[playerid][pCash] +=params[0];
		PlayerInfo[playerid][pSnyal] = 1;
		format(YCMDstr, sizeof(YCMDstr), "― 从帮派取出: %i $", params[0]);
		SendClientMessage(playerid, -1, YCMDstr);
	}
	else if(PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pRank] == 10)
	{
		if(FracBank[6] == 0) return SendErrorMessage(playerid,"没有钱!");
		if(FracBank[6] < params[0]) return SendErrorMessage(playerid,"没有那么多钱!");
		if(params[0] > 50000 || params[0] < 1) return SendErrorMessage(playerid,"数量不能超过 50.000$!");
		FracBank[6] -= params[0];
		SetOtherInt("FracBank[6]", FracBank[6]);
		PlayerInfo[playerid][pCash] +=params[0];
		PlayerInfo[playerid][pSnyal] = 1;
		format(YCMDstr, sizeof(YCMDstr), "― 从帮派取出: %i $", params[0]);
		SendClientMessage(playerid, -1, YCMDstr);
	}
	else if(PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pRank] == 10)
	{
		if(FracBank[7] == 0) return SendErrorMessage(playerid,"没有钱!");
		if(FracBank[7] < params[0]) return SendErrorMessage(playerid,"没有那么多钱!");
		if(params[0] > 50000 || params[0] < 1) return SendErrorMessage(playerid,"数量不能超过 50.000$!");
		FracBank[7] -= params[0];
		SetOtherInt("FracBank[7]", FracBank[7]);
		PlayerInfo[playerid][pCash] +=params[0];
		PlayerInfo[playerid][pSnyal] = 1;
		format(YCMDstr, sizeof(YCMDstr), "― 从帮派取出: %i $", params[0]);
		SendClientMessage(playerid, -1, YCMDstr);
	}
	else if(PlayerInfo[playerid][pMember] == 18 && PlayerInfo[playerid][pRank] == 10)
	{
		if(FracBank[8] == 0) return SendErrorMessage(playerid,"没有钱!");
		if(FracBank[8] < params[0]) return SendErrorMessage(playerid,"没有那么多钱!");
		if(params[0] > 50000 || params[0] < 1) return SendErrorMessage(playerid,"数量不能超过 50.0000$!");
		FracBank[8] -= params[0];
		SetOtherInt("FracBank[8]", FracBank[8]);
		PlayerInfo[playerid][pCash] +=params[0];
		PlayerInfo[playerid][pSnyal] = 1;
		format(YCMDstr, sizeof(YCMDstr), "― 从帮派取出: %i $", params[0]);
		SendClientMessage(playerid, -1, YCMDstr);
	}
	return true;
}
cmd:gbankput(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pMember] == 18)
	if(sscanf(params, "d", params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/gbankput {B4B5B7}[数量]");
	if(params[0] < 1) return SendErrorMessage(playerid,"不能低于 1!");
	if(PlayerInfo[playerid][pMember] == 15)
	{
		if(PlayerInfo[playerid][pCash] < params[0]) return SendErrorMessage(playerid,"你没有足够的钱!");
		FracBank[6] += params[0];
		SetOtherInt("FracBank[6]", FracBank[14]);
		PlayerInfo[playerid][pCash] -= params[0];
		format(YCMDstr, sizeof(YCMDstr), "― 你存入帮派: %i $", params[0]);
		SendClientMessage(playerid, -1, YCMDstr);
		OnPlayerUpdateAc(playerid);
	}
	if(PlayerInfo[playerid][pMember] == 12)
	{
		if(PlayerInfo[playerid][pCash] < params[0]) return SendErrorMessage(playerid,"你没有足够的钱!");
		FracBank[4] += params[0];
		SetOtherInt("FracBank[4]", FracBank[4]);
		PlayerInfo[playerid][pCash] -= params[0];
		format(YCMDstr, sizeof(YCMDstr), "― 你存入帮派: %i $", params[0]);
		SendClientMessage(playerid, -1, YCMDstr);
		OnPlayerUpdateAc(playerid);
	}
	if(PlayerInfo[playerid][pMember] == 13)
	{
		if(PlayerInfo[playerid][pCash] < params[0]) return SendErrorMessage(playerid,"你没有足够的钱!");
		FracBank[5] += params[0];
		SetOtherInt("FracBank[5]", FracBank[5]);
		PlayerInfo[playerid][pCash] -= params[0];
		format(YCMDstr, sizeof(YCMDstr), "― 你存入帮派: %i $", params[0]);
		SendClientMessage(playerid, -1, YCMDstr);
		OnPlayerUpdateAc(playerid);
	}
	if(PlayerInfo[playerid][pMember] == 17)
	{
		if(PlayerInfo[playerid][pCash] < params[0]) return SendErrorMessage(playerid,"你没有足够的钱!");
		FracBank[7] += params[0];
		SetOtherInt("FracBank[7]", FracBank[7]);
		PlayerInfo[playerid][pCash] -= params[0];
		format(YCMDstr, sizeof(YCMDstr), "― 你存入帮派: %i $", params[0]);
		SendClientMessage(playerid, -1, YCMDstr);
		OnPlayerUpdateAc(playerid);
	}
	if(PlayerInfo[playerid][pMember] == 18)
	{
		if(PlayerInfo[playerid][pCash] < params[0]) return SendErrorMessage(playerid,"你没有足够的钱!");
		FracBank[8] += params[0];
		SetOtherInt("FracBank[8]", FracBank[8]);
		PlayerInfo[playerid][pCash] -= params[0];
		format(YCMDstr, sizeof(YCMDstr), "― 你存入帮派: %i $", params[0]);
		SendClientMessage(playerid, -1, YCMDstr);
		OnPlayerUpdateAc(playerid);
	}
	return true;
}
cmd:newsbank(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	switch(PlayerInfo[playerid][pMember])
	{
	case 16:
		{
			format(YCMDstr, sizeof(YCMDstr), "大众传媒账户余额: %i $", FracBank[0]);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
	}
	return true;
}
cmd:newswithdraw(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pLeader] == 16)
	if(sscanf(params, "d", params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/newswithdraw {B4B5B7}[数量]");
	if(params[1] < 0 || params[1] > 50000) return SendErrorMessage(playerid,"数量不能超过 50.000$");
	if(PlayerInfo[playerid][pSnyal] == 1) return SendErrorMessage(playerid," 每天只能使用一次.");
	if(PlayerInfo[playerid][pMember] == 16 && PlayerInfo[playerid][pRank] == 10)
	{
		if(FracBank[0] == 0) return SendErrorMessage(playerid,"没有钱!");
		if(FracBank[0] < params[0]) return SendErrorMessage(playerid,"没有那么多钱!");
		FracBank[0] -= params[0];
		SetOtherInt("FracBank[0]", FracBank[0]);
		PlayerInfo[playerid][pCash] +=params[0];
		PlayerInfo[playerid][pSnyal] = 1;
		format(YCMDstr, sizeof(YCMDstr), "― 从大众传媒取出: %i $", params[0]);
		SendClientMessage(playerid, -1, YCMDstr);
	}
	return true;
}
cmd:mafiabalance(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	switch(PlayerInfo[playerid][pMember])
	{
	case 6:
		{
			format(YCMDstr, sizeof(YCMDstr), "黑手党账户: %i $", MafiaBank[2]);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
	case 14:
		{
			format(YCMDstr, sizeof(YCMDstr), "黑手党账户: %i $", MafiaBank[1]);
			SendClientMessage(playerid, -1, YCMDstr);
			return true;
		}
	case 5:
		{
			format(YCMDstr, sizeof(YCMDstr), "黑手党账户: %i $", MafiaBank[0]);
			SendClientMessage(playerid, -1, YCMDstr);
		}
	}
	return true;
}
cmd:mafiawithdraw(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pLeader] == 5)
	if(sscanf(params, "d", params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/mafiawithdraw {B4B5B7}[数量]");
	if(PlayerInfo[playerid][pSnyal] == 1) return SendErrorMessage(playerid," 每天只能使用一次.");
	if(params[1] < 0 || params[1] > 50000) return SendErrorMessage(playerid,"数量不能超过 50.000$");
	if(PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] >= 10)
	{
		if(MafiaBank[2] <= 0) return SendErrorMessage(playerid,"没有钱!");
		if(MafiaBank[2] < params[0]) return SendErrorMessage(playerid,"没有那么多钱!");
		MafiaBank[2] -= params[0];
		SetOtherInt("MafiaBank[2]", MafiaBank[2]);
		PlayerInfo[playerid][pCash] +=params[0];
		PlayerInfo[playerid][pSnyal] = 1;
		format(YCMDstr, sizeof(YCMDstr), "― 从黑手党取出: %i $", params[0]);
		SendClientMessage(playerid, -1, YCMDstr);
	}
	else if(PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] >= 8)
	{
		if(MafiaBank[1] <= 0) return SendErrorMessage(playerid,"没有钱!");
		if(MafiaBank[1] < params[0]) return SendErrorMessage(playerid,"没有那么多钱!");
		MafiaBank[1] -= params[0];
		SetOtherInt("MafiaBank[1]", MafiaBank[1]);
		PlayerInfo[playerid][pCash] +=params[0];
		PlayerInfo[playerid][pSnyal] = 1;
		format(YCMDstr, sizeof(YCMDstr), "― 从黑手党取出: %i $", params[0]);
		SendClientMessage(playerid, -1, YCMDstr);
	}
	else if(PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] >= 10)
	{
		if(MafiaBank[0] <= 0) return SendErrorMessage(playerid,"没有钱!");
		if(MafiaBank[0] < params[0]) return SendErrorMessage(playerid,"没有那么多钱!");
		MafiaBank[0] -= params[0];
		PlayerInfo[playerid][pCash] +=params[0];
		SetOtherInt("MafiaBank[0]", MafiaBank[0]);
		PlayerInfo[playerid][pSnyal] = 1;
		format(YCMDstr, sizeof(YCMDstr), "― 从黑手党取出: %i $", params[0]);
		SendClientMessage(playerid, -1, YCMDstr);
	}
	return true;
}
cmd:mafiabank(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pLeader] == 5)
	if(sscanf(params, "d", params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/mafiabank {B4B5B7}[数量]");
	if(params[0] < 1 || PlayerInfo[playerid][pCash] < params[0]) return SendErrorMessage(playerid,"你没有那么多钱!");
	if(PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] >= 1)
	{
		MafiaBank[2] += params[0];
		PlayerInfo[playerid][pCash] -=params[0];
		SetOtherInt("MafiaBank[2]", MafiaBank[2]);
		format(YCMDstr, sizeof(YCMDstr), "存入黑手党: %i $", params[0]);
		SendClientMessage(playerid, -1, YCMDstr);
		OnPlayerUpdateAc(playerid);
	}
	else if(PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] >= 1)
	{
		MafiaBank[1] += params[0];
		PlayerInfo[playerid][pCash] -=params[0];
		SetOtherInt("MafiaBank[1]", MafiaBank[1]);
		format(YCMDstr, sizeof(YCMDstr), "存入黑手党: %i $", params[0]);
		SendClientMessage(playerid, -1, YCMDstr);
		OnPlayerUpdateAc(playerid);
	}
	else if(PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] >= 1)
	{
		MafiaBank[0] += params[0];
		PlayerInfo[playerid][pCash] -=params[0];
		SetOtherInt("MafiaBank[0]", MafiaBank[0]);
		format(YCMDstr, sizeof(YCMDstr), "存入黑手党: %i $", params[0]);
		SendClientMessage(playerid, -1, YCMDstr);
		OnPlayerUpdateAc(playerid);
	}
	return true;
}
cmd:materials(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new x_nr[256];
	if(IsPlayerConnected(playerid))
	{
		new string[128];
		if(sscanf(params, "s[64]", x_nr))
		{
			SendErrorMessage(playerid,"帮助: {4080FF}/materials {B4B5B7}[数量]");
			return true;
		}
		if(strcmp(x_nr, "buy",true) == 0)
		{
			if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pLeader] > 21 && PlayerInfo[playerid][pLeader] < 34)
			{
				format(string, sizeof(string), "你确定以 60000$ 的价格购买 50000 材料?");
				ShowPlayerDialog(playerid,9298,DIALOG_STYLE_MSGBOX, "{1E90FF}购买材料",string, "确定", "退出");
				return true;
			}
		}
		else if(strcmp(x_nr, "put",true) == 0)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482) return SendErrorMessage(playerid,"需要面包车(482)!");
			switch(PlayerInfo[playerid][pMember])
			{
			case 12:
				{
					if(PlayerInfo[playerid][pMats] < 250)
					{
						SendErrorMessage(playerid,"你的材料小于 250");
						format(string, sizeof(string), "材料: %i/5000", Furi[tmpcar-matsfura][gBallas]);
						SendClientMessage(playerid, -1, string);
						return true;
					}
					if(Furi[tmpcar-matsfura][gBallas] >= 5000) return SendErrorMessage(playerid,"面包车已经满了");
					SendSyntaxMessage(playerid, "你将 250 材料放入面包车");
					Furi[tmpcar-matsfura][gBallas] += 250;
					PlayerInfo[playerid][pMats] -=250;
					usemats[playerid] = 0;
					usegruz[playerid] = 0;
					RemovePlayerAttachedObject(playerid, 1);
					format(string, sizeof(string), "材料: %i/5000", Furi[tmpcar-matsfura][gBallas]);
					SendClientMessage(playerid, -1, string);
				}
			case 13:
				{
					if(PlayerInfo[playerid][pMats] < 250)
					{
						SendErrorMessage(playerid,"你的材料小于 250");
						format(string, sizeof(string), "材料: %i/5000", Furi[tmpcar-matsfuravagos][gVagos]);
						SendClientMessage(playerid, -1, string);
						return true;
					}
					if(Furi[tmpcar-matsfuravagos][gVagos] >= 5000) return SendErrorMessage(playerid,"面包车已经满了");
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482)  return SendErrorMessage(playerid,"需要面包车(482)!");
					SendSyntaxMessage(playerid, "你放入 250 材料");
					Furi[tmpcar-matsfuravagos][gVagos] += 250;
					PlayerInfo[playerid][pMats] -=250;
					usemats[playerid] = 0;
					usegruz[playerid] = 0;
					RemovePlayerAttachedObject(playerid, 1);
					format(string, sizeof(string), "材料: %i/5000", Furi[tmpcar-matsfuravagos][gVagos]);
					SendClientMessage(playerid, -1, string);
				}
			case 15:
				{
					if(PlayerInfo[playerid][pMats] < 250)
					{
						SendErrorMessage(playerid,"你的材料小于 250");
						format(string, sizeof(string), "材料: %i/5000", Furi[tmpcar-matsfuragrove][gGrove]);
						SendClientMessage(playerid, -1, string);
						return true;
					}
					if(Furi[tmpcar-matsfuragrove][gGrove] >= 5000) return SendErrorMessage(playerid,"面包车已经满了");
					SendSyntaxMessage(playerid, "你放入 250 材料");
					Furi[tmpcar-matsfuragrove][gGrove] += 250;
					PlayerInfo[playerid][pMats] -=250;
					usemats[playerid] = 0;
					usegruz[playerid] = 0;
					RemovePlayerAttachedObject(playerid, 1);
					format(string, sizeof(string), "材料: %i/5000", Furi[tmpcar-matsfuragrove][gGrove]);
					SendClientMessage(playerid, -1, string);
				}
			case 17:
				{
					if(PlayerInfo[playerid][pMats] < 250)
					{
						SendErrorMessage(playerid,"你的材料小于 250");
						format(string, sizeof(string), "材料: %i/5000", Furi[tmpcar-matsfuraactek][gAztek]);
						SendClientMessage(playerid, -1, string);
						return true;
					}
					if(Furi[tmpcar-matsfuraactek][gAztek] >= 5000)return SendErrorMessage(playerid,"面包车已经满了");
					SendSyntaxMessage(playerid, "你放入 250 材料");
					Furi[tmpcar-matsfuraactek][gAztek] += 250;
					PlayerInfo[playerid][pMats] -=250;
					usemats[playerid] = 0;
					usegruz[playerid] = 0;
					RemovePlayerAttachedObject(playerid, 1);
					format(string, sizeof(string), "材料: %i/5000", Furi[tmpcar-matsfuraactek][gAztek]);
					SendClientMessage(playerid, -1, string);
				}
			case 18:
				{
					if(PlayerInfo[playerid][pMats] < 250)
					{
						SendErrorMessage(playerid,"你的材料小于 250");
						format(string, sizeof(string), "材料: %i/5000", Furi[tmpcar-matsfurarifa][gRifa]);
						SendClientMessage(playerid, -1, string);
						return true;
					}
					if(Furi[tmpcar-matsfurarifa][gRifa] >= 5000)return SendErrorMessage(playerid,"面包车已经满了");
					SendSyntaxMessage(playerid, "你放入 250 材料");
					Furi[tmpcar-matsfurarifa][gRifa] += 250;
					PlayerInfo[playerid][pMats] -=250;
					usemats[playerid] = 0;
					usegruz[playerid] = 0;
					RemovePlayerAttachedObject(playerid, 1);
					format(string, sizeof(string), "材料: %i/5000", Furi[tmpcar-matsfurarifa][gRifa]);
					SendClientMessage(playerid, -1, string);
				}
            case 6:
                {
					if(PlayerInfo[playerid][pMats] < 250)
					{
						SendErrorMessage(playerid,"你的材料小于 250");
						format(string, sizeof(string), "材料: %i/5000", Furi[tmpcar-matsyakuza][gYakuza]);
						SendClientMessage(playerid, -1, string);
						return true;
					}
					if(Furi[tmpcar-matsyakuza][gYakuza] >= 5000)return SendErrorMessage(playerid,"面包车已经满了");
	    	        Furi[tmpcar-matsyakuza][gYakuza] += 250;
     	            PlayerInfo[playerid][pMats] -= 250;
   	                usemats[playerid] = 0;
 	                usegruz[playerid] = 0;
 	                RemovePlayerAttachedObject(playerid, 1);
                    SendSyntaxMessage(playerid, "你放入 250 材料");
                    ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,1,0);
 	                format(string, sizeof(string), "材料: %i/5000", Furi[tmpcar-matsyakuza][gYakuza]);
					SendClientMessage(playerid, -1, string);
                }
            case 5:
                {
					if(PlayerInfo[playerid][pMats] < 250)
					{
						SendErrorMessage(playerid,"你的材料小于 250");
						format(string, sizeof(string), "材料: %i/5000", Furi[tmpcar-matslcn][gLcn]);
						SendClientMessage(playerid, -1, string);
						return true;
					}
					if(Furi[tmpcar-matslcn][gLcn] >= 5000)return SendErrorMessage(playerid,"面包车已经满了");
  		            Furi[tmpcar-matslcn][gLcn] += 250;
 		            PlayerInfo[playerid][pMats] -= 250;
 		            usemats[playerid] = 0;
		            usegruz[playerid] = 0;
		            RemovePlayerAttachedObject(playerid, 1);
                    SendSyntaxMessage(playerid, "你放入 250 材料");
                    ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,1,0);
	         	    format(string, sizeof(string), "材料: %i/5000", Furi[tmpcar-matslcn][gLcn]);
					SendClientMessage(playerid, -1, string);
	            }
            case 14:
                {
					if(PlayerInfo[playerid][pMats] < 250)
					{
						SendErrorMessage(playerid,"你的材料小于 250");
						format(string, sizeof(string), "材料: %i/5000", Furi[tmpcar-matsrm][gRm]);
						SendClientMessage(playerid, -1, string);
						return true;
					}
					if(Furi[tmpcar-matsrm][gRm] >= 5000)return SendErrorMessage(playerid,"面包车已经满了");
		       	    Furi[tmpcar-matsrm][gRm] += 250;
	         	    PlayerInfo[playerid][pMats] -= 250;
            	    usemats[playerid] = 0;
	           	    usegruz[playerid] = 0;
    	            RemovePlayerAttachedObject(playerid, 1);
                    SendSyntaxMessage(playerid, "你放入 250 材料");
                    ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,1,0);
	          	    format(string, sizeof(string), "材料: %i/5000", Furi[tmpcar-matsrm][gRm]);
					SendClientMessage(playerid, -1, string);
			    }
			}
		}
	}
	return true;
}
cmd:abalance(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new string[128];
	if(PlayerInfo[playerid][pAdministration228] < 7 || dostup[playerid] == 0) return true;
	format(string, sizeof(string), "山口组: %i $", MafiaBank[2]);
	SendClientMessage(playerid, -1, string);
	format(string, sizeof(string), "俄罗斯黑手党: %i $", MafiaBank[1]);
	SendClientMessage(playerid, -1, string);
	format(string, sizeof(string), "LCN: %i $", MafiaBank[0]);
	SendClientMessage(playerid, -1, string);
	format(string, sizeof(string), "大众媒体: %i $", FracBank[0]);
	SendClientMessage(playerid, -1, string);
	format(string, sizeof(string), "未知: %i $", FracBank[1]);
	SendClientMessage(playerid, -1, string);
	format(string, sizeof(string), "未知: %i $", FracBank[3]);
	SendClientMessage(playerid, -1, string);
	format(string, sizeof(string), "国库: %i $", FracBank[9]);
	SendClientMessage(playerid, -1, string);
	return true;
}
cmd:awarehouse(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new string[128];
	if(PlayerInfo[playerid][pAdministration228] < 3 || dostup[playerid] == 0) return true;
	format(string, sizeof(string), "军队仓库: %i/100000 材料", armmatbi);
	SendClientMessage(playerid, -1, string);
	format(string, sizeof(string), "SA 监狱仓库: %i 材料", armmatsf);
	SendClientMessage(playerid, -1, string);
	format(string, sizeof(string), "FBI仓库 %i 材料", fbimats);
	SendClientMessage(playerid, -1, string);
	format(string, sizeof(string), "LSPD仓库 %i 材料", lspdmatbi);
	SendClientMessage(playerid, -1, string);
	format(string, sizeof(string), "SFPD仓库 %i 材料", sfpdmats);
	SendClientMessage(playerid, -1, string);
	format(string, sizeof(string), "LVPD仓库 %i 材料", lvpdmats);
	SendClientMessage(playerid, -1, string);
	format(string, sizeof(string), "黑手党 山口组 仓库 %i 材料", yakuzamats);
	SendClientMessage(playerid, -1, string);
	format(string, sizeof(string), "黑手党 LCN 仓库 %i 材料", lcnmats);
	SendClientMessage(playerid, -1, string);
	format(string, sizeof(string), "俄罗斯黑手党仓库 %i 材料", rmmats);
	SendClientMessage(playerid, -1, string);
	return true;
}
cmd:warehouse(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new string[128];
	switch(PlayerInfo[playerid][pMember])
	{
	case 1:
		{
			format(string, sizeof(string), "LSPD仓库: %i 材料", lspdmatbi);
			SendClientMessage(playerid, -1, string);
			return true;
		}
	case 2:
		{
			format(string, sizeof(string), "FBI仓库: %i 材料", fbimats);
			SendClientMessage(playerid, -1, string);
			return true;
		}
	case 3:
		{
			format(string, sizeof(string), "SA监狱仓库: %i 材料", armmatsf);
			SendClientMessage(playerid, -1, string);
			return true;
		}
	case 5:
		{
			format(string, sizeof(string), "黑手党LCN仓库: %i 材料", lcnmats);
			SendClientMessage(playerid, -1, string);
			return true;
		}
	case 6:
		{
			format(string, sizeof(string), "黑手党山口组仓库: %i 材料", yakuzamats);
			SendClientMessage(playerid, -1, string);
			return true;
		}
	case 9:
		{
			format(string, sizeof(string), "SFPD仓库: %i 材料", sfpdmats);
			SendClientMessage(playerid, -1, string);
			return true;
		}
	case 12:
		{
			format(string, sizeof(string), "巴拉斯帮派仓库: %i 材料, %i 毒品", ballasmatbi,ballasnark);
			SendClientMessage(playerid, -1, string);
			return true;
		}
	case 13:
		{
			format(string, sizeof(string), "瓦戈斯帮派仓库: %i 材料, %i 毒品", vagosmatbi,vagosnark);
			SendClientMessage(playerid, -1, string);
			return true;
		}
	case 14:
		{
			format(string, sizeof(string), "俄罗斯黑手党仓库: %i 材料", rmmats);
			SendClientMessage(playerid, -1, string);
			return true;
		}
	case 15:
		{
			format(string, sizeof(string), "格罗夫帮派仓库: %i 材料, %i 毒品", groovmatbi, groovnark);
			SendClientMessage(playerid, -1, string);
			return true;
		}
	case 17:
		{
			format(string, sizeof(string), "阿兹特克帮派仓库: %i 材料, %i 毒品", aztekmatbi, azteknark);
			SendClientMessage(playerid, -1, string);
			return true;
		}
	case 18:
		{
			format(string, sizeof(string), "14K帮派仓库: %i 材料, %i 毒品", rifamatbi, rifanark);
			SendClientMessage(playerid, -1, string);
			return true;
		}
	case 19:
		{
			format(string, sizeof(string), "军队仓库: %i 材料", armmatbi);
			SendClientMessage(playerid, -1, string);
		}
	case 20:
		{
			format(string, sizeof(string), "LVPD仓库: %i 材料", lvpdmats);
			SendClientMessage(playerid, -1, string);
			return true;
		}
	}
	return true;
}
cmd:payday(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 10 || dostup[playerid] == 0) return true;
	PayDayTime();
	return true;
}
cmd:repaydebt(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pDolg] < 50) return SendErrorMessage(playerid,"没有足够的钱来交保护费!");
	if(PlayerInfo[playerid][pKrisha] == 6)
	{
		SendServerMessage(playerid, "保护费给了山口组!");
		format(YCMDstr, sizeof(YCMDstr), "%s 交了保护费 %s $",Name(playerid),PlayerInfo[playerid][pDolg]);
		SendFamilyMessage(6,COLOR_YELLOW2, YCMDstr);
		MafiaBank[2] +=PlayerInfo[playerid][pDolg];
		SetOtherInt("MafiaBank[2]", MafiaBank[2]);
		PlayerInfo[playerid][pDolg] = 0;
	}
	if(PlayerInfo[playerid][pKrisha] == 5)
	{
		if(PlayerInfo[playerid][pDolg] < 50) return SendErrorMessage(playerid,"没有足够的钱来交保护费!");
		SendServerMessage(playerid, "保护费给了 LCN!");
		format(YCMDstr, sizeof(YCMDstr), "%s 交了保护费 %s $",Name(playerid),PlayerInfo[playerid][pDolg]);
		SendFamilyMessage(5,COLOR_YELLOW2, YCMDstr);
		MafiaBank[0] +=PlayerInfo[playerid][pDolg];
		SetOtherInt("MafiaBank[0]", MafiaBank[0]);
		PlayerInfo[playerid][pDolg] = 0;
	}
	if(PlayerInfo[playerid][pKrisha] == 14)
	{
		if(PlayerInfo[playerid][pDolg] < 50) return SendErrorMessage(playerid,"没有足够的钱来交保护费!");
		SendServerMessage(playerid, "保护费给了俄罗斯黑手党!");
		format(YCMDstr, sizeof(YCMDstr), "%s 交了保护费 %s $",Name(playerid),PlayerInfo[playerid][pDolg]);
		SendFamilyMessage(14,COLOR_YELLOW2, YCMDstr);
		MafiaBank[1] +=PlayerInfo[playerid][pDolg];
		SetOtherInt("MafiaBank[0]", MafiaBank[0]);
		PlayerInfo[playerid][pDolg] = 0;
	}
	return true;
}
cmd:mydebts(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new mafiatext[20];
	if(PlayerInfo[playerid][pKrisha] == 6) { mafiatext = "山口组"; }
	else if(PlayerInfo[playerid][pKrisha] == 14) { mafiatext = "14K"; }
	else if(PlayerInfo[playerid][pKrisha] == 5) { mafiatext = "LCN"; }
	else if(PlayerInfo[playerid][pKrisha] == 0) { mafiatext = "无"; }
	format(YCMDstr,sizeof(YCMDstr), "保护方: %s\n保护费: %i $",
	mafiatext,PlayerInfo[playerid][pDolg]);
	ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX, "{1E90FF}信息",YCMDstr, "关闭", "");
	return true;
}
cmd:sp(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params,"u",params[0]))
	{
		PlayerInfo[params[0]][pBolnicad] = 0;
		SpawnPlayer(params[0]);
	}
	else
	{
	    PlayerInfo[playerid][pBolnicad] = 0;
		SpawnPlayer(playerid);
	}
	return true;
}
cmd:spcar(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 3 || dostup[playerid] == 0) return true;
	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	return true;
}
cmd:spcars(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 8 || dostup[playerid] == 0) return true;
	format(YCMDstr,sizeof(YCMDstr), "― 管理员 %s 将在30秒内刷新所有未被使用的车辆!",Name(playerid));
	SendClientMessageToAll(-1,YCMDstr);
	SetPVarInt(playerid, "SpcarsAvto", gettime()+30);
	return 1;
}
cmd:clearchat(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 3 || dostup[playerid] == 0) return true;
	for(new i = 0; i < 60; i++)
	{
 		SendClientMessageToAll(-1, "");
	}
 	SendClientMessageToAll(-1,"管理员清屏了");
	return 1;
}
CMD:clear(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsACop(playerid)) return SendErrorMessage(playerid,"你不是警察!");
    if(PlayerInfo[playerid][pRank] < 4) return SendErrorMessage(playerid,"阶级低于 4.");
	if(sscanf(params,"u",params[0])) return SendServerMessage(playerid, "帮助: /clear [id/name]");
	if(!IsPlayerConnected(params[0])) return SendErrorMessage(playerid, "无效玩家!");
   	WantedPoints[params[0]] = 0;
	WantedLevel[params[0]] = 0;
	PlayerInfo[params[0]][pWantedLevel] = 0;
	SetPlayerWantedLevel(params[0], 0);
    format(YCMDstr,sizeof(YCMDstr),"[SA警察电台] 警官 %s 清除了 %s[%i] 的通缉",Name(playerid), Name(params[0]), id);
    SendRadioMessage(2,COLOR_LIGHTBLUE,YCMDstr);
    format(YCMDstr,sizeof(YCMDstr),"警官 %s 清除了你的通缉",Name(playerid));
    SendClientMessage(params[0],COLOR_LIGHTBLUE,YCMDstr);
    format(YCMDstr,sizeof(YCMDstr),"你清除了 %s[%i] 的通缉",Name(params[0]), id);
    SendClientMessage(playerid,COLOR_LIGHTBLUE,YCMDstr);
	return 1;
}
cmd:free(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] == 2)
	if(sscanf(params, "ud", params[0],params[1])) return SendErrorMessage(playerid,"帮助: {4080FF}/free {B4B5B7}[id] [价格]");
	if(PlayerInfo[params[0]][pJailed] != 1) return SendErrorMessage(playerid,"对方没有进监狱!");
	if(params[1] < 1000 || params[1] > 30000) { SendErrorMessage(playerid,"价格限制 1000$ - 30000$!"); return true; }
	if(params[1] == playerid)  return  SendErrorMessage(playerid,"不能为自己");
	format(YCMDstr, sizeof(YCMDstr), "[律师] 你将 %s 保释出来,花费: %i $",Name(params[0]),params[1]);
	SendClientMessage(playerid, -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― [律师] %s 将你保释出来,花费 %i $",Name(playerid),params[1]);
	SendClientMessage(params[0], -1, YCMDstr);
	ShowPlayerDialog(params[0],6623,DIALOG_STYLE_MSGBOX, "{1E90FF}律师服务", "你接受吗?:", "接受", "不接受");
	FreeOffer[params[0]] = playerid;
	FreePrice[params[0]] = params[1];
	SposobOffer[params[0]] = 0;
	return 1;
}
cmd:forceskin(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u", params[0])) return SendServerMessage(playerid, "帮助: {4080FF}/forceskin {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == INVALID_PLAYER_ID) return true;
	if(PlayerInfo[params[0]][pMember] < 1) return SendErrorMessage(playerid,"对方不是组织成员");
	SendServerMessage(params[0],"管理员让你更换皮肤");
	format(YCMDstr, sizeof(YCMDstr), "你让 %s 更换皮肤", Name(params[0]));
	SendClientMessage(playerid, -1, YCMDstr);
	TextDrawShowForPlayer(params[0], SkinRabCancel);
	TextDrawShowForPlayer(params[0], SkinRabLeft);
	TextDrawShowForPlayer(params[0], SkinRabSelect);
	TextDrawShowForPlayer(params[0], SkinRabRight);
	TogglePlayerControllable(params[0],0);
	SelectTextDraw(params[0],0xA3B4C5FF);
	SetPlayerInterior(params[0],5);
	OldSkin[params[0]] = GetPlayerSkin(params[0]);
	ChosenSkin[params[0]] = OldSkin[params[0]];
	new rand = 0;
	Q_SetPlayerPos(params[0], gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
	SetPlayerFacingAngle(params[0], gInviteSpawns[rand][3]);
	SetPlayerCameraPos(params[0],gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
	SetPlayerCameraLookAt(params[0],gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
	TogglePlayerControllable(params[0], 0);
	SelectChar[params[0]] = 255;
	SelectCharID[params[0]] = PlayerInfo[params[0]][pMember];
	SelectCharPlace[params[0]] = 1;
	PlayerInfo[params[0]][pChar][0] = ChosenSkin[params[0]];
	return 1;
}
cmd:skin(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d", params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/skin {B4B5B7}[皮肤id]");
	if(params[0] > 311 || params[0] < 1) { SendErrorMessage(playerid,"无效皮肤ID!"); return true; }
	PlayerInfo[playerid][pChar][0] = params[0];
	SetPlayerSkin(playerid, PlayerInfo[playerid][pChar][0]);
	return 1;
}
cmd:setskin(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 10 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud", params[0],params[1])) return SendErrorMessage(playerid,"帮助: {4080FF}/setskin {B4B5B7}[玩家id] [皮肤id]");
	if(params[1] > 311 || params[1] < 1) { SendErrorMessage(playerid,"无效皮肤ID!"); return true; }
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == INVALID_PLAYER_ID) return true;
	PlayerInfo[params[0]][pChar][0] = params[1];
	format(YCMDstr, sizeof(YCMDstr), "― 管理员 %s 更改了你的皮肤", Name(playerid));
	SendClientMessage(params[0], -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "你将 %s 的皮肤设置到: %i",Name(params[0]),params[1]);
	SendClientMessage(playerid, -1, YCMDstr);
	SetPlayerSkin(params[0], PlayerInfo[params[0]][pChar][0]);
	return 1;
}
cmd:timeskin(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud", params[0],params[1])) return SendErrorMessage(playerid,"帮助: {4080FF}/timeskin {B4B5B7}[玩家id] [皮肤id]");
	if(params[1] > 311 || params[1] < 1) { SendErrorMessage(playerid,"无效皮肤ID!"); return true; }
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == INVALID_PLAYER_ID) return true;
	GetPlayerName(params[0], gp, sizeof(gp));
	GetPlayerName(playerid, sn, sizeof(sn));
	SetPlayerSkin(params[0],params[1]);
	format(YCMDstr, sizeof(YCMDstr), "― 管理员 %s 给你一个皮肤号码: %d",sn,params[1]);
	SendClientMessage(params[0], -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― 你给 %s 一个皮肤号码: %d",gp,params[1]);
	SendClientMessage(playerid, -1, YCMDstr);
	return 1;
}
cmd:pay(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(sscanf(params, "ud", params[0],params[1])) return SendErrorMessage(playerid,"帮助: {4080FF}/pay [id] [数量]");
	if(PlayerInfo[playerid][pLevel] < 2) return SendErrorMessage(playerid,"你的等级需要大于 2");
	if(params[1] < 1 || params[1] > 50000) return SendErrorMessage(playerid,"数量限制 1$ - 50.000$.");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == INVALID_PLAYER_ID) return true;
	if(!ProxDetectorS(5.0, playerid, params[0])) return SendErrorMessage(playerid,"距离太远了.");
	if(GetSRVMoney(playerid) < params[1]) return true;
 	if(GetPVarInt(playerid,"compay") > gettime()) return SendErrorMessage(playerid,"请等待一段时间再使用!");
	PlayerInfo[params[0]][pCash] += params[1];
	PlayerInfo[playerid][pCash] -= params[1];
	format(YCMDstr, sizeof(YCMDstr), "― 你给了 {0080FF}%s[%i], {BF4080}%i $.",Name(params[0]),params[0],params[1]);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― 你收到 %i $ 来自 {0080FF}%s[%i].",params[1],Name(playerid), playerid);
	SendClientMessage(params[0], -1, YCMDstr);
	PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
	format(YCMDstr,sizeof(YCMDstr), "从钱包里拿出一些钱,并给了 %s",Name(params[0]));
	SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
	ApplyAnimation(playerid, "INT_SHOP", "shop_pay", 4.1, 0, 0, 0, 0,0,1);
	SetPVarInt(playerid,"compay",gettime()+10);
	OnPlayerUpdateAc(playerid);
	return 1;
}
cmd:setmats(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(SledAdm(playerid))
	{
	if(sscanf(params, "dd", params[0],params[1]))
	{
		SendErrorMessage(playerid,"帮助: {4080FF}/setmats {B4B5B7}[编号] [数量]");
		SendServerMessage(playerid," [1] - LSPD, [2] - FBI, [3] - 监狱 SA, [4] - 山口组, [5] - LCN, [6] - SFPD, [7] - 巴拉斯, [8] - 瓦戈斯");
		SendServerMessage(playerid," [9] - 俄罗斯黑手党, [10] - 格罗夫, [11] - 阿兹特克, [12] - 14K, [13] - 军队 LV, [14] - LVPD");
		return 1;
	}
	switch (params[0])
	{
	case 1:
		{
			lspdmatbi = params[1];
			SetOtherInt("lspdmatbi", lspdmatbi);
			format(YCMDstr, sizeof(YCMDstr), "― 材料更改为: %i", params[1]);
		}
	case 2:
		{
			fbimats = params[1];
			SetOtherInt("fbimats", fbimats);
			format(YCMDstr, sizeof(YCMDstr), "― 材料更改为: %i", params[1]);
		}
	case 3:
		{
			armmatsf = params[1];
			SetOtherInt("armmatsf", armmatsf);
			format(YCMDstr, sizeof(YCMDstr), "― 材料更改为: %i", params[1]);
		}
	case 4:
		{
			yakuzamats = params[1];
			SetOtherInt("yakuzamats", yakuzamats);
			format(YCMDstr, sizeof(YCMDstr), "― 材料更改为: %i", params[1]);
		}
	case 5:
		{
			lcnmats = params[1];
			SetOtherInt("lcnmats", lcnmats);
			format(YCMDstr, sizeof(YCMDstr), "― 材料更改为: %i", params[1]);
		}
	case 6:
		{
			sfpdmats = params[1];
			SetOtherInt("sfpdmats", sfpdmats);
			format(YCMDstr, sizeof(YCMDstr), "― 材料更改为: %i", params[1]);
		}
	case 7:
		{
			ballasmatbi = params[1];
			SetOtherInt("ballasmatbi", ballasmatbi);
			format(YCMDstr, sizeof(YCMDstr), "― 材料更改为: %i", params[1]);
		}
	case 8:
		{
			vagosmatbi = params[1];
			SetOtherInt("vagosmatbi", vagosmatbi);
			format(YCMDstr, sizeof(YCMDstr), "― 材料更改为: %i", params[1]);
		}
	case 9:
		{
			rmmats = params[1];
			SetOtherInt("rmmats", rmmats);
			format(YCMDstr, sizeof(YCMDstr), "― 材料更改为: %i", params[1]);
		}
	case 10:
		{
			groovmatbi = params[1];
			SetOtherInt("groovmatbi", groovmatbi);
			format(YCMDstr, sizeof(YCMDstr), "― 材料更改为: %i", params[1]);
		}
	case 11:
		{
			aztekmatbi = params[1];
			SetOtherInt("aztekmatbi", aztekmatbi);
			format(YCMDstr, sizeof(YCMDstr), "― 材料更改为: %i", params[1]);
		}
	case 12:
		{
			rifamatbi = params[1];
			SetOtherInt("rifamatbi", rifamatbi);
			format(YCMDstr, sizeof(YCMDstr), "― 材料更改为: %i", params[1]);
		}
	case 13:
		{
			armmatbi = params[1];
			SetOtherInt("armmatbi", armmatbi);
			format(YCMDstr, sizeof(YCMDstr), "― 材料更改为: %i", params[1]);
		}
	case 14:
		{
			lvpdmats = params[1];
			SetOtherInt("lvpdmats", lvpdmats);
			format(YCMDstr, sizeof(YCMDstr), "― 材料更改为: %i", params[1]);
		}
	default:
		{
			format(YCMDstr, sizeof(YCMDstr), "[错误编号]");
		}
	}
	}
	SendClientMessage(playerid, -1, YCMDstr);
	return true;
}
cmd:code(playerid, params[])
{
	if(Rucovod(playerid))
	{
		if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
		ShowPlayerDialog(playerid, 22842, DIALOG_STYLE_LIST, "{6ab6df}促销代码", "1. 促销代码清单\n2. 添加促销代码\n3. 删除促销代码", "选择", "返回");
	}
	return true;
}
cmd:setstat(playerid, params[])
{
	if(Rucovod(playerid))
	{
		if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
		new giveplayerid;
		new string[128];
		new stat;
		new amount;
		//if(PlayerInfo[playerid][pAdministration228] < 10 || dostup[playerid] == 0) return true;
		if(sscanf(params, "udd",giveplayerid,stat,amount))
		{
			SendErrorMessage(playerid,"帮助: {4080FF}/setstat {B4B5B7}[id] [编号] [数量]");
			SendServerMessage(playerid, "[1] 等级|[2] 合法点|[3] 材料|[4] 无效|[5] 杀人时");
			SendServerMessage(playerid, "[6] 电话号码|[7] 经验|[8] 房子钥匙 |[9] 无效");
			SendServerMessage(playerid, "[10] VIP等级 [1-3]|[11] 代码礼包|[12] 无效|[13] 银行账户");
			SendServerMessage(playerid, "[14] 电话账户|[15] 现金|[16] 警告|[17] 毒品");
			SendServerMessage(playerid, "[18] 组织|[19] 无效");
			SendServerMessage(playerid, "[20] 无效|[21] 无效|[22] 无效");
			SendServerMessage(playerid, "[23] 车辆|[24] 无效|[25] 无效|[26] 毒瘾");
			SendServerMessage(playerid, "[27] 玩家模型|[28] 暂时禁用|[29] 车辆引擎|[30] 无效");
			return true;
		}
		if(!IsPlayerConnected(giveplayerid)) return true;
		if(giveplayerid == INVALID_PLAYER_ID) return true;
		switch (stat)
		{
		case 1:
			{
				PlayerInfo[giveplayerid][pLevel] = amount;
				format(string, sizeof(string), "― 等级: %i", amount);
				DollahScoreUpdate(giveplayerid);
			}
		case 2:
			{
				PlayerInfo[giveplayerid][pZakonp] = amount;
				format(string, sizeof(string), "― 合法点: %i", amount);
			}
		case 3:
			{
				PlayerInfo[giveplayerid][pMats] = amount;
				format(string, sizeof(string), "― 材料: %i", amount);
			}
		case 5:
			{
				PlayerInfo[giveplayerid][pKills] = amount;
				format(string, sizeof(string), "― 杀人数: %i", amount);
			}
		case 6:
			{
				PlayerInfo[giveplayerid][pPnumber] = amount;
				format(string, sizeof(string), "― 电话号码: %i", amount);
			}
		case 7:
			{
				PlayerInfo[giveplayerid][pExp] = amount;
				format(string, sizeof(string), "― 经验值: %i", amount);
			}
		case 8:
			{
				PlayerInfo[giveplayerid][pPhousekey] = amount;
				format(string, sizeof(string), "― 房屋: %i", amount);
			}
		case 10:
			{
				PlayerInfo[giveplayerid][pDonateRank] = amount;
				format(string, sizeof(string), "― VIP 等级: %i", amount);
			}
		case 11:
			{
				PlayerInfo[playerid][Promo] = amount;
				format(string, sizeof(string), "― 促销代码领取状态: %i", amount);
			}
		case 13:
			{
				PlayerInfo[giveplayerid][pBank] = amount;
				format(string, sizeof(string), "― 银行存款: %i $", amount);
			}
		case 14:
			{
				PlayerInfo[giveplayerid][pMobile] = amount;
				format(string, sizeof(string), "― 手机账户: %i $", amount);
			}
		case 15:
			{
				PlayerInfo[giveplayerid][pCash] = amount;
				format(string, sizeof(string), "― 现金: %i $", amount);
			}
		case 16:
			{
				PlayerInfo[giveplayerid][pWarns] = amount;
				format(string, sizeof(string), "― 警告: %i", amount);
			}
		case 17:
			{
				PlayerInfo[giveplayerid][pDrugs] = amount;
				format(string, sizeof(string), "― 毒品: %i", amount);
			}
		case 18:
			{
				PlayerInfo[giveplayerid][pMember] = amount;
				PlayerInfo[giveplayerid][pRank] = 1;
				PlayerInfo[giveplayerid][pInFrac] = 0;
				format(string, sizeof(string), "― 组织: %i", amount);
			}
		case 23:
			{
				PlayerInfo[giveplayerid][pCar] = amount;
				format(string, sizeof(string), "― 车辆: %i", amount);
			}
		case 26:
			{
				PlayerInfo[giveplayerid][pNarcoLomka] = 0;
				PlayerInfo[giveplayerid][pAddiction] = amount;
				format(string, sizeof(string), "― 毒瘾 %i", amount);
			}
		case 27:
			{
				PlayerInfo[giveplayerid][pModel] = amount;
				format(string, sizeof(string), "― 玩家模型: %i", amount);
			}
		case 28:
			{
				format(string,sizeof(string),"― 暂时禁用");
			}
		case 29:
			{
				PlayerInfo[giveplayerid][pProcents] = amount;
				format(string, sizeof(string), "― 车辆引擎: %i", amount);
			}

		}
		//new stringer[144];
		format(YCMDstr, sizeof(YCMDstr), "INSERT INTO `"TABLE_LOGS"` (`Name`, `Name2`,`Nomer`,`Cmd`) VALUES ('%s', '%s', '%d', 'setstat')",Name(playerid),Name(giveplayerid),stat);
		mysql_query(YCMDstr);
		SendClientMessage(playerid, -1, string);
	}
	return true;
}
cmd:setklass(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 10 || dostup[playerid] == 0) return true;
	if(sscanf(params, "dd",params[0],params[1])) return SendErrorMessage(playerid,"帮助: {4080FF} /setklass {B4B5B7}[房屋ID] [类型]");
	HouseInfo[params[0]][hKlass] = params[1];
	SendSyntaxMessage(playerid, "设置成功");
	return true;
}
cmd:getschet(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 10 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/getschet {B4B5B7}[房屋ID]");
	format(YCMDstr, sizeof(YCMDstr), "房屋账户: %i",HouseInfo[params[0]][hTakings]);
	SendClientMessage(playerid, -1, YCMDstr);
	return true;
}
cmd:setschet(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 10 || dostup[playerid] == 0) return true;
	if(sscanf(params, "dd",params[0],params[1])) return SendErrorMessage(playerid,"帮助: {4080FF}/setschet {B4B5B7}[房屋ID] [金额]");
	HouseInfo[params[0]][hTakings] = params[1];
	SendSyntaxMessage(playerid, "设置成功");
	return true;
}
cmd:setcost(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 10 || dostup[playerid] == 0) return true;
	if(sscanf(params, "dd",params[0],params[1])) return SendErrorMessage(playerid,"帮助: {4080FF}/setscost {B4B5B7}[房屋ID] [价格]");
	HouseInfo[params[0]][hValue] = params[1];
	SendSyntaxMessage(playerid, "设置成功");
	return true;
}
cmd:sethousepos(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 10 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/sethousepos {B4B5B7}[房屋ID]");
	new Float: lwx, Float:lwy, Float:lwz;
	GetPlayerPos(playerid, lwx, lwy, lwz);
	HouseInfo[params[0]][hEntrancex] = lwx;
	HouseInfo[params[0]][hEntrancey]= lwy;
	HouseInfo[params[0]][hEntrancez] = lwz;
	BuyHouse(params[0]);
	SaveProperty(params[0]);
	return true;
}
cmd:sethousecarpos(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 10 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/sethousecarpos {B4B5B7}[房屋ID]");
	new Float: lwx, Float:lwy, Float:lwz,Float:a;
	GetPlayerPos(playerid, lwx, lwy, lwz);
	GetPlayerFacingAngle(playerid,a);
	HouseInfo[params[0]][hCarx] = lwx;
	HouseInfo[params[0]][hCary]= lwy;
	HouseInfo[params[0]][hCarz] = lwz;
	HouseInfo[params[0]][hCarc] = a;
	SendSyntaxMessage(playerid, "设置成功");
	BuyHouse(params[0]);
	SaveProperty(params[0]);
	return true;
}
cmd:park(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendErrorMessage(playerid,"你不在车内!");
	if(GetPlayerVehicleID(playerid) != caridhouse[playerid]) return SendErrorMessage(playerid,"这不是你的车!");
    new carid = GetPlayerVehicleID(playerid);
	new Float: lwx, Float:lwy, Float:lwz,Float:a;
	GetVehiclePos(carid, lwx, lwy, lwz);
	GetVehicleZAngle(carid,a);
	PlayerInfo[playerid][dCarx] = lwx;
	PlayerInfo[playerid][dCary]= lwy;
	PlayerInfo[playerid][dCarz] = lwz;
	PlayerInfo[playerid][dCarc] = a;
	SendSyntaxMessage(playerid, "成功泊车!你的车刷新之后将会停在这里");
	return true;
}
cmd:edit(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 10 || dostup[playerid] == 0) return true;
	ShowPlayerDialog(playerid, 3725, DIALOG_STYLE_LIST, "{1E90FF}房屋管理版面", " [1] 出售所有房屋\n [2] 设置一个房屋内饰\n [3] 设置一个房屋内饰 2", "选择", "返回");
	return true;
}
cmd:addbizz(playerid, params[])
{

	if(Rucovod(playerid))
	{
    	/*if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
		if(PlayerInfo[playerid][pAdministration228] < 10 || dostup[playerid] == 0) return true;*/
    	ShowPlayerDialog(playerid, 9085, 2, "{1E90FF}产业管理版面", "24/7 商店\n加油站\n披萨店\n小吃店 (Burger Shot)\n小吃店 (Cluckin Bell)\n俱乐部 (Alhambra)\n俱乐部 (Jizzy)\n俱乐部 (Pig Pen)\n酒吧 (Misty)", "选择", "退出");
	}
	return true;
}
cmd:addhouse(playerid, params[])
{
	if(Rucovod(playerid))
	{
		if(sscanf(params, "dd",params[0],params[1]))
		{
			SendErrorMessage(playerid,"帮助: {4080FF}/addhouse {B4B5B7}[类型] [价格]");
			SendErrorMessage(playerid,"0 - [None] | 1 - [D] | 2 - [C] | 3 - [B] | 4 - [A]");
			return true;
		}
		new Float: posX, Float: posY, Float: posZ;
		GetPlayerPos(playerid, posX, posY, posZ);
		format(YCMDstr, sizeof(YCMDstr), "INSERT INTO `"TABLE_HOUSE"` (`hEntrancex`, `hEntrancey`,`hEntrancez`, `hLock`,`hKlass`) VALUES ('%f', '%f', '%f', '1','%i')",posX,posY,posZ,params[0]);
		mysql_query(YCMDstr);
		TotalHouse++;
		HouseInfo[TotalHouse][hID] = TotalHouse;
		HouseInfo[TotalHouse][hEntrancex] = posX;
		HouseInfo[TotalHouse][hEntrancey] = posY;
		HouseInfo[TotalHouse][hEntrancez] = posZ;
		HouseInfo[TotalHouse][hLock] = 1;
		HouseInfo[TotalHouse][hKlass] = params[0];
		HouseInfo[TotalHouse][hValue] = params[1];
		if(HouseInfo[TotalHouse][hKlass] == 0)
		{
			HouseInfo[TotalHouse][hInt] = 10;
			HouseInfo[TotalHouse][hExitx] = 421.7613;
			HouseInfo[TotalHouse][hExity] = 2536.4836;
			HouseInfo[TotalHouse][hExitz] = 10.0000;
		}
		else if(HouseInfo[TotalHouse][hKlass] == 1)
		{
			HouseInfo[TotalHouse][hInt] = 6;
			HouseInfo[TotalHouse][hExitx] = -68.8618;
			HouseInfo[TotalHouse][hExity] = 1352.2183;
			HouseInfo[TotalHouse][hExitz] = 1080.2109;
		}
		else if(HouseInfo[TotalHouse][hKlass] == 2)
		{
			HouseInfo[TotalHouse][hInt] = 5;
			HouseInfo[TotalHouse][hExitx] = 22.7405;
			HouseInfo[TotalHouse][hExity] = 1404.3799;
			HouseInfo[TotalHouse][hExitz] = 1084.4297;
		}
		else if(HouseInfo[TotalHouse][hKlass] == 3)
		{
			HouseInfo[TotalHouse][hInt] = 12;
			HouseInfo[TotalHouse][hExitx] = 2324.3367;
			HouseInfo[TotalHouse][hExity] = -1148.6296;
			HouseInfo[TotalHouse][hExitz] = 1050.7101;
		}
		else
		{
			HouseInfo[TotalHouse][hInt] = 5;
			HouseInfo[TotalHouse][hExitx] = 140.2206;
			HouseInfo[TotalHouse][hExity] = 1367.2734;
			HouseInfo[TotalHouse][hExitz] = 1083.8612;
		}
		HouseInfo[TotalHouse][hPickup] = CreatePickup(1273, 23, HouseInfo[TotalHouse][hEntrancex], HouseInfo[TotalHouse][hEntrancey], HouseInfo[TotalHouse][hEntrancez],-1);
		pickups++;
		HouseInfo[TotalHouse][hMIcon] = CreateDynamicMapIcon(HouseInfo[TotalHouse][hEntrancex], HouseInfo[TotalHouse][hEntrancey], HouseInfo[TotalHouse][hEntrancez], 31, -1, 0, -1, -1);
		SendSyntaxMessage(playerid,"成功创建房屋 {4080FF}/sethousecarpos (设置停车位)");
		BuyHouse(TotalHouse);
	}
	return true;
}
cmd:getstats(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if (PlayerInfo[playerid][pAdministration228] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/getstats {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	ShowStats(playerid,params[0]);
	return true;
}
cmd:number(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/number {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	format(YCMDstr, 256, "― 名称: %s. 电话号码: %i",Name(params[0]),PlayerInfo[params[0]][pPnumber]);
	SendClientMessage(playerid, -1, YCMDstr);
	return true;
}
cmd:o(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(Flood[playerid] > 0) return SendErrorMessage(playerid,"Flood!");
	if((noooc) && PlayerInfo[playerid][pAdministration228] < 2) return SendServerMessage(playerid,"全球频道暂未开放!");
	else if(dostup[playerid] == 0 && PlayerInfo[playerid][pAdministration228] >= 1) return true;
	if(PlayerInfo[playerid][pMuted] == 1)
	{
		PlayerMuteMessage(playerid);
		return true;
	}
	if(sscanf(params, "s[128]",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}(/o)oc {B4B5B7} [内容]");
	format(YCMDstr, sizeof(YCMDstr), "{FFBF00}[全球频道] > %s[%i]: %s <",Name(playerid), playerid, params[0]);
	OOCOff(-1,YCMDstr);
	Flood[playerid] = 5;
	return true;
}
cmd:noooc(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if (PlayerInfo[playerid][pAdministration228] < 6 || dostup[playerid] == 0) return true;
	if (noooc == 0) noooc = 1, BroadCast(COLOR_GREEN, "管理员禁用全球频道!");
	else if(noooc == 1) noooc = 0, BroadCast(COLOR_GREEN, "管理员启用全球频道!");
	return true;
}
cmd:gov(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(IsACop(playerid) || IsAArm(playerid) || IsAMayor(playerid) || IsAMedic(playerid) || IsALicenser(playerid) || IsAuniver(playerid))
	{
		new rtext[30];
		if(PlayerInfo[playerid][pMuted] == 1)
		{
			PlayerMuteMessage(playerid);
			return true;
		}
		AntiReklama(playerid,params[1],"GOV");
		if(antireklamka[playerid] == 1)
		{
			antireklamka[playerid] = 0;
			return true;
		}
		if(sscanf(params, "s[128]", params[0])) return	SendErrorMessage(playerid,"帮助: {4080FF}(/gov)erment {B4B5B7}[内容]");
		if(GetPVarInt(playerid,"Flood") > gettime()) return SendErrorMessage(playerid,"请过一会儿再次使用");
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
		    if(PlayerInfo[playerid][pRank] < 14) return true;
			if(PlayerInfo[playerid][pRank] == 14) { rtext = "[LSPD]:"; }
			else if(PlayerInfo[playerid][pRank] == 15) { rtext = "[LSPD]:"; }
		}
		else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
		{
		    if(PlayerInfo[playerid][pRank] < 8) return true;
			if(PlayerInfo[playerid][pRank] == 8) { rtext = "[FBI San Andreas]:"; }
			else if(PlayerInfo[playerid][pRank] == 9) { rtext = "[FBI San Andreas]:"; }
		}
		else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
		{
		    if(PlayerInfo[playerid][pRank] < 15) return true;
			if(PlayerInfo[playerid][pRank] == 15) { rtext = "[监狱 San Andreas]:"; }
			else if(PlayerInfo[playerid][pRank] == 16) { rtext = "[监狱 San Andreas]:"; }
		}
		else if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
		{
		    if(PlayerInfo[playerid][pRank] < 9) return true;
			if(PlayerInfo[playerid][pRank] == 10) { rtext = "[医院 SA]:"; }
			else if(PlayerInfo[playerid][pRank] == 9)
			{
				if(PlayerInfo[playerid][pJobHealLeader] == 1) { rtext = "[医院 San Andreas]:"; }
				else if(PlayerInfo[playerid][pJobHealLeader] == 2) { rtext = "[医院 San Andreas]:"; }
				else if(PlayerInfo[playerid][pJobHealLeader] == 3) { rtext = "[医院 San Andreas]:"; }
			}
			else { SendErrorMessage(playerid,"你的阶级太低了"); }
		}
		else if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
		{
		    if(PlayerInfo[playerid][pRank] < 3) return true;
			if(PlayerInfo[playerid][pRank] == 3) { rtext = "[大学 San Andreas]:"; }
			else if(PlayerInfo[playerid][pRank] == 4) { rtext = "[大学 San Andreas]:"; }
		}
		else if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
		{
		    if(PlayerInfo[playerid][pRank] < 6) return true;
			if(PlayerInfo[playerid][pRank] == 6) { rtext = "[副总统]:"; }
			else if(PlayerInfo[playerid][pRank] == 7) { rtext = "[总统]:"; }
		}
		else if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
		{
		    if(PlayerInfo[playerid][pRank] < 14) return true;
			if(PlayerInfo[playerid][pRank] == 14) { rtext = "[SFPD]:"; }
			else if(PlayerInfo[playerid][pRank] == 15) { rtext = "[SFPD]:"; }
		}
		else if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
		{
		    if(PlayerInfo[playerid][pRank] < 9) return true;
			if(PlayerInfo[playerid][pRank] == 9) { rtext = "[驾驶学校 San Andreas]:"; }
			else if(PlayerInfo[playerid][pRank] == 10) { rtext = "[驾驶学校 San Andreas]:"; }
		}
		else if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
		{
		    if(PlayerInfo[playerid][pRank] < 15) return true;
			if(PlayerInfo[playerid][pRank] == 15) { rtext = "[军队 San Andreas]:"; }
			else if(PlayerInfo[playerid][pRank] == 16) { rtext = "[军队 San Andreas]:"; }
		}
		else if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
		{
		    if(PlayerInfo[playerid][pRank] < 14) return true;
			if(PlayerInfo[playerid][pRank] == 14) { rtext = "[LVPD]:"; }
			else if(PlayerInfo[playerid][pRank] == 15) { rtext = "[LVPD]:"; }
		}
		else { return true; }
		format(YCMDstr, sizeof(YCMDstr), "%s %s: %s", rtext, Name(playerid), params[0]);
	 	SendClientMessageToAll(0x6666FFAA, YCMDstr);
		SetPVarInt(playerid,"Flood",gettime()+10);
	}
	return true;
}
cmd:balance(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!PlayerToPoint(10.0,playerid,2308.8201,-13.2660,26.7422)) return SendErrorMessage(playerid,"你不在银行里!");
	format(YCMDstr, sizeof(YCMDstr), "银行账户: %i $", PlayerInfo[playerid][pBank]);
	SendClientMessage(playerid, -1, YCMDstr);
	return true;
}
cmd:bank(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsABank(playerid)) return SendErrorMessage(playerid,"你不在银行里");
	if(sscanf(params, "d", params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/bank {B4B5B7}[金额]");
	if(PlayerInfo[playerid][pCash] < params[0]) { SendErrorMessage(playerid,"你没有足够的钱!"); return true; }
	if(params[0] > 1000000 || params[0] < 1) { SendErrorMessage(playerid,"金额限制 1000000$!"); return true; }
	SendClientMessage(playerid, -1, "---------===[ 银行流水单 ]===---------");
	format(YCMDstr, sizeof(YCMDstr), "― 旧余额: %i $", PlayerInfo[playerid][pBank]);
	SendClientMessage(playerid, -1, YCMDstr);
	PlayerInfo[playerid][pCash] -= params[0];
	PlayerInfo[playerid][pBank] += params[0];
	format(YCMDstr, sizeof(YCMDstr), "― 存入金额: %i $", params[0]);
	SendClientMessage(playerid, -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― 新余额: %i $", PlayerInfo[playerid][pBank]);
	SendClientMessage(playerid, -1, YCMDstr);
	OnPlayerUpdateAc(playerid);
	return true;
}
cmd:transfer(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pLevel] < 4) return SendErrorMessage(playerid,"你需要达到 4 级");
	if(!IsABank(playerid)) return SendErrorMessage(playerid,"你不在银行");
	if(sscanf(params, "ud", params[0],params[1])) return SendErrorMessage(playerid,"帮助: {4080FF}/transfer {B4B5B7}[id] [转账金额]");
	if(GetPVarInt(playerid,"compayTR") > gettime()) return SendErrorMessage(playerid,"请稍后再使用!");
	if(params[0] < 1 || params[0] > 1000000) return SendErrorMessage(playerid,"金额限制 1$ - 1000000$!");
	if (!IsPlayerConnected(params[0])) return true;
	if(params[1] > 0 && PlayerInfo[playerid][pBank] >= params[1])
	{
		PlayerInfo[playerid][pBank] -= params[1];
		PlayerInfo[params[0]][pBank] += params[1];
		format(YCMDstr, sizeof(YCMDstr), "― 你将 %i $ 转入到 %s 的银行账户", params[1], Name(params[0]));
		SendClientMessage(playerid, -1, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), "― 新的消息: %s 将 %i $ 转入你的银行账户. 发件人: 国家银行 'SA'",Name(playerid),params[1]);
		SendClientMessage(params[0], COLOR_YELLOW, YCMDstr);
		PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
	}
	SetPVarInt(playerid,"compayTR",gettime()+60);
	OnPlayerUpdateAc(playerid);
	return true;
}
cmd:withdraw(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsABank(playerid)) return SendErrorMessage(playerid,"你不在银行");
	if(sscanf(params, "d", params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/withdraw {B4B5B7}[金额]");
	if(params[0] < 1 || params[0] > 1000000) return SendErrorMessage(playerid,"金额限制 1$ - 1000000$!");
	if(PlayerInfo[playerid][pBank] < params[0]) return SendErrorMessage(playerid,"你没有足够的钱!!");
	PlayerInfo[playerid][pCash] += params[0];
	PlayerInfo[playerid][pBank] -= params[0];
	format(YCMDstr, sizeof(YCMDstr), "― 取出 %i $. 银行账户: %i $",params[0], PlayerInfo[playerid][pBank]);
	SendClientMessage(playerid, -1, YCMDstr);
	return true;
}
cmd:returnmoney(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsABank(playerid)) return SendErrorMessage(playerid,"你不在银行");
	if(PlayerInfo[playerid][pHousecash] <=0) return	SendErrorMessage(playerid,"没有可收租金");
	PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pHousecash];
	format(YCMDstr, sizeof(YCMDstr), "您的房屋 %i $ 将退还给您", PlayerInfo[playerid][pHousecash]);
	SendClientMessage(playerid, -1, YCMDstr);
	PlayerInfo[playerid][pHousecash] = 0;
	PlayerInfo[playerid][pText] = 0;
	OnPlayerUpdateAc(playerid);
	return true;
}
cmd:e(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 481 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 509 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 510) return SendErrorMessage(playerid,"无效车辆");
	if(GetPlayerVehicleID(playerid) == INVALID_VEHICLE_ID) return true;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
	if(zavodis[GetPlayerVehicleID(playerid)] == 0)
	{
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid) ,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
		zavodis[GetPlayerVehicleID(playerid)] = 1;
	}
	else if(zavodis[GetPlayerVehicleID(playerid)] == 1)
	{
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
		zavodis[GetPlayerVehicleID(playerid)] = 0;
	}
	return true;
}
cmd:farq(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(GetPlayerVehicleID(playerid) == INVALID_VEHICLE_ID) return true;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
	if(Light[GetPlayerVehicleID(playerid)] == 0)
	{
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
		Light[GetPlayerVehicleID(playerid)] = 1;
		PlayerPlaySound(playerid, 4604, 0.0, 0.0, 0.0);
	}
	else
	{
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
		Light[GetPlayerVehicleID(playerid)] = 0;
		PlayerPlaySound(playerid, 4604, 0.0, 0.0, 0.0);
	}
	return true;
}
cmd:logs(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 9 || dostup[playerid] == 0) return true;
	if (logs == 1) logs = 0, SendSyntaxMessage(playerid, "LOGS 已禁用!");
	else if (logs == 0) logs =1, SendSyntaxMessage(playerid, "LOGS 已启用!");
	return true;
}
CMD:viphelp(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new string[500];
	strcat(string, "{FFC125}以下是 VIP 特权.{FFFFFF}\n\n");
	strcat(string, "1) 额外工资在6000到15000之间.\n");
	strcat(string, "2) 将个人车辆删除改装,然后重新改装 (/removetuning).\n");
	strcat(string, "3) 以3-7天的时间解封帐户.\n");
	strcat(string, "4) 在医院治疗角色的速度要快2倍.\n");
	strcat(string, "5) 在角色中表现出饥饿感的可能性要小2倍.\n");
	strcat(string, "6) 减少发送给管理组消息的时间.\n");
	strcat(string, "7) 附加版面 /vpanel.");
	ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}VIP 特权", string, "关闭", "");
	return 1;
}
cmd:removetuning(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(!PlayerInfo[playerid][pDonateRank]) return SendErrorMessage(playerid, "你不是 VIP 玩家!");
    CompVehDel(playerid);
    SendServerMessage(playerid,"删除改装成功!使用 /fixcar 刷新!");
	return 1;
}
cmd:leave(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pLeader] >= 1) return SendErrorMessage(playerid,"你是领导人!");
	{
		PlayerInfo[playerid][pMember] = 0;
		PlayerInfo[playerid][pInFrac] = 0;
		PlayerInfo[playerid][pRank] = 0;
		PlayerInfo[playerid][pLeader] = 0;
		PlayerInfo[playerid][pMWarns] = 0;
		SetPlayerArmourAC(playerid,0);
		SetPlayerColor(playerid, TEAM_HIT_COLOR);
		SetPlayerSkin(playerid, PlayerInfo[playerid][pChar][0]);
 		for ( new i = 0;  i < 5; i++ ) TextDrawShowForPlayer(playerid, TDInfo[i]);
		SetTimerEx("InfoTime", 2000, false, "d", playerid);
	}
	return true;
}

cmd:log(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 4 || dostup[playerid] == 0) return true;
	if (PlayerLog == 1) PlayerLog = 0, SendSyntaxMessage(playerid, "禁用玩家进入服务器消息!");
	else if (PlayerLog == 0) PlayerLog =1, SendSyntaxMessage(playerid, "启用玩家进入服务器消息!");
	return true;
}

cmd:togphone(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pPhonePlayer] == 0) return SendErrorMessage(playerid,"你没有手机,去购买");
	if(PlayerInfo[playerid][pDonateRank] >= 1 || PlayerInfo[playerid][pAdministration228] >= 1 || PlayerInfo[playerid][pLeader] >= 1)
	{
		if(!PhoneOnline[playerid])
		{
			PhoneOnline[playerid] = 1;
			format(YCMDstr, sizeof(YCMDstr), "%s 关掉了电话",Name(playerid));
			ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else if(PhoneOnline[playerid])
		{
			PhoneOnline[playerid] = 0;
			format(YCMDstr, sizeof(YCMDstr), "%s 开启了电话",Name(playerid));
			ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
	else
	{
		SendErrorMessage(playerid,"您不是VIP /管理员/领导者!");
		return true;
	}
	return true;
}
cmd:me(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(Flood[playerid] > 0) return SendErrorMessage(playerid,"Flood!");
	if(PlayerInfo[playerid][pMuted] == 1) return PlayerMuteMessage(playerid);
	AntiReklama(playerid,params[1],"ME");
	if(antireklamka[playerid] == 1)
	{
		antireklamka[playerid] = 0;
		return true;
	}
	if(sscanf(params, "s[64]", params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/me {B4B5B7}[动作]");
	format(YCMDstr, sizeof(YCMDstr), "%s %s.", Name(playerid), params[0]);
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SetPlayerChatBubble(playerid,params[0],COLOR_PURPLE,30.0,10000);
	Flood[playerid] = 1;
	return true;
}
cmd:s(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(Flood[playerid] > 0) return SendErrorMessage(playerid,"Flood!");
	if(PlayerInfo[playerid][pMuted] == 1) return PlayerMuteMessage(playerid);
	if(sscanf(params, "s[64]", params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}(/s {B4B5B7}[内容]");
	AntiReklama(playerid,params[1],"SHOUT");
	if(antireklamka[playerid] == 1)
	{
		antireklamka[playerid] = 0;
		return true;
	}
	format(YCMDstr, sizeof(YCMDstr), "― %s 大声喊: %s!!",Name(playerid),params[0]);
	ProxDetector(60.0, playerid, YCMDstr,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE2);
	Flood[playerid] = 1;
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		ApplyAnimation(playerid, "ON_LOOKERS", "shout_01",1000.0,0,0,0,0,0,1);
	}
	SetPlayerChatBubble(playerid,params[0],COLOR_YELLOW,60.0,10000);
	return true;
}
cmd:divorce(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMarried] < 1) return SendErrorMessage(playerid,"你没结婚!");
	SendSyntaxMessage(playerid, "你离婚了");
	ClearMarriage(playerid);
	return true;
}
cmd:wedding(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pCash] < 30000) return SendErrorMessage(playerid,"你没有 30 000$!");
	if(PlayerInfo[playerid][pMarried] > 0) return SendErrorMessage(playerid,"你已经结婚了!");
	if(sscanf(params, "u", params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/wedding {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[params[0]][pMarried] > 0) return SendErrorMessage(playerid,"对方已经结婚了!");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SendErrorMessage(playerid,"距离太远了!");
	if(params[0] == playerid) { SendErrorMessage(playerid,"目标不能为自己"); return true; }
	format(YCMDstr, sizeof(YCMDstr), "― 你向 %s 求婚了.",Name(params[0]));
	SendClientMessage(playerid, -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― %s 向你求婚. {4080FF}( 输入: /accept marriage, 接受求婚 ).",Name(playerid));
	SendClientMessage(params[0], -1, YCMDstr);
	ProposeOffer[params[0]] = playerid;
	return true;
}
cmd:ram(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(IsACop(playerid)|| IsAArm(playerid) || PlayerInfo[playerid][pAdministration228] >= 3)
	{
		for(new i = 1; i <= TotalHouse; i++)
		{
			if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
			{
				SetPlayerVirtualWorld(playerid,i+50);
				SetPlayerInterior(playerid,HouseInfo[i][hInt]);
				Q_SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
				PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
				PlayerInfo[playerid][pLocal] = i;
			}
		}
	}
	return true;
}
cmd:take(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pRank] < 4) return SendErrorMessage(playerid,"你的阶级小于 4!");
	if(IsACop(playerid) || PlayerInfo[playerid][pMember] == 11 && PlayerInfo[playerid][pRank] >= 4)
	{
		new listitems[] = "- 驾驶执照\n- 飞机执照 \n- 钓鱼执照\n- 船只执照\n- 武器执照\n- 毒品\n- 武器\n- 材料";
		ShowPlayerDialog(playerid, 7779, DIALOG_STYLE_LIST, "{1E90FF}选择:", listitems, "选择", "退出");
	}
	else
	{
		SendErrorMessage(playerid,"您无法使用此命令!");
	}
	return true;
}
cmd:su(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(sscanf(params, "us[32]", params[0],params[1])) return SendErrorMessage(playerid,"帮助: {4080FF}/su {B4B5B7}[id] [犯罪内容]");
	if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
	{
		if(!IsPlayerConnected(params[0])) return true;
		if(params[0] == INVALID_PLAYER_ID) return true;
		if(PlayerInfo[params[0]][pJailed] != 0) return true;
		if(WantedPoints[params[0]] >= 6) return SendErrorMessage(playerid,"对方已经是六级通缉犯!");
		if(IsACop(params[0])) return SendErrorMessage(playerid,"不能通缉警察!");
		WantedPoints[params[0]]++;
		PlayerInfo[params[0]][pWantedLevel]+= 1;
		SetPlayerCriminal(params[0],playerid, params[1]);
		return true;
	}
	return true;
}
cmd:setspawn(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pSpawnChange] == 1) PlayerInfo[playerid][pSpawnChange] = 0, SendSyntaxMessage(playerid, "现在你将在组织出生点出生.");
	else SendSyntaxMessage(playerid, "现在你将在默认出生点."), PlayerInfo[playerid][pSpawnChange] = 1;
	return true;
}
cmd:findcar(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(caridhouse[playerid] == -1) return SendErrorMessage(playerid,"你没有车辆");
	{
		SetPlayerCheckpoint(playerid,PlayerInfo[playerid][dCarx], PlayerInfo[playerid][dCary], PlayerInfo[playerid][dCarz], 4.0);
		SendSyntaxMessage(playerid, "你的车已经在地图上定位");
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_CAR;
	}
	return true;
}
cmd:homeq(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pPhousekey] != 799)
	{
		SetPlayerCheckpoint(playerid,HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancex], HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancey], HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancez], 4.0);
		SendSyntaxMessage(playerid, "你的房屋已经在地图上定位");
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_HOME;
	}
	return true;
}
cmd:ticket(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsACop(playerid)) return SendErrorMessage(playerid,"你不是警察!");
	if(sscanf(params, "uds[54]",params[0],params[1],params[2])) return	SendErrorMessage(playerid,"帮助: {4080FF}/ticket {B4B5B7}[id] [罚款金额] [理由]");
	if(params[1] < 1 || params[1] > 10000) { SendErrorMessage(playerid,"罚款金额最高 10.000 $"); return true; }
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	if(GetSRVMoney(params[0]) < params[1]) 	return 	SendErrorMessage(playerid,"对方没有足够的钱!");
	if(params[0] == playerid) { SendErrorMessage(playerid,"目标不能为自己"); return true; }
	format(YCMDstr, sizeof(YCMDstr), "― 你开了张金额为 %i $ 的罚单给 %s. (理由: %s)",params[1],Name(params[0]),params[2]);
	SendClientMessage(playerid, -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― 警官 %s 给你开了张罚单,罚款金额: %i $. (理由: %s)",Name(playerid),params[1],params[2]);
	SendClientMessage(params[0], -1, YCMDstr);
 	SendServerMessage(params[0], "输入: /accept ticket - 付罚单(不付可能会被带进警局)");
	TicketOffer[params[0]] = playerid;
	TicketMoney[params[0]] = params[1];
	OnPlayerUpdateAc(playerid);
	return true;
}
cmd:spveh(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SendServerMessage(playerid, "帮助: {4080FF}/spveh {B4B5B7}[50]");
	new Float:pos = floatstr(params[0]),Float:car_x,Float:car_y,Float:car_z;
	for(new cars=0;cars<MAX_VEHICLES;cars++)
	{
		if(GetVehicleModel(cars) > 399)
		{
			GetVehiclePos(cars,car_x,car_y,car_z);
			if(IsPlayerInRangeOfPoint(playerid,pos,car_x,car_y,car_z)) SetVehicleToRespawn(cars);
            DestroyVehicle(GetPVarInt(playerid, "FaggioRent"));
            DeletePVar(playerid, "FaggioRent");
		}
	}
	return true;
}
cmd:arrest(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsACop(playerid)) return true;
	if(PlayerToPoint(6.0, playerid, 1602.2013,-1654.7717,2107.0808) || PlayerToPoint(6.0, playerid, 227.7436,114.5075,999.0156) || PlayerToPoint(6.0, playerid, 188.7124,157.6917,1003.0234)|| PlayerToPoint(6.0, playerid, 218.2263,114.9286,999.0156) || PlayerToPoint(6.0, playerid, 198.3940,157.9389,1003.0234))
	{
		if(sscanf(params, "d",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/arrest {B4B5B7}[时间]");
		if(params[0] < 10 || params[0] > 80) return SendErrorMessage(playerid,"时间限制 10 - 80");
		new suspect = GetClosestPlayer(playerid);
		if(!IsPlayerConnected(suspect)) return true;
		if(!ProxDetectorS(4.0, playerid, suspect)) return true;
		if(WantedLevel[suspect] < 1) return  SendErrorMessage(playerid,"对方没有被通缉!");
		PlayerPlaySound(playerid, 17004, 0.0, 0.0, 0.0);
		format(YCMDstr, sizeof(YCMDstr), "你拘留了 %s, 并且罚款 100 $(罚款到你的包里了)",Name(suspect));
		SendClientMessage(playerid, -1, YCMDstr);
		PlayerInfo[suspect][pCash]-= 100;
		PlayerInfo[playerid][pCash]+= 100;
		GameTextForPlayer(suspect,"~r~-100", 5000, 5);
		DelGun(suspect);
		switch(PlayerInfo[playerid][pMember])
		{
		case 1,10,21: format(YCMDstr, sizeof(YCMDstr), "> 警官 %s 拘留了 %s <",Name(playerid),Name(suspect));
		case 2: format(YCMDstr, sizeof(YCMDstr), "> FBI 探员 %s 拘留了 %s <",Name(playerid),Name(suspect));
		}
		if(PlayerToPoint(6.0, playerid, 1602.2013,-1654.7717,2107.0808))
		{
		    SetTimerEx("UnFreezePlayer", 3500, false, "i", suspect);
            TogglePlayerControllable(suspect, 0);
            SetPlayerVirtualWorld(suspect, 16);
			SetPlayerInterior(suspect, 0);
            new rand;
   	        rand = random(sizeof(Spawntyrmasa));
            Q_SetPlayerPos(suspect, Spawntyrmasa[rand][0], Spawntyrmasa[rand][1], Spawntyrmasa[rand][2]);
			PlayerInfo[suspect][pJailed] = 1;
			PlayerInfo[suspect][pWantedLevel] = 0;
			PlayerInfo[suspect][pJailTime] = params[0] *60;
			PlayerInfo[suspect][pArrested] += 1;
			WantedPoints[suspect] = 0;
			WantedPoints[suspect]--;
			PlayerInfo[suspect][pMestoJail] = 1;
			SetPlayerWantedLevel(suspect, 0);
			WantedLevel[suspect] = 0;
			SetPlayerSpecialAction(suspect,SPECIAL_ACTION_NONE);
 	   	 	RemovePlayerAttachedObject(suspect,5);
			TogglePlayerControllable(suspect, 1);
			PlayerCuffed[suspect] = 0;
			PlayerCuffedTime[suspect] = 0;
		}
		else if(PlayerToPoint(6.0, playerid, 218.2263,114.9286,999.0156))
		{
		    SetTimerEx("UnFreezePlayer", 3500, false, "i", suspect);
            TogglePlayerControllable(suspect, 0);
            SetPlayerVirtualWorld(suspect, 16);
			SetPlayerInterior(suspect, 0);
            new rand;
   	        rand = random(sizeof(Spawntyrmasa));
            Q_SetPlayerPos(suspect, Spawntyrmasa[rand][0], Spawntyrmasa[rand][1], Spawntyrmasa[rand][2]);
			PlayerInfo[suspect][pJailed] = 1;
			PlayerInfo[suspect][pJailTime] = params[0] * 60;
			PlayerInfo[suspect][pArrested] += 1;
			WantedPoints[suspect] = 0;
			WantedLevel[suspect] = 0;
			PlayerInfo[suspect][pWantedLevel] = 0;
			WantedPoints[suspect]--;
			PlayerInfo[suspect][pMestoJail] = 2;
			SetPlayerWantedLevel(suspect, 0);
			SetPlayerSpecialAction(suspect,SPECIAL_ACTION_NONE);
 	   	 	RemovePlayerAttachedObject(suspect,5);
			TogglePlayerControllable(suspect, 1);
			PlayerCuffed[suspect] = 0;
			PlayerCuffedTime[suspect] = 0;
		}
		else if(PlayerToPoint(6.0, playerid, 198.3940,157.9389,1003.0234))
		{
		    SetTimerEx("UnFreezePlayer", 3500, false, "i", suspect);
            TogglePlayerControllable(suspect, 0);
            SetPlayerVirtualWorld(suspect, 16);
			SetPlayerInterior(suspect, 0);
            new rand;
   	        rand = random(sizeof(Spawntyrmasa));
            Q_SetPlayerPos(suspect, Spawntyrmasa[rand][0], Spawntyrmasa[rand][1], Spawntyrmasa[rand][2]);
			PlayerInfo[suspect][pJailed] = 1;
			PlayerInfo[suspect][pJailTime] = params[0] * 60;
			PlayerInfo[suspect][pArrested] += 1;
			WantedPoints[suspect] = 0;
			PlayerInfo[suspect][pWantedLevel] = 0;
			WantedLevel[suspect] = 0;
			PlayerInfo[suspect][pMestoJail] = 3;
			SetPlayerWantedLevel(suspect, 0);
			WantedPoints[suspect]--;
			SetPlayerSpecialAction(suspect,SPECIAL_ACTION_NONE);
 	   	 	RemovePlayerAttachedObject(suspect,5);
			TogglePlayerControllable(suspect, 1);
			PlayerCuffed[suspect] = 0;
			PlayerCuffedTime[suspect] = 0;
		}
	}
	return true;
}
cmd:frisk(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsACop(playerid)) return SendErrorMessage(playerid,"你不是警察");
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/frisk {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(3.0, playerid, params[0])) return true;
	if(params[0] == playerid) return SendErrorMessage(playerid,"目标不能为自己!");
	new text1[20], text2[20];
	if(PlayerInfo[params[0]][pDrugs] > 0) { text1 = "| 毒品."; } else { text1 = "| 空口袋."; }
	if(PlayerInfo[params[0]][pMats] > 0) { text2 = "| 材料."; } else { text2 = "| 空口袋."; }
	format(YCMDstr, sizeof(YCMDstr), "― Вещи %s", Name(params[0]));
	SendClientMessage(playerid, -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― %s.", text1);
	SendClientMessage(playerid, -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― %s.", text2);
	SendClientMessage(playerid, -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "%s 对 %s 进行搜身", Name(playerid) ,Name(params[0]));
	SetPlayerSpecialAction(params[0],SPECIAL_ACTION_HANDSUP);
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return true;
}
cmd:mdc(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsPlayerConnected(playerid)) return true;
	if(!IsACop(playerid)) return SendErrorMessage(playerid,"你不是警察!");
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/mdc {B4B5B7}[id]");
	if(IsPlayerConnected(params[0])) return true;
	SendClientMessage(playerid, TEAM_BLUE_COLOR, "---======== MOBILE DATA COMPUTER ========---");
	format(YCMDstr, sizeof(YCMDstr), "― 名称: %s", Name(params[0])), SendClientMessage(playerid, -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― 犯罪: %s", PlayerCrime[params[0]][pAccusedof]), SendClientMessage(playerid, -1,YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― 报告人: %s", PlayerCrime[params[0]][pVictim]), SendClientMessage(playerid, -1,YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― 通缉等级: %s", WantedLevel[params[0]]), SendClientMessage(playerid, -1,YCMDstr);
	SendClientMessage(playerid, TEAM_BLUE_COLOR, "---============================================---");
	return true;
}
cmd:m(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsPlayerConnected(playerid)) return true;
	if(sscanf(params, "s[128]",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/m {B4B5B7}[内容 ]");
	switch(PlayerInfo[playerid][pMember])
	{
	case 1,10,21:
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 596 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 597 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 598) return SendServerMessage(playerid, "你必须驾驶警车");
			format(YCMDstr, sizeof(YCMDstr), "{{ 警官 %s: %s }}",Name(playerid),params[0]);
			ProxDetector(80.0, playerid, YCMDstr,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		}
	case 2:
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 490 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 560 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 411) return	SendErrorMessage(playerid,"Вы не в машине FBI");
			format(YCMDstr, sizeof(YCMDstr), "{{ FBI 探员 %s: %s }}",Name(playerid),params[0]);
			ProxDetector(80.0, playerid, YCMDstr,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		}
	}
	return true;
}
cmd:rb(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new string[128];
	new result[128];
	if(sscanf(params, "s[128]",result)) return	SendServerMessage(playerid, "帮助: {4080FF}/rb {B4B5B7}[内容]");
	if(PlayerInfo[playerid][pMuted] == 1) return   PlayerMuteMessage(playerid);
	if(Flood[playerid] > 0) return SendErrorMessage(playerid,"Flood!");
	Flood[playerid] = 1;
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
	{
		if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[R] 局长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[R] 代理局长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[R] 副局长 %s: %s.", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[R] 指挥官 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[R] 警监 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[R] 警督 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[R] 警司 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[R] 高级警探 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[R] 中级警探 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[R] 低级警探 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[R] 刑警队队长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[R] 刑警 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[R] 高级警员 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[R] 正式警员 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[R] 学警 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[R] 学警 %s: (( %s ))", Name(playerid), result); }
		SendRadioMessage(1, TEAM_BLUE_COLOR, string);
		SetPlayerChatBubble(playerid, "对着对讲机说话",COLOR_PURPLE,30.0,10000);
		return true;
	}
	else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
	{
		if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[R] 局长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[R] 代理局长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[R] 副局长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[R] 科长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[R] 高级特工 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[R] 初级特工 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[R] 高级探员 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[R] 正式探员 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[R] 实习探员 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[R] 实习探员 %s: (( %s ))", Name(playerid), result); }
		SendRadioMessage(2, TEAM_BLUE_COLOR, string);
		SetPlayerChatBubble(playerid, "对着对讲机说话",COLOR_PURPLE,30.0,10000);
		return true;
	}
	else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
	{
		if(PlayerInfo[playerid][pRank] == 16) { format(string, sizeof(string), "[R] 监狱长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[R] 代理监狱长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[R] 副监狱长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[R] 高级督察 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[R] 检察员 %s: %s",  Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[R] 狱警队队长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[R] 正式狱警 %s: %s",  Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[R] 实习狱警 %s: %s",  Name(playerid), result); }
		else { format(string, sizeof(string), "[R] 实习狱警 %s: (( %s ))", Name(playerid), result); }
		SendRadioMessage(3, TEAM_BLUE_COLOR, string);
		SetPlayerChatBubble(playerid, "对着对讲机说话",COLOR_PURPLE,30.0,10000);
		return true;
	}
	else if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
	{
		if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[R] 院长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[R] 代理院长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[R] 副院长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[R] 心理学家 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[R] 外科医生 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[R] 毒品学专家 %s: %s. ", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[R] 内科医生 %s: %s. ", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[R] 骨科医生 %s: %s. ", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[R] 正式护士 %s: %s. ", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[R] 实习护士 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[R] 实习护士 %s: (( %s ))", Name(playerid), playerid, result); }
		SendRadioMessage(4, TEAM_BLUE_COLOR, string);
		SetPlayerChatBubble(playerid, "对着对讲机说话",COLOR_PURPLE,30.0,10000);
		return true;
	}
	else if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
	{
		if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[政府] 总统 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[政府] 副总统 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[政府] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[政府] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[政府] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[政府] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[政府] 公务员 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[政府] 公务员 %s: (( %s ))", Name(playerid), result); }
		SendRadioMessage(7, TEAM_BLUE_COLOR, string);
		SetPlayerChatBubble(playerid, "对着对讲机说话",COLOR_PURPLE,30.0,10000);
		return true;
	}
	else if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
	{
		if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[R] 未定 %s: %s.", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		SendRadioMessage(10, TEAM_BLUE_COLOR, string);
		SetPlayerChatBubble(playerid, "对着对讲机说话",COLOR_PURPLE,30.0,10000);
		return true;
	}
	else if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
	{
		if(PlayerInfo[playerid][pRank] == 16) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[R] 未定й %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[R] 未定 %s: %s",  Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[R] 未定 %s: %s",  Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[R] 未定 %s: %s",  Name(playerid), result); }
		else { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		SendRadioMessage(19, TEAM_BLUE_COLOR, string);
		SetPlayerChatBubble(playerid, "对着对讲机说话",COLOR_PURPLE,30.0,10000);
		return true;
	}
	else if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
	{
		if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[R] 局长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[R] 代理局长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[R] 副局长 %s: %s.", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[R] 指挥官 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[R] 警监 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[R] 警督 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[R] 警司 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[R] 高级警探 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[R] 中级警探 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[R] 低级警探 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[R] 刑警队队长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[R] 刑警 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[R] 高级警员 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[R] 正式警员 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[R] 学警 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[R] 学警 %s: (( %s ))", Name(playerid), result); }
		SendRadioMessage(21, TEAM_BLUE_COLOR, string);
		SetPlayerChatBubble(playerid, "对着对讲机说话",COLOR_PURPLE,30.0,10000);
		return true;
	}
	return true;
}
cmd:fb(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");

	new string[128];
	new result[128];
	if(PlayerInfo[playerid][pMuted] == 1) return PlayerMuteMessage(playerid);

	if(sscanf(params, "s[128]",result)) return SendErrorMessage(playerid,"帮助: {4080FF}/fb {B4B5B7}[内容]");
	if(Flood[playerid] > 0) return SendErrorMessage(playerid,"Flood!");
	Flood[playerid] = 1;
	new member = PlayerInfo[playerid][pMember];
	if(member == 5)
	{
		if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0x993366AA, string);
	}
	else if(member == 6)
	{
		if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0xBB0000AA, string);
	}
	else if(member == 8)
	{
		if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0xA85400AA, string);
	}
	else if(member == 16)
	{
		if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0xFF6600AA, string);
	}
	else if(member == 11)
	{
		if(duty[playerid] == 0) return SendServerMessage(playerid,"你需要在执照中心开始一个工作日");
		if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0x139BECFF, string);
	}
	else if(member == 12)
	{
		if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定  %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0xCC00FFAA, string);
	}
	else if(member == 13)
	{
		if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0xffff00AA, string);
	}
	else if(member == 15)
	{
		if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定. %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0x009900AA, string);
	}
	else if(member == 14)
	{
		if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0x007575AA, string);
	}
	else if(member == 17)
	{
		if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0x00CCFFAA, string);
	}
	else if(member == 18)
	{
		if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定  %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0x6666FFAA, string);
	}
	else if(member == 23)
	{
		if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] Наё未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0xF5DEB3AA, string);
	}
	return true;
}
cmd:f(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");

	new string[128];
	new result[128];
	if(PlayerInfo[playerid][pMuted] == 1) return PlayerMuteMessage(playerid);

	if(sscanf(params, "s[128]",result)) return SendErrorMessage(playerid,"帮助: {4080FF}/f {B4B5B7}[内容]");
	if(Flood[playerid] > 0) return SendErrorMessage(playerid,"Flood!");
	Flood[playerid] = 1;
	new member = PlayerInfo[playerid][pMember];
	if(member == 5)
	{
		if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0x993366AA, string);
	}
	else if(member == 6)
	{
		if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0xBB0000AA, string);
	}
	else if(member == 8)
	{
		if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0xA85400AA, string);
	}
	else if(member == 16)
	{
		if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0xFF6600AA, string);
	}
	else if(member == 11)
	{
		if(duty[playerid] == 0) return SendServerMessage(playerid,"你需要在执照中心开始一个工作日");
		if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0x139BECFF, string);
	}
	else if(member == 12)
	{
		if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定  %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0xCC00FFAA, string);
	}
	else if(member == 13)
	{
		if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0xffff00AA, string);
	}
	else if(member == 15)
	{
		if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定. %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0x009900AA, string);
	}
	else if(member == 14)
	{
		if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0x007575AA, string);
	}
	else if(member == 17)
	{
		if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0x00CCFFAA, string);
	}
	else if(member == 18)
	{
		if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定  %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0x6666FFAA, string);
	}
	else if(member == 23)
	{
		if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] Наё未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[F] 未定 %s: (( %s ))", Name(playerid), result); }
		SendFamilyMessage(PlayerInfo[playerid][pMember], 0xF5DEB3AA, string);
	}
	return true;
}
cmd:r(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new string[128];
	new result[128];
	if(sscanf(params, "s[128]",result)) return	SendServerMessage(playerid, "帮助: {4080FF}/r {B4B5B7}[内容]");
	if(PlayerInfo[playerid][pMuted] == 1) return   PlayerMuteMessage(playerid);
	if(Flood[playerid] > 0) return SendErrorMessage(playerid,"Flood!");
	Flood[playerid] = 1;
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
	{
		if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[R] 局长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[R] 代理局长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[R] 副局长 %s: %s.", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[R] 指挥官 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[R] 警监 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[R] 警督 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[R] 警司 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[R] 高级警探 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[R] 中级警探 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[R] 低级警探 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[R] 刑警队队长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[R] 刑警 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[R] 高级警员 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[R] 正式警员 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[R] 学警 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[R] 学警 %s: (( %s ))", Name(playerid), result); }
		SendRadioMessage(1, TEAM_BLUE_COLOR, string);
		SetPlayerChatBubble(playerid, "对着对讲机说话",COLOR_PURPLE,30.0,10000);
		return true;
	}
	else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
	{
		if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[R] 局长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[R] 代理局长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[R] 副局长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[R] 科长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[R] 高级特工 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[R] 初级特工 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[R] 高级探员 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[R] 正式探员 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[R] 实习探员 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[R] 实习探员 %s: (( %s ))", Name(playerid), result); }
		SendRadioMessage(2, TEAM_BLUE_COLOR, string);
		SetPlayerChatBubble(playerid, "对着对讲机说话",COLOR_PURPLE,30.0,10000);
		return true;
	}
	else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
	{
		if(PlayerInfo[playerid][pRank] == 16) { format(string, sizeof(string), "[R] 监狱长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[R] 代理监狱长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[R] 副监狱长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[R] 高级督察 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[R] 检察员 %s: %s",  Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[R] 狱警队队长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[R] 正式狱警 %s: %s",  Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[R] 实习狱警 %s: %s",  Name(playerid), result); }
		else { format(string, sizeof(string), "[R] 实习狱警 %s: (( %s ))", Name(playerid), result); }
		SendRadioMessage(3, TEAM_BLUE_COLOR, string);
		SetPlayerChatBubble(playerid, "对着对讲机说话",COLOR_PURPLE,30.0,10000);
		return true;
	}
	else if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
	{
		if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[R] 院长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[R] 代理院长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[R] 副院长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[R] 心理学家 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[R] 外科医生 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[R] 毒品学专家 %s: %s. ", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[R] 内科医生 %s: %s. ", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[R] 骨科医生 %s: %s. ", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[R] 正式护士 %s: %s. ", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[R] 实习护士 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[R] 实习护士 %s: (( %s ))", Name(playerid), playerid, result); }
		SendRadioMessage(4, TEAM_BLUE_COLOR, string);
		SetPlayerChatBubble(playerid, "对着对讲机说话",COLOR_PURPLE,30.0,10000);
		return true;
	}
	else if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
	{
		if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[政府] 总统 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[政府] 副总统 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[政府] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[政府] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[政府] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[政府] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[政府] 公务员 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[政府] 公务员 %s: (( %s ))", Name(playerid), result); }
		SendRadioMessage(7, TEAM_BLUE_COLOR, string);
		SetPlayerChatBubble(playerid, "对着对讲机说话",COLOR_PURPLE,30.0,10000);
		return true;
	}
	else if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
	{
		if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[R] 未定 %s: %s.", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		SendRadioMessage(10, TEAM_BLUE_COLOR, string);
		SetPlayerChatBubble(playerid, "对着对讲机说话",COLOR_PURPLE,30.0,10000);
		return true;
	}
	else if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
	{
		if(PlayerInfo[playerid][pRank] == 16) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[R] 未定й %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[R] 未定 %s: %s",  Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[R] 未定 %s: %s",  Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[R] 未定 %s: %s",  Name(playerid), result); }
		else { format(string, sizeof(string), "[R] 未定 %s: (( %s ))", Name(playerid), result); }
		SendRadioMessage(19, TEAM_BLUE_COLOR, string);
		SetPlayerChatBubble(playerid, "对着对讲机说话",COLOR_PURPLE,30.0,10000);
		return true;
	}
	else if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
	{
		if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[R] 局长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[R] 代理局长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[R] 副局长 %s: %s.", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[R] 指挥官 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[R] 警监 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[R] 警督 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[R] 警司 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[R] 高级警探 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[R] 中级警探 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[R] 低级警探 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[R] 刑警队队长 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[R] 刑警 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[R] 高级警员 %s: (( %s ))", Name(playerid), result); }
		else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[R] 正式警员 %s: (( %s ))", Name(playerid),result); }
		else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[R] 学警 %s: (( %s ))", Name(playerid), result); }
		else { format(string, sizeof(string), "[R] 学警 %s: (( %s ))", Name(playerid), result); }
		SendRadioMessage(21, TEAM_BLUE_COLOR, string);
		SetPlayerChatBubble(playerid, "对着对讲机说话",COLOR_PURPLE,30.0,10000);
		return true;
	}
	return true;
}
cmd:d(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new string[128];
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendErrorMessage(playerid,"帮助: {4080FF}/d {B4B5B7}[内容]");
	if(GetPVarInt(playerid,"Flood") > gettime()) return SendErrorMessage(playerid,"请歇一会儿再用!");
	if(PlayerInfo[playerid][pMuted] == 1)
	{
		PlayerMuteMessage(playerid);
		return true;
	}
	if(PlayerInfo[playerid][pRank] < 3) return SendErrorMessage(playerid,"你的阶级低于 3!");
	switch(PlayerInfo[playerid][pMember])
	{
	case 1:
		{
			if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[LSPD] 局长 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[LSPD] 代理局长 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[LSPD] 副局长 %s: %s.", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[LSPD] 指挥官 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[LSPD] 警监 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[LSPD] 警督 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[LSPD] 警司 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[LSPD] 高级警探 %s: %s", Name(playerid),result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[LSPD] 中级警探 %s: %s", Name(playerid),result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[LSPD] 低级警探 %s: %s", Name(playerid),result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[LSPD] 刑警队队长 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[LSPD] 刑警 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[LSPD] 高级警员 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[LSPD] 正是警员 %s: %s", Name(playerid),result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[LSPD] 学警 %s: %s", Name(playerid), result); }
			else { format(string, sizeof(string), "[LSPD] 学警 %s: %s", Name(playerid), result); }
			SendTeamMessage(1, COLOR_ALLDEPT, string);
			return true;
		}
	case 2:
		{

			if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[FBI] 局长 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[FBI] 代理局长 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[FBI] 副局长 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[FBI] 科长 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[FBI] 高级特工 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[FBI] 初级特工 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[FBI] 高级探员 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[FBI] 正式探员 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[FBI] 实习探员 %s: %s", Name(playerid), result); }
			else { format(string, sizeof(string), "[FBI] 实习探员 %s: %s", Name(playerid), result); }
			SendTeamMessage(1, COLOR_ALLDEPT, string);
			return true;
		}
	case 3:
		{
			if(PlayerInfo[playerid][pRank] == 16) { format(string, sizeof(string), "[监狱 SA] 监狱长 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[监狱 SA] 代理监狱长 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[监狱 SA] 副监狱长 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[监狱 SA] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[监狱 SA] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[监狱 SA] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[监狱 SA] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[监狱 SA] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[监狱 SA] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[监狱 SA] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[监狱 SA] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[监狱 SA] 高级督察 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[监狱 SA] 检查员 %s: %s",  Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[监狱 SA] 狱警队队长 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[监狱 SA] 正式狱警 %s: %s",  Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[监狱 SA] 实习狱警 %s: %s",  Name(playerid), result); }
			else { format(string, sizeof(string), "[监狱 SA] 实习狱警 %s: %s",  Name(playerid), result); }
			SendTeamMessage(1, COLOR_ALLDEPT, string);
			return true;
		}
	case 11:
		{
			if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[LIC] 未定й %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[LIC] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[LIC] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[LIC] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[LIC] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[LIC] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[LIC] 未定未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[LIC] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[LIC] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[LIC] 未定 %s: %s", Name(playerid), result); }
			else { format(string, sizeof(string), "[LIC] 未定 %s: %s", Name(playerid), result); }
			SendTeamMessage(1, COLOR_ALLDEPT, string);
			return true;
		}
	case 4:
		{
			if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[医院] 院子 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[医院] 代理院长 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[医院] 副院长 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[医院] 心理学家 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[医院] 外科医生 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[医院] 毒品学专家 %s: %s. ", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[医院] 内科医生 %s: %s. ", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[医院] 骨科医生 %s: %s. ", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[医院] 正式护士 %s: %s. ", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[医院] 实习护士 %s: %s", Name(playerid), result); }
			else { format(string, sizeof(string), "[医院] 实习护士 %s: %s", Name(playerid), result); }
			SendTeamMessage(1, COLOR_ALLDEPT, string);
			return true;
		}
	case 7:
		{
			if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[政府] 总统 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[政府] 副总统 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[政府] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[政府] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[政府] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[政府] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[政府] 公务员 %s: %s", Name(playerid), result); }
			else { format(string, sizeof(string), "[政府] 公务员 %s: %s", Name(playerid), result); }
			SendTeamMessage(1, COLOR_ALLDEPT, string);
			return true;
		}
	case 9:
		{
			if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[SFPD] 局长 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[SFPD] 代理局长 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[SFPD] 副局长 %s: %s.", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[SFPD] 指挥官 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[SFPD] 警监 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[SFPD] 警督 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[SFPD] 警司 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[SFPD] 高级警探 %s: %s", Name(playerid),result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[SFPD] 中级警探 %s: %s", Name(playerid),result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[SFPD] 低级警探 %s: %s", Name(playerid),result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[SFPD] 刑警队队长 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[SFPD] 刑警 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[SFPD] 高级警员 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[SFPD] 正是警员 %s: %s", Name(playerid),result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[SFPD] 学警 %s: %s", Name(playerid), result); }
			else { format(string, sizeof(string), "[SFPD] 学警 %s: %s", Name(playerid), result); }
			SendTeamMessage(1, COLOR_ALLDEPT, string);
			return true;
		}
	case 19:
		{
			if(PlayerInfo[playerid][pRank] == 16) { format(string, sizeof(string), "[军队] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[军队] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[军队] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[军队] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[军队] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[军队] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[军队] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[军队] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[军队] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[军队] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[军队] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[军队] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[军队] 未定 %s: %s",  Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[军队] 未定 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[军队] 未定 %s: %s",  Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[军队] 未定 %s: %s",  Name(playerid), result); }
			else { format(string, sizeof(string), "[军队] 未定 %s: %s",  Name(playerid), result); }
			SendTeamMessage(1, COLOR_ALLDEPT, string);
			return true;
		}
	case 20:
		{
			if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[LVPD] 局长 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[LVPD] 代理局长 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[LVPD] 副局长 %s: %s.", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[LVPD] 指挥官 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[LVPD] 警监 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[LVPD] 警督 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[LVPD] 警司 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[LVPD] 高级警探 %s: %s", Name(playerid),result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[LVPD] 中级警探 %s: %s", Name(playerid),result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[LVPD] 低级警探 %s: %s", Name(playerid),result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[LVPD] 刑警队队长 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[LVPD] 刑警 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[LVPD] 高级警员 %s: %s", Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[LVPD] 正是警员 %s: %s", Name(playerid),result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[LVPD] 学警 %s: %s", Name(playerid), result); }
			else { format(string, sizeof(string), "[LVPD] 学警 %s: %s", Name(playerid), result); }
			SendTeamMessage(1, COLOR_ALLDEPT, string);
			SetPVarInt(playerid,"Flood",gettime()+30);
			return true;
		}
	}
	return true;
}
cmd:sms(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pLevel] == 1 && PlayerInfo[playerid][pExp] < 1) return SendErrorMessage(playerid,"发送短信你需要在服务器游戏一个小时以上.");
	if(PlayerInfo[playerid][pPhonePlayer] == 0) return SendErrorMessage(playerid,"你没有手机,去购买");
	if(sscanf(params, "ds[64]",params[0],params[1])) return SendErrorMessage(playerid,"帮助: {4080FF}/sms {B4B5B7}[id/number] [内容]");
	if(PlayerTied[playerid] == 1) return SendErrorMessage(playerid,"You are connected!");
	if(PlayerInfo[playerid][pMuted] == 1) return PlayerMuteMessage(playerid);
	if(Flood[playerid] > 0) return SendErrorMessage(playerid,"Flood!");
 	AntiReklama(playerid,params[1],"SMS");
	if(antireklamka[playerid] == 1)
	{
		antireklamka[playerid] = 0;
		return true;
	}
 	Flood[playerid] = 1;
	switch (params[0])
	{
		case 11888:
		{
			if(smsls == 0) return SendErrorMessage(playerid,"接收短信已禁用");
			if(PlayerInfo[playerid][pMobile] <= 0)
			{
				format(YCMDstr, sizeof(YCMDstr), "{90EE90}你的消息: {FFFF00}%s. {90EE90}接收人: 大众媒体",params[1]);
				SendClientMessage(playerid,  -1, YCMDstr);
				SendErrorMessage(playerid, "消息未送达，电话帐户上没有足够的钱!");
				format(YCMDstr, sizeof(YCMDstr), "%s 拿出手机发送了一条短信", Name(playerid));
				ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			format(YCMDstr, sizeof(YCMDstr), "[短信] %s. 发送者: %s[%i]",params[1],Name(playerid), playerid);
			SendFamilyMessage(16, COLOR_YELLOW, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "{90EE90}你的消息: {FFFF00}%s. {90EE90}接收人: 大众媒体",params[1]);
			SendClientMessage(playerid,  -1, YCMDstr);
			PlayerInfo[playerid][pMobile] -= smspricels;
			FracBank[0] += smspricels;
			SetOtherInt("FracBank[0]", FracBank[0]);
		}
	}
	foreach(new i : Player)
	{
		if(params[0] == PlayerInfo[i][pPnumber])
		{
			if(PhoneOnline[i] > 0)
			{
				SendErrorMessage(playerid,"对方手机关机了...");
				format(YCMDstr, sizeof(YCMDstr), "%s 拿出手机",Name(playerid));
				ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			PlayerInfo[playerid][pMobile] -=20;
			format(YCMDstr, sizeof(YCMDstr), "{90EE90}你的消息: {FFFF00}%s. {90EE90}发送者: %s[%i]",params[1],Name(playerid), playerid);
			SendClientMessage(i, -1, YCMDstr);
			PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(YCMDstr, sizeof(YCMDstr), "{90EE90}你的消息: {FFFF00}%s. {90EE90}接受者: %s[%i]",params[1],Name(i), i);
			SendClientMessage(playerid,  -1, YCMDstr);
			SendServerMessage(playerid, "发送成功");
			format(YCMDstr, sizeof(YCMDstr), "%s 拿出手机发了一条短信.",Name(playerid));
			ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return true;
		}
		else if(IsPlayerConnected(params[0]))
		{
            if(PlayerInfo[params[0]][pPhonePlayer] < 1) return SendErrorMessage(playerid,"对方没有手机");
            if(PlayerInfo[playerid][pMobile] <= 50) return SendErrorMessage(playerid, "消息未送达，电话帐户上没有足够的钱!");
			if(PhoneOnline[params[0]] > 0)
			{
				SendErrorMessage(playerid,"对方手机关机了.");
				format(YCMDstr, sizeof(YCMDstr), "%s 拿出手机",Name(playerid));
				ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			format(YCMDstr, sizeof(YCMDstr), "{90EE90}你的消息: {FFFF00}%s. {90EE90}发送者: %s[%i]",params[1],Name(playerid), playerid);
			SendClientMessage(params[0], COLOR_YELLOW, YCMDstr);
			PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(YCMDstr, sizeof(YCMDstr), "%s 收到一条短信.",Name(playerid));
			ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			format(YCMDstr, sizeof(YCMDstr), "{90EE90}你的消息: {FFFF00}%s. {90EE90}接受者: %s[%i]",params[1],Name(params[0]),params[0]);
			SendClientMessage(playerid,  -1, YCMDstr);
			SendServerMessage(playerid, "发送成功");
			PlayerInfo[playerid][pMobile] -= 10;
			TextDrawShowForPlayer(params[0], SMS);
			SetTimerEx("SMSP", 2000, 0, "d", params[0]);
			return true;
		}
	}
	return true;
}
cmd:shelp(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pSupport] == 0) return true;
    SendServerMessage(playerid, "/sc - 辅导员聊天");
    SendServerMessage(playerid, "/ans - 回复玩家");
    SendServerMessage(playerid, "/supports - 在线辅导员");
    return true;
}
cmd:ans(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pSupport] == 0) return true;
	if(sscanf(params, "us[256]",params[0],params[1])) return SendErrorMessage(playerid,"帮助: {4080FF}/ans {B4B5B7}[id] [内容]");
	if(!IsPlayerConnected(params[0])) return true;
    format(YCMDstr, sizeof(YCMDstr), "{FFC125}― 辅导员 {A9A9A9}%s(%d): {FFC125}%s.", Name(playerid), playerid, params[1]);
    SendClientMessage(params[0], -1, YCMDstr);
    PlayerPlaySound(params[0], 1057, 0.0, 0.0, 10.0);
    format(YCMDstr, sizeof(YCMDstr), "{A9A9A9}― %s[%i] {FFC125}回复 {A9A9A9}%s[%i]: {FFC125}%s",Name(playerid),playerid, Name(params[0]),params[0],params[1]);
    SBroadCast(-1, YCMDstr, 1);
   	for ( new i = 0;  i < 5; i++ ) TextDrawShowForPlayer(params[0], TDInfo[i]);
	SetTimerEx("InfoTime", 2000, false, "d", params[0]);
    return true;
}

CMD:wp(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] == 0) return true;
	if(sscanf(params, "u", params[0])) return SendErrorMessage(playerid, "帮助: {4080FF}/wp [玩家id]");
	if(!IsPlayerConnected(params[0])) return true;
	new lstring[168];
	new text[105];
	switch(random(4))
	{
		case 0: format(text, sizeof(text), "管理员 Legendary Roleplay Game 祝你玩得愉快!");
		case 1: format(text, sizeof(text), "享受游戏吧! Legendary Roleplay Game :)");
		case 2: format(text, sizeof(text), "管理员 Legendary Roleplay Game 祝你玩得开心，愉快!");
		case 3: format(text, sizeof(text), "The brightest moments with Legendary Rolplay Game! =)");
	}
	format(lstring, sizeof(lstring), "来自管理员的问候 %s [%d]: %s.",Name(playerid), playerid,text);
	SendClientMessage(params[0], 0xFF9945FF, lstring);
	format(lstring, sizeof(lstring), "[A] %s [%d] 问候了 %s [%d]!", Name(playerid),playerid, Name(params[0]),params[0],params[1]);
	ABroadCast(COLOR_BLUE, lstring, 6);
	return true;
}

cmd:pm(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] == 0) return true;
	if(sscanf(params, "us[256]",params[0],params[1])) return SendErrorMessage(playerid,"帮助: {4080FF}/pm {B4B5B7}[id] [内容]");
	if(!IsPlayerConnected(params[0])) return true;
	format(YCMDstr, sizeof(YCMDstr), "{FFC125}― 管理员回复 {A9A9A9}%s: {FFC125}%s",Name(playerid),params[1]);
	SendClientMessage(params[0], -1, YCMDstr);
	PlayerPlaySound(params[0], 1057, 0.0, 0.0, 10.0);
	format(YCMDstr, sizeof(YCMDstr), "{A9A9A9}― %s %s[%i] {FFC125}回复 {A9A9A9}%s[%i]: {FFC125}%s",pPrefixName[PlayerInfo[playerid][prefix_id]], Name(playerid),playerid, Name(params[0]),params[0],params[1]);
	ABroadCast(-1,YCMDstr,1);
	PlayerInfo[playerid][pMpa] += 1;
 	for ( new i = 0;  i < 5; i++ ) TextDrawShowForPlayer(params[0], TDInfo[i]);
	SetTimerEx("InfoTime", 2000, false, "d", params[0]);
	return true;
}
cmd:suval(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 9 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/suval {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	format(YCMDstr, sizeof(YCMDstr), "― 管理员 %s(%d) 删除你的辅导申请", Name(playerid), playerid);
	SendClientMessage(params[0], -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― 你删除了 %s(%d) 辅导申请", Name(params[0]), params[0]);
	SendClientMessage(playerid, -1, YCMDstr);
	PlayerInfo[params[0]][pSupport] = 0;
	return true;
}
cmd:makesupport(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 9 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/makesuport {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	format(YCMDstr, sizeof(YCMDstr), "― 管理员 %s(%d) 设置你为辅导员 (帮助指令: /shelp)", Name(playerid), playerid);
	SendClientMessage(params[0], -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― 你设置辅导员: %s(%d)", Name(params[0]), params[0]);
	SendClientMessage(playerid, -1, YCMDstr);
	PlayerInfo[params[0]][pSupport] = 1;
	format(YCMDstr, sizeof(YCMDstr), "INSERT INTO `"TABLE_LOGS"` (`Name`, `Name2`,`Nomer`,`Cmd`) VALUES ('%s', '%s', '1', 'makesupport')",Name(playerid),Name(params[0]));
	mysql_query(YCMDstr);
	return true;
}
cmd:lyes(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMember] == 16)
	{
		if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/lyes {B4B5B7}[id]");
		if(!IsPlayerConnected(params[0])) return true;
		if(zvonok[params[0]] !=1) return SendErrorMessage(playerid,"该玩家没有打电话给办公室!");
		format(YCMDstr, sizeof(YCMDstr), "你接了来自 %s 的电话",Name(params[0]));
		SendClientMessage(playerid, -1, YCMDstr);
		Tel[params[0]] = 1;
		RingTone[params[0]] = 0;
		SendServerMessage(params[0], "大众媒体办公室接听了你的电话..");
		if(PlayerInfo[playerid][pMember] == 16)
		{
			TalkingLivels[params[0]] = 1;
			PlayerInfo[playerid][pMobile] -= smspricels;
			FracBank[0] += smspricels;
			SetOtherInt("FracBank[0]", FracBank[0]);
		}
	}
	return true;
}
cmd:loff(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMember] == 16)
	{
		if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/loff {B4B5B7}[id]");
		if(!IsPlayerConnected(params[0])) return true;
		if(zvonok[params[0]] !=1) return SendErrorMessage(playerid,"该玩家没有打电话给办公室!");
		format(YCMDstr, sizeof(YCMDstr), "― 你挂断了来自 %s 的电话",Name(params[0]));
		SendClientMessage(playerid, -1, YCMDstr);
		SetPlayerSpecialAction(params[0],SPECIAL_ACTION_STOPUSECELLPHONE);
	 	SendServerMessage(params[0], "电话挂断.");
		zvonok[params[0]] = 0;
		Tel[params[0]] = 255;
		if(PlayerInfo[playerid][pMember] == 16)
		{
			TalkingLivels[params[0]] = 255;
		}
	}
	return true;
}
cmd:call(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pPhonePlayer] == 0) return SendErrorMessage(playerid,"你没有手机,去购买");
	if(sscanf(params, "d",params[0]))
	{
		SetPlayerAttachedObject(playerid, 3, 18874,6,0.08,0.00,-0.01,-104.0,-13.0,-183.0,1.00,1.00,1.00);
	    PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
		format(YCMDstr, sizeof(YCMDstr), "%s 拿出手机",Name(playerid));
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
		ShowPlayerDialog(playerid, 9956, DIALOG_STYLE_LIST, "{1E90FF}选择服务", "呼叫急救\n- 报警\n- 叫出租车\n- 叫汽修工", "选择", "退出");
		return true;
	}
	if(Mobile[playerid] != MAX_SLOTS) return SendErrorMessage(playerid,"你已经在通电话了 ");
	if(PlayerInfo[playerid][pMobile] <= 0)
	{
		SendErrorMessage(playerid,"您帐户中的金额不足以拨打电话");
		format(YCMDstr, sizeof(YCMDstr), "%s 拿出手机",Name(playerid));
		ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return true;
	}
	format(YCMDstr, sizeof(YCMDstr), "%s 拿出手机",Name(playerid));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SetPlayerAttachedObject(playerid, 3, 18874,6,0.08,0.00,-0.01,-104.0,-13.0,-183.0,1.00,1.00,1.00);
	PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
	if(params[0] == PlayerInfo[playerid][pPnumber])
	{
		SendServerMessage(playerid, "不能拨打自己的电话");
		SetPlayerSpecialAction(playerid,13);
		return true;
	}
	if(params[0] == 11888)
	{
		if(smsls == 0) return SendErrorMessage(playerid,"现在没有现场直播.");
		format(YCMDstr, sizeof(YCMDstr), "办公室电话响个不停: %s. 输入 /lyes [%i], 接听电话",Name(playerid), playerid);
		SendFamilyMessage(16, COLOR_YELLOW, YCMDstr);
		SetPlayerSpecialAction(playerid,11);
		zvonok[playerid] = 1;
		PlayerInfo[playerid][pMobile] -= smspricels;
		FracBank[0] += smspricels;
		SetOtherInt("FracBank[0]", FracBank[0]);
		return true;
	}
	foreach(new i : Player)
	{
		if(PlayerInfo[i][pPnumber] == params[0] && params[0] != 0)
		{
			Mobile[playerid] = i;
			if(!IsPlayerConnected(i)) return true;
			if(PhoneOnline[Mobile[playerid]] > 0) return SendErrorMessage(playerid,"手机关机了...");
			if(Mobile[Mobile[playerid]] == MAX_SLOTS)
			{
				format(YCMDstr, sizeof(YCMDstr), "― 手机响个不停. 接电话 (/P)ickup. 来电人: %s",Name(playerid));
				SendClientMessage(Mobile[playerid], -1, YCMDstr);
				PlayerPlaySound(Mobile[playerid], 20600, 0.0, 0.0, 0.0);
				format(YCMDstr, sizeof(YCMDstr), " %s 拨打电话",Name(i));
				ProxDetector(30.0, i, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerSpecialAction(playerid,11);
				CellTime[playerid] = 1;
				return true;
			}
		}
	}
	if(Mobile[playerid] == -1)
	{
		SendErrorMessage(playerid,"网络接入区外的电话");
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
		return true;
	}
	return true;
}
cmd:p(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(Mobile[playerid] != MAX_SLOTS) return SendErrorMessage(playerid,"你已经在接电话或者没人打电话给你");
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			if(Mobile[i] == playerid)
			{
				Mobile[playerid] = i;
				SendServerMessage(i, "拿起手机.");
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
				format(YCMDstr, sizeof(YCMDstr), "%s 拿出手机接电话", Name(playerid));
				ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerAttachedObject(playerid, 3, 18874,6,0.08,0.00,-0.01,-104.0,-13.0,-183.0,1.00,1.00,1.00);
				PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
			}
		}
	}
	return true;
}
cmd:h(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(IsPlayerConnected(Mobile[playerid]))
	{
		if(Mobile[playerid] != MAX_SLOTS)
		{
			SendServerMessage(Mobile[playerid], "挂断了电话");
			SetPlayerSpecialAction(Mobile[playerid],SPECIAL_ACTION_STOPUSECELLPHONE);
			CellTime[Mobile[playerid]] = 0;
			CellTime[playerid] = 0;
			Mobile[Mobile[playerid]] = MAX_SLOTS;
			SendSyntaxMessage(playerid, "你挂断了");
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
		}
		Mobile[playerid] = MAX_SLOTS;
		Mobile[Mobile[playerid]] = MAX_SLOTS;
		CellTime[playerid] = 0;
		return true;
	}
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
	TalkingLivels[playerid] = 255;
	zvonok[playerid] = 0;
	Tel[playerid] = 255;
	RemovePlayerAttachedObject(playerid,3);
	return true;
}
cmd:ad(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsPlayerConnected(playerid)) return true;
	if(sscanf(params, "s[128]",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/ad {B4B5B7}[内容]");
	if(PlayerInfo[playerid][pMuted] == 1) return PlayerMuteMessage(playerid);
	if(PlayerInfo[playerid][pLevel] < 2) return SendErrorMessage(playerid,"你需要达到 2级");
	new string1[128];
	format(string1,sizeof(string1),"― 你需要等待: %d 秒!",AdvertTime[playerid]);
	if(AdvertTime[playerid] > 0) return SendClientMessage(playerid, -1, string1);
	AdvertTime[playerid] = 30;
	AntiReklama(playerid,params[1],"AD");
	if(antireklamka[playerid] == 1)
	{
		antireklamka[playerid] = 0;
		return true;
	}
	if(lNews[playerid] == 1) return SendErrorMessage(playerid,"先打开收音机 (/radio)");
	strmid (ReportQ[playerid],params[0], 0, strlen(params[0]), 255);
	if(lNews[playerid] == 0)
	{
		format(YCMDstr,sizeof(YCMDstr),"{B8B8B8}发送广告:\n               {FF0000}%s\n\n{B8B8B8}价格:{FF0000} %i $\n\n\n{56839C}广告将在验证后提交!\n感谢您使用大众媒体服务",params[0],strlen(params[0])*addd[0]);
		ShowPlayerDialog(playerid,8454,DIALOG_STYLE_MSGBOX,"{1E90FF}广告",YCMDstr,"确定","退出");
	}
	return true;
}
cmd:duty(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMember] != 11) return true;
	if(!IsPlayerInRangeOfPoint(playerid,15,1408.2483,-1667.1582,13.6859)) return SendErrorMessage(playerid,"你不在执照中心!");
	if(duty[playerid] == 0)
	{
		format(YCMDstr, sizeof(YCMDstr), "教练 %s 开始工作了",Name(playerid));
		duty[playerid] = 1;
	}
	else
	{
		format(YCMDstr, sizeof(YCMDstr), "教练 %s 下班了",Name(playerid));
		duty[playerid] = 0;
	}
	ProxDetector(25.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return true;
}
cmd:time(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    new mtext[20];
	new year, month,day;
	getdate(year, month, day);
	if(month == 1) { mtext = "一月"; }
	else if(month == 2) { mtext = "二月"; }
	else if(month == 3) { mtext = "三月"; }
	else if(month == 4) { mtext = "四月"; }
	else if(month == 5) { mtext = "五月"; }
	else if(month == 6) { mtext = "六月"; }
	else if(month == 7) { mtext = "七月"; }
	else if(month == 8) { mtext = "八月"; }
	else if(month == 9) { mtext = "九月"; }
	else if(month == 10) { mtext = "十月"; }
	else if(month == 11) { mtext = "十一月"; }
	else if(month == 12) { mtext = "十二月"; }
    new hour,minuite,second;
    gettime(hour,minuite,second);
    if (PlayerInfo[playerid][pJailTime] > 0)
    {
        format(YCMDstr, sizeof(YCMDstr), "%d 号 %s, {CCFF33}%d 小时 %d 分钟.\n\n{FFFFFF}监禁时间: {CCFF33}%d 秒.", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]);
    }
    else
    {
        format(YCMDstr, sizeof(YCMDstr), "{FFFFFF}%d 号 %s, {CCFF33}%d 小时 %d 分钟.\n\n{FFFFFF}游戏时间:{CCFF33} %i 分钟.", day, mtext, hour, minuite, PlayerInfo[playerid][pTimeBP]);
    }
    ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0,1);
    ShowPlayerDialog(playerid,3861,DIALOG_STYLE_MSGBOX,"{1E90FF}时间",YCMDstr,"关闭","");
	SetPlayerChatBubble(playerid, "看了看时间", COLOR_PURPLE, 30.0, 10000);
    return 1;
}
cmd:house(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/house {B4B5B7}[房屋ID]");
	Q_SetPlayerPos(playerid,HouseInfo[params[0]][hEntrancex],HouseInfo[params[0]][hEntrancey],HouseInfo[params[0]][hEntrancez]);
	GameTextForPlayer(playerid, "~w~HOUSE", 5000, 1);
	return true;
}
cmd:chat(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 2 || dostup[playerid] == 0) return true;
	if(!BigEar[playerid]) BigEar[playerid] = 1, SendServerMessage(playerid, "聊天 ON");
	else if(BigEar[playerid]) BigEar[playerid] = 0, SendServerMessage(playerid, "聊天 OFF");
	return true;
}
cmd:prison(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 1 || dostup[playerid] == 0) return true;
	if(Flood[playerid] > 0) return SendErrorMessage(playerid,"Нельзя так быстро");
	new pri4ina[60];
	if(sscanf(params, "uds[128]",params[0],params[1],pri4ina)) return SendErrorMessage(playerid,"帮助: {4080FF}/prison {B4B5B7}[id] [分钟] [原因]");
    if(params[1] < 1 || params[1] > 100) return SendErrorMessage(playerid,"时间限制 1 分钟 - 100 分钟.");
	if(!IsPlayerConnected(params[0])) return true;
	DelGun(params[0]);
	WantedPoints[params[0]] = 0;
    SetTimerEx("UnFreezePlayer", 3500, false, "i", params[0]);
    TogglePlayerControllable(params[0], 0);
    SetPlayerVirtualWorld(params[0], 16);
    SetPlayerInterior(params[0], 0);
    new rand;
    rand = random(sizeof(Spawntyrmasa));
    Q_SetPlayerPos(params[0], Spawntyrmasa[rand][0], Spawntyrmasa[rand][1], Spawntyrmasa[rand][2]);
	PlayerInfo[params[0]][pJailed] = 1;
	PlayerInfo[params[0]][pMestoJail] = 1;
	PlayerInfo[params[0]][pJailTime] = params[1]*60;
	format(YCMDstr, sizeof(YCMDstr), "{FF3300}― 管理员: %s 将 %s 送入监狱 %i 分钟. (原因: %s)",Name(playerid),Name(params[0]),params[1],pri4ina);
	SendClientMessageToAll(-1,YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― 你被管理员送进监狱 %i 分钟",params[1]);
	SendClientMessage(params[0], -1, YCMDstr);
	Flood[playerid] = 5;
	return true;
}
cmd:demorgan(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return	SendErrorMessage(playerid,"帮助: {4080FF}/demorgan {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	format(YCMDstr, sizeof(YCMDstr), "{FF3300}― 管理员: %s 将 %s 监禁了.",Name(playerid),Name(params[0]));
	SendClientMessageToAll(-1,YCMDstr);
	WantedPoints[params[0]] = 0;
	WantedLevel[params[0]] = 0;
	PlayerInfo[params[0]][pJailed] = 4;
	PlayerInfo[params[0]][pJailTime] = 3600;
	SetPlayerInterior(params[0], 7);
	SetPlayerVirtualWorld(params[0], 30);
    SetTimerEx("UnFreezePlayer", 2500, false, "i", params[0]);
    TogglePlayerControllable(params[0], 0);
    Q_SetPlayerPos(params[0],774.2896,-76.2518,1000.6538);
	DelGun(params[0]);
	return true;
}
cmd:settime(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return	SendErrorMessage(playerid,"翻译: {4080FF}/settime {B4B5B7}[时间] (0-23)");
	SetWorldTime(params[0]);
	format(YCMDstr, sizeof(YCMDstr), "服务器时间设置到 %i 小时.",params[0]);
	BroadCast(-1, YCMDstr);
	return true;
}
cmd:setmjob(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pJobHealLeader] == 0) return SendErrorMessage(playerid,"你不是警察");
	if(PlayerInfo[playerid][pRank] < 7 || PlayerInfo[playerid][pMember] != 4) return SendErrorMessage(playerid,"您无法使用此命令");
	if(sscanf(params, "u",params[0])) return SendServerMessage(playerid, "帮助: {4080FF}/setmjob {B4B5B7}[id]");
	if(IsPlayerConnected(params[0]))
	{
		if(params[0] != INVALID_PLAYER_ID)
		{
			new names[32];
			if(PlayerInfo[params[0]][pLeader] == 4 || PlayerInfo[params[0]][pRank] >= 9) return SendErrorMessage(playerid,"对方无法翻译");
			if(PlayerInfo[params[0]][pMember] != 4) return SendErrorMessage(playerid,"对方不属于医院");
			if(PlayerInfo[playerid][pJobHeal] == 1) { names = "SF Bolnice"; }
			else if(PlayerInfo[playerid][pJobHeal] == 2) { names = "LS Bolnice"; }
			else if(PlayerInfo[playerid][pJobHeal] == 3) { names = "LV Bolnice"; }
			new string[85];
			format(string, sizeof(string), "― [转移到 %s] 领导者: %s 将你转移",names,Name(playerid));
			SendClientMessage(params[0], -1, string);
			format(string, sizeof(string), "― 你将 %s 转移到 %s", params[0],names);
			SendClientMessage(playerid, -1, string);
			PlayerInfo[params[0]][pJobHeal] = PlayerInfo[playerid][pJobHeal];
		}
	}
	return true;
}
cmd:ainvite(playerid,params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 2 || dostup[playerid] == 0) return true;
	ShowPlayerDialog(playerid, 22833, DIALOG_STYLE_LIST, "{1E90FF}加入帮派", "{FFFFFF}1. - LSPD\n2. - 政府 SA\n3. - 大学 SA\n4. - FBI SA\n5. - 军队 SA\n6. - 监狱 SA\n7. - 医院 SA\n8. - 驾驶学校 SA\n9. - 媒体 SA\n10. - LCN\n11. - 俄罗斯黑手党\n12. - 山口组\n13. - 14K\n14. - 巴拉斯\n15. - 格罗夫\n16. - 阿兹特克\n17. - 瓦戈斯\n18. LVPD\n19.SFPD", "选择", "退出");
	return 1;
}
cmd:invite(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
 	if(IsAZamAndLeader(playerid))
 	{
		if(sscanf(params, "u",params[0])) return SendServerMessage(playerid, "帮助: {4080FF}/invite {B4B5B7}[id]");
		if(GetDistanceBetweenPlayers(playerid, params[0]) < 5.0)
		{
			if(IsPlayerInAnyVehicle(params[0])) return SendErrorMessage(playerid,"玩家在车里!");
			if(PlayerInfo[params[0]][pLevel] < 2) return SendErrorMessage(playerid,"对方游戏等级低于 2!");
			if(PlayerInfo[params[0]][pMember] != 0) return SendErrorMessage(playerid,"对方有组织了");
			if(PlayerInfo[params[0]][pWarns] >= 1) return SendErrorMessage(playerid,"对方有警告.");
			if(PlayerInfo[playerid][pMember] != 13 && PlayerInfo[playerid][pMember] != 15 && PlayerInfo[playerid][pMember] != 17 && PlayerInfo[playerid][pMember] != 12 && PlayerInfo[playerid][pMember] != 18 && PlayerInfo[params[0]][pMedcard] < 1) return SendErrorMessage(playerid,"玩家没有医疗卡，让TA在医院拿一张医疗卡.");
			new ftext[20];
			switch(PlayerInfo[playerid][pMember])
			{
				case 1: ftext = "LSPD";
				case 2: ftext = "FBI";
				case 3: ftext = "监狱 SA";
				case 4: ftext = "医院 SA";
				case 5: ftext = "LCN";
				case 6: ftext = "山口组";
				case 7: ftext = "政府 SA";
				case 8: ftext = "大学 SA";
				case 9: ftext = "SFPD";
				case 11: ftext = "驾驶学校 SA";
				case 12: ftext = "巴拉斯";
				case 13: ftext = "瓦戈斯";
				case 14: ftext = "俄罗斯黑手党";
				case 15: ftext = "格罗夫";
				case 16: ftext = "媒体";
				case 17: ftext = "阿兹特克";
				case 18: ftext = "14K";
				case 19: ftext = "军队";
				case 20: ftext = "LVPD";
			}
			new string[128];
			format(string,128, "{FFFFFF}%s 邀请你加入 %s\n- 你加入吗?", Name(playerid),ftext);
			ShowPlayerDialog(params[0],76,DIALOG_STYLE_MSGBOX,"{1E90FF}加入组织",string, "加入", "不了");
			SetPVarInt(params[0], "InvitePlayer", PlayerInfo[playerid][pMember]);
			new year, month, day;
			getdate(year, month, day);
			new data[20];
			format(data,sizeof(data), "%02d.%02d.%d",day,month,year);
			strmid(PlayerInfo[params[0]][pDataInvite], (data), 0, strlen(data), 20);
		}
	}
	return true;
}
cmd:uninvite(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsPlayerConnected(playerid)) return true;
	if(sscanf(params, "us[64]",params[0],params[1])) return SendServerMessage(playerid, "帮助: {4080FF}/uninvite {B4B5B7}[id] [原因]");
	if(PlayerInfo[playerid][pRank] == PlayerInfo[params[0]][pRank]) return SendErrorMessage(playerid,"你不能踢出TA");
	if(params[0] == playerid) return SendErrorMessage(playerid,"目标不能为自己");
	if(IsPlayerInAnyVehicle(params[0])) return SendErrorMessage(playerid,"玩家在车里");
	if(PlayerInfo[params[0]][pMember] == PlayerInfo[playerid][pLeader] ||PlayerInfo[params[0]][pMember] == PlayerInfo[playerid][pMember])
	{
		if(!IsPlayerConnected(params[0])) return true;
		if(!CanUninvitePlayer(playerid,params[0])) return true;
		if(PlayerInfo[params[0]][pMember] <= 0) return true;
		format(YCMDstr, sizeof(YCMDstr), "― %s 将你踢出了组织. (原因: %s)",Name(playerid),params[1]);
		SendClientMessage(params[0], -1, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), "― 你将 %s 踢出组织, 原因: %s",Name(params[0]),params[1]);
		SendClientMessage(playerid, -1, YCMDstr);
		SendServerMessage(params[0], "你被踢出组织!");
		PlayerInfo[params[0]][pMember] = 0;
		PlayerInfo[params[0]][pLeader] = 0;
		PlayerInfo[params[0]][pInFrac] = 0;
		PlayerInfo[params[0]][pRank] = 0;
		PlayerInfo[params[0]][pMWarns] = 0;
		SetPlayerArmourAC(params[0],0);
		DelGun(params[0]);
		SetPlayerColor(params[0], TEAM_HIT_COLOR);
		SetPlayerSkin(params[0], PlayerInfo[params[0]][pChar]);
	}
	return true;
}
CMD:unleader(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(SledAdm(playerid) || Rucovod(playerid))
	{
		if(PlayerInfo[params[0]][pLeader] >= 1) return SendErrorMessage(playerid,"对方是领导人!");
		if(sscanf(params,"ds",params[0],params[1])) return SendErrorMessage(playerid,"帮助 /unleader [id] [原因]");
	    new string[144], stringers[144];
	    format(string,sizeof(string),"%s %s 将你踢出了组织. 原因: %s",pPrefixName[PlayerInfo[playerid][prefix_id]],Name(playerid),params[1]);
	    PlayerInfo[params[0]][pLeader] = 0;
	    PlayerInfo[params[0]][pMember] = 0;
    	PlayerInfo[params[0]][pInFrac] = 0;
		PlayerInfo[params[0]][pRank] = 0;
		PlayerInfo[params[0]][pJobHealLeader] = 0;
		PlayerInfo[params[0]][pJobHeal] = 0;
		SetPlayerArmourAC(params[0],0);
		DelGun(params[0]);
		SetPlayerColor(params[0], TEAM_HIT_COLOR);
		SetPlayerSkin(params[0],PlayerInfo[params[0]][pChar][0]);
		SendClientMessage(playerid, COLOR_RED, string);
		format(stringers,sizeof(stringers),"%s %s 将 %s 踢出了组织. 原因: %s",pPrefixName[PlayerInfo[playerid][prefix_id]],Name(playerid), Name(params[0]), params[1]);
		ABroadCast(-1,stringers,1);
	}
	else
	{
	    SendErrorMessage(playerid,"你没有权限!");
	}
	return 1;
}
cmd:auval(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/auval {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[params[0]][pLeader] >= 1) return SendErrorMessage(playerid,"对方是领导到人!");
	if(IsPlayerInAnyVehicle(params[0])) return SendErrorMessage(playerid,"对方在车里");
	if(PlayerInfo[params[0]][pMember] == 0) return true;
	format(YCMDstr, sizeof(YCMDstr), "― %s 将你踢出组织",Name(playerid));
	SendClientMessage(params[0], 0x6495EDFF, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― 你将 %s 踢出组织",Name(params[0]));
	SendClientMessage(playerid, -1, YCMDstr);
 	SendServerMessage(params[0], "你被踢出组织!");
	PlayerInfo[params[0]][pMember] = 0;
	PlayerInfo[params[0]][pInFrac] = 0;
	PlayerInfo[params[0]][pRank] = 0;
	PlayerInfo[params[0]][pJobHealLeader] = 0;
	PlayerInfo[params[0]][pJobHeal] = 0;
	SetPlayerArmourAC(params[0],0);
	DelGun(params[0]);
	SetPlayerColor(params[0], TEAM_HIT_COLOR);
	SetPlayerSkin(params[0],PlayerInfo[params[0]][pChar][0]);
	return true;
}
cmd:hpgro(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if (PlayerInfo[playerid][pAdministration228] >= 6)
	{
		foreach(new i: Player)
		{
			if(GetDistanceBetweenPlayers(playerid,i) < 32 && playerid != i )
			{
				SetPlayerHealthAC(i,100);
				SendServerMessage(i, "管理员治愈了你");
			}
		}
		SendSyntaxMessage(playerid, "附近没有人.");
		return 1;
	}
	return 1;
}
cmd:armorgro(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if (PlayerInfo[playerid][pAdministration228] >= 6)
	{
		foreach(new i: Player)
		{
			if(GetDistanceBetweenPlayers(playerid,i) < 32 && playerid != i )
			{
				SetPlayerArmourAC(i,100);
			 	SendServerMessage(i, "管理员给了你护甲");
			}
		}
		SendSyntaxMessage(playerid,"附近没有人.");
		return 1;
	}
	return 1;
}
cmd:givegungro(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdministration228] < 5 ) return SendServerMessage(playerid," 你没有权限");
		if(sscanf(params, "dd",params[0],params[1])) return SendServerMessage(playerid, "帮助: {4080FF}/givegungro {B4B5B7}[武器ID] [弹药]");
		if(params[0] == 4 || params[0] == 9 || params[0] == 26 || params[0] == 27 || params[0] == 37 || params[0] == 38 || params[0] == 35 || params[0] == 36 || params[0] == 39 || params[0] == 44 || params[0] == 45)
		{
			SendErrorMessage(playerid," 未知武器!");
			return 1;
		}
		if(params[1] <1||params[1] > 500)
		{
			SendErrorMessage(playerid," 子弹数量 1 - 500 发!");
			return 1;
		}
		foreach(new i: Player)
		{
			if(GetDistanceBetweenPlayers(playerid,i) < 32 && playerid != i )
			{
				GiveWeapon(i, params[0], params[1]);
				SendServerMessage(i,"管理员给了你武器");
			}
		}
	}
	return 1;
}
cmd:weapoffgro(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if (PlayerInfo[playerid][pAdministration228] >= 6)
	{
		foreach(new i: Player)
		{
			if(GetDistanceBetweenPlayers(playerid,i) < 32 && playerid != i )
			{
				ResetPlayerWeapons(i);
				SendServerMessage(i, "管理员清空了你的武器.");
			}
		}
		SendErrorMessage(playerid,"附近没有人.");
		return 1;
	}
	return 1;
}
cmd:weapoffall(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if (PlayerInfo[playerid][pAdministration228] >= 6)
	{
		foreach(new i: Player)
		{
			ResetPlayerWeapons(i);
		}
		new string[128];
		format(string, sizeof(string), "― 管理员清空了所有武器 ");
		SendClientMessageToAll(-1,string);
	}
	return 1;
}
cmd:armorall(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if (PlayerInfo[playerid][pAdministration228] >= 6)
	{
		foreach(new i: Player)
		{
			SetPlayerArmourAC(i,100);
		}
		new string[128];
		format(string, sizeof(string), "― 管理员 %s 给了所有人护甲",Name(playerid));
		SendClientMessageToAll(-1,string);
	}
	return true;
}
cmd:hpall(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if (PlayerInfo[playerid][pAdministration228] >= 6)
	{
		foreach(new i: Player)
		{
			SetPlayerHealthAC(i,100);
			PlayerInfo[playerid][pHP] = 100;
		}
		new string[128];
		format(string, sizeof(string), "― 管理员 %s 治愈了所有人",Name(playerid));
		SendClientMessageToAll(-1,string);
	}
	return true;
}
cmd:im(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if (PlayerInfo[playerid][pAdministration228] >= 7)
	{
		ShowPlayerDialog(playerid, 62, DIALOG_STYLE_LIST, "{1E90FF}管理员版面", "治愈附近所有人\n治愈所有\n护甲给附近人\n护甲给所有人\n所有人获得武器\n删除附近人武器\n附近人获得 Deagle\n附近人获得 mp5\n附近人获得 Ak47\n附近人获得 m4\n附近人获得 Rifle", "选择", "退出");
		return 1;
	}
	return true;
}
cmd:makeadmin(playerid, params[])
{
	/*new sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid,sendername,sizeof(sendername));
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!strcmp(sendername,FD6,true) || !strcmp(sendername,FD1,true) || !strcmp(sendername,FD2,true) || !strcmp(sendername,FD3,true)|| !strcmp(sendername,FD5,true) || !strcmp(sendername,FD4,true))*/
	if(Rucovod(playerid))
	{
    	//if (PlayerInfo[playerid][pAdministration228] >= 10)
		{
			if(!IsPlayerConnected(playerid)) return true;
			if(sscanf(params, "ud",params[0],params[1])) return SendServerMessage(playerid, "帮助: {4080FF}/makeadmin {B4B5B7}[playerid] [等级(1-9)]");
			if(params[1] > 9 || params[1] < 0) { SendErrorMessage(playerid,"最高 9 级!"); return true; }
			if(!IsPlayerConnected(params[0])) return true;
			if(PlayerInfo[params[0]][pAdministration228] > 0)
			{
				PlayerInfo[params[0]][pAdministration228] = params[1];
				printf(" %s 将 %s 设置为 %i 级管理员.",Name(playerid),Name(params[0]),params[1]);
				format(YCMDstr, sizeof(YCMDstr), "{90EE90}― 你被设置为 %i 级管理员. {FF0000}( 执行者: %s )",params[1],Name(playerid));
				SendClientMessage(params[0], -1, YCMDstr);
				format(YCMDstr, sizeof(YCMDstr), "{90EE90}― 你设置 %s 为 %i 级管理员.",Name(params[0]),params[1]);
				SendClientMessage(playerid, -1, YCMDstr);
			}
			else
			{
				PlayerInfo[params[0]][pAdministration228] = params[1];
				strmid(PlayerInfo[params[0]][pDostup], GeneratePassword(Random(10,15)), 0, 20, 20);
				format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pDostup = '%s' WHERE Name = '%s'",PlayerInfo[playerid][pDostup],Name(playerid));
				mysql_query(YCMDstr);
				format(YCMDstr, sizeof(YCMDstr), "{90EE90}― 你被设置为 %i 级管理员. {FF0000}( 执行管理员: %s ) {90EE90}你的管理员授权码是: %s",params[1],Name(playerid),PlayerInfo[params[0]][pDostup]);
				SendClientMessage(params[0], -1, YCMDstr);
				format(YCMDstr, sizeof(YCMDstr), "{90EE90}― 你设置 %s 为 %i 级管理员.",Name(params[0]),params[1]);
				SendClientMessage(playerid, -1, YCMDstr);
				PlayerInfo[params[0]][prefix_id] = 0;
			}
			format(YCMDstr, sizeof(YCMDstr), "INSERT INTO `"TABLE_LOGS"` (`Name`, `Name2`,`Nomer`,`Cmd`) VALUES ('%s', '%s', '%d', 'makeadmin')",Name(playerid),Name(params[0]),params[1]);
			mysql_query(YCMDstr);
		}
	}
	else
	{
	    SendErrorMessage(playerid, "Вы не занимаете руководящую должность!");
	}
	return true;
}
cmd:geton(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new geton[32];
	new pdaytime[32];
	if(PlayerInfo[playerid][pAdministration228] < 1 || dostup[playerid] == 0) return SendErrorMessage(playerid,"你没有权限!");
	if(sscanf(params, "s[63]",params[0])) return SendServerMessage(playerid, "帮助: /geton {B4B5B7}[账户名称]");
	format(YCMDstr, sizeof(YCMDstr), "SELECT * FROM `"TABLE_ACCOUNT"` WHERE Name = '%s'",params[0]);
	mysql_query(YCMDstr);
	mysql_store_result();
	if(mysql_fetch_row_format(YCMDstr))
	{
		BaseGet("pOnline",geton);
		BaseGet("pTimeDayS",pdaytime);
		format(YCMDstr, sizeof(YCMDstr), "名称: %s | 上次登录时间: %s | 游戏时间(小时数): %d",params[0],geton,pdaytime);
		SendClientMessage(playerid, -1, YCMDstr);
	}
	else SendErrorMessage(playerid,"数据库里未找到指定账户");
	mysql_free_result();
	return true;
}
cmd:lpanel(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] < 1) return SendErrorMessage(playerid,"你不是领导人!");
	ShowPlayerDialog(playerid,3048,DIALOG_STYLE_LIST, "{1E90FF}领导人菜单","{ff0000}[OFFLINE]{FFFFFF} 踢出玩家\n{ff0000}[OFFLINE]{FFFFFF} 调整玩家阶级\n{ff0000}[OFFLINE]{FFFFFF} 所有组织成员", "选择", "退出");
	return true;
}
cmd:getleader(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new Names[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pAdministration228] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/getleader {B4B5B7}[组织ID]");
	format(YCMDstr, sizeof(YCMDstr), "SELECT * FROM `"TABLE_ACCOUNT"` WHERE pLeader = '%i'",params[0]);
	mysql_query(YCMDstr);
	mysql_store_result();
	if(mysql_fetch_row_format(YCMDstr))
	{
		BaseGet("Name",Names);
		format(YCMDstr, sizeof(YCMDstr), "― 名称: %s | 组织 ID: %i",Names,params[0]);
		SendClientMessage(playerid, -1, YCMDstr);
		while(mysql_next_row())
		{
			BaseGet("Name",Names);
			format(YCMDstr, sizeof(YCMDstr), "― 名称: %s | 组织 ID: %i",Names,params[0]);
			SendClientMessage(playerid, -1, YCMDstr);
		}
	}
	else SendErrorMessage(playerid,"数据库里未找到指定账户");
	mysql_free_result();
	return true;
}
cmd:makeleader(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new para1,level;
	if(SledAdm(playerid) || Rucovod(playerid))
	{
		if(sscanf(params, "ud",para1,level)) return SendErrorMessage(playerid,"帮助: {4080FF}/makeleader {B4B5B7}[id] [组织ID(1 - 20)]");
		if(level > 20 || level < 1) { SendErrorMessage(playerid,"组织ID 1 - 20!"); return true; }
		if(level == 10) {SendErrorMessage(playerid, "无效组织!"); return true;}
		if(!IsPlayerConnected(para1)) return true;
		if(PlayerInfo[para1][pWarns] >= 1) return SendErrorMessage(playerid,"对方有警告.");
		if(PlayerInfo[params[0]][pAdministration228] == PlayerInfo[playerid][pAdministration228]) return SendServerMessage(playerid, "使用 /ainvite");
		PlayerInfo[para1][pLeader] = level;
		PlayerInfo[para1][pMember] = level;
		format(YCMDstr, sizeof(YCMDstr), "{ff5000}― 管理员: %s 任命你为一个组织的领导人",Name(playerid));
		SendClientMessage(para1, -1, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), "{ff5000}― 管理员 %s[%i] 任命 %s 为领导人,组织ID: %i.",Name(playerid),playerid,Name(para1),level);
		ABroadCast(-1, YCMDstr, 1);
		OldSkin[playerid] = GetPlayerSkin(playerid);
		if(level == 1){ PlayerInfo[para1][pRank] = 15; InviteSkin[para1] = 265; } //Police Force
		else if(level == 2) { PlayerInfo[para1][pRank] = 9; InviteSkin[para1] = 286; } //FBI
		else if(level == 3) { PlayerInfo[para1][pRank] = 16; InviteSkin[para1] = 228; } //tyrma
 		else if(level == 4) { PlayerInfo[para1][pJobHeal] = 1; PlayerInfo[para1][pJobHealLeader] = 1; PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 70; } //Ambulance
 		else if(level == 5) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 223; } //La Cosa Nostra
		else if(level == 6) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 120; } //Yakuza
		else if(level == 7) { PlayerInfo[para1][pRank] = 7; InviteSkin[para1] = 57; } //Goverment
		else if(level == 8) { PlayerInfo[para1][pRank] = 4; InviteSkin[para1] = 295; } // univer
		else if(level == 9) { PlayerInfo[para1][pRank] = 15; InviteSkin[para1] = 265; } //Police Force
		else if(level == 11) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 59; } //Driving/Flying School
 		else if(level == 12) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 102; } //Ballas
		else if(level == 13) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 108; } //Vagos
		else if(level == 14) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 111; } //Russian Mafia
		else if(level == 15) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 106; } //Groove
		else if(level == 16) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 261; } //News Reporters
		else if(level == 17) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 115; } //Aztecas
		else if(level == 18) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 174; } //Rifa
		else if(level == 19) { PlayerInfo[para1][pRank] = 16; InviteSkin[para1] = 61; } //Army
		else if(level == 20) { PlayerInfo[para1][pRank] = 15; InviteSkin[para1] = 265; } //Police Force
		SetPlayerInterior(para1, 5);
		SetPlayerVirtualWorld(para1, 1);
		TextDrawShowForPlayer(para1, SkinRabCancel);
		TextDrawShowForPlayer(para1, SkinRabLeft);
		TextDrawShowForPlayer(para1, SkinRabSelect);
		TextDrawShowForPlayer(para1, SkinRabRight);
		TogglePlayerControllable(para1,0);
		SelectTextDraw(para1,0xA3B4C5FF);
		new rand = 0;
		Q_SetPlayerPos(para1, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		SetPlayerFacingAngle(para1, gInviteSpawns[rand][3]);
		SetPlayerCameraPos(para1,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		SetPlayerCameraLookAt(para1,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		TogglePlayerControllable(para1, 0);
		SelectChar[para1] = 255;
		PlayerInfo[para1][pBolnicad] = 0;
		SelectCharID[para1] = PlayerInfo[para1][pMember];
		SelectCharPlace[para1] = 1;
		PlayerInfo[para1][pModel] = InviteSkin[para1];
		SetPlayerArmourAC(para1,0);
		SetPlayerHealthAC(para1,100);
		PlayerInfo[para1][pHP] = 100;
		SetPlayerSkin(para1, InviteSkin[para1]);
		new year, month, day;
		getdate(year, month, day);
		new data[20];
		format(data,sizeof(data), "%02d.%02d.%d",day,month,year);
		strmid(PlayerInfo[para1][pDataLeader], (data), 0, strlen(data), 20);
		format(YCMDstr, sizeof(YCMDstr), "INSERT INTO `"TABLE_LOGS"` (`Name`, `Name2`,`Nomer`,`Cmd`) VALUES ('%s', '%s', '%d', 'makeleader')",Name(playerid),Name(para1),level);
		mysql_query(YCMDstr);
	}
	else
	{
	    SendErrorMessage(playerid,"你没有权限!");
	}
	return true;
}
cmd:demote(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(sscanf(params, "u",params[0],params[1])) return  SendErrorMessage(playerid,"帮助: {4080FF}/demote {B4B5B7}[id] ( 踢出 )");
	if(GetPVarInt(playerid,"AntiDemote") > gettime()) return SendServerMessage(playerid, "请等待一会儿再使用.");
	if(PlayerInfo[params[0]][pLeader] >= 1) return SendErrorMessage(playerid,"对方是领导人!");
	if(PlayerInfo[playerid][pRank] < 6) return SendErrorMessage(playerid,"你的阶级低于 6!");
	if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7)
	{
		if(IsPlayerConnected(params[0]))
		{
			if(params[0] != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[params[0]][pMember] == 2) { SendErrorMessage(playerid,"对方是FBI探员!"); return true; }
				else if (PlayerInfo[params[0]][pMember] == 5) { SendErrorMessage(playerid,"对方不在国家组织!"); return true; }
				else if (PlayerInfo[params[0]][pMember] == 6) { SendErrorMessage(playerid,"对方不在国家组织!"); return true; }
				else if (PlayerInfo[params[0]][pMember] == 7) { SendErrorMessage(playerid,"对方不在国家组织!"); return true; }
				else if (PlayerInfo[params[0]][pMember] == 8) { SendErrorMessage(playerid,"对方不在国家组织!"); return true; }
				else if (PlayerInfo[params[0]][pMember] == 9) { SendErrorMessage(playerid,"对方不在国家组织!"); return true; }
				else if (PlayerInfo[params[0]][pMember] == 12) { SendErrorMessage(playerid,"对方不在国家组织!"); return true; }
				else if (PlayerInfo[params[0]][pMember] == 13) { SendErrorMessage(playerid,"对方不在国家组织!"); return true; }
				else if (PlayerInfo[params[0]][pMember] == 14) { SendErrorMessage(playerid,"对方不在国家组织!"); return true; }
				else if (PlayerInfo[params[0]][pMember] == 15) { SendErrorMessage(playerid,"对方不在国家组织!"); return true; }
				else if (PlayerInfo[params[0]][pMember] == 16) { SendErrorMessage(playerid,"对方不在国家组织!"); return true; }
				else if (PlayerInfo[params[0]][pMember] == 17) { SendErrorMessage(playerid,"对方不在国家组织!"); return true; }
				else if (PlayerInfo[params[0]][pMember] == 18) { SendErrorMessage(playerid,"对方不在国家组织!"); return true; }
				PlayerInfo[params[0]][pMember] = 0;
				PlayerInfo[params[0]][pInFrac] = 0;
				PlayerInfo[params[0]][pRank] = 0;
				PlayerInfo[params[0]][pLeader] = 0;
				SetPlayerArmourAC(params[0],0);
				SetPlayerColor(params[0], TEAM_HIT_COLOR);
				SetPlayerSkin(params[0], PlayerInfo[params[0]][pChar][0]);
				SendServerMessage(params[0], "你被FBI解雇了");
				SendSyntaxMessage(playerid,"你解雇了这个玩家");
				SetPVarInt(playerid, "AntiDemote", gettime() + 600);
			}
		}
	}
	return true;
}
cmd:giverank(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new string[128];
	if(sscanf(params, "ud",params[0],params[1])) return    SendErrorMessage(playerid,"帮助: {4080FF}/giverank {B4B5B7}[id] [阶级]");
	if(IsAZamAndLeader(playerid))
	{
		if(PlayerInfo[playerid][pRank] <= PlayerInfo[params[0]][pRank]) return SendErrorMessage(playerid,"你不能提升/降低这个玩家");
		if(params[1] >= PlayerInfo[playerid][pRank]) return  SendErrorMessage(playerid,"你不能提高你的等级");
		switch(PlayerInfo[playerid][pMember])
		{
			case 1: if(params[1] > 14 || params[1] < 1) return SendServerMessage(playerid, "阶级限制 1 - 14!");
			case 2: if(params[1] > 9 || params[1] < 1) return SendServerMessage(playerid, "阶级限制 1 - 7!");
			case 3: if(params[1] > 15 || params[1] < 1) return SendServerMessage(playerid, "阶级限制 1 - 15!");
			case 4: if(params[1] > 9 || params[1] < 1) return SendServerMessage(playerid, "阶级限制 1 - 7!");
			case 5: if(params[1] > 9 || params[1] < 1) return SendServerMessage(playerid, "阶级限制 1 - 9!");
			case 6: if(params[1] > 9 || params[1] < 1) return SendServerMessage(playerid, "阶级限制 1 - 9!");
			case 7: if(params[1] > 7 || params[1] < 1) return SendServerMessage(playerid, "阶级限制 1 - 10!");
			case 8: if(params[1] > 3 || params[1] < 1) return SendServerMessage(playerid, "阶级限制 1 - 3!");
			case 9: if(params[1] > 14 || params[1] < 1) return SendServerMessage(playerid, "阶级限制 1 - 5!");
			case 11: if(params[1] > 9 || params[1] < 1) return SendServerMessage(playerid, "阶级限制 1 - 7!");
			case 12: if(params[1] > 9 || params[1] < 1) return SendServerMessage(playerid, "阶级限制 1 - 9!");
			case 13: if(params[1] > 9 || params[1] < 1) return SendServerMessage(playerid, "阶级限制 1 - 9!");
			case 14: if(params[1] > 9 || params[1] < 1) return SendServerMessage(playerid, "阶级限制 1 - 7!");
			case 15: if(params[1] > 9 || params[1] < 1) return SendServerMessage(playerid, "阶级限制 1 - 9!");
			case 16: if(params[1] > 9 || params[1] < 1) return SendServerMessage(playerid, "阶级限制 1 - 5!");
			case 17: if(params[1] > 9 || params[1] < 1) return SendServerMessage(playerid, "阶级限制 1 - 9!");
			case 18: if(params[1] > 9 || params[1] < 1) return SendServerMessage(playerid, "阶级限制 1 - 9!");
			case 19: if(params[1] > 15 || params[1] < 1) return SendServerMessage(playerid, "阶级限制 1 - 15!");
			case 20: if(params[1] > 14 || params[1] < 1) return SendServerMessage(playerid, "阶级限制 1 - 14!");
		}
		if(IsACop(params[0]) || IsAArm(params[0]) || IsAMayor(params[0])|| IsAuniver(params[0]) || IsAMedic(params[0]))
		{
		    if(PlayerInfo[params[0]][pRank] == 4 && PlayerInfo[params[0]][pDiplom] != 1) return SendErrorMessage(playerid, "对方没有文凭*不能提升到4阶级以上");
		}
		if(PlayerInfo[playerid][pMember] == PlayerInfo[params[0]][pMember])
		{
			if(params[0] != INVALID_PLAYER_ID)
			{
				if(params[0] == playerid) { SendErrorMessage(playerid,"目标不能为自己"); return true; }
				if (PlayerInfo[params[0]][pLeader] >= 1) { SendErrorMessage(playerid,"对方是领导人"); return true; }
				PlayerInfo[params[0]][pRank] = params[1];
				format(string, sizeof(string), "― 你的阶级调整到了  %i,执行人 %s",params[1], Name(playerid));
				SendClientMessage(params[0], -1, string);
				format(string, sizeof(string), "― 你调整了 %s 的阶级到 %i.", Name(params[0]),params[1]);
				SendClientMessage(playerid, -1, string);
				SetPlayerStraps(params[0]);
			}
		}
	}
	format(YCMDstr, sizeof(YCMDstr), "INSERT INTO `"TABLE_LOGS"` (`Name`, `Name2`,`Nomer`,`Cmd`) VALUES ('%s', '%s', '%d', 'giverank')",Name(playerid),Name(params[0]),params[1]);
	mysql_query(YCMDstr);
	return true;
}
cmd:agiverank(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud",params[0],params[1])) return SendErrorMessage(playerid,"帮助: {4080FF}/agiverank {B4B5B7}[玩家id] [阶级 (1 - 15)]");
	if(params[1] > 15 || params[1] < 0) { SendErrorMessage(playerid,"限制 1 - 15!"); return true; }
	if(!IsPlayerConnected(params[0])) return true;
	PlayerInfo[params[0]][pRank] = params[1];
	format(YCMDstr, sizeof(YCMDstr), "― 你的阶级被管理员 %s 重新设置",Name(playerid));
	SendClientMessage(params[0], -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― 你设置了 %s 的阶级到 %i.",Name(params[0]),params[1]);
	SendClientMessage(playerid, -1, YCMDstr);
	SetPlayerStraps(params[0]);
	format(YCMDstr, sizeof(YCMDstr), "INSERT INTO `"TABLE_LOGS"` (`Name`, `Name2`,`Nomer`,`Cmd`) VALUES ('%s', '%s', '%d', 'agiverank')",Name(playerid),Name(params[0]),params[1]);
	mysql_query(YCMDstr);
	return true;
}
cmd:tp(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 1 || dostup[playerid] == 0) return true;
    for(new i; i < 40; i++)
	{
		TextDrawShowForPlayer(playerid, Teleport[i]);
    	SelectTextDraw(playerid,0xA3B4C5FF);
    	clicktd[playerid] = true;
	}
    return 1;
}
cmd:ftp(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 2 || dostup[playerid] == 0) return true;
	new meber;
    if(sscanf(params,"d",meber)) return SendErrorMessage(playerid,"帮助: {4080FF}/ftp {B4B5B7}[1 - 8]");
    if(meber > 8 || meber < 0) return SendErrorMessage(playerid,"1 - 8.");
	Q_SetPlayerPos(playerid, SpawnInfo[meber][0], SpawnInfo[meber][1], SpawnInfo[meber][2]);
	return 1;
}
cmd:mark(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 1 || dostup[playerid] == 0) return true;
	GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
	SendSyntaxMessage(playerid, "传送点已设定");
	return true;
}
cmd:gotomark(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 1 || dostup[playerid] == 0) return true;
	if(GetPlayerState(playerid) == 2)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		Q_SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
		TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
	}
	else Q_SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
	SendSyntaxMessage(playerid, "你被传送了");
	SetPlayerInterior(playerid,0);
	return true;
}
cmd:g(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/g {B4B5B7}[id]");
	new Float:plocx,Float:plocy,Float:plocz;
	if(!IsPlayerConnected(params[0])) return true;
	if(GetPlayerState(params[0]) == PLAYER_STATE_SPECTATING && gSpectateID[params[0]] != INVALID_PLAYER_ID) return SendErrorMessage(playerid,"管理员处于监视模式");
	if(GetPlayerState(params[0]) != 1 && GetPlayerState(params[0]) != 2 && GetPlayerState(params[0]) != 3) return SendErrorMessage(playerid,"无效玩家!");
	GetPlayerPos(params[0], plocx, plocy, plocz);
	if (GetPlayerState(playerid) == 2)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		Q_SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
		TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
	}
	else
	{
		Q_SetPlayerPos(playerid,plocx,plocy+2, plocz);
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
		SetPlayerInterior(playerid, GetPlayerInterior(params[0]));
	}
	SendSyntaxMessage(playerid, "你被传送了");
	return true;
}
cmd:gethome(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/gethome {B4B5B7}[id]");
	foreach(new i : Player)
	{
		if(PlayerInfo[i][pPhousekey] == params[0])
		{
			format(YCMDstr,sizeof(YCMDstr),"― Home: [%i], Player: [%i]",params[0],i);
			SendClientMessage(playerid,-1,YCMDstr);
		}
	}
	return true;
}
cmd:get(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsPlayerConnected(playerid)) return true;
	new param[32];
	new string[128];
	if( sscanf( params, "s[32]S()[64]", param, params ) ) return SendErrorMessage(playerid,"帮助: {4080FF}/get [可用名] {B4B5B7}可用名: guns");
	else if(strcmp(param, "guns",true) == 0)
	{
		switch(PlayerInfo[playerid][pMember])
		{
		    case 13:
	  		{
                if(!PlayerToPoint(5.0,playerid,2767.1877,-1610.7919,11.0824)) return SendErrorMessage(playerid,"你不在瓦戈斯帮派仓库!");
                if(StoreInfo[4][oLock] == 1) return SendErrorMessage(playerid,"仓库关闭了!");
	  		    format(string,45,"从瓦戈斯帮派仓库拿武器");
	  		}
	  		case 12:
	  		{
                if(!PlayerToPoint(5.0,playerid,-735.6074,2411.0491,1500.9701)) return SendErrorMessage(playerid,"你不在巴拉斯帮派仓库");
                if(StoreInfo[2][oLock] == 1) return SendErrorMessage(playerid,"仓库关闭了!");
	  		    format(string,45,"从巴拉斯帮派仓库拿武器");
	  		}
	  		case 18:
	  		{
                if(!PlayerToPoint(5.0,playerid,2736.6211,-1771.0443,1117.2410)) return SendErrorMessage(playerid,"你不在14K帮派仓库!");
                if(StoreInfo[5][oLock] == 1) return SendErrorMessage(playerid,"仓库关闭了!");
	  		    format(string,45,"从14K帮派仓库拿武器");
	  		}
	  		case 17:
	  		{
                if(!PlayerToPoint(5.0,playerid,2013.4742,1342.2686,632.0748)) return SendErrorMessage(playerid,"你不在阿兹特克帮派仓库!");
                if(StoreInfo[3][oLock] == 1) return SendErrorMessage(playerid,"仓库关闭了!");
                format(string,45,"从阿兹特克帮派仓库拿武器");
	  		}
	  		case 15:
	  		{
                if(!PlayerToPoint(5.0,playerid,2507.5146,-1697.9250,18.0824)) return SendErrorMessage(playerid,"你不在格罗夫帮派仓库!");
                if(StoreInfo[1][oLock] == 1) return SendErrorMessage(playerid,"仓库关闭了!");
                format(string,45,"从格罗夫帮派仓库拿武器");
	  		}
		}
		if (!IsAGang(playerid)) return SendErrorMessage(playerid,"你不是帮派成员");
		if(PlayerInfo[playerid][pRank] < 4) return SendErrorMessage(playerid,"你的阶级低于 4!");
		for(new i; i < 52; i++){ TextDrawShowForPlayer(playerid, weapmenu[i]); SelectTextDraw(playerid,0xFF6347AA); clicktd[playerid] = true; }
	}
	return true;
}
cmd:fillcarq(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsPlayerConnected(playerid)) return true;
	if(!IsPlayerInAnyVehicle(playerid)) return SendErrorMessage(playerid,"你没有在车里!");
	new car = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][pFuel] == 0) return SendErrorMessage(playerid,"没有燃料罐!");
	if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetVehicleModel(car) == 481 || GetVehicleModel(car) == 509 || GetVehicleModel(car) == 510) return SendErrorMessage(playerid,"你不在车内或者你驾驶的车辆不需要加油.");
	if(Fuell[car] >= 200) return SendErrorMessage(playerid,"车辆燃料已经达到了 200");
	SendServerMessage(playerid, "你加了20升燃料");
	Fuell[car] += 20;
	PlayerInfo[playerid][pFuel]--;
	PlayerInfo[playerid][pFuelcar] += 20;
	return true;
}
cmd:gethere(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 2 || dostup[playerid] == 0) return true;
	new plo;
	if(sscanf(params, "us",plo)) return SendErrorMessage(playerid,"帮助: {4080FF}/gethere {B4B5B7}[id]");
	new Float:plocx,Float:plocy,Float:plocz;
	new inter = GetPlayerInterior(playerid);
	new worldd = GetPlayerVirtualWorld(playerid);
	if(IsPlayerConnected(plo))
	{
		if(plo != INVALID_PLAYER_ID)
		{
			if(PlayerInfo[playerid][pAdministration228] >= 2)
			{
				if(GetPlayerState(plo) != 1 && GetPlayerState(plo) != 2 && GetPlayerState(plo) != 3) return	SendErrorMessage(playerid,"错误!!!");
				GetPlayerPos(playerid, plocx, plocy, plocz);
				if(PlayerInfo[playerid][pInt] > 0)
				{
					SetPlayerInterior(plo,inter);
					PlayerInfo[plo][pInt] = inter;
					PlayerInfo[plo][pLocal] = PlayerInfo[playerid][pLocal];
					SetPlayerVirtualWorld(plo,worldd);
				}
				if(PlayerInfo[playerid][pInt] == 0)
				{
					SetPlayerInterior(plo,PlayerInfo[playerid][pInt]);
					SetPlayerInterior(plo,inter);
					SetPlayerVirtualWorld(plo,worldd);
				}
				if(plocz > 930.0 && PlayerInfo[playerid][pInt] == 0)
				{
					SetPlayerInterior(plo,inter);
					PlayerInfo[plo][pInt] = inter;
				}
				if (GetPlayerState(plo) == 2)
				{
					TelePos[plo][0] = 0.0;
					TelePos[plo][1] = 0.0;
					SetPlayerInterior(plo,inter);
					new tmpcar = GetPlayerVehicleID(plo);
					SetPlayerVirtualWorld(plo,worldd);
					Q_SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
				}
				else
				{
					Q_SetPlayerPos(plo,plocx,plocy+2, plocz);
					SetPlayerInterior(plo,inter);
					SetPlayerVirtualWorld(plo,worldd);
				}
				SendServerMessage(plo, "管理员将你拉到TA身边");
				format(YCMDstr, sizeof(YCMDstr), "― 管理员 %s 传送玩家到身边 - %s ",Name(playerid),Name(plo));
				ABroadCast(COLOR_GREY,YCMDstr,1);
			}
		}
	}
    return true;
}
cmd:mp(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pAdministration228] < 9 || dostup[playerid] == 0) return true;
    foreach(Player, i)
    {
    	ShowPlayerDialog(i, 14155, DIALOG_STYLE_MSGBOX,"{1E90FF}Legendary Roleplay Game","{FFFFFF}你想传送到活动吗?","是的","不了");
    	predlojitmp[i] = playerid;
    }
    format(YCMDstr, sizeof(YCMDstr), "― 你开始将玩家传送到自己这边");
    SendClientMessage(playerid, -1, YCMDstr);
    return true;
}
cmd:givegun(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "udd",params[0],params[1],params[2])) return SendErrorMessage(playerid,"帮助: {4080FF}/givegun {B4B5B7}[id] [武器id] [子弹]");
	if(params[2] < 1 || params[2] > 100) return SendErrorMessage(playerid,"子弹限制 1 - 100!");
	if(params[1] < 1||params[1] > 46||params[1]==27||params[1]==1 || params[1] == 26||params[1]==2||params[1]==9||params[1]==17||params[1]==19||params[1]==20||params[1]==21||params[1]==36||params[1]==38||params[1]==39||params[1]==40||params[1]==44||params[1]==45)
	{
		SendErrorMessage(playerid,"未知武器!");
		return 1;
	}
	GiveWeapon(params[0],params[1],params[2]);
	SendSyntaxMessage(playerid, "武器发了!");
	new adms[144];
	format(adms,sizeof(adms),"管理员 %s 给了 %s 一把武器,ID - %d", PlayerInfo[playerid][pName],PlayerInfo[params[0]][pName],params[1]);
	ABroadCast(COLOR_GREY,adms, 1);
	return true;
}
cmd:changecolorss(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(vcolor1[playerid] == 0) return vcolor2[playerid] = 1, vcolor1[playerid] = 1;
	if(vcolor2[playerid] == 1) return vcolor1[playerid] = 0, vcolor2[playerid] = 0;
	return true;
}
cmd:selestcolorhh(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(AvtoSalonOn[playerid] == 0) return true;
	if(vcolor2[playerid] == 0 && vcolor1[playerid] == 0)
	{
		scolor[playerid]++;
		ChangeVehicleColor(GetPlayerVehicleID(playerid), scolor[playerid], scolor1[playerid]);
		if(AvtoSalonOn[playerid] == 1)
		{
			format(YCMDstr,sizeof(YCMDstr),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~%i ~y~COLOR2: ~w~%i",VehicleNames[AvtoSalonCarNope[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarNope[AvtoSalonChange[playerid]][1],scolor[playerid],scolor1[playerid]);
			GameTextForPlayer(playerid,YCMDstr, 5000, 3);
		}
		else if(AvtoSalonOn[playerid] == 2)
		{
			format(YCMDstr,sizeof(YCMDstr),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~%i ~y~COLOR2: ~w~%i",VehicleNames[AvtoSalonCarD[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarD[AvtoSalonChange[playerid]][1],scolor[playerid],scolor1[playerid]);
			GameTextForPlayer(playerid,YCMDstr, 5000, 3);
		}
		else if(AvtoSalonOn[playerid] == 3)
		{
			format(YCMDstr,sizeof(YCMDstr),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~%i ~y~COLOR2: ~w~%i",VehicleNames[AvtoSalonCarA[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarA[AvtoSalonChange[playerid]][1],scolor[playerid],scolor1[playerid]);
			GameTextForPlayer(playerid,YCMDstr, 5000, 3);
		}
		return true;
	}
	if(vcolor1[playerid] == 1 && vcolor2[playerid] == 1)
	{
		scolor1[playerid]++;
		ChangeVehicleColor(GetPlayerVehicleID(playerid), scolor[playerid], scolor1[playerid]);
		if(AvtoSalonOn[playerid] == 1)
		{
			format(YCMDstr,sizeof(YCMDstr),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~%i ~y~COLOR2: ~w~%i",VehicleNames[AvtoSalonCarNope[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarNope[AvtoSalonChange[playerid]][1],scolor[playerid],scolor1[playerid]);
			GameTextForPlayer(playerid,YCMDstr, 5000, 3);
		}
		else if(AvtoSalonOn[playerid] == 2)
		{
			format(YCMDstr,sizeof(YCMDstr),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~%i ~y~COLOR2: ~w~%i",VehicleNames[AvtoSalonCarD[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarD[AvtoSalonChange[playerid]][1],scolor[playerid],scolor1[playerid]);
			GameTextForPlayer(playerid,YCMDstr, 5000, 3);
		}
		else if(AvtoSalonOn[playerid] == 3)
		{
			format(YCMDstr,sizeof(YCMDstr),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~%i ~y~COLOR2: ~w~%i",VehicleNames[AvtoSalonCarA[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarA[AvtoSalonChange[playerid]][1],scolor[playerid],scolor1[playerid]);
			GameTextForPlayer(playerid,YCMDstr, 5000, 3);
		}
		return true;
	}
	return true;
}
cmd:selestcolorhhss(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(AvtoSalonOn[playerid] == 0) return true;
	if(vcolor2[playerid] == 0 && vcolor1[playerid] == 0)
	{
		scolor[playerid]--;
		ChangeVehicleColor(GetPlayerVehicleID(playerid), scolor[playerid], scolor1[playerid]);
		if(AvtoSalonOn[playerid] == 1)
		{
			format(YCMDstr,sizeof(YCMDstr),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~%i ~y~COLOR2: ~w~%i",VehicleNames[AvtoSalonCarNope[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarNope[AvtoSalonChange[playerid]][1],scolor[playerid],scolor1[playerid]);
			GameTextForPlayer(playerid,YCMDstr, 5000, 3);
		}
		else if(AvtoSalonOn[playerid] == 2)
		{
			format(YCMDstr,sizeof(YCMDstr),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~%i ~y~COLOR2: ~w~%i",VehicleNames[AvtoSalonCarD[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarD[AvtoSalonChange[playerid]][1],scolor[playerid],scolor1[playerid]);
			GameTextForPlayer(playerid,YCMDstr, 5000, 3);
		}
		else if(AvtoSalonOn[playerid] == 3)
		{
			format(YCMDstr,sizeof(YCMDstr),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~%i ~y~COLOR2: ~w~%i",VehicleNames[AvtoSalonCarA[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarA[AvtoSalonChange[playerid]][1],scolor[playerid],scolor1[playerid]);
			GameTextForPlayer(playerid,YCMDstr, 5000, 3);
		}
		return true;
	}
	if(vcolor1[playerid] == 1 && vcolor2[playerid] == 1)
	{
		scolor1[playerid]--;
		ChangeVehicleColor(GetPlayerVehicleID(playerid), scolor[playerid], scolor1[playerid]);
		if(AvtoSalonOn[playerid] == 1)
		{
			format(YCMDstr,sizeof(YCMDstr),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~%i ~y~COLOR2: ~w~%i",VehicleNames[AvtoSalonCarNope[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarNope[AvtoSalonChange[playerid]][1],scolor[playerid],scolor1[playerid]);
			GameTextForPlayer(playerid,YCMDstr, 5000, 3);
		}
		else if(AvtoSalonOn[playerid] == 2)
		{
			format(YCMDstr,sizeof(YCMDstr),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~%i ~y~COLOR2: ~w~%i",VehicleNames[AvtoSalonCarD[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarD[AvtoSalonChange[playerid]][1],scolor[playerid],scolor1[playerid]);
			GameTextForPlayer(playerid,YCMDstr, 5000, 3);
		}
		else if(AvtoSalonOn[playerid] == 3)
		{
			format(YCMDstr,sizeof(YCMDstr),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~%i ~y~COLOR2: ~w~%i",VehicleNames[AvtoSalonCarA[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarA[AvtoSalonChange[playerid]][1],scolor[playerid],scolor1[playerid]);
			GameTextForPlayer(playerid,YCMDstr, 5000, 3);
		}
		return true;
	}
	return true;
}
cmd:nextcar(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsPlayerInRangeOfPoint(playerid,20,2075.8750, -2173.1252, 1115.1290)) return true;
	if(AvtoSalonOn[playerid] == 1)
	{
		new mashina[MAX_PLAYERS];
		new momo = GetPlayerVehicleID(playerid);
		DestroyVehicle(momo);
		if(AvtoSalonChange[playerid] == sizeof(AvtoSalonCarNope)-1) AvtoSalonChange[playerid] = 0;
		else AvtoSalonChange[playerid]++;
		mashina[playerid] = CreateVehicle(AvtoSalonCarNope[AvtoSalonChange[playerid]][0],2065.1782,-2169.1785,1114.5313,245.0801,1,1,60000);
		SetVehicleVirtualWorld(mashina[playerid], world[playerid]);
		SetPlayerVirtualWorld(playerid,world[playerid]);
		PutPlayerInVeh(playerid, mashina[playerid], 0);
		SetPlayerCameraPos(playerid, 2076.8127, -2173.4705, 1115.1835);
		SetPlayerCameraLookAt(playerid, 2075.8750, -2173.1252, 1115.1290);
		format(YCMDstr,sizeof(YCMDstr),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~-1 ~y~COLOR2: ~w~-1",VehicleNames[AvtoSalonCarNope[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarNope[AvtoSalonChange[playerid]][1]);
		GameTextForPlayer(playerid,YCMDstr, 5000, 3);
		TogglePlayerControllable(playerid, 0);
		vibormashina[playerid] = 1;
	}
	else if(AvtoSalonOn[playerid] == 2)
	{
		new mashina[MAX_PLAYERS];
		new momo = GetPlayerVehicleID(playerid);
		DestroyVehicle(momo);
		if(AvtoSalonChange[playerid] == sizeof(AvtoSalonCarD)-1) AvtoSalonChange[playerid] = 0;
		else AvtoSalonChange[playerid]++;
		mashina[playerid] = CreateVehicle(AvtoSalonCarD[AvtoSalonChange[playerid]][0],2065.1782,-2169.1785,1114.5313,245.0801,1,1,60000);
		SetVehicleVirtualWorld(mashina[playerid], world1[playerid]);
		SetPlayerVirtualWorld(playerid,world1[playerid]);
		PutPlayerInVeh(playerid, mashina[playerid], 0);
		SetPlayerCameraPos(playerid, 2076.8127, -2173.4705, 1115.1835);
		SetPlayerCameraLookAt(playerid, 2075.8750, -2173.1252, 1115.1290);
		format(YCMDstr,sizeof(YCMDstr),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~-1 ~y~COLOR2: ~w~-1",VehicleNames[AvtoSalonCarD[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarD[AvtoSalonChange[playerid]][1]);
		GameTextForPlayer(playerid,YCMDstr, 5000, 3);
		TogglePlayerControllable(playerid, 0);
		vibormashina[playerid] = 1;
	}
	else if(AvtoSalonOn[playerid] == 3)
	{
		new mashina[MAX_PLAYERS];
		new momo = GetPlayerVehicleID(playerid);
		DestroyVehicle(momo);
		if(AvtoSalonChange[playerid] == sizeof(AvtoSalonCarA)-1) AvtoSalonChange[playerid] = 0;
		else AvtoSalonChange[playerid]++;
		mashina[playerid] = CreateVehicle(AvtoSalonCarA[AvtoSalonChange[playerid]][0],2065.1782,-2169.1785,1114.5313,245.0801,1,1,60000);
		SetVehicleVirtualWorld(mashina[playerid], world2[playerid]);
		SetPlayerVirtualWorld(playerid,world2[playerid]);
		PutPlayerInVeh(playerid, mashina[playerid], 0);
		SetPlayerCameraPos(playerid, 2076.8127, -2173.4705, 1115.1835);
		SetPlayerCameraLookAt(playerid, 2075.8750, -2173.1252, 1115.1290);
		format(YCMDstr,sizeof(YCMDstr),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~-1 ~y~COLOR2: ~w~-1",VehicleNames[AvtoSalonCarA[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarA[AvtoSalonChange[playerid]][1]);
		GameTextForPlayer(playerid,YCMDstr, 5000, 3);
		TogglePlayerControllable(playerid, 0);
		vibormashina[playerid] = 1;
	}
	return true;
}
cmd:backcar(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsPlayerInRangeOfPoint(playerid,20,2075.8750, -2173.1252, 1115.1290)) return true;
	if(AvtoSalonOn[playerid] == 1)
	{
		new mashina[MAX_PLAYERS];
		new momo = GetPlayerVehicleID(playerid);
		DestroyVehicle(momo);
		if(AvtoSalonChange[playerid] == 0) AvtoSalonChange[playerid] = sizeof(AvtoSalonCarNope)-1;
		else AvtoSalonChange[playerid]--;
		mashina[playerid] = CreateVehicle(AvtoSalonCarNope[AvtoSalonChange[playerid]][0],2065.1782,-2169.1785,1114.5313,245.0801,1,1,60000);
		SetVehicleVirtualWorld(mashina[playerid], world[playerid]);
		SetPlayerVirtualWorld(playerid,world[playerid]);
		PutPlayerInVeh(playerid, mashina[playerid], 0);
		SetPlayerCameraPos(playerid, 2076.8127, -2173.4705, 1115.1835);
		SetPlayerCameraLookAt(playerid, 2075.8750, -2173.1252, 1115.1290);
		format(YCMDstr,sizeof(YCMDstr),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~-1 ~y~COLOR2: ~w~-1",VehicleNames[AvtoSalonCarNope[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarNope[AvtoSalonChange[playerid]][1]);
		GameTextForPlayer(playerid,YCMDstr, 5000, 3);
		TogglePlayerControllable(playerid, 0);
		vibormashina[playerid] = 1;
	}
	else if(AvtoSalonOn[playerid] == 2)
	{
		new mashina[MAX_PLAYERS];
		new momo = GetPlayerVehicleID(playerid);
		DestroyVehicle(momo);
		if(AvtoSalonChange[playerid] == 0) AvtoSalonChange[playerid] = sizeof(AvtoSalonCarD)-1;
		else AvtoSalonChange[playerid]--;
		mashina[playerid] = CreateVehicle(AvtoSalonCarD[AvtoSalonChange[playerid]][0],2065.1782,-2169.1785,1114.5313,245.0801,1,1,60000);
		SetVehicleVirtualWorld(mashina[playerid], world1[playerid]);
		SetPlayerVirtualWorld(playerid,world1[playerid]);
		PutPlayerInVeh(playerid, mashina[playerid], 0);
		SetPlayerCameraPos(playerid, 2076.8127, -2173.4705, 1115.1835);
		SetPlayerCameraLookAt(playerid, 2075.8750, -2173.1252, 1115.1290);
		format(YCMDstr,sizeof(YCMDstr),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~-1 ~y~COLOR2: ~w~-1",VehicleNames[AvtoSalonCarD[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarD[AvtoSalonChange[playerid]][1]);
		GameTextForPlayer(playerid,YCMDstr, 5000, 3);
		TogglePlayerControllable(playerid, 0);
		vibormashina[playerid] = 1;
	}
	else if(AvtoSalonOn[playerid] == 3)
	{
		new mashina[MAX_PLAYERS];
		new momo = GetPlayerVehicleID(playerid);
		DestroyVehicle(momo);
		if(AvtoSalonChange[playerid] == 0) AvtoSalonChange[playerid] = sizeof(AvtoSalonCarA)-1;
		else AvtoSalonChange[playerid]--;
		mashina[playerid] = CreateVehicle(AvtoSalonCarA[AvtoSalonChange[playerid]][0],2065.1782,-2169.1785,1114.5313,245.0801,1,1,60000);
		SetVehicleVirtualWorld(mashina[playerid], world2[playerid]);
		SetPlayerVirtualWorld(playerid,world2[playerid]);
		PutPlayerInVeh(playerid, mashina[playerid], 0);
		SetPlayerCameraPos(playerid, 2076.8127, -2173.4705, 1115.1835);
		SetPlayerCameraLookAt(playerid, 2075.8750, -2173.1252, 1115.1290);
		format(YCMDstr,sizeof(YCMDstr),"~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~-1 ~y~COLOR2: ~w~-1",VehicleNames[AvtoSalonCarA[AvtoSalonChange[playerid]][0]-400],AvtoSalonCarA[AvtoSalonChange[playerid]][1]);
		GameTextForPlayer(playerid,YCMDstr, 5000, 3);
		TogglePlayerControllable(playerid, 0);
		vibormashina[playerid] = 1;
	}
	return true;
}

cmd:hp(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 1 || dostup[playerid] == 0) return true;
	if(IsPlayerInAnyVehicle(playerid))
	{
		AnRepairVehicle(GetPlayerVehicleID(playerid));
		Fuell[GetPlayerVehicleID(playerid)] = 200;
		SendSyntaxMessage(playerid, "车辆修复了!");
		SetPlayerHealthAC(playerid, 100.0);
		PlayerInfo[playerid][pHP] = 100;
		PlayerPlaySound(playerid, 32000, 0.0, 0.0, 0.0);
	}
	SetPlayerHealthAC(playerid, 100.0);
	PlayerInfo[playerid][pHP] = 100;
	return true;
}
cmd:sethealcost(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMember] == 4 && PlayerInfo[playerid][pRank] >= 8)
	{
		if(sscanf(params, "d",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/sethealcost {B4B5B7}[价格]");
		if(params[0] < 1 || params[0] > 1000) { SendErrorMessage(playerid,"价格不能超过 1000"); return true; }
		healpric = params[0];
		format(YCMDstr, sizeof(YCMDstr), "― [医院]: 治愈价格修改为 %i $. 成立的负责人. 医生 'SA': %s.", healpric,Name(playerid));
		SendClientMessageToAll(0xA52A2AFF, YCMDstr);
		return true;
	}
	return true;
}
cmd:escape(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsAGang(playerid)) return true;
	if(PlayerInfo[playerid][pJailed] != 1) return SendErrorMessage(playerid,"你不在监狱里!");
	if(keys[playerid] <= 0) return SendErrorMessage(playerid,"你没有监狱的钥匙!");
	keys[playerid] -= 1;
	SetPlayerInterior(playerid, 0);
	Q_SetPlayerPos(playerid,-1561.2036,481.8062,7.1797);
	SetPlayerFacingAngle(playerid, 62.180);
	SendSyntaxMessage(playerid, "你逃离了SA监狱");
	return true;
}
cmd:getekey(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsAGang(playerid)) return true;
	if(keys[playerid] <= 0) return SendErrorMessage(playerid,"你没有钥匙!");
	format(YCMDstr, sizeof(YCMDstr), "― 你有 %i 把钥匙", keys[playerid]);
	SendClientMessage(playerid, -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "%s 拿出钥匙",Name(playerid));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return true;
}
cmd:givecopkeys(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/givecopkeys {B4B5B7}[id]");
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pMember] == 20 )
	{
		if(!IsPlayerConnected(params[0])) return true;
		keys[params[0]] += 1;
		format(YCMDstr, sizeof(YCMDstr), "警官 %s 将钥匙给了 %s",Name(playerid),Name(params[0]));
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return true;
}
cmd:heal(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMember] != 4) return true;
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/heal {B4B5B7}[id]");
	new giveambu = GetPlayerVehicleID(params[0]);
	new playambu = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][pMember] == 4)
	{
		if(IsAnAmbulance(playambu) && playambu == giveambu || PlayerToPoint(100.0,playerid,1154.5562,-1323.7495,1001.0910))
		{
		    if(GetDistanceBetweenPlayers(playerid, params[0]) < 5.0)
			{
				new healdialog[128];
				format(healdialog,sizeof(healdialog), "医生想要治愈你,价格: %i $\n你接受吗?",healpric);
				ShowPlayerDialog(params[0],5522,DIALOG_STYLE_MSGBOX, "{1E90FF}治愈", healdialog, "接受", "不接受");
				HealOffer[params[0]] = playerid;
				HealPrice[params[0]] = healpric;
			}
		}
	}
	return true;
}
cmd:sethp(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if (PlayerInfo[playerid][pAdministration228] < 2 || dostup[playerid] == 0) return true;
    if(sscanf(params,"ui",params[0], params[1]))
    return SendServerMessage(playerid,"帮助: {4080FF}/sethp {B4B5B7}[玩家id] [数量]");
    if(!IsPlayerConnected(params[0]))
    return SendErrorMessage(playerid,"无效玩家");
    SetPlayerHealthAC(params[0], params[1]);
    SendSyntaxMessage(playerid, "你设置了玩家血量");
    format(YCMDstr, sizeof(YCMDstr), "― 管理员: %s 设置了 %s 的血量到 %d",Name(playerid),Name(params[0]), params[1]);
	ABroadCast(COLOR_GREY,YCMDstr,1);
    return 1;
}
cmd:givedonate(playerid, params[])
{
	if(Rucovod(playerid))
	{
		if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
		if(PlayerInfo[playerid][pAdministration228] < 10 || dostup[playerid] == 0) return true;
		if(sscanf(params, "ud",params[0],params[1])) return	SendErrorMessage(playerid,"帮助: {4080FF}/givedonate {B4B5B7}[玩家ID] [数量]");
		if(!IsPlayerConnected(params[0])) return true;
		format(YCMDstr, sizeof(YCMDstr), "― 管理员 %s, 给了你 %i 捐赠点", Name(playerid), params[1]);
		SendClientMessage(params[0], -1, YCMDstr);
		PlayerInfo[params[0]][pDonatemoney] += params[1];
		format(YCMDstr, sizeof(YCMDstr), "― 你给了 %s  %i 捐赠点", Name(params[0]), params[1]);
		SendClientMessage(playerid, -1, YCMDstr);
		format(YCMDstr,sizeof(YCMDstr),"管理员 %s 给了 %s %d 捐赠点", PlayerInfo[playerid][pName],PlayerInfo[params[0]][pName],params[1]);
		ABroadCast(COLOR_GREY,YCMDstr,1);
	}
	return true;
}
cmd:givemoney(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if (PlayerInfo[playerid][pAdministration228] < 10 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud",params[0],params[1])) return	SendErrorMessage(playerid,"帮助: {4080FF}/givemoney {B4B5B7}[玩家ID] [数量]");
	if(!IsPlayerConnected(params[0])) return true;
	format(YCMDstr, sizeof(YCMDstr), "― %i $ 给了 %s",params[1],Name(params[0]));
	SendClientMessage(playerid, -1, YCMDstr);
	PlayerInfo[params[0]][pCash] += params[1];
	format(YCMDstr, sizeof(YCMDstr), "― 你收到了: %i $", params[1]);
	SendClientMessage(params[0], -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― 你现在拥有: %i $", PlayerInfo[params[0]][pCash]);
	SendClientMessage(params[0], -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "INSERT INTO `"TABLE_LOGS"` (`Name`, `Name2`,`Nomer`,`Cmd`) VALUES ('%s', '%s', '%d', 'money')",Name(playerid),Name(params[0]),params[1]);
	mysql_query(YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― 管理员: %s 给了 %s %d $",Name(playerid),Name(params[0]),params[1]);
	ABroadCast(COLOR_GREY,YCMDstr,1);
	return true;
}
cmd:slap(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/slap {B4B5B7}[id]");
	new Float:shealth;
	new Float:slx, Float:sly, Float:slz;
	if(!IsPlayerConnected(params[0])) return true;
	GetPlayerHealth(params[0], shealth);
	SetPlayerHealthAC(params[0], shealth-5);
	GetPlayerPos(params[0], slx, sly, slz);
	Q_SetPlayerPos(params[0], slx, sly, slz+5);
	PlayerPlaySound(params[0], 1130, slx, sly, slz+5);
	format(YCMDstr, sizeof(YCMDstr), "― 管理员: %s 拍了一下 %s",Name(playerid),Name(params[0]));
	ABroadCast(-1,YCMDstr,1);
	format(YCMDstr, sizeof(YCMDstr), "INSERT INTO `"TABLE_LOGS"` (`Name`, `Name2`,`Nomer`,`Cmd`) VALUES ('%s', '%s', '0', 'slap')",Name(playerid),Name(params[0]));
	mysql_query(YCMDstr);
	return true;
}
cmd:agl(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 8 || dostup[playerid] == 0) return true;
	ShowPlayerDialog(playerid,555,DIALOG_STYLE_LIST, "{1E90FF}颁发执照:", "驾驶执照\n飞机执照\n钓鱼执照\n船只执照\n武器执照\n所有执照\n营业执照", "选择", "退出");
	return true;
}
cmd:expup(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 10 || dostup[playerid] == 0) return true;
	if(ExpUping == 0)
	{
		ExpUping = 1;
		format(YCMDstr, sizeof(YCMDstr), "{FF0000}― 管理员 {0080FF}%s {FF0000}开启双倍经验! ( 每个发薪日获得 2 经验值 )", Name(playerid));
	    SendClientMessageToAll(-1, YCMDstr);
    }
	else
	{
        ExpUping = 0;
		format(YCMDstr, sizeof(YCMDstr), "{FF0000}― 管理员 {0080FF}%s {FF0000}关闭双倍经验! ( 每个发薪日获得 1 经验值 )", Name(playerid));
	    SendClientMessageToAll(-1, YCMDstr);
    }
	return true;
}
cmd:mute(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 1 || dostup[playerid] == 0) return true;
	if(Flood[playerid] > 0) return SendErrorMessage(playerid,"请歇会儿");
	if(sscanf(params, "uds[50]",params[0],params[1],params[2])) return	SendServerMessage(playerid,"帮助: /mute [id] [分钟] [理由]");
	if(PlayerInfo[params[0]][pMuted] == 1)
	{
		PlayerInfo[params[0]][pMuted] = 0;
		PlayerInfo[params[0]][pMuteTime] = 0;
		format(YCMDstr, sizeof(YCMDstr), "{FF3300}― 管理员 %s 解除了 %s 的禁言.",Name(playerid),Name(params[0]));
		SendClientMessageToAll(-1, YCMDstr);
		return true;
	}
	PlayerInfo[params[0]][pMuteTime] = params[1]*60;
	PlayerInfo[params[0]][pMuted] = 1;
	format(YCMDstr, sizeof(YCMDstr), "{FF3300}― %s 被禁言了,执行管理员: %s. (原因: %s)",Name(params[0]),Name(playerid),params[2]);
	SendClientMessageToAll(-1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― 你被禁言 %i 分钟", params[1]);
	SendClientMessage(params[0], -1, YCMDstr);
	Flood[playerid] = 5;
	format(YCMDstr, sizeof(YCMDstr), "INSERT INTO `"TABLE_LOGS"` (`Name`, `Name2`,`Nomer`,`Cmd`) VALUES ('%s', '%s', '%d', 'mute')",Name(playerid),Name(params[0]),params[1]);
	mysql_query(YCMDstr);
	return true;
}
cmd:id(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/id {B4B5B7}[名称]");
	if(!IsPlayerConnected(params[0])) return true;
	format(YCMDstr, sizeof(YCMDstr), "― %s [%i]\n",Name(params[0]),params[0]);
	SendClientMessage(playerid, -1, YCMDstr);
	return true;
}
cmd:aad(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return	SendErrorMessage(playerid,"帮助: {4080FF}/aad {B4B5B7}[内容]");
    if(PlayerInfo[playerid][prefix_id] == 0)
    {
		new arank[64];
		switch(PlayerInfo[playerid][pAdministration228])
		{
			case 1: arank = "(实习管理员)";
			case 2: arank = "(正式管理员)";
			case 3: arank = "(中级管理员)";
			case 4: arank = "(高级管理员)";
			case 5: arank = "(协理管理员)";
			case 6: arank = "(常务管理员)";
			case 7: arank = "(前台管理员)";
			case 8: arank = "(行政管理员)";
			case 9: arank = "(服务器总管)";
			case 10: arank = "(服务器所有者&开发者)";
		}
		format(YCMDstr, sizeof(YCMDstr), "{33CCFF}[O] %s {FFBF00}%s: %s",arank,Name(playerid),params[0]);
		OOCOff(COLOR_LIGHTBLUE,YCMDstr);
	}
	else
	{
	    format(YCMDstr, sizeof(YCMDstr), "{33CCFF}[O] %s {FFBF00}%s: %s",pPrefixName[PlayerInfo[playerid][prefix_id]],Name(playerid),params[0]);
		OOCOff(COLOR_LIGHTBLUE,YCMDstr);
	}
	return true;
}
cmd:a(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/a {B4B5B7}[内容]");
	if(PlayerInfo[playerid][prefix_id] == 0)
	{
		new arank[64];
		switch(PlayerInfo[playerid][pAdministration228])
		{
			case 1: arank = "{33CCFF}(实习管理员){FFFFFF}";
			case 2: arank = "{33CCFF}(正式管理员){FFFFFF}";
			case 3: arank = "{33CCFF}(中级管理员){FFFFFF}";
			case 4: arank = "{33CCFF}(高级管理员){FFFFFF}";
			case 5: arank = "{33CCFF}(协理管理员){FFFFFF}";
			case 6: arank = "{33CCFF}(常务管理员){FFFFFF}";
			case 7: arank = "{33CCFF}(前台管理员){FFFFFF}";
			case 8: arank = "{33CCFF}(行政管理员){FFFFFF}";
			case 9: arank = "{33AA33}(服务器总管){FFFFFF}";
			case 10: arank = "{FF0000}(服务器所有者&开发者){FFFFFF}";
		}
		format(YCMDstr, sizeof(YCMDstr), "― [A] %s %s: %s",arank,Name(playerid),params[0]);
		ABroadCast(COLOR_LIGHTBLUE,YCMDstr,1);
	}
	else
	{
	    format(YCMDstr, sizeof(YCMDstr), "― [A] %s %s: %s",pPrefixName[PlayerInfo[playerid][prefix_id]],Name(playerid),params[0]);
		ABroadCast(COLOR_LIGHTBLUE,YCMDstr,1);
	}
	return true;
}
cmd:sc(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pSupport] == 0) return true;
    if(sscanf(params, "s[256]", params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/sc {B4B5B7}[内容]");
    format(YCMDstr, sizeof(YCMDstr), "{33CCFF}― [S] %s[%d]: {FFFFFF}%s", Name(playerid), playerid, params[0]);
    SBroadCast(COLOR_LIGHTBLUE, YCMDstr, 1);
    return true;
}
cmd:b(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMuted] == 1) return	PlayerMuteMessage(playerid);
	if(Flood[playerid] > 1) return SendErrorMessage(playerid,"Flood!");
 	AntiReklama(playerid,params[1],"B");
	if(antireklamka[playerid] == 1)
	{
		antireklamka[playerid] = 0;
		return true;
	}
	if(sscanf(params, "s[128]",params[0])) return	SendErrorMessage(playerid,"帮助: {4080FF}/b {B4B5B7}[内容]");
	format(YCMDstr, sizeof(YCMDstr), "{808000}― (( %s: %s ))", Name(playerid),params[0]);
	ProxDetector(20.0, playerid, YCMDstr,-1,-1,-1,-1,-1);
	Flood[playerid] = 1;
	return true;
}
cmd:w(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMuted] == 1) return PlayerMuteMessage(playerid);
	if(Flood[playerid] > 0) return SendErrorMessage(playerid,"Flood!");
	if(sscanf(params, "s[128]",params[0])) return	SendErrorMessage(playerid,"帮助: {4080FF}/w {B4B5B7}[内容]");
	format(YCMDstr, sizeof(YCMDstr), "{6E6E6E}― %s 低声地说: %s", Name(playerid),params[0]);
	ProxDetector(1.0, playerid, YCMDstr,0x6E6E6EAA,0x6E6E6EAA,0x6E6E6EAA,0x6E6E6EAA,0x6E6E6EAA);
	Flood[playerid] = 1;
	return true;
}
cmd:kick(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "us[64]",params[0],params[1])) return	SendErrorMessage(playerid,"帮助: {4080FF}/kick {B4B5B7}[id] [原因]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[params[0]][pAdministration228] == PlayerInfo[playerid][pAdministration228]) return SendErrorMessage(playerid,"不能踢出管理员!");
	format(YCMDstr, sizeof(YCMDstr), "{FF3300}― 管理员: %s 踢出了 %s (原因: %s)",Name(playerid),Name(params[0]),params[1]);
	SendClientMessageToAll(-1, YCMDstr);
	PlayerInfo[playerid][pKicka] +=1;
	new year,month,day,hour,minuite;
	new mtext[20];
	getdate(year, month, day);
	gettime(hour,minuite);
	if(month == 1) { mtext = "一月"; }
	else if(month == 2) { mtext = "二月"; }
	else if(month == 3) { mtext = "三月"; }
	else if(month == 4) { mtext = "四月"; }
	else if(month == 5) { mtext = "五月"; }
	else if(month == 6) { mtext = "六月"; }
	else if(month == 7) { mtext = "七月"; }
	else if(month == 8) { mtext = "八月"; }
	else if(month == 9) { mtext = "九月"; }
	else if(month == 10) { mtext = "十月"; }
	else if(month == 11) { mtext = "十一月"; }
	else if(month == 12) { mtext = "十二月"; }
	new coordsstring1[512];
	new msg1[] = "{ff0000}您的账户被踢出服务器\n\n{ffffff}执行管理员: {1e90ff}%s{FFFFFF}\n原因: {1e90ff}%s{FFFFFF}\n日期: {1e90ff}%i %s %i\n{FFFFFF}时间: {1e90ff} %i:%i";
	format(coordsstring1, sizeof coordsstring1, msg1, Name(playerid),params[1],day,mtext,year,hour,minuite);
	ShowPlayerDialog(params[0],D_NONE,DIALOG_STYLE_MSGBOX,"{1e90ff}踢出服务器",coordsstring1,"关闭","");
	GKick(params[0]);
	format(YCMDstr, sizeof(YCMDstr), "INSERT INTO `"TABLE_LOGS"` (`Name`, `Name2`,`Nomer`,`Cmd`) VALUES ('%s', '%s', '0', 'kick')",Name(playerid),Name(params[0]));
	mysql_query(YCMDstr);
	return true;
}
cmd:skick(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SendServerMessage(playerid,"帮助: {4080FF}/skick [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[params[0]][pAdministration228] > 0) return SendErrorMessage(playerid,"不能踢出管理员!");
	PlayerInfo[playerid][pKicka] +=1;
	new year,month,day,hour,minuite;
	new mtext[20];
	getdate(year, month, day);
	gettime(hour,minuite);
	if(month == 1) { mtext = "一月"; }
	else if(month == 2) { mtext = "二月"; }
	else if(month == 3) { mtext = "三月"; }
	else if(month == 4) { mtext = "四月"; }
	else if(month == 5) { mtext = "五月"; }
	else if(month == 6) { mtext = "六月"; }
	else if(month == 7) { mtext = "七月"; }
	else if(month == 8) { mtext = "八月"; }
	else if(month == 9) { mtext = "九月"; }
	else if(month == 10) { mtext = "十月"; }
	else if(month == 11) { mtext = "十一月"; }
	else if(month == 12) { mtext = "十二月"; }
	new coordsstring1[512];
	new msg1[] = "{ff0000}您的账户被踢出服务器\n\n日期: {1e90ff}%i %s %i\n{FFFFFF}时间: {1e90ff} %i:%i";
	format(coordsstring1, sizeof coordsstring1, msg1,day,mtext,year,hour,minuite);
	ShowPlayerDialog(params[0],D_NONE,DIALOG_STYLE_MSGBOX,"{1e90ff}踢出服务器",coordsstring1,"关闭","");
	SendServerMessage(playerid, "被踢出服务器");
	GKick(params[0]);
	return true;
}
cmd:offban(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/offban {B4B5B7}[名称]");
 	new curdate = getdate();
	new days = 10;
	format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pBanTime = '%d',pBanData = '%d',pLocked = '1' WHERE Name = '%s'",curdate+days,curdate,params[0]);
	mysql_query(YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― [OFFBAN] 管理员: %s 离线封禁了 %s 10天.",Name(playerid),params[0]);
	ABroadCast(-1,YCMDstr,1);
	PlayerInfo[playerid][pBana] +=1;
	return true;
}
cmd:offwarn(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/offwarn {B4B5B7}[名称]");
	format(YCMDstr, sizeof(YCMDstr), "SELECT * FROM `"TABLE_ACCOUNT"` WHERE Name = '%s'",params[0]);
	mysql_query(YCMDstr);
	mysql_store_result();
	if(!mysql_fetch_row_format(YCMDstr)) return SendErrorMessage(playerid,"数据库未查找到该账户!"), mysql_free_result();
	format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pLeader = '0',pMember = '0',pRank = '0',punWarnstime = '0',pWarns = '1',punWarns = '1' WHERE Name = '%s'",params[0]);
	mysql_query(YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― [OFFWARN] 管理员: %s 清除了 %s 的警告",Name(playerid),params[0]);
	ABroadCast(-1,YCMDstr,1);
	format(YCMDstr, sizeof(YCMDstr), "INSERT INTO `"TABLE_LOGS"` (`Name`, `Name2`,`Nomer`,`Cmd`) VALUES ('%s', '%s', '0', 'offwarn')",Name(playerid),params[0]);
	mysql_query(YCMDstr);
	return true;
}
cmd:unban(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/unban {B4B5B7}[名称]");
	format(YCMDstr, sizeof(YCMDstr), "SELECT * FROM `"TABLE_ACCOUNT"` WHERE Name = '%s'",params[0]);
	mysql_query(YCMDstr);
	mysql_store_result();
	if(!mysql_fetch_row_format(YCMDstr)) return SendErrorMessage(playerid,"数据库未查找到该账户!"), mysql_free_result();
	format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pBanTime = '0',pBanData = '0',pLocked = '0' WHERE Name = '%s'",params[0]);
	mysql_query(YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― [OFFUNBAN] 管理员: %s 解封了 %s",Name(playerid),params[0]);
	ABroadCast(-1,YCMDstr,1);
	PlayerInfo[playerid][pBana] -=1;
	return true;
}
cmd:offleader(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(SledAdm(playerid) || Rucovod(playerid))
	{
		if(sscanf(params, "s[128]",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/offleader {B4B5B7}[名称]");
		format(YCMDstr, sizeof(YCMDstr), "SELECT * FROM `"TABLE_ACCOUNT"` WHERE Name = '%s'",params[0]);
		mysql_query(YCMDstr);
		mysql_store_result();
		if(!mysql_fetch_row_format(YCMDstr)) return SendErrorMessage(playerid,"数据库未查找到该账户!"), mysql_free_result();
		format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pLeader = '0',pMember = '0',pRank = '0',pText = '4',pJobHealLeader = '0',pJobHeal = '0' WHERE Name = '%s'",params[0]);
		mysql_query(YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), "― [OFFLEADER] %s: %s 将 %s 的领导人职位剔除",pPrefixName[PlayerInfo[playerid][prefix_id]],Name(playerid),params[0]);
		ABroadCast(-1,YCMDstr,1);
		format(YCMDstr, sizeof(YCMDstr), "INSERT INTO `"TABLE_LOGS"` (`Name`, `Name2`,`Nomer`,`Cmd`) VALUES ('%s', '%s', '0', 'offleader')",Name(playerid),params[0]);
		mysql_query(YCMDstr);
	}
	else
	{
	    SendErrorMessage(playerid,"你没有权限使用!");
	}
	return true;
}
cmd:offadmin(playerid, params[])
{
	if(Rucovod(playerid))
 	{
		if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
		if(PlayerInfo[playerid][pAdministration228] < 10 || dostup[playerid] == 0) return true;
		if(sscanf(params, "s[128]",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/offadmin {B4B5B7}[名称]");
		format(YCMDstr, sizeof(YCMDstr), "SELECT * FROM `"TABLE_ACCOUNT"` WHERE Name = '%s'",params[0]);
		mysql_query(YCMDstr);
		mysql_store_result();
		if(!mysql_fetch_row_format(YCMDstr)) return SendErrorMessage(playerid,"数据库未查找到该账户!"), mysql_free_result();
		format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pAdministration228 = '0', pSupport = '0' WHERE Name = '%s'",params[0]);
		mysql_query(YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), "― [OFFADMIN] 管理员: %s 将 %s 踢出管理组",Name(playerid),params[0]);
		ABroadCast(-1,YCMDstr,1);
		format(YCMDstr, sizeof(YCMDstr), "INSERT INTO `"TABLE_LOGS"` (`Name`, `Name2`,`Nomer`,`Cmd`) VALUES ('%s', '%s', '0', 'offadmin')",Name(playerid),params[0]);
		mysql_query(YCMDstr);
	}
	return true;
}
cmd:reloadbans(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 8 || dostup[playerid] == 0) return true;
	SendRconCommand("reloadbans");
	SendServerMessage(playerid,"Бан-лист перезагружен.");
	return true;
}
cmd:warn(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 4 || dostup[playerid] == 0) return true;
	if(GetPVarInt(playerid,"compayWarn") > gettime()) return SendErrorMessage(playerid,"请稍后再使用!");
	if(sscanf(params, "us[128]",params[0],params[1])) return SendErrorMessage(playerid,"帮助: {4080FF}/warn {B4B5B7}[id] [原因]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[params[0]][pAdministration228] == PlayerInfo[playerid][pAdministration228]) return SendServerMessage(playerid, "不能对管理员使用!");
	if(PlayerInfo[params[0]][pWarns] >= 3)
	{
        new ip[15];
		GetPlayerIp(params[0],ip,15);
		new year1, month1, day1, hour1, minute1, second1;
		getdate(year1, month1, day1);
		gettime(hour1, minute1, second1);
		new year, month,day;
		new hour, minute, second;
		getdate(year, month, day);
		gettime(hour, minute, second);
		new curdate = getdate();
		PlayerInfo[params[0]][pBanData] = curdate;
		PlayerInfo[params[0]][pLocked] = 1;
		new noope = 10; new vip1 = 7; new vip2 = 5; new vip3 = 3;
		if(PlayerInfo[params[0]][pDonateRank] == 0) PlayerInfo[params[0]][pBanTime] = curdate+noope, BansMis[params[0]] = 10;
		if(PlayerInfo[params[0]][pDonateRank] == 1) PlayerInfo[params[0]][pBanTime] = curdate+vip1, BansMis[params[0]] = 7;
		if(PlayerInfo[params[0]][pDonateRank] == 2) PlayerInfo[params[0]][pBanTime] = curdate+vip2, BansMis[params[0]] = 5;
		if(PlayerInfo[params[0]][pDonateRank] == 3) PlayerInfo[params[0]][pBanTime] = curdate+vip3, BansMis[params[0]] = 3;
		format(YCMDstr, sizeof(YCMDstr), "{FF3300}― 管理员: %s 警告了 %s. (原因: %s)",Name(playerid),Name(params[0]),params[1]);
		SendClientMessageToAll(-1,YCMDstr);
		SendServerMessage(params[0], "你的警告超过了三次,自动封禁账户.");
		SendServerMessage(params[0], "退出游戏,请使用 [/q]");
		SendServerMessage(params[0], "如有疑问或者这是一个错误的封禁,请到论坛进行申诉:www.samp-pawn.cn");
		GetPlayerIp(params[0],ip,sizeof(ip));
		format(YCMDstr, sizeof(YCMDstr), "― 名称: [%s] | IP: [%s] | 注册IP: [IP: %s]",Name(params[0]),ip,PlayerInfo[params[0]][pIpReg]);
		ABroadCast(-1,YCMDstr,1);
		new mtext[20];
		if(month == 1) { mtext = "一月"; }
		else if(month == 2) { mtext = "二月"; }
		else if(month == 3) { mtext = "三月"; }
		else if(month == 4) { mtext = "四月"; }
		else if(month == 5) { mtext = "五月"; }
		else if(month == 6) { mtext = "六月"; }
		else if(month == 7) { mtext = "七月"; }
		else if(month == 8) { mtext = "八月"; }
		else if(month == 9) { mtext = "九月"; }
		else if(month == 10) { mtext = "十月"; }
		else if(month == 11) { mtext = "十一月"; }
		else if(month == 12) { mtext = "十二月"; }
		new coordsstring1[512];
		new msg1[] = "{ff0000}您的账户已被封禁\n\n{ffffff}执行管理员: {1e90ff}%s\n{ffffff}封禁时间: {1e90ff}%i {ffffff}天\n原因: {1e90ff}%s\n日期: {1e90ff}%i %s %i\n{FFFFFF}时间: {1e90ff} %i:%i\n如有疑问或者这是一个错误的封禁,请到论坛进行申诉:www.samp-pawn.cn";
		format(coordsstring1, sizeof coordsstring1, msg1, Name(playerid),BansMis[params[0]],params[1],day,mtext,year,hour,minute);
		ShowPlayerDialog(params[0],D_NONE,DIALOG_STYLE_MSGBOX,"{1e90ff}封禁信息",coordsstring1,"关闭","");
		GKick(params[0]);
		PlayerInfo[playerid][pBana] +=1;
		return true;
	}
	format(YCMDstr, sizeof(YCMDstr), "{FF3300}― 管理员: %s 警告了 %s. (原因: %s)",Name(playerid),Name(params[0]),params[1]);
	SendClientMessageToAll(-1,YCMDstr);
	PlayerInfo[params[0]][pMember] = 0;
	PlayerInfo[params[0]][pInFrac] = 0;
	PlayerInfo[params[0]][pLeader] = 0;
	PlayerInfo[params[0]][punWarns] = 1;
	PlayerInfo[params[0]][punWarnstime] = 0;
	PlayerInfo[playerid][pWarna] +=1;
	new year, month, day,hour,minuite;
	new mtext[20];
	getdate(year, month, day);
	gettime(hour,minuite);
	if(month == 1) { mtext = "一月"; }
	else if(month == 2) { mtext = "二月"; }
	else if(month == 3) { mtext = "三月"; }
	else if(month == 4) { mtext = "四月"; }
	else if(month == 5) { mtext = "五月"; }
	else if(month == 6) { mtext = "六月"; }
	else if(month == 7) { mtext = "七月"; }
	else if(month == 8) { mtext = "八月"; }
	else if(month == 9) { mtext = "九月"; }
	else if(month == 10) { mtext = "十月"; }
	else if(month == 11) { mtext = "十一月"; }
	else if(month == 12) { mtext = "十二月"; }
	new coordsstring1[512];
	new msg1[] = "{ff0000}您的账户已被踢出\n\n{ffffff}执行管理员: {1e90ff}%s{FFFFFF}\n原因: {1e90ff}%s{FFFFFF}\n日期: {1e90ff}%i %s %i\n{FFFFFF}时间: {1e90ff} %i:%i";
	format(coordsstring1, sizeof coordsstring1, msg1, Name(playerid),params[1],day,mtext,year,hour,minuite);
	ShowPlayerDialog(params[0],D_NONE,DIALOG_STYLE_MSGBOX,"{1e90ff}警告",coordsstring1,"关闭","");
	GKick(params[0]);
	PlayerInfo[params[0]][pWarns] += 1;
	SetPVarInt(playerid,"compayWarn",gettime()+30);
	format(YCMDstr, sizeof(YCMDstr), "INSERT INTO `"TABLE_LOGS"` (`Name`, `Name2`,`Nomer`,`Cmd`) VALUES ('%s', '%s', '0', 'warn')",Name(playerid),Name(params[0]));
	mysql_query(YCMDstr);
	return true;
}
cmd:unwarn(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/unwarn {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[params[0]][pWarns] <= 0) {SendErrorMessage(playerid,"对方没有警告"); return true;}
	PlayerInfo[params[0]][pWarns] = 0;
	PlayerInfo[params[0]][punWarnstime] = 0;
	PlayerInfo[params[0]][punWarns] = 0;
	format(YCMDstr, sizeof(YCMDstr), "― 你清除了 %s 的警告",Name(params[0]));
	SendClientMessage(playerid, -1, YCMDstr);
	SendServerMessage(params[0],"你的警告被清除了");
	format(YCMDstr,sizeof(YCMDstr),"管理员 %s 清除了 %s[%d] 的警告",PlayerInfo[playerid][pName],PlayerInfo[params[0]][pName],params[0]);
	ABroadCast(COLOR_GREY,YCMDstr,1);
	return true;
}

cmd:mypos(playerid, paraams[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pAdministration228] < 1) return SendErrorMessage(playerid, "你没有权限!");
    new Float:x, Float:y, Float:z, Float:a, string[256];
    GetPlayerPos(playerid, x, y, z);
    GetPlayerFacingAngle(playerid, a);
    format(string, sizeof(string), "―系统:{FFFFFF}角度: %.3f, 坐标: %.3f, %.3f, %.3f,", a, x, y, z);
    SendClientMessage(playerid, COLOR_FGREEN, string);
    return true;
}

cmd:tpos(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pAdministration228] < 9 || dostup[playerid] == 0) return true;
    new Float:px,Float:py,Float:pz,string[128];
    if(sscanf(params,"p<,>fff",px,py,pz)) return SendClientMessage(playerid, 0xFFFFFFAA, "帮助: /tpos [x] [y] [z]");
    SetPlayerPos(playerid,px,py,pz);
    format(string, sizeof(string), "你传送到了: %f, %f, %f",px,py,pz);
    SendClientMessage(playerid, 0xFFFFFFAA, string);
    return true;
}

cmd:ban(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 5 || dostup[playerid] == 0) return true;
	if(GetPVarInt(playerid,"compayBAN") > gettime()) return SendErrorMessage(playerid,"您不能经常使用此命令!");
	if(sscanf(params, "us[128]",params[0],params[1])) return SendErrorMessage(playerid,"帮助: {4080FF}/ban [id] [原因]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[params[0]][pAdministration228] == PlayerInfo[playerid][pAdministration228]) return SendServerMessage(playerid, "不能封禁管理员!");
	new ip[15];
	GetPlayerIp(params[0],ip,15);
	new year1, month1, day1, hour1, minute1, second1;
	getdate(year1, month1, day1);
	gettime(hour1, minute1, second1);
	new year, month,day;
	new hour, minute, second;
	getdate(year, month, day);
	gettime(hour, minute, second);
	new curdate = getdate();
	PlayerInfo[params[0]][pBanData] = curdate;
	PlayerInfo[params[0]][pLocked] = 1;
	new noope = 10; new vip1 = 7; new vip2 = 5; new vip3 = 3;
	if(PlayerInfo[params[0]][pDonateRank] == 0) PlayerInfo[params[0]][pBanTime] = curdate+noope, BansMis[params[0]] = 10;
	if(PlayerInfo[params[0]][pDonateRank] == 1) PlayerInfo[params[0]][pBanTime] = curdate+vip1, BansMis[params[0]] = 7;
	if(PlayerInfo[params[0]][pDonateRank] == 2) PlayerInfo[params[0]][pBanTime] = curdate+vip2, BansMis[params[0]] = 5;
	if(PlayerInfo[params[0]][pDonateRank] == 3) PlayerInfo[params[0]][pBanTime] = curdate+vip3, BansMis[params[0]] = 3;
	format(YCMDstr, sizeof(YCMDstr), "{FF3300}― 管理员: %s 封禁了 %s. (原因: %s)",Name(playerid),Name(params[0]),params[1]);
	SendClientMessageToAll(-1,YCMDstr);
	SendServerMessage(params[0], "您的账户已被管理员封禁.");
	SendServerMessage(params[0], "如有疑问或者这是一个错误的封禁,请到论坛进行申诉:www.samp-pawn.cn");
	SendServerMessage(params[0], "退出游戏请使用 [/q]");
	GetPlayerIp(params[0],ip,sizeof(ip));
	format(YCMDstr, sizeof(YCMDstr), "― 名称: [%s] | IP: [%s] | 注册IP: [IP: %s]",Name(params[0]),ip,PlayerInfo[params[0]][pIpReg]);
	ABroadCast(-1,YCMDstr,1);
	new mtext[20];
    if(month == 1) { mtext = "一月"; }
	else if(month == 2) { mtext = "二月"; }
	else if(month == 3) { mtext = "三月"; }
	else if(month == 4) { mtext = "四月"; }
	else if(month == 5) { mtext = "五月"; }
	else if(month == 6) { mtext = "六月"; }
	else if(month == 7) { mtext = "七月"; }
	else if(month == 8) { mtext = "八月"; }
	else if(month == 9) { mtext = "九月"; }
	else if(month == 10) { mtext = "十月"; }
	else if(month == 11) { mtext = "十一月"; }
	else if(month == 12) { mtext = "十二月"; }
	new coordsstring1[512];
	new msg1[] = "{ff0000}您的账户已被管理员封禁\n\n{ffffff}执行管理员: {1e90ff}%s\n{ffffff}封禁时间: {1e90ff}%i {ffffff}天\n原因: {1e90ff}%s\n日期: {1e90ff}%i %s %i\n{FFFFFF}时间: {1e90ff} %i:%i\n如有疑问或者这是一个错误的封禁,请到论坛进行申诉:www.samp-pawn.cn";
	format(coordsstring1, sizeof coordsstring1, msg1, Name(playerid),BansMis[params[0]],params[1],day,mtext,year,hour,minute);
	ShowPlayerDialog(params[0],D_NONE,DIALOG_STYLE_MSGBOX,"{1e90ff}封禁信息",coordsstring1,"关闭","");
	GKick(params[0]);
	PlayerInfo[playerid][pBana] +=1;
	SetPVarInt(playerid,"compayBAN",gettime()+30);
	format(YCMDstr, sizeof(YCMDstr), "INSERT INTO `"TABLE_LOGS"` (`Name`, `Name2`,`Nomer`,`Cmd`) VALUES ('%s', '%s', ' ', 'ban')",Name(playerid),Name(params[0]));
	mysql_query(YCMDstr);
	return true;
}
cmd:sban(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 9 || dostup[playerid] == 0) return true;
	if(sscanf(params, "us[128]",params[0],params[1])) return	SendServerMessage(playerid,"帮助: /sban [id] [原因]");
	if(!IsPlayerConnected(params[0])) return true;
	//if(PlayerInfo[params[0]][pAdministration228] > 0) return SendErrorMessage(playerid,"Администратор не может быть забанен!");
	new ip[15];
	GetPlayerIp(params[0],ip,15);
	format(YCMDstr,sizeof(YCMDstr), "banip %s",ip);
	SendRconCommand(YCMDstr);
	SendRconCommand("reloadbans");
	new curdate = getdate();
	PlayerInfo[params[0]][pBanData] = curdate;
	PlayerInfo[params[0]][pLocked] = 1;
	new noope = 10; new vip1 = 7; new vip2 = 5; new vip3 = 3;
	if(PlayerInfo[params[0]][pDonateRank] == 0) PlayerInfo[params[0]][pBanTime] = curdate+noope;
	if(PlayerInfo[params[0]][pDonateRank] == 1) PlayerInfo[params[0]][pBanTime] = curdate+vip1;
	if(PlayerInfo[params[0]][pDonateRank] == 2) PlayerInfo[params[0]][pBanTime] = curdate+vip2;
	if(PlayerInfo[params[0]][pDonateRank] == 3) PlayerInfo[params[0]][pBanTime] = curdate+vip3;
	format(YCMDstr, sizeof(YCMDstr), "{FF3300}― [封禁] 管理员: %s 封禁了玩家 %s. (原因: %s)",Name(playerid), Name(params[0]), params[1]);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	format(YCMDstr, sizeof(YCMDstr), "― 名称: [%s] | IP: [%s] - 封禁 | 注册IP: [IP: %s]",Name(params[0]),ip,PlayerInfo[params[0]][pIpReg]);
	ABroadCast(-1,YCMDstr,1);
	GKick(params[0]);
	return true;
}
cmd:givekayserp(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 10 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud",params[0],params[1])) return	SendErrorMessage(playerid,"帮助: {4080FF}/givekays {B4B5B7}[id] [数量]");
	if(!IsPlayerConnected(params[0])) return true;
	PlayerInfo[params[0]][pCash] += params[1];
	SetPlayerAttachedObject(params[0],3,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
	format(YCMDstr, sizeof(YCMDstr), "― 管理员: %s 给玩家: %s 金钱 %d $",Name(playerid),Name(params[0]),params[1]);
	ABroadCast(-1,YCMDstr,1);
	format(YCMDstr, sizeof(YCMDstr), "INSERT INTO `"TABLE_LOGS"` (`Name`, `Name2`,`Nomer`,`Cmd`) VALUES ('%s', '%s', '%d', 'givekays')",Name(playerid),Name(params[0]),params[1]);
	mysql_query(YCMDstr);
	return true;
}
cmd:freeze(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return	SendErrorMessage(playerid,"帮助: {4080FF}/freeze {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[params[0]][pAdministration228] > PlayerInfo[playerid][pAdministration228]) return SendErrorMessage(playerid,"对方管理员等级比你高!");
	TogglePlayerControllable(params[0], 0);
	format(YCMDstr, sizeof(YCMDstr), "― %s 被冻结,执行管理员: %s",Name(params[0]),Name(playerid));
	ABroadCast(-1,YCMDstr,1);
	return true;
}
cmd:unfreeze(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return	SendErrorMessage(playerid,"帮助: {4080FF}/unfreeze {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerInfo[params[0]][pAdministration228] > PlayerInfo[playerid][pAdministration228]) return SendErrorMessage(playerid,"对方管理员等级比你高!");
	TogglePlayerControllable(params[0], 1);
	format(YCMDstr, sizeof(YCMDstr), "― 管理员: %s 解冻了 %s",Name(playerid),Name(params[0]));
	ABroadCast(-1,YCMDstr,1);
	return true;
}
cmd:camera(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMember] != 19) return SendErrorMessage(playerid,"你不是军队成员");
	if(!PlayerToPoint(5.0,playerid,212.2816,1812.2374,21.8672)) return SendErrorMessage(playerid,"你不在监控点");
	new listitems[] = "部门 - 1\n部门 - 2\n部门 - 3\n部门 - 4";
	ShowPlayerDialog(playerid, 7724, DIALOG_STYLE_LIST, "{1E90FF}选择监控", listitems, "选择", "返回");
	return true;
}
cmd:cameraoff(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMember] != 19) return SendErrorMessage(playerid,"你不是军队成员");
	SetCameraBehindPlayer(playerid);
	TogglePlayerControllable(playerid, 1);
	return true;
}
cmd:warnmans(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 5 || dostup[playerid] == 0) return true;
	new countmute = 0;
	new string[128];
	foreach(new i : Player)
	{
		if(PlayerInfo[i][pWarns] >= 1 && IsPlayerConnected(i))
		{
			format(string,sizeof(string),"{FFA500}%s[%i]. {FFFFFF}警告次数 : {FFA500}%i.{FFFFFF} 解除警告时间:{FFA500} %i",Name(i),i, PlayerInfo[i][pWarns],10 - PlayerInfo[i][punWarnstime]);
			SendClientMessage(playerid, -1, string);
			countmute++;
		}
	}
	format(string, sizeof(string), "― 在线被警告的玩家: {FFA500}%i{FFFFFF} 位!", countmute);
	SendClientMessage(playerid, -1, string);
	return true;
}
cmd:vipmans(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pAdministration228] < 5 || dostup[playerid] == 0) return true;
	new countmute = 0;
	new string[128];
	foreach(new i : Player)
	{
		if(PlayerInfo[i][pDonateRank] >= 1 && IsPlayerConnected(i))
		{
		    format(string, 256, "{FFA500}%s[%i]. {FFFFFF}VIP等级 : {FFA500}%i.",Name(i),i, PlayerInfo[i][pDonateRank]);
			SendClientMessage(playerid, -1, string);
			countmute++;
		}
	}
	format(string, sizeof(string), "― 在线VIP玩家: {FFA500}%i{FFFFFF} 位!", countmute);
	SendClientMessage(playerid, -1, string);
	return true;
}
cmd:mutelist(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 1 || dostup[playerid] == 0) return true;
	new countmute = 0;
	new string[128];
	foreach(new i : Player)
	{
		if(PlayerInfo[i][pMuted] != 0)
		{
		    format(string, 256, "{FFA500}%s[%i]. {FFFFFF}被禁言 : {FFA500}%i{FFFFFF} 秒.",Name(i),i, PlayerInfo[i][pMuteTime]);
			SendClientMessage(playerid, -1, string);
			countmute++;
		}
	}
	format(string, sizeof(string), "― 被禁言的玩家: {FFA500}%i{FFFFFF} 位!", countmute);
	SendClientMessage(playerid, -1, string);
	return true;
}
cmd:unbanip(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[64]",params[0])) return SendServerMessage(playerid,"帮助: {4080FF}/unbanip {B4B5B7}[IP 地址]");
	format(YCMDstr,sizeof(YCMDstr), "unbanip %s",params[0]);
	SendRconCommand(YCMDstr);
	SendRconCommand("reloadbans");
	format(YCMDstr, 256, "― %s 解封 IP: %s",Name(playerid),params[0]);
	ABroadCast(-1,YCMDstr,1);
	return true;
}
cmd:banip(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[64]",params[0])) return SendServerMessage(playerid,"帮助: {4080FF}/banip {B4B5B7}[IP 地址]");
	format(YCMDstr,sizeof(YCMDstr), "banip %s",params[0]);
	SendRconCommand(YCMDstr);
	SendRconCommand("reloadbans");
	format(YCMDstr, 256, "― %s 封禁 IP: %s",Name(playerid),params[0]);
	ABroadCast(-1,YCMDstr,1);
	return true;
}
cmd:unprison(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/unprison {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	SendServerMessage(playerid, "玩家被释放");
	format(YCMDstr, sizeof(YCMDstr), "― 管理员: %s 将你从监狱里释放.",Name(playerid));
	SendClientMessage(params[0], -1, YCMDstr);
	PlayerInfo[params[0]][pJailTime] = 0;
	PlayerInfo[params[0]][pJailed] = 0;
	TogglePlayerControllable(params[0], 1);
	SpawnPlayer(params[0]);
	return true;
}
cmd:saveallaccount(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if (PlayerInfo[playerid][pAdministration228] < 9 || dostup[playerid] == 0) return true;
 	new time = GetTickCount();
	SendServerMessage(playerid,"服务器正在保存账户数据!");
	foreach(new i: Player)
	{
	    if(PlayerInfo[i][pLogin] == 1)
	    {
			OnPlayerUpdateAc(i);
		}
	}
	format(YCMDstr,sizeof(YCMDstr),"― 所有账户保存. 耗时: %d <毫秒>",GetTickCount() - time);
	ABroadCast(-1,YCMDstr,1);
	return true;
}
cmd:saveall(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if (PlayerInfo[playerid][pAdministration228] < 9 || dostup[playerid] == 0) return true;
 	new time = GetTickCount();
	SendServerMessage(playerid,"服务器正在保存!");
	SetPVarInt(playerid, "SaveAllGzDBS", gettime()+5);
	format(YCMDstr,sizeof(YCMDstr),"― 材料, 黑手党银行, 帮派/组织银行 - 保存. 耗时: %d <毫秒>",GetTickCount() - time);
	ABroadCast(-1,YCMDstr,1);
	return true;
}
cmd:alock(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new nearveh = GetNearestVehicle(playerid);
	new carid;
	if(PlayerInfo[playerid][pAdministration228] < 2 || dostup[playerid] == 0) return true;
	carid = nearveh;
	new Float:cx,Float:cy,Float:cz;
	GetVehiclePos(carid, cx, cy, cz);
	if(!PlayerToPoint(4.0, playerid, cx, cy, cz)) return true;
	if(IsLocked[carid] == 1)
	{
		GameTextForPlayer(playerid, "~w~CAR ~g~UNLOCK", 5000, 3);
		UnLockCar(carid);
		IsLocked[carid] = 0;
	}
	else
	{
		GameTextForPlayer(playerid, "~w~CAR ~r~LOCK", 5000, 3);
		LockCar(carid);
		IsLocked[carid] = 1;
	}
	return true;
}
cmd:lock(playerid, params[])
{
	if(PlayerInfo[playerid][pLogin] == 0) return true;
	new carid;
	if(PlayerInfo[playerid][pPhousekey] == 799 && caridhouse[playerid] == -1) return SendErrorMessage(playerid,"目前你没有车");
	if(caridhouse[playerid] != -1) carid = caridhouse[playerid];
	new lockstatus = gCarLock[carid];
	new Float:cx,Float:cy,Float:cz;
	GetVehiclePos(carid, cx, cy, cz);
	if(!PlayerToPoint(4.0, playerid, cx, cy, cz)) return true;
	switch (lockstatus)
	{
	case 0:
		{
			GameTextForPlayer(playerid, "~w~CAR ~r~LOCK", 5000, 3);
			LockCar(carid);
			IsLocked[caridhouse[playerid]] = 1;
			PlayerPlaySound(playerid, 25800, 0.0, 0.0, 0.0);
		}
	case 1:
		{
			GameTextForPlayer(playerid, "~w~CAR ~g~UNLOCK", 5000, 3);
			UnLockCar(carid);
			IsLocked[caridhouse[playerid]] = 0;
			PlayerPlaySound(playerid, 25800, 0.0, 0.0, 0.0);
		}
	default:
		{
			SendErrorMessage(playerid, "错误!");
		}
	}
	return true;
}
cmd:alogin(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 1) return true;
	if(dostup[playerid] == 0) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{1E90FF}管理授权", "{FFE4E1}请输入管理员授权码.", "确定", "退出");
	else
	{
		dostup[playerid] = 0, SendServerMessage(playerid, "你下班了");
		format(YCMDstr, sizeof(YCMDstr), "― 管理员 %s[%i], %i 级, 下班了.",Name(playerid),playerid,PlayerInfo[playerid][pAdministration228]);
		ABroadCast(-1, YCMDstr, 1);
		return true;
	}
}
cmd:asellhouse(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if (PlayerInfo[playerid][pAdministration228] < 9 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return	SendServerMessage(playerid,"帮助: /asellhouse [houseid]");
	format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pPhousekey = '799' WHERE Name = '%s'",HouseInfo[params[0]][hOwner]);
	mysql_query(YCMDstr);
	HouseInfo[params[0]][hHel] = 0;
	HouseInfo[params[0]][hLock] = 1;
	HouseInfo[params[0]][hOwned] = 0;
	SendSyntaxMessage(playerid, "房屋出售了");
	strmid(HouseInfo[params[0]][hOwner], "The State", 0, strlen("The State"), 255);
	GameTextForPlayer(playerid, YCMDstr, 10000, 3);
	BuyHouse(params[0]);
	SaveProperty(params[0]);
	return true;
}
cmd:sellhouseq(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new bouse = PlayerInfo[playerid][pPhousekey];
	if(bouse == 999 || strcmp(Name(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == -1) return true;
	if(!PlayerToPoint(30, playerid,HouseInfo[bouse][hExitx], HouseInfo[bouse][hExity], HouseInfo[bouse][hExitz])) return true;
	ShowPlayerDialog(playerid,5032,DIALOG_STYLE_MSGBOX, "{1E90FF}出售房屋", "警告! 出售后房屋归为国家\n\n你确定吗?", "确定", "不了");
	return true;
}
cmd:healme(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	for(new i = 1; i <= TotalHouse; i++)
	{
		if(!PlayerToPoint(30, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz])) continue;
		if(GetPlayerVirtualWorld(playerid) != i+50) continue;
		if(HouseInfo[i][hHel] == 0)return SendErrorMessage(playerid,"房屋内没有急救箱");
		new Float:health;
    	GetPlayerHealth(playerid, health);
    	if(health >= 100) return SendErrorMessage(playerid,"你现在不需要使用急救箱!");
		SendSyntaxMessage(playerid,"血量恢复到 100");
		format(YCMDstr, sizeof(YCMDstr), "剩余 %i 个急救箱", HouseInfo[i][hHel]);
		SendClientMessage(playerid, -1, YCMDstr);
		HouseInfo[i][hHel] -= 1;
		SetPlayerHealthAC(playerid, 100.0);
		SetPlayerChatBubble(playerid, "使用急救箱", COLOR_PURPLE, 30.0, 10000);
		SaveProperty(i);
		return true;
	}
	return true;
}
cmd:robhouse(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	for(new h = 1; h <= TotalHouse; h++)
	{
		if(!IsAGang(playerid)) continue;
		for(new i =1; i <= TOTALGZ; i++)
		{
			if(!PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3])) continue;
			if(!PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez])) continue;
			if(robhouse[playerid] != false) return SendErrorMessage(playerid,"你已经在抢劫房子了");
			if(HouseInfo[h][hOwned] == 0) return SendErrorMessage(playerid,"这个房子没业主");
			if(!IsPlayerConnected(GetPlayerID(HouseInfo[h][hOwner]))) return SendErrorMessage(playerid,"该房屋业主不在线");
			SendSyntaxMessage(playerid,"你抢了房子，把材料带到了码头(在LS港口交货");
			PlayerInfo[playerid][pZakonp] -= 1;
			robh[playerid] = true;
			robhouse[playerid] = true;
			HouseInfo[h][hTakings] -= 500;
			SaveProperty(h);
		}
	}
	return true;
}
cmd:setskill(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 9 || dostup[playerid] == 0) return true;
	if(sscanf(params, "udd",params[0],params[1],params[2]))
	{
		SendErrorMessage(playerid,"帮助: {4080FF}/setskill {B4B5B7}[玩家ID/玩家名称] [编号] [数量]");
		SendServerMessage(playerid, "[0] Slinced Pistol |[1] Desert Eagle |[2] ShotGun |[3] MP5 |[4] AK47 |[5] M4A1");
		return true;
	}
	if(params[1] > 6 || params[1] < 0) return SendErrorMessage(playerid,"请输入正确的编号");
	if(!IsPlayerConnected(params[0])) return true;
	PlayerInfo[params[0]][pGunSkill][params[1]] = params[2];
	SendSyntaxMessage(playerid, "设置成功");
	return true;
}
cmd:fixcar(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pCash] < 100) return SendErrorMessage(playerid,"你没有 100$");
    if(caridhouse[playerid] == -1) return SendErrorMessage(playerid,"你没有车");
	if(IsVehicleOccupied(caridhouse[playerid]) != -1) return SendErrorMessage(playerid,"车辆被占用");
	if(caridhouse[playerid] != -1)
	{
		DestroyVehicle(caridhouse[playerid]);
		caridhouse[playerid] = -1;
	}
	caridhouse[playerid] = CreateVehicle(PlayerInfo[playerid][pCar], PlayerInfo[playerid][dCarx], PlayerInfo[playerid][dCary], PlayerInfo[playerid][dCarz], PlayerInfo[playerid][dCarc] , PlayerInfo[playerid][pColor][0] ,PlayerInfo[playerid][pColor][1], 86400);
	LockCar(caridhouse[playerid]);
	LinkVehicleToInterior(caridhouse[playerid], 0);
	Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelcar];
	GameTextForPlayer(playerid, "~g~car at your home~n~~r~$-100", 5000, 1);
	PlayerInfo[playerid][pCash] -= 100;
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	CompVeh(playerid,caridhouse[playerid]);
	SetVehicleNumberPlate(caridhouse[playerid], PlayerInfo[playerid][pNumbercar]);
	for ( new i = 0;  i < 5; i++ ) TextDrawShowForPlayer(playerid, TDInfo[i]);
	SetTimerEx("InfoTime", 2000, false, "d", playerid);
	SendServerMessage(playerid,"这辆车被送到泊车点");
	return true;
}
cmd:fixcarq(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pCash] < 300) return SendErrorMessage(playerid,"你没有 300$");
	if(caridhouse[playerid] == -1) return SendErrorMessage(playerid,"你没有车");
	if(PlayerInfo[playerid][pPhousekey] == 799) return true;
	new house = PlayerInfo[playerid][pPhousekey];
	if(IsVehicleOccupied(caridhouse[playerid]) != -1) return SendErrorMessage(playerid,"车辆被占用");
	if(caridhouse[playerid] != -1)
	{
		DestroyVehicle(caridhouse[playerid]);
		caridhouse[playerid] = -1;
	}
	caridhouse[playerid] = CreateVehicle(PlayerInfo[playerid][pCar], HouseInfo[house][hCarx], HouseInfo[house][hCary], HouseInfo[house][hCarz], HouseInfo[house][hCarc] , PlayerInfo[playerid][pColor][0] ,PlayerInfo[playerid][pColor][1], 86400);
	LinkVehicleToInterior(caridhouse[playerid], 0);
	LockCar(caridhouse[playerid]);
	Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelcar];
	GameTextForPlayer(playerid, "~g~car at your home~n~~r~$-300", 5000, 1);
	PlayerInfo[playerid][pCash] -= 300;
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	CompVeh(playerid,caridhouse[playerid]);
	SetVehicleNumberPlate(caridhouse[playerid], PlayerInfo[playerid][pNumbercar]);
	for ( new i = 0;  i < 5; i++ ) TextDrawShowForPlayer(playerid, TDInfo[i]);
	SetTimerEx("InfoTime", 2000, false, "d", playerid);
	return true;
}
cmd:sellcar(playerid, params[])
{
	if(PlayerInfo[playerid][pLogin] == 0) return true;
	if(caridhouse[playerid] == -1) return SendErrorMessage(playerid,"你没有车");
	if(!IsPlayerInRangeOfPoint(playerid, 20.0, -72.9261,-1621.5245,3.5231)) return SendErrorMessage(playerid,"你不在汽车销售场所 [/gps] 公共场所");
	if(IsPlayerInAnyVehicle(playerid)) return SendErrorMessage(playerid,"你不能呆在车里.");
	ShowPlayerDialog(playerid,803,DIALOG_STYLE_MSGBOX,"{1E90FF}警告","{FFFFFF}你真的想把汽车出售给国家吗?\n\n{708090}汽车销售价格:\n\n{708090}N 类型 - {FFFFFF}25.000$\n{708090}D 类型 - {FFFFFF}100.000$\n{708090}A 类型 - {FFFFFF}500.000$","确定","退出");
	return true;
}
cmd:pgetip(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/pgetip {B4B5B7}[ip]");
	SendServerMessage(playerid, "来自此IP地址的玩家:");
	new playersip[32];
	foreach(new i : Player)
	{
		GetPlayerIp(i,playersip,sizeof(playersip));
		if(!strcmp(playersip, params[0]))
		{
			format(YCMDstr, 256, "― [%i] %s | IP %s", i,Name(i),playersip);
			SendClientMessage(playerid, -1, YCMDstr);
		}
	}
	return true;
}
cmd:sellzone(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	for(new i = 0; i < 130; i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
		{
			if(PlayerInfo[playerid][pLeader] != GZInfo[i][gFrakVlad]) return SendServerMessage(playerid,"你不在你的地盘!");
			if(sscanf(params, "ud",params[0],params[1])) return SendServerMessage(playerid,"帮助: {4080FF}/sellzone [id] [价格]");
			if(params[1] < 1000 || params[1] > 50000) { SendServerMessage(playerid, "价格限制: 1000 - 50000!"); return true; }
			if(!IsPlayerConnected(params[0])) return true;
			if(!ProxDetectorS(8.0, playerid, params[0])) return true;
			if(params[0] == playerid) { SendErrorMessage(playerid,"目标不能为自己!"); return true; }
			format(YCMDstr, sizeof(YCMDstr), "― 你向 %s 出售地盘,价格: %i $",Name(params[0]),params[1]);
			SendClientMessage(playerid, -1, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "― %s 向你出售地盘,价格: %i $. ( 输入: /accept zone - 购买地盘 )",Name(playerid),params[1]);
			SendClientMessage(params[0], -1, YCMDstr);
			ZoneOffer[params[0]] = playerid;
			sellzone[params[0]] = PlayerInfo[playerid][pMember];
			ZonePrice[params[0]] = params[1];
		}
	}
	return true;
}
cmd:ipban(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if (PlayerInfo[playerid][pAdministration228] < 8 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return	SendServerMessage(playerid,"帮助: /ipban [id]");
	if(!IsPlayerConnected(params[0])) return true;
	new playersip[20], string[128];
	GetPlayerIp(params[0],playersip,sizeof(playersip));
	format(string,sizeof(string),"― 名称: %s | IP: %s",Name(params[0]),playersip);
	ShowPlayerDialog(playerid, 9482, DIALOG_STYLE_MSGBOX,"{1E90FF}管理员", string , "封禁", "退出");
	strmid(banip[playerid],playersip, 0, strlen(playersip), 32);
	return true;
}
cmd:ip(playerid,params[])
{
    if(PlayerInfo[playerid][pAdministration228] < 4 || dostup[playerid] == 0) return true;
    if(sscanf(params, "u", params[0])) return SendServerMessage(playerid, "帮助: /ip [id]");
    if(!IsPlayerConnected(params[0])) return true;
    new ipD[45];
    GetPlayerIp(params[0], ipD, 32);
    format(YCMDstr, 256, "― 当前玩家IP: {FFFFFF}%s", ipD);
    SendClientMessage(playerid, COLOR_YELLOW, YCMDstr);
    return 1;
}
cmd:agetip(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[42]",params[0])) return	SendServerMessage(playerid,"帮助: {4080FF}/agetip [名称]");
	format(YCMDstr, sizeof(YCMDstr), "SELECT * FROM `"TABLE_ACCOUNT"` WHERE Name = '%s'",params[0]);
	mysql_query(YCMDstr);
	mysql_store_result();
	if(mysql_fetch_row_format(YCMDstr))
	{
		BaseGet("pIpReg",YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), "― 名称: %s | 注册时IP: %s",params[0],YCMDstr);
		SendClientMessage(playerid, -1, YCMDstr);
	}
	else SendServerMessage(playerid,"在数据库中找不到账户");
	mysql_free_result();
	return true;
}
cmd:atm(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsABankomat(playerid)) return true;
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return true;
	ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
	for(new x; x < 14; x ++) TextDrawShowForPlayer(playerid, ATM[x]);
	SelectTextDraw(playerid, COLOR_LIGHTBLUE);
	clicktd[playerid] = true;
	return true;
}
cmd:pdd(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new pdddialog[1748];
	format(pdddialog,sizeof(pdddialog), "%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
	pdddialogMSG[0],pdddialogMSG[1],pdddialogMSG[2],pdddialogMSG[3],pdddialogMSG[4],pdddialogMSG[5],pdddialogMSG[6],pdddialogMSG[7],pdddialogMSG[8],pdddialogMSG[9],pdddialogMSG[10],pdddialogMSG[11],pdddialogMSG[12]);
	ShowPlayerDialog(playerid,15,DIALOG_STYLE_MSGBOX, "{1E90FF}道路规则", pdddialog, "关闭", "");
	format(YCMDstr, sizeof(YCMDstr), "%s 读了道路交通规则.",Name(playerid));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return true;
}
cmd:help(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new helpdialog[1748];
	format(helpdialog,sizeof(helpdialog), "%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
	helpdialogMSG[0],helpdialogMSG[1],helpdialogMSG[2],helpdialogMSG[3],helpdialogMSG[4],helpdialogMSG[5],helpdialogMSG[6],helpdialogMSG[7],helpdialogMSG[8],helpdialogMSG[9],helpdialogMSG[10],helpdialogMSG[11],helpdialogMSG[12],helpdialogMSG[13]);
	ShowPlayerDialog(playerid,15,DIALOG_STYLE_MSGBOX, "{1E90FF}第一步", helpdialog, "完成", "");
	format(YCMDstr, sizeof(YCMDstr), "%s 阅读初学者的第一步.",Name(playerid));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return true;
}
cmd:ahelp(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 1 || dostup[playerid] == 0) return true;
	new listitems[] = "[1] 一级管理员\n[2] 二级管理员\n[3] 三级管理员\n[4] 四级管理员\n[5] 五级管理员\n[6] 六级管理员\n[7] 七级管理员\n[8] 八级管理员\n[9] 九级管理员\n[10] 组织ID列表";
	ShowPlayerDialog(playerid, 20011, DIALOG_STYLE_LIST, "{1E90FF}管理员命令", listitems, "选择", "关闭");
	return true;
}
cmd:apanel(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 7 || dostup[playerid] == 0) return true;
	ShowPlayerDialog(playerid, 20012, DIALOG_STYLE_LIST, "{1E90FF}管理员面板", "[1]> 管理团队\n[2]> 开始娱乐\n[3]> 改变天气\n[4]> 创建车辆\n[5]> 查看具有相同IP地址的玩家\n[6]> 查看带有警告的玩家\n[7]> 查看被禁言的玩家\n[8]> 在线VIP玩家\n[9]> 促销代码", "选择", "退出");
	return true;
}
cmd:exit(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	for(new i = 1; i <= TotalHouse; i++)
	{
		if(!PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz])) continue;
		if(GetPlayerVirtualWorld(playerid) == i+50)
		{
			PickupX[playerid] = HouseInfo[i][hEntrancex], PickupY[playerid] = HouseInfo[i][hEntrancey];
			oldpickup[playerid] = HouseInfo[i][hPickup];
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			Q_SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
			PlayerInfo[playerid][pInt] = 0;
			PlayerInfo[playerid][pLocal] = 255;
		}
	}
	return true;
}
cmd:dir(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pDirectory] == 0) return SendErrorMessage(playerid,"你没有服务电话本,去 24/7 购买.");
	ShowPlayerDialog(playerid,5454,DIALOG_STYLE_LIST, "{1E90FF}服务电话", "[1] 律师\n[2] 教官\n[3] 医务人员", "选择", "返回");
	return true;
}
cmd:mn(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	for(new i; i < 20; i++)
	{
		TextDrawShowForPlayer(playerid, menutd[i]);
		SelectTextDraw(playerid,0xFF6347AA);
		clicktd[playerid] = true;
	}
	return true;
}
cmd:mm(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	for(new i; i < 20; i++)
	{
		TextDrawShowForPlayer(playerid, menutd[i]);
		SelectTextDraw(playerid,0xFF6347AA);
		clicktd[playerid] = true;
	}
	return true;
}
cmd:switchskin(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsAGang(playerid)) return true;
	if(forma[playerid] != 1) return SendErrorMessage(playerid,"你不是军队");
	SetPlayerSkin(playerid,287);
	SetPlayerColor(playerid, 0xA85400AA);
	forma[playerid] = 0;
	proverkaforma[playerid] = 1;
	return true;
}
cmd:astats(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if (PlayerInfo[playerid][pAdministration228] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return	SendErrorMessage(playerid,"帮助: {4080FF}/astats {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	AdminStats(playerid,params[0]);
	return true;
}
cmd:carm(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMember] != 19 && proverkaforma[playerid] != 1) return true;
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 573) return SendErrorMessage(playerid,"你没有在货车里(433/573)!");
	new listitems[] = " [1] 装载材料\n [2] 装载到军队\n [3]在船上卸货\n [4] 卸载到SA监狱仓库\n [5] 卸载到仓库\n [6] 卸载到FBI仓库\n [7] 卸载到SFPD仓库\n [8]卸载到仓库\n [9] 卸载帮派仓库";
	ShowPlayerDialog(playerid, 9653, DIALOG_STYLE_LIST, "{1E90FF}材料分配", listitems, "选择", "关闭");
	return true;
}
cmd:tie(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsAMafia(playerid)) return true;
	if(PlayerInfo[playerid][pRank] < 3) return SendErrorMessage(playerid,"阶级低于 3");
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: /tie [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerTied[params[0]] > 0) return SendErrorMessage(playerid,"对方已经被捆绑了!");
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	new car = GetPlayerVehicleID(playerid);
	if(params[0] == playerid) { SendErrorMessage(playerid,"目标不能为自己!"); return true; }
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(params[0], car))
	{
		format(YCMDstr, sizeof(YCMDstr), "― %s 绑住了你.",Name(playerid));
		SendClientMessage(params[0], -1, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), "%s 绑住了 %s", Name(playerid) ,Name(params[0]));
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		TogglePlayerControllable(params[0],0);
 	    ApplyAnimation(params[0],"CRACK","crckdeth2", 4.0, 0, 0, 0, 1, 0);
		SetPlayerAttachedObject(params[0],0,19418,6,-0.011000,0.028000,-0.022000,-15.600012,-33.699977,-81.700035,0.891999,1.000000,1.168000);
 	    SetPlayerSpecialAction(params[0],SPECIAL_ACTION_CUFFED);
		TieTime[params[0]] = 300;
		PlayerTied[params[0]] = 1;
	}
	else return SendErrorMessage(playerid,"对方不在车内!");
	return true;
}
cmd:debtors(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsAMafia(playerid)) return true;
	if(PlayerInfo[playerid][pRank] < 6) return SendErrorMessage(playerid,"阶级低于 6");
	SendServerMessage(playerid, "被保护人:");
	foreach(new i : Player)
	{
		if(PlayerInfo[playerid][pMember] == 6)
		{
			if(PlayerInfo[i][pKrisha] == PlayerInfo[playerid][pMember] && PlayerInfo[i][pMember] == 0)
			{
				format(YCMDstr, 256, "― 被保护人: %s | 保护费: %s",Name(i),PlayerInfo[i][pDolg]);
				SendClientMessage(playerid, -1, YCMDstr);
			}
		}
	}
	return true;
}
cmd:setdebt(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsAMafia(playerid)) return true;
	if(PlayerInfo[playerid][pRank] < 3) return SendErrorMessage(playerid,"阶级低于 3");
	if(sscanf(params, "u",params[0])) return SendServerMessage(playerid,"帮助: /setdebt [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	if(params[0] == playerid) { SendErrorMessage(playerid,"目标不能为自己!"); return true; }
	format(YCMDstr, sizeof(YCMDstr), "― %s 为你提供保护 ( 输入: /accept debt, 接受 )",Name(playerid));
	SendClientMessage(params[0], -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "%s 提供保护 %s", Name(playerid) ,Name(params[0]));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	Krisha[params[0]] = PlayerInfo[playerid][pMember];
	KrishaOffer[params[0]] = playerid;
	return true;
}
cmd:untie(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsAMafia(playerid)) return true;
	if(PlayerInfo[playerid][pRank] < 3) return SendErrorMessage(playerid,"阶级低于 3");
	if(sscanf(params, "u",params[0])) return SendServerMessage(playerid,"帮助: /untie [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerTied[params[0]] != 1) return SendErrorMessage(playerid,"对方没有被绑住!");
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	if(params[0] == playerid) { SendErrorMessage(playerid,"目标不能为自己!"); return true; }
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	format(YCMDstr, sizeof(YCMDstr), "― 你为 %s 解绑.",Name(playerid));
	SendClientMessage(params[0], -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "%s 为 %s 解绑", Name(playerid) ,Name(params[0]));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	TogglePlayerControllable(params[0],1);
    SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE);
	ClearAnimations(params[0]);
	TieTime[params[0]] = 0;
	PlayerTied[params[0]] = 0;
	return true;
}
cmd:showudost(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsACop(playerid)) return true;
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/showudost {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	new ttext[32];
	if(PlayerInfo[playerid][pMember] == 0) { ttext = "公民"; }
	else if(PlayerInfo[playerid][pMember] == 1) { ttext = "LSPD"; }
	else if(PlayerInfo[playerid][pMember] == 7) { ttext = "政府"; }
	else if(PlayerInfo[playerid][pMember] == 3) { ttext = "SA 监狱"; }
	else if(PlayerInfo[playerid][pMember] == 2) { ttext = "FBI"; }
	else if(PlayerInfo[playerid][pMember] == 9) { ttext = "SFPD"; }
	else if(PlayerInfo[playerid][pMember] == 20) { ttext = "LVPD"; }
	new rank = PlayerInfo[playerid][pRank];
	new level = PlayerInfo[playerid][pLevel];
	new msg[] = "{8B3A3A}名称: {FFFFFF}%s\n{8B3A3A}电话号码: {FFFFFF}%i\n{8B3A3A}等级: {FFFFFF}%i\n{8B3A3A}工作单位: {FFFFFF}%s\n{8B3A3A}阶级: {FFFFFF}%i";
	format(YCMDstr, sizeof(YCMDstr), msg,Name(playerid),PlayerInfo[playerid][pPnumber],level,ttext,rank);
	ShowPlayerDialog(params[0], D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}身份证",YCMDstr, "关闭", "");
	format(YCMDstr, sizeof(YCMDstr), "%s 将身份证出示给 %s",Name(playerid),Name(params[0]));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	format(YCMDstr,sizeof(YCMDstr), "将身份证出示给 %s",Name(params[0]));
	SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
	return true;
}
cmd:members(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMember] == 0) return SendErrorMessage(playerid,"你没有组织!");
	new full, string_dialogue[2048];
    strcat(string_dialogue, "{FFFF00}ID:\t{FFFF00}阶级:\t{FFFF00}谴责:\t{FFFF00}名称:\n\n");
	foreach(new i: Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember])
			{
		    	format(YCMDstr, sizeof(YCMDstr),"{FFFFFF}%i\t%i\t%i\t\t%s\n", i, PlayerInfo[i][pRank],PlayerInfo[i][pMWarns], GetName(i));
				strcat(string_dialogue, YCMDstr);
				full++;
			}
		}
	}
	ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}在线组织成员", string_dialogue, "关闭", "");
	return 1;
}
CMD:admins(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new full, string_dialogue[2048];
   	foreach(new i: Player)
	{
 		if(!IsPlayerConnected(i)) continue;
		if(PlayerInfo[i][pAdministration228] < 1) continue;
		format(YCMDstr, sizeof(YCMDstr),"{FFFFFF}%i\t%i\t%s\t[%d/3]\t%s\n", i,PlayerInfo[i][pAdministration228], GetName(i),PlayerInfo[i][pAWarn], pPrefixName[PlayerInfo[i][prefix_id]]);
		strcat(string_dialogue, YCMDstr);
		full++;
	}
	ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "ID | 等级 | 名称 | 谴责 | 地区", string_dialogue, "关闭", "");
	return 1;
}
cmd:leaders(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new full, string_dialogue[2048];
    strcat(string_dialogue, "{FFFF00}组织:\t{FFFF00}电话号码:\t{FFFF00}谴责:\t{FFFF00}名称:\n\n");
	foreach(new i: Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pLeader]>0)
			{
				new ttext[255];
				if(PlayerInfo[i][pLeader] == 1) { ttext = "LSPD"; }
				else if(PlayerInfo[i][pLeader] == 2) { ttext = "FBI"; }
				else if(PlayerInfo[i][pLeader] == 3) { ttext = "监狱 SA"; }
				else if(PlayerInfo[i][pLeader] == 4) { ttext = "医院"; }
				else if(PlayerInfo[i][pLeader] == 5) { ttext = "黑手党 LCN"; }
				else if(PlayerInfo[i][pLeader] == 6) { ttext = "黑手党 实际控制"; }
				else if(PlayerInfo[i][pLeader] == 7) { ttext = "政府"; }
				else if(PlayerInfo[i][pLeader] == 8) { ttext = "大学"; }
				else if(PlayerInfo[i][pLeader] == 9) { ttext = "SFPD"; }
				else if(PlayerInfo[i][pLeader] == 11) { ttext = "驾驶学校"; }
				else if(PlayerInfo[i][pLeader] == 12) { ttext = "巴拉斯帮派"; }
				else if(PlayerInfo[i][pLeader] == 13) { ttext = "瓦戈斯帮派"; }
				else if(PlayerInfo[i][pLeader] == 14) { ttext = "俄罗斯黑手党"; }
				else if(PlayerInfo[i][pLeader] == 15) { ttext = "格罗夫帮派"; }
				else if(PlayerInfo[i][pLeader] == 16) { ttext = "大众媒体"; }
				else if(PlayerInfo[i][pLeader] == 17) { ttext = "阿兹特克帮派"; }
				else if(PlayerInfo[i][pLeader] == 18) { ttext = "14K帮派"; }
				else if(PlayerInfo[i][pLeader] == 19) { ttext = "军队"; }
				else if(PlayerInfo[i][pLeader] == 20) { ttext = "LVPD"; }
		    	format(YCMDstr, sizeof(YCMDstr),"{FFFFFF}%s\t%i\t\t%i\t\t%s\n", ttext, PlayerInfo[i][pPnumber],PlayerInfo[i][pLWarns],GetName(i));
				strcat(string_dialogue, YCMDstr);
				full++;
			}
		}
	}
	ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}组织领导人", string_dialogue, "关闭", "");
	return 1;
}
cmd:pass(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(Flood[playerid] > 0) return SendErrorMessage(playerid,"请等待5秒后使用.");
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/pass {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	SendServerMessage(playerid,"你向对方出示执照.");
	format(YCMDstr, sizeof(YCMDstr), "― %s 向你出示执照. (H - 看看, N - 不想看)", GetName(playerid));
	SendClientMessage(params[0], COLOR_BLUE, YCMDstr);
	SetPVarInt(params[0], "PassPokaz", 1);
	SetPVarInt(params[0], "PassSkill", playerid);
	Flood[playerid] = 5;
	return true;
}
cmd:lic(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(Flood[playerid] > 0) return SendErrorMessage(playerid,"请等待5秒后使用.");
	if(sscanf(params, "u", params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/lic {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	new text1[20];
	new text2[20];
	new text3[20];
	new text4[20];
	new text5[20];
	if(PlayerInfo[playerid][pCarLic]) { text1 = "通过"; } else { text1 = "未通过"; }
	if(PlayerInfo[playerid][pFlyLic]) { text4 = "通过"; } else { text4 = "未通过"; }
	if(PlayerInfo[playerid][pBoatLic]) { text2 = "通过"; } else { text2 = "未通过"; }
	if(PlayerInfo[playerid][pFishLic]) { text3 = "通过"; } else { text3 = "未通过"; }
	if(PlayerInfo[playerid][pGunLic]) { text5 = "通过"; } else { text5 = "未通过"; }
	new msg[] = "{4682B4}执照: {FFFFFF}%s\n\n{8B3A3A}驾驶执照: {FFFFFF}%s\n{8B3A3A}飞机执照: {FFFFFF}%s\n{8B3A3A}船只执照: {FFFFFF}%s\n{8B3A3A}钓鱼执照: {FFFFFF}%s\n{8B3A3A}武器执照: {FFFFFF}%s";
	format(YCMDstr, sizeof(YCMDstr),msg, Name(playerid),text1,text4,text2,text3,text5);
	ShowPlayerDialog(params[0], D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}执照信息",YCMDstr, "关闭", "");
	format(YCMDstr,sizeof(YCMDstr), "%s 将执照出示给 %s",Name(playerid),Name(params[0]));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	format(YCMDstr,sizeof(YCMDstr), "将执照出示给 %s",Name(params[0]));
	SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
	Flood[playerid] = 5;
	return true;
}
cmd:carpass(playerid, params[])
{
	if(PlayerInfo[playerid][pLogin] == 0) return true;
	if(!IsPlayerInAnyVehicle(playerid)) return SendErrorMessage(playerid,"你不在车内!");
	if(Flood[playerid] > 0) return SendErrorMessage(playerid,"请等待5秒后使用.");
	if(VehiclePlayer(GetPlayerVehicleID(playerid)) == -1) return SendErrorMessage(playerid,"不是你的车辆");
	if(sscanf(params, "u",params[0]))
	{
		if(IsPlayerConnected(VehiclePlayer(GetPlayerVehicleID(playerid))))
		{
			new msg[] = "{F5F5DC}车主: \t\t{EE82EE}%s\n{F5F5DC}车型: \t\t{EE82EE}%s\n{F5F5DC}状态: \t{EE82EE}%d {F5F5DC}%\n{F5F5DC}车牌号: \t\t{EE82EE}%s";
		    format(YCMDstr, 500, msg, Name(VehiclePlayer(GetPlayerVehicleID(playerid))),VehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400],PlayerInfo[VehiclePlayer(GetPlayerVehicleID(playerid))][pProcents],PlayerInfo[VehiclePlayer(GetPlayerVehicleID(playerid))][pNumbercar]);
		    ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}车辆信息",YCMDstr,"关闭","");
			SetPlayerChatBubble(playerid,"从车内拿出车辆信息文件",COLOR_PURPLE,30.0,10000);
			format(YCMDstr, sizeof(YCMDstr), "%s 从车内拿出车辆信息文件",Name(playerid));
			ProxDetector(10.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return true;
		}
		else return SendErrorMessage(playerid,"车主不在线.");
	}
	if(!IsPlayerConnected(params[0])) return SendErrorMessage(playerid,"无效玩家ID");
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	new msg[] = "{F5F5DC}车主: \t\t{EE82EE}%s\n{F5F5DC}模型 \t\t{EE82EE}%s\n{F5F5DC}状态: \t{EE82EE}%d {F5F5DC}%\n{F5F5DC}车牌号: \t\t{EE82EE}%s";
    format(YCMDstr, 500, msg, Name(VehiclePlayer(GetPlayerVehicleID(playerid))),VehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400],PlayerInfo[VehiclePlayer(GetPlayerVehicleID(playerid))][pProcents],PlayerInfo[VehiclePlayer(GetPlayerVehicleID(playerid))][pNumbercar]);
    ShowPlayerDialog(params[0],D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}车辆信息",YCMDstr,"关闭","");
	format(YCMDstr,sizeof(YCMDstr), "从车内拿出车辆信息文件,出示给 %s",Name(params[0]));
	SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
	format(YCMDstr, sizeof(YCMDstr), "%s 从车内拿出车辆信息文件,出示给 %s",Name(playerid),Name(params[0]));
	ProxDetector(10.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	Flood[playerid] = 5;
	return true;
}
cmd:skill(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(Flood[playerid] > 0) return SendErrorMessage(playerid,"请等待5秒后使用.");
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/skill {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	SendServerMessage(playerid,"你向对方展示技能.");
	format(YCMDstr, sizeof(YCMDstr), "― %s 向你展示技能. (H - 看看, N - 不想看)", GetName(playerid));
	SendClientMessage(params[0], COLOR_BLUE, YCMDstr);
	SetPVarInt(params[0], "SkillPokaz", 1);
	SetPVarInt(params[0], "PlayerSkill", playerid);
	Flood[playerid] = 5;
	return 1;
}
cmd:hi(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsPlayerConnected(playerid)) return true;
	if(Flood[playerid] > 0) return SendErrorMessage(playerid,"Flood!");
	if(IsPlayerInAnyVehicle(playerid)) return SendErrorMessage(playerid,"你不能在车里");
	if(sscanf(params, "u", params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/hi {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(2.0, playerid, params[0])) return true;
	if(params[0] == playerid)  return  SendErrorMessage(playerid,"不能对自己使用");
	SendServerMessage(playerid,"你向对方发送了握手请求.");
	format(YCMDstr, sizeof(YCMDstr), "― %s 邀请你握手. (H - 同意, N - 拒绝)", GetName(playerid));
	SendClientMessage(params[0], COLOR_BLUE, YCMDstr);
	SetPVarInt(params[0], "Rukuzim", 1);
    SetPVarInt(params[0], "PlayerRuki", playerid);
	Flood[playerid] = 5;
	return 1;
}
cmd:fuelcars(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 9 || dostup[playerid] == 0) return true;
	for(new i = 0;i<MAX_VEHICLES;i++) Fuell[i] = 200;
	format(YCMDstr, sizeof(YCMDstr), "― 管理员: %s 为所有汽车加满了油.", Name(playerid));
	SendClientMessageToAll(-1,YCMDstr);
	return true;
}
cmd:gzcolor(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(Rucovod(playerid) || GhettoAdm(playerid))
	{
		if(sscanf(params, "d",params[0])) return SendServerMessage(playerid,"帮助: {4080FF}/gzcolor {B4B5B7}[帮派]");
		for(new i = 0; i < 133; i++)
		{
			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
			{
				GZInfo[i][gFrakVlad] = params[0];
				GangZoneStopFlashForAll(GZInfo[i][gID]);
				GangZoneHideForAll(GZInfo[i][gID]);
				GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
				return true;
			}
		}
	}
	else
	{
	    SendErrorMessage(playerid, "你没有在地盘里!");
	}
	return true;
}
cmd:tazerall(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMember] != 2 || PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] < 3) return true;
	params[0] = GetClosestPlayer(playerid);
	if(!ProxDetectorS(6.0, playerid, params[0])) return SendErrorMessage(playerid,"距离太远了");
	if(IsPlayerInAnyVehicle(playerid)) return  SendErrorMessage(playerid,"不能在车里");
	format(YCMDstr, sizeof(YCMDstr), "FBI探员 %s 击晕了大家15秒",Name(playerid));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	TogglePlayerControllable(params[0], 0);
	SetPlayerSpecialAction(params[0],SPECIAL_ACTION_HANDSUP);
	PlayerCuffed[params[0]] = 1;
	PlayerCuffedTime[params[0]] = 15;
	return true;
}
cmd:ftazer(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMember] != 2 || PlayerInfo[playerid][pLeader] != 2) return true;
	if(sscanf(params, "d",params[0])) return SendServerMessage(playerid,"帮助: {4080FF}/ftazer {B4B5B7}[1/2/3]");
	if(strcmp(params[0],"1", true) == 0)
	{
		format(YCMDstr, sizeof(YCMDstr), "FBI探员 %s 击晕了附近所有玩家",Name(playerid));
		ProxDetector(20.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		foreach(new i : Player)
		{
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
			{
				TogglePlayerControllable(i,0);
				SendServerMessage(i,"你被冻结了10秒钟");
				SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
				SetPVarInt(i, "UnFreeze", gettime()+10);
			}
		}
	}
	if(strcmp(params[0],"2", true) == 0)
	{
		format(YCMDstr, sizeof(YCMDstr), "FBI探员 %s 击晕了附近所有警员/探员/狱警",Name(playerid));
		ProxDetector(20.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		foreach(new i : Player)
		{
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
			{
				if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1 ||PlayerInfo[i][pMember] == 2 || PlayerInfo[i][pLeader] == 2 ||PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pLeader] == 3)
				{
					TogglePlayerControllable(i,0);
					SendServerMessage(i,"你被冻结了10秒钟");
					SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
					SetPVarInt(i, "UnFreeze", gettime()+10);
				}
			}
		}
	}
	if(strcmp(params[0],"3", true) == 0)
	{
		format(YCMDstr, sizeof(YCMDstr), "FBI探员 %s 击晕了附近所有公民", Name(playerid));
		ProxDetector(20.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		foreach(new i : Player)
		{
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
			{
				if(PlayerInfo[i][pMember] == 0 && PlayerInfo[i][pLeader] == 0)
				{
					TogglePlayerControllable(i,0);
					SendServerMessage(i,"你被冻结了10秒钟");
					SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
					SetPVarInt(i, "UnFreeze", gettime()+10);
				}
			}
		}
	}
	return true;
}
cmd:tazer(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(GetPVarInt(playerid,"comtazer") > gettime()) return SendErrorMessage(playerid,"稍后使用!");
	if(!IsACop(playerid) && !IsAMayor(playerid)) return SendErrorMessage(playerid,"你不是警察!");
	if(Tazer[playerid] == 0)
	{
 		GiveWeapon(playerid, 23, 20);
 		Tazer[playerid] = 1;
 		SendServerMessage(playerid, "拿出电击枪 ( 射击玩家将其麻痹).");
 		SetPlayerChatBubble(playerid, "拿出电击枪", COLOR_PURPLE, 30.0, 10000);
 		SetPVarInt(playerid,"comtazer",gettime()+30);
 		return 1;
	}
	else if(Tazer[playerid] == 1)
	{
		Tazer[playerid] = 0;
		SendServerMessage(playerid,"将电击枪放回");
		SetPlayerChatBubble(playerid, "将电击枪放回", COLOR_PURPLE, 30.0, 10000);
		return 1;
	}
	else Tazer[playerid] = 0;
	return 1;
}
cmd:cuff(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pRank] < 2) return SendErrorMessage(playerid,"你的阶级低于 2!");
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
	{
		if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/cuff {B4B5B7}[id]");
		if(!IsPlayerConnected(params[0])) return true;
		if(IsACop(params[0])) return SendErrorMessage(playerid,"对方是警察");
		if(PlayerCuffed[params[0]] == 2) return    SendErrorMessage(playerid,"对方已经戴上手铐了");
		if(!ProxDetectorS(8.0, playerid, params[0])) return true;
		if(params[0] == playerid) { SendErrorMessage(playerid,"目标不能为自己"); return true; }
		format(YCMDstr, sizeof(YCMDstr), "― %s 为你戴上手铐",Name(playerid));
		SendClientMessage(params[0], -1, YCMDstr);
		GameTextForPlayer(params[0],"~r~cuffed", 5000, 3);
		format(YCMDstr, sizeof(YCMDstr), "你将 %s 铐住", Name(params[0]));
		SendClientMessage(playerid, -1, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), "%s 对嫌疑人戴上手铐",Name(playerid));
		ProxDetector(10.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerAttachedObject(params[0], 5, 11749, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
		SetPlayerSpecialAction(params[0],SPECIAL_ACTION_CUFFED);
		PlayerCuffed[params[0]] = 2;
		TogglePlayerControllable(params[0], 0);
		PlayerCuffedTime[params[0]] = 3600;
	}
	return true;
}
cmd:uncuff(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
	{
		if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/uncuff {B4B5B7}[id]");
		if(!IsPlayerConnected(params[0])) return true;
		if(IsACop(params[0])) return SendErrorMessage(playerid,"对方是警察");
		if(PlayerCuffed[params[0]] != 2) return    SendErrorMessage(playerid,"玩家没有戴上手铐");
		if(!ProxDetectorS(8.0, playerid, params[0])) return true;
		if(params[0] == playerid) { SendErrorMessage(playerid,"目标不能为自己"); return true; }
		GameTextForPlayer(params[0],"~g~uncuffed", 5000, 3);
		format(YCMDstr, sizeof(YCMDstr), "你将 %s 的手铐取下", Name(params[0]));
		SendClientMessage(playerid, -1, YCMDstr);
		SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE);
 	    RemovePlayerAttachedObject(params[0],5);
		TogglePlayerControllable(params[0], 1);
		PlayerCuffed[params[0]] = 0;
		PlayerCuffedTime[params[0]] = 0;
	}
	return true;
}
cmd:cput(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pRank] >= 1 && (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 9 ||PlayerInfo[playerid][pMember] == 20))
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 560 &&GetVehicleModel(GetPlayerVehicleID(playerid)) != 596 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 490 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 597 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 598) return SendErrorMessage(playerid,"无效车辆");
		if(sscanf(params, "u",params[0])) return  SendErrorMessage(playerid,"帮助: {4080FF}/cput {B4B5B7}[playerid]");
		if(!IsPlayerConnected(params[0])) return true;
		if(params[0] == INVALID_PLAYER_ID) return SendErrorMessage(playerid,"无效玩家");
		if (!ProxDetectorS(5.0, playerid, params[0])) return SendErrorMessage(playerid,"距离太远了");
		if(params[0] == playerid) return SendErrorMessage(playerid,"目标不能为自己");
		if(!WantedLevel[params[0]]) return SendErrorMessage(playerid,"对方没有通缉");
		if(GetPlayerState(params[0]) != PLAYER_STATE_ONFOOT) return SendErrorMessage(playerid,"对方不是步行状态");
		new mesto2,vehicle=GetPlayerVehicleID(playerid);
		foreach(new i : Player)
		{
			if(IsPlayerInVehicle(i,vehicle))
			{
				mesto2 = GetPlayerVehicleSeat(i);
				if(mesto2==2) return SendErrorMessage(playerid,"车内被占用了");
			}
		}
		PutPlayerInVeh(params[0],vehicle,1);
		format(YCMDstr,sizeof(YCMDstr), "― 你被警官/FBI探员 %s 扔进车里",Name(playerid));
		SendClientMessage(params[0],-1,YCMDstr);
		format(YCMDstr,sizeof(YCMDstr), "― 你将 %s 扔进车里",Name(params[0]));
		SendClientMessage(playerid,-1,YCMDstr);
	}
	return true;
}
cmd:ceject(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pRank] >= 1 && (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 9 ||PlayerInfo[playerid][pMember] == 20))
	{
		new string[128],giveplayerid,sendername[MAX_PLAYER_NAME],giveplayer[MAX_PLAYER_NAME];
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 596 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 597 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 598 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 490) return SendErrorMessage(playerid,"无效车辆");
		if(sscanf(params, "u",giveplayerid)) return  SendErrorMessage(playerid,"帮助: {4080FF}/ceject {B4B5B7}[playerid]");
		if(!IsPlayerConnected(giveplayerid)) return true;
		if(giveplayerid == INVALID_PLAYER_ID) return SendErrorMessage(playerid,"无效玩家ID");
		if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(giveplayerid)) return SendErrorMessage(playerid,"对方不在你的车里");
		RemovePlayerFromVehicle(giveplayerid);
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

		if(IsPlayerInRangeOfPoint(giveplayerid,5.0,1568.6144,-1689.9901,6.2188))
		{
		    SetTimerEx("UnFreezePlayer", 3500, false, "i", giveplayerid);
        	TogglePlayerControllable(giveplayerid, 0);
			SetPlayerInterior(giveplayerid,0);
			Q_SetPlayerPos(giveplayerid,1602.9308,-1654.4408,2107.0808);
			SetPlayerFacingAngle(giveplayerid, 85.7670);
			format(string,sizeof(string), "― 你被警官 %s 扔到了洛圣都",sendername);
			SendClientMessage(giveplayerid,-1,string);
			format(string,sizeof(string), "― 你将 %s 扔到了洛圣都",giveplayer);
			SendClientMessage(playerid,-1,string);
			format(string,sizeof(string), "将 %s 扔到了洛圣都",giveplayer);
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
		}
		else if(IsPlayerInRangeOfPoint(giveplayerid,5.0,-1594.2096,716.1803,-4.9063))
		{
			SetPlayerInterior(giveplayerid,10);
			Q_SetPlayerPos(giveplayerid,220.1259,114.6476,999.0156);
			SetPlayerFacingAngle(giveplayerid, 95.3400);
			format(string,sizeof(string), "― 你被警官 %s 扔到了SF",sendername);
			SendClientMessage(giveplayerid,-1,string);
			format(string,sizeof(string), "― 你将 %s 扔到了SF",giveplayer);
			SendClientMessage(playerid,-1,string);
			format(string,sizeof(string), "将 %s 扔到了SF",giveplayer);
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
		}
		else if(IsPlayerInRangeOfPoint(giveplayerid,5.0,2297.1138,2451.4346,10.8203))
		{
			SetPlayerInterior(giveplayerid,3);
			SetPlayerVirtualWorld(giveplayerid, 122);
			Q_SetPlayerPos(giveplayerid,198.1339,158.4835,1003.0234);
			SetPlayerFacingAngle(giveplayerid, 354.8164);
			format(string,sizeof(string), "― 你被警官 %s 扔到了LV",sendername);
			SendClientMessage(giveplayerid,-1,string);
			format(string,sizeof(string), "― 你将 %s 扔到了LV",giveplayer);
			SendClientMessage(playerid,-1,string);
			format(string,sizeof(string), "将 %s 扔到饿了LV",giveplayer);
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
		}
		else
		{
			format(string,sizeof(string), "― 你被警官/FBI探员 %s 扔下车",sendername);
			SendClientMessage(giveplayerid,-1,string);
			format(string,sizeof(string), "― 你将 %s 扔下车",giveplayer);
			SendClientMessage(playerid,-1,string);
			format(string,sizeof(string), "将 %s 扔下车",giveplayer);
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
		}
	}
	return true;
}
cmd:find(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsACop(playerid))return SendErrorMessage(playerid,"你不是警察/FBI");
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/find {B4B5B7}[id]");
	if(PlayerInfo[params[0]][pMaskON]>0) return SendErrorMessage(playerid, "找不到这个人是不可能的(带了面具)!");
	if(PlayerInfo[params[0]][pWantedLevel] ==0) return SendErrorMessage(playerid,"对方没有犯罪!");
	if(GetPlayerInterior(params[0]) != GetPlayerInterior(playerid)) return SendErrorMessage(playerid, "对方在内饰");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == playerid) { SendErrorMessage(playerid,"目标不能是自己"); return true; }
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(params[0], X,Y,Z);
	SetPlayerCheckpoint(playerid, X,Y,Z, 6);
	return true;
}
cmd:accept(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new string[128],sendername[MAX_PLAYER_NAME],giveplayer[MAX_PLAYER_NAME];
	new x_job[64];
	if(sscanf(params, "s[32]",x_job)) return SendErrorMessage(playerid,"帮助: {4080FF}/accept {B4B5B7}[项目]");
	if(strcmp(x_job, "debt",true) == 0)
	{
		if(KrishaOffer[playerid] < MAX_SLOTS)
		{
			GetPlayerName(KrishaOffer[playerid], giveplayer, sizeof(giveplayer));

			format(string, sizeof(string), "你接受了 %s 提供的保护", giveplayer);
			SendClientMessage(playerid, -1, string);
			format(string, sizeof(string), "― %s 接受了你的保护服务", sendername);
			SendClientMessage(KrishaOffer[playerid], -1, string);
			KrishaOffer[playerid] = MAX_SLOTS;
			PlayerInfo[playerid][pUseKrisha] = 1;
			PlayerInfo[playerid][pKrisha] = Krisha[playerid];
			OnPlayerUpdateAc(playerid);
			return true;
		}
		else
		{
			SendErrorMessage(playerid,"没有人向你提供保护");
			return true;
		}
	}
	else if(strcmp(x_job, "marriage",true) == 0)
	{
		if(ProposeOffer[playerid] < MAX_SLOTS)
		{
			if(!PlayerToPoint(10.0, playerid, -2032.8677,1119.3492,26.0531)) return SendErrorMessage(playerid,"你不在 San Fierro 教堂里!");
			if(IsPlayerConnected(ProposeOffer[playerid]))
			{
				if(ProxDetectorS(10.0, playerid, ProposeOffer[playerid]))
				{
					GetPlayerName(ProposeOffer[playerid], giveplayer, sizeof(giveplayer));

					format(string, sizeof(string), "― 你接受了 %s 的求婚", giveplayer);
					SendClientMessage(playerid, -1, string);
					format(string, sizeof(string), "― %s 接受了你的求婚.", sendername);
					SendClientMessage(ProposeOffer[playerid], -1, string);
					strmid (PlayerInfo[playerid][pMarriedTo],giveplayer, 0, strlen(giveplayer), 255);
					strmid (PlayerInfo[ProposeOffer[playerid]][pMarriedTo],sendername, 0, strlen(sendername), 255);
					PlayerInfo[ProposeOffer[playerid]][pCash] -= 30000;
					PlayerInfo[playerid][pMarried] = 1;
					PlayerInfo[ProposeOffer[playerid]][pMarried] = 1;
					ProposedTo[playerid] = MAX_SLOTS;
					ProposeOffer[playerid] = MAX_SLOTS;
				}
				return true;
			}
			else
			{
				SendErrorMessage(playerid,"TA不在你身边!");
				return true;
			}
		}
		else
		{
			SendErrorMessage(playerid,"没有人向你求婚!");
			return true;
		}
	}
	else if(strcmp(x_job, "ticket",true) == 0)
	{
		if(TicketOffer[playerid] < MAX_SLOTS)
		{
			if(IsPlayerConnected(TicketOffer[playerid]))
			{
				if (ProxDetectorS(5.0, playerid, TicketOffer[playerid]))
				{
					GetPlayerName(TicketOffer[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "― 你交了 %i $ 的罚单,来自: %s.", TicketMoney[playerid], giveplayer);
					SendClientMessage(playerid, -1, string);
					format(string, sizeof(string), "― %s 交了 %i $ 的罚单.", sendername, TicketMoney[playerid]);
					SendClientMessage(TicketOffer[playerid], -1, string);
					PlayerInfo[playerid][pCash] -=TicketMoney[playerid];
					PlayerInfo[TicketOffer[playerid]][pCash] +=TicketMoney[playerid];
					TicketOffer[playerid] = MAX_SLOTS;
					TicketMoney[playerid] = 0;
					OnPlayerUpdateAc(playerid);
					return true;
				}
				else
				{
					SendErrorMessage(playerid,"警察不在你身边!");
					return true;
				}
			}
		}
		else
		{
			SendErrorMessage(playerid,"你没有被罚款!");
			return true;
		}
	}
	else if(strcmp(x_job, "drugs",true) == 0)
	{
		if(DrugOffer[playerid] < MAX_SLOTS)
		{
			if(PlayerInfo[playerid][pCash] > DrugPrice[playerid])
			{
				if(PlayerInfo[playerid][pDrugs] < 7)
				{
					if(IsPlayerConnected(DrugOffer[playerid]))
					{
					    if(!ProxDetectorS(8.0, playerid, DrugOffer[playerid])) return SendErrorMessage(playerid,"距离太远了!");
						GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "― 你购买了 %i 克毒品,花费了 %i $,来自:%s.",DrugGram[playerid],DrugPrice[playerid],giveplayer);
						SendClientMessage(playerid, -1, string);
						format(string, sizeof(string), "― %s 购买了你 %i 克毒品,赚取 %i $",sendername,DrugGram[playerid],DrugPrice[playerid]);
						SendClientMessage(DrugOffer[playerid], -1, string);
						PlayerInfo[playerid][pCash] -=DrugPrice[playerid];
						GiveMoney(DrugOffer[playerid], DrugPrice[playerid]);
						PlayerInfo[playerid][pDrugs] += DrugGram[playerid];
						PlayerInfo[DrugOffer[playerid]][pDrugs] -= DrugGram[playerid];
						OnPlayerUpdateAc(playerid);
						return true;
					}
					return true;
				}
				else
				{
					SendErrorMessage(playerid,"你没有足够的毒品!");
					return true;
				}
			}
			else
			{
				SendErrorMessage(playerid,"你没有足够的钱!");
				return true;
			}
		}
		else
		{
			SendErrorMessage(playerid,"你没有被要求购买毒品!");
			return true;
		}
	}
	else if(strcmp(x_job, "medic",true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 33 || PlayerInfo[playerid][pLeader] == 33)
		{
			if(MedicCallTime[playerid] > 0) return SendErrorMessage(playerid,"你已经接受了这个电话!");
			if(MedicCall < MAX_SLOTS)
			{
				if(IsPlayerConnected(MedicCall))
				{

					GetPlayerName(MedicCall, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "― 你接听了来自 %s 的电话.",giveplayer);
					SendClientMessage(playerid, -1, string);
					format(string, sizeof(string), "― 医生 %s 接听了你的电话!",sendername);
					SendClientMessage(MedicCall, -1, string);
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(MedicCall, X, Y, Z);
					SetPlayerCheckpoint(playerid, X, Y, Z, 5);
					MedicCall = MAX_SLOTS;
					OnPlayerUpdateAc(playerid);
					return true;
				}
			}
			else
			{
				SendErrorMessage(playerid,"没有电话!");
				return true;
			}
		}
		else
		{
			SendErrorMessage(playerid,"你不是医生!");
			return true;
		}
	}
	else if(strcmp(x_job, "police",true) == 0)
	{
		if(!IsACop(playerid)) return SendErrorMessage(playerid,"你不是警察!");
		if(PoliceCallTime[playerid] > 0) return  SendErrorMessage(playerid,"你已经接受了这个电话!");
		if(PoliceCall < MAX_SLOTS)
		{
			if(IsPlayerConnected(PoliceCall))
			{

				GetPlayerName(PoliceCall, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "― 你接听了来自 %s 的电话",giveplayer);
				SendClientMessage(playerid, -1, string);
				format(string, sizeof(string), "― 警官 %s 接听了你的电话!",sendername);
				SendClientMessage(PoliceCall, -1, string);
				new Float:X,Float:Y,Float:Z;
				GetPlayerPos(PoliceCall, X, Y, Z);
				SetPlayerCheckpoint(playerid, X, Y, Z, 5);
				PoliceCall = MAX_SLOTS;
				return true;
			}
		}
		else
		{
			SendErrorMessage(playerid,"没有电话!");
			return true;
		}
	}
	else if(strcmp(x_job,"livels",true) == 0)
	{
		if(LiveOfferls[playerid] < MAX_SLOTS)
		{
			if(IsPlayerConnected(LiveOfferls[playerid]))
			{
				if(ProxDetectorS(5.0, playerid, LiveOfferls[playerid]))
				{
					TalkingLivels[LiveOfferls[playerid]] = 2;
					SendServerMessage(LiveOfferls[playerid], "输入: /live [ID] - 完成采访");
					lNews[playerid] = 0;
					lNews[LiveOfferls[playerid]] = 0;
					LiveOfferls[playerid] = MAX_SLOTS;
					TalkingLivels[playerid] = 2;
					SendServerMessage(playerid, "你正在接受采访");
					return true;
				}
				else
				{
					SendErrorMessage(playerid,"你离记者很远");
					return true;
				}
			}
			return true;
		}
		else
		{
			SendErrorMessage(playerid,"没有人邀请你");
			return true;
		}
	}
	else if(strcmp(x_job, "house",true) == 0)
	{
		if(HouseOffer[playerid] < MAX_SLOTS)
		{
			new h = PlayerInfo[HouseOffer[playerid]][pPhousekey];
			if(!ProxDetectorS(8.0, playerid, HouseOffer[playerid])) return SendErrorMessage(playerid,"距离太远了!");
			if(PlayerInfo[playerid][pCash] < HousePrice[playerid])return SendErrorMessage(playerid,"你没有足够的钱!");
			SetPVarInt(HouseOffer[playerid],"h",PlayerInfo[playerid][pPhousekey]);
			PlayerInfo[playerid][pPhousekey] = PlayerInfo[HouseOffer[playerid]][pPhousekey];
			PlayerInfo[playerid][pCash] -= HousePrice[playerid];
			PlayerInfo[HouseOffer[playerid]][pCash] += HousePrice[playerid];
			strmid(HouseInfo[h][hOwner],Name(playerid), 0, strlen(Name(playerid)), 32);
			format(string, sizeof(string), "― 你将房子出售给 %s 获得 %d $",Name(playerid), HousePrice[playerid]);
			SendClientMessage(HouseOffer[playerid], -1, string);
			format(string, sizeof(string), "― 你买了 %s 的房子 花费 %d $",Name(HouseOffer[playerid]), HousePrice[playerid]);
			SendClientMessage(playerid, -1, string);
			SetPlayerInterior(playerid,HouseInfo[h][hInt]);
			Q_SetPlayerPos(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
			PlayerInfo[playerid][pInt] = HouseInfo[h][hInt];
			PlayerInfo[playerid][pLocal] = h;
   	        if(caridhouse[playerid] != -1)
	        {
		        DestroyVehicle(caridhouse[playerid]);
		        caridhouse[playerid] = -1;
	        }
			new randik = random(sizeof(gparkcar));
			PlayerInfo[playerid][dCarx] = gparkcar[randik][0];
			PlayerInfo[playerid][dCary] = gparkcar[randik][1];
			PlayerInfo[playerid][dCarz] = gparkcar[randik][2];
			PlayerInfo[playerid][dCarc] = gparkcar[randik][3];
			caridhouse[playerid] = CreateVehicle(PlayerInfo[playerid][pCar], PlayerInfo[playerid][dCarx], PlayerInfo[playerid][dCary], PlayerInfo[playerid][dCarz], PlayerInfo[playerid][dCarc] , PlayerInfo[playerid][pColor][0] ,PlayerInfo[playerid][pColor][1], 86400);
            Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelcar];
			PlayerInfo[HouseOffer[playerid]][pPhousekey] = GetPVarInt(HouseOffer[playerid],"h");
			if(PlayerInfo[HouseOffer[playerid]][pPhousekey] != 999) strmid(HouseInfo[PlayerInfo[HouseOffer[playerid]][pPhousekey]][hOwner],Name(HouseOffer[playerid]), 0, strlen(Name(HouseOffer[playerid])), 32);
			SetPlayerVirtualWorld(playerid,h+50);
			foreach(Player,i)
            {
                if(PlayerInfo[i][pPhousekey2] == h)
                {
                    new name[64];
				    PlayerInfo[i][pPhousekey2] = 799;
				    GetPlayerName(i,name,sizeof(name));
				    SendServerMessage(i, "你租的房屋被业主出售了.");
				    format(YCMDstr, sizeof(YCMDstr), "UPDATE "TABLE_ACCOUNT" SET pPhousekey2 = '799' WHERE Name = '%s'",name);
			    }
	        }
			BuyHouse(h);
			SaveProperty(h);
			OnPlayerUpdateAc(playerid);
			HouseOffer[playerid] = MAX_SLOTS;
			HousePrice[playerid] = 0;
		}
		else
		{
			SendErrorMessage(playerid,"没有人卖给你房子!");
			return true;
		}
	}
	else if(strcmp(x_job, "zone",true) == 0)
	{
		if(ZoneOffer[playerid] < MAX_SLOTS)
		{
			if(IsPlayerConnected( ZoneOffer[playerid]))
			{
				if(PlayerInfo[playerid][pCash] > ZonePrice[playerid])
				{
					for(new i = 0;i<133;i++)
					{
						if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
						{
							if(GZInfo[i][gFrakVlad] != sellzone[playerid]) return SendErrorMessage(playerid,"没有人出售给你地盘");
							GZInfo[i][gFrakVlad] = PlayerInfo[playerid][pMember];
							GangZoneStopFlashForAll(GZInfo[i][gID]);
							GangZoneHideForAll(GZInfo[i][gID]);
							GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
							SaveGZ(i);
						}
					}
					GetPlayerName(ZoneOffer[playerid], giveplayer, sizeof(giveplayer));

					format(string, sizeof(string), "― 你买了 %s 的地盘花费 %i $.",giveplayer, ZonePrice[playerid]);
					SendClientMessage(playerid, -1, string);
					format(string, sizeof(string), "― %s 买了你的地盘 获得 %i $.",sendername,ZonePrice[playerid]);
					SendClientMessage(ZoneOffer[playerid], -1, string);
					PlayerInfo[playerid][pCash] -= ZonePrice[playerid];
					PlayerInfo[ZoneOffer[playerid]][pCash]+= ZonePrice[playerid];
					ZoneOffer[playerid] = MAX_SLOTS;
					ZonePrice[playerid] = 0;
					sellzone[playerid] = 0;
				}
				else
				{
					SendErrorMessage(playerid,"你没有足够的钱!");
					return true;
				}
			}
			return true;
		}
		else
		{
			SendErrorMessage(playerid,"没人出售地盘!");
			return true;
		}
	}
	else if(strcmp(x_job, "free",true) == 0)
	{
		if(FreeOffer[playerid] < MAX_SLOTS)
		{
			if(IsPlayerConnected( FreeOffer[playerid]))
			{
				if(SposobOffer[playerid] == 0)
				{
					if(PlayerInfo[playerid][pCash] > FreePrice[playerid])
					{
						GetPlayerName(FreeOffer[playerid], giveplayer, sizeof(giveplayer));

						format(string, sizeof(string), "― 你雇用了律师 %s %i $.",giveplayer, FreePrice[playerid]);
						SendClientMessage(playerid, -1, string);
						format(string, sizeof(string), "― 你保释了 %s 花费 %i $.",sendername,FreePrice[playerid]);
						SendClientMessage(FreeOffer[playerid], -1, string);
						PlayerInfo[playerid][pCash] -= FreePrice[playerid];
						PlayerInfo[FreeOffer[playerid]][pCash]+= FreePrice[playerid];
						FreeOffer[playerid] = MAX_SLOTS;
						FreePrice[playerid] = 0;
						SposobOffer[playerid] = 0;
						SetPlayerInterior(playerid, 0);
						Q_SetPlayerPos(playerid,-1561.2036,481.8062,7.1797);
						SetPlayerFacingAngle(playerid, 95.0636);
						PlayerInfo[playerid][pJailTime] = 0;
						PlayerInfo[playerid][pJailed] = 0;
						PlayerInfo[playerid][pWantedLevel] = 0;
						SendServerMessage(playerid, "你自由了");
						SendServerMessage(playerid,"你出狱了");
						WantedLevel[playerid] = 0;
						WantedTime[playerid] = 0;
						WantedPoints[playerid] = 0;
						SetPlayerWantedLevel(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
						OnPlayerUpdateAc(playerid);
						return true;
					}
					else
					{
						SendErrorMessage(playerid,"你没有足够的钱!");
						return true;
					}
				}
				if(SposobOffer[playerid] == 1)
				{
					if(PlayerInfo[playerid][pBank] > FreePrice[playerid])
					{
						GetPlayerName(FreeOffer[playerid], giveplayer, sizeof(giveplayer));

						format(string, sizeof(string), "― 你雇用了律师 %s %i $.",giveplayer, FreePrice[playerid]);
						SendClientMessage(playerid, -1, string);
						format(string, sizeof(string), "― 你保释了 %s 花费 %i $.",sendername,FreePrice[playerid]);
						SendClientMessage(FreeOffer[playerid], -1, string);
						PlayerInfo[playerid][pBank] -= FreePrice[playerid];
						PlayerInfo[FreeOffer[playerid]][pCash]+= FreePrice[playerid];
						FreeOffer[playerid] = MAX_SLOTS;
						FreePrice[playerid] = 0;
						SposobOffer[playerid] = 0;
						SetPlayerInterior(playerid, 0);
						Q_SetPlayerPos(playerid,-1561.2036,481.8062,7.1797);
						SetPlayerFacingAngle(playerid, 95.0636);
						PlayerInfo[playerid][pJailTime] = 0;
						PlayerInfo[playerid][pJailed] = 0;
						PlayerInfo[playerid][pWantedLevel] = 0;
						SendServerMessage(playerid, "你自由了");
						SendServerMessage(playerid,"你出狱了");
						WantedLevel[playerid] = 0;
						WantedTime[playerid] = 0;
						WantedPoints[playerid] = 0;
						SetPlayerWantedLevel(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
						return true;
					}
					else
					{
						SendErrorMessage(playerid,"你没有足够的钱!");
						return true;
					}
				}
			}
			return true;
		}
		else
		{
			SendErrorMessage(playerid,"没人做你律师!");
			return true;
		}
	}
	else
	{
		return true;
	}
	return true;
}
cmd:eject(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(!IsPlayerInAnyVehicle(playerid)) return true;
	new State = GetPlayerState(playerid);
	if(State!=PLAYER_STATE_DRIVER) return SendErrorMessage(playerid,"你不是司机!");
	if(sscanf(params, "u", params[0])) return	SendErrorMessage(playerid,"帮助: {4080FF}/eject {B4B5B7}[id]");
	new test = GetPlayerVehicleID(playerid);
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == playerid) return SendErrorMessage(playerid,"目标不能为自己!");
	if(!IsPlayerInVehicle(params[0],test)) return true;
	format(YCMDstr, sizeof(YCMDstr), "― 你将 %s 踢出车内",Name(params[0]));
	SendClientMessage(playerid, -1, YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "― %s 将你踢出车内",Name(playerid));
	SendClientMessage(params[0], -1, YCMDstr);
	RemovePlayerFromVehicle(params[0]);
	return true;
}

cmd:gm(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SendErrorMessage(playerid,"帮助: {4080FF}/gm {B4B5B7}[id]");
	if(!IsPlayerConnected(params[0])) return true;
	GetPlayerHealth(params[0],GMHP[params[0]][0]);
	GetVehicleHealth(GetPlayerVehicleID(params[0]),VEHHP[params[0]][0]);
	GetPlayerArmour(params[0], GMARMOUR[params[0]][0]);
	SetPlayerHealthAC(params[0], 100.0);
	SetPlayerArmourAC(params[0], 0);
	SetVehicleHealth(GetPlayerVehicleID(params[0]),10000.0);
	SetPVarInt(params[0], "GETHP", gettime()+1);
	new Float:boomx, Float:boomy, Float:boomz;
	GetPlayerPos(params[0],boomx, boomy, boomz);
	CreateExplosion(boomx, boomy , boomz+7, 5, 0.5);
	return true;
}

stock ProductList(playerid)
{
	new str[90], str2[2048];
	for(new i = 1; i <= TOTALPRODUCT; i++)
	{
		format(str, sizeof(str), "No. %i - 订单: %s\n",i, ProductInfo[i][pNamesss]);
		strcat(str2, str);
	}
	if(TOTALPRODUCT == 0) return ShowPlayerDialog(playerid, 0, 0, "{1E90FF}订单", "没有新订单", "关闭", "");
	ShowPlayerDialog(playerid, D_HEAL+23, 2, "{1E90FF}订单", str2, "接受", "退出");
	return 1;
}

stock ProxDetectorNew(playerid,Float:Radi=10.0,color,text[])
{
    new Float:pos[3];
    GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
    foreach(new i : Player)
    {
        if(IsPlayerConnected(i))
        {
            if(IsPlayerInRangeOfPoint(i,Radi,pos[0],pos[1],pos[2]))
            {
                if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid) && GetPlayerInterior(playerid) == GetPlayerInterior(i))SendClientMessage(i,color,text);
            }
        }
    }
}

publics: ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		foreach(new i : Player)
		{
			if(IsPlayerConnected(i))
			{
				if(!BigEar[i])
				{
					if(GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
					{
						GetPlayerPos(i, posx, posy, posz);
						tempposx = (oldposx -posx);
						tempposy = (oldposy -posy);
						tempposz = (oldposz -posz);
						if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
						{
							SendClientMessage(i, col1, string);
						}
						else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
						{
							SendClientMessage(i, col2, string);
						}
						else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
						{
							SendClientMessage(i, col3, string);
						}
						else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
						{
							SendClientMessage(i, col4, string);
						}
						else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
						{
							SendClientMessage(i, col5, string);
						}
					}
				}
				else
				{
					SendClientMessage(i, col1, string);
				}
			}
		}
	}
	return true;
}

publics: CrimInRange(Float:radi, playerid,copid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(copid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(copid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)))
		{
			return true;
		}
	}
	return false;
}

stock ProxDetectorS(Float:radi, playerid, targetid, spec = 0)
{
    new Float:p[3];
    if(!IsPlayerConnected(playerid)) return false;
    if(!IsPlayerConnected(targetid)) return false;
    if(!spec)
    {
	    if(GetPlayerState(playerid) == 9) return false;
	    if(GetPlayerState(targetid) == 9) return false;
    }
    if(!GetPlayerPos(targetid, p[0], p[1], p[2])) return false;
	if(!IsPlayerInRangeOfPoint(playerid, radi, p[0], p[1], p[2]))
	{
		return false;
	}
	return true;
}

publics: ClearMarriage(playerid)
{
	if(!IsPlayerConnected(playerid))
	{
		new string[100];
		format(string, sizeof(string), "UPDATE "TABLE_ACCOUNT" SET pMarried = '0', pMarriedTo = '0' WHERE Name = '%s'",Name(playerid));
		mysql_query(string);
	}
	else
	{
		PlayerInfo[playerid][pMarried] = 0;
		PlayerInfo[playerid][pMarriedTo] = 0;
	}
	return true;
}

publics: OnPlayerText(playerid, text[])
{
	new string[156];
	new ip[26];
	new giveplayer[MAX_PLAYER_NAME];
	GetPlayerIp(playerid,ip,sizeof(ip));
	if(TalkingLivels[playerid] == 1)
	{
		if(PlayerInfo[playerid][pMuted] == 1) { PlayerMuteMessage(playerid); return false; }
		format(string, sizeof(string), "< [电话] 大众媒体 %s: %s", Name(playerid), text);
		LSNews(0x0073B7AA, string);
		printf("- 大众媒体 %s 说:  %s", Name(playerid), text);
		Flood[playerid] = 1;
	}
	if(TalkingLivels[playerid] == 2)
	{

		if(PlayerInfo[playerid][pMuted] == 1) { PlayerMuteMessage(playerid); return false; }
		if(PlayerInfo[playerid][pMember] == 16)
		{
			format(string, sizeof(string), "< 大众媒体 > 主持人 %s: %s", Name(playerid), text);
			printf("- 大众媒体 主持人 %s 说:  %s", Name(playerid), text);
			LSNews(0x0073B7AA, string);
			Flood[playerid] = 1;
			return false;
		}
		else
		{
			format(string, sizeof(string), "< 大众媒体 > 嘉宾 %s: %s", Name(playerid), text);
			LSNews(0x0073B7AA, string);
			printf("- 大众媒体 嘉宾 %s 说:  %s", Name(playerid), text);
			Flood[playerid] = 1;
			return false;
		}
	}
	if(Tel[playerid] == 1)
	{
		if(PlayerInfo[playerid][pMuted] == 1) { SendErrorMessage(playerid, "你被禁言了!"); return false; }
		format(string, sizeof(string), "― [电话] %s: %s", Name(playerid), text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		printf("- %s 说:  %s", Name(playerid), text);
		Flood[playerid] = 1;
		return false;
	}
	if(Mobile[playerid] != MAX_SLOTS)
	{
		if(PlayerInfo[playerid][pMuted] == 1) { SendErrorMessage(playerid, "你被禁言了!"); return false; }
		format(string, sizeof(string), "― [电话] %s: %s", Name(playerid), text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		printf("- %s 说:  %s", Name(playerid), text);
		Flood[playerid] = 1;
	}
	if(IsPlayerConnected(Mobile[playerid]) && Mobile[Mobile[playerid]] == playerid)
	{
		SendClientMessage(Mobile[playerid], COLOR_YELLOW,string);
		return false;
	}
	if(PEfir[playerid] != 255)
	{
		if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
		{
			if(PlayerInfo[playerid][pMuted] == 1) { PlayerMuteMessage(playerid); return false; }
			format(string, sizeof(string), "< 大众媒体 > %s: %s", Name(playerid), text);
			LSNews(0x0073B7AA, string);
			printf("- 大众媒体 %s 说:  %s", Name(playerid), text);
			Flood[playerid] = 1;
		}
		if(Pefir[playerid] == 2)
		{
			if(PlayerInfo[playerid][pMuted] == 1) { PlayerMuteMessage(playerid); return false; }
			format(string, sizeof(string), "< 大众媒体 > %s: %s", Name(playerid), text);
			LSNews(0x0073B7AA, string);
			printf("- 大众媒体 %s 说:  %s", Name(playerid), text);
			Flood[playerid] = 1;
		}
		return false;
	}
	if(strcmp(text, "嗨", true) == 0 || strcmp(text, "hi", true) == 0 || strcmp(text, "hello", true) == 0|| strcmp(text, "你好啊", true) == 0 || strcmp(text, "你好", true) == 0 || strcmp(text, "哈喽", true) == 0)
	{
		new suspect = GetClosestPlayer(playerid);
		GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
		if(GetDistanceBetweenPlayers(playerid,suspect) < 2)
		{
			if(PlayerInfo[playerid][pMember] == PlayerInfo[suspect][pMember])
			{
				format(string, sizeof(string), "%s 于 %s 握手", Name(playerid) ,giveplayer);
				ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GANGS", "hndshkfa",4.0,0,0,0,0,0,1);
				ApplyAnimation(suspect, "GANGS", "hndshkfa",4.0,0,0,0,0,0,1);
				Flood[playerid] = 1;
				return false;
			}
		}
		switch(PlayerInfo[playerid][pMember])
		{
		case 13:
			{
				format(string,sizeof(string), "这是瓦戈斯帮派手势");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				format(string, sizeof(string), "%s 做出一个瓦戈斯帮派手势", Name(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.0,0,0,0,0,0,1);
				Flood[playerid] = 2;
				return false;
			}
		case 15:
			{
				format(string,sizeof(string), "这是格罗夫帮派手势");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				format(string, sizeof(string), "%s 做出一个格罗夫帮派手势", Name(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.0,0,0,0,0,0,1);
				Flood[playerid] = 2;
				return false;
			}
		case 17:
			{
				format(string,sizeof(string), "这是阿兹特克帮派手势");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				format(string, sizeof(string), "%s 做出一个阿兹特克帮派手势", Name(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.0,0,0,0,0,0,1);
				Flood[playerid] = 2;
				return false;
			}
		case 12:
			{
				format(string,sizeof(string), "这是巴拉斯帮派手势");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				format(string, sizeof(string), "%s 做出一个巴拉斯帮派手势", Name(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.0,0,0,0,0,0,1);
				Flood[playerid] = 2;
				return false;
			}
		case 18:
			{
				format(string,sizeof(string), "这是14K帮派手势");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				format(string, sizeof(string), "%s 做出一个14K帮派手势", Name(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.0,0,0,0,0,0,1);
				Flood[playerid] = 2;
				return false;
			}
		}
	}
	if(strcmp(text, "hey", true) == 0 || strcmp(text, "妈的", true) == 0 || strcmp(text, "mother", true) == 0 || strcmp(text, "fuck", true) == 0|| strcmp(text, "fucker", true) == 0 || strcmp(text, "操", true) == 0 || strcmp(text, "他妈", true) == 0)
	{
		SetPlayerChatBubble(playerid, "愤怒",COLOR_PURPLE,30.0,10000);
		ApplyAnimation(playerid, "PED", "fucku",4.0,0,0,0,0,0,1);
		return false;
	}
	if(strcmp(text, "唉", true) == 0 || strcmp(text, "捂脸", true) == 0 || strcmp(text, "傻逼", true) == 0 || strcmp(text, "白痴", true) == 0 || strcmp(text, "傻子", true) == 0 || strcmp(text, "笨蛋", true) == 0 )
	{
		SetPlayerChatBubble(playerid, "捂脸", COLOR_PURPLE, 30.0, 10000);
		ApplyAnimation(playerid, "MISC", "plyr_shkhead",4.0,0,0,0,0,0,1);
		return false;
	}
	else if(strcmp(text, "xD", true) == 0 || strcmp(text, "xd", true) == 0 || strcmp(text, "开心", true) == 0 || strcmp(text, "很开心", true) == 0 )
	{
		format(string, sizeof(string), "%s 笑得很开心", Name(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerChatBubble(playerid, "笑得很开心", COLOR_PURPLE, 30.0, 10000);
		Flood[playerid] = 2;
		return false;
	}
	else if(strcmp(text, "(", true) == 0 || strcmp(text, "((", true) == 0 || strcmp(text, ":(", true) == 0)
	{
		format(string, sizeof(string), "%s 很不高兴", Name(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerChatBubble(playerid, "很不高兴",COLOR_PURPLE,30.0,10000);
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			ApplyAnimation(playerid, "FINALE", "FIN_Land_Die",4.1,0,1,1,1,1,1);
			clearanim[playerid] = 30;
			Flood[playerid] = 2;
		}
		return false;
	}
	else if(strcmp(text, ")", true) == 0 || strcmp(text, "))", true) == 0)
	{
		format(string, sizeof(string), "%s 笑了笑", Name(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerChatBubble(playerid, "笑容",COLOR_PURPLE,30.0,10000);
		Flood[playerid] = 2;
		return false;
	}
	else if(strcmp(text, ":D", true) == 0)
	{
		format(string, sizeof(string), "%s 大笑起来", Name(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerChatBubble(playerid, "笑",COLOR_PURPLE,30.0,10000);
		Flood[playerid] = 2;
		return false;
	}
	if(realchat)
	{
	    if(!strcmp(text," ",false))
	    {
	        SendErrorMessage(playerid, "您无法发送空白消息!");
	        return false;
	    }
	    if(!strcmp(text,"  ",false))
	    {
	        SendErrorMessage(playerid, "您无法发送空白消息!");
	        return false;
	    }
	    if(!strcmp(text,"   ",false))
	    {
	        SendErrorMessage(playerid, "您无法发送空白消息!");
	        return false;
	    }
	    if(!strcmp(text," ",false))
	    {
	        SendErrorMessage(playerid, "您无法发送空白消息!");
	        return false;
	    }
		if(PlayerInfo[playerid][pLogin] == 0) return false;
		if(Flood[playerid] > 0)
		{
			SendErrorMessage(playerid,"Flood!");
			return false;
		}
		if(PlayerInfo[playerid][pMuted] == 1)
		{
			PlayerMuteMessage(playerid);
			return false;
		}
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			ApplyAnimation(playerid, "PED", "IDLE_CHAT",4.1,0,1,1,1,1,1);
			clearanim[playerid] = 7;
		}
		//%s[%d] говорит: Name(playerid), playerid, text
		format(string, sizeof(string), "- %s[%d] 说:  %s", Name(playerid), playerid, text);
		switch(PlayerInfo[playerid][pMember])
		{
			case 0:format(string, sizeof(string), "{FFFFFF}― %s[%d] {FFFFFF}说: %s", Name(playerid), playerid, text);
			case 1:format(string, sizeof(string), "{0000FF}― %s[%d] {FFFFFF}说: %s", Name(playerid), playerid, text);
			case 2:format(string, sizeof(string), "{1C1C1C}― %s[%d] {FFFFFF}说: %s", Name(playerid), playerid, text);
			case 3:format(string, sizeof(string), "{40E0D0}― %s[%d] {FFFFFF}说: %s", Name(playerid), playerid, text);
			case 4:format(string, sizeof(string), "{FF6A6A}― %s[%d] {FFFFFF}说: %s", Name(playerid), playerid, text);
			case 5:format(string, sizeof(string), "{B03060}― %s[%d] {FFFFFF}说: %s", Name(playerid), playerid, text);
			case 6:format(string, sizeof(string), "{8B0000}― %s[%d] {FFFFFF}说: %s", Name(playerid), playerid, text);
			case 7:format(string, sizeof(string), "{C0FF3E}― %s[%d] {FFFFFF}说: %s", Name(playerid), playerid, text);
			case 8:format(string, sizeof(string), "{8B4513}― %s[%d] {FFFFFF}说: %s", Name(playerid), playerid, text);
			case 9:format(string, sizeof(string), "{0000FF}― %s[%d] {FFFFFF}说: %s", Name(playerid), playerid, text);
			case 11:format(string, sizeof(string), "{1E90FF}― %s[%d] {FFFFFF}说: %s", Name(playerid), playerid, text);
			case 12:format(string, sizeof(string), "{CD00CD}― %s[%d] {FFFFFF}说: %s", Name(playerid), playerid, text);
			case 13:format(string, sizeof(string), "{FFFF00}― %s[%d] {FFFFFF}说: %s", Name(playerid), playerid, text);
			case 14:format(string, sizeof(string), "{008B8B}― %s[%d] {FFFFFF}说: %s", Name(playerid), playerid, text);
			case 15:format(string, sizeof(string), "{00CD00}― %s[%d] {FFFFFF}说: %s", Name(playerid), playerid, text);
			case 16:format(string, sizeof(string), "{FF7F00}― %s[%d] {FFFFFF}说: %s", Name(playerid), playerid, text);
			case 17:format(string, sizeof(string), "{00F5FF}― %s[%d] {FFFFFF}说: %s", Name(playerid), playerid, text);
			case 18:format(string, sizeof(string), "{6959CD}― %s[%d] {FFFFFF}说: %s", Name(playerid), playerid, text);
			case 19:format(string, sizeof(string), "{8B4513}― %s[%d] {FFFFFF}说: %s", Name(playerid), playerid, text);
			case 20:format(string, sizeof(string), "{0000FF}― %s[%d] {FFFFFF}说: %s", Name(playerid), playerid, text);
		}
		SetPlayerChatBubble(playerid, text, -1, 20.0, 10000);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		printf("- %s[%d] 说:  %s", Name(playerid), playerid, text);
		Flood[playerid] = 1;
		return false;
	}
	return true;
}

publics: ClearAnim(playerid)
{
	ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,0,1);
	return true;
}

publics: OnPlayerUpdate(playerid)
{
	if(SurfPlayerUse[playerid] != -1)
	{
 		new keysas,ud,lr;
		GetPlayerKeys(playerid,keysas,ud,lr);
		new Float:floatVal[4];
		GetPlayerPos(playerid, floatVal[0], floatVal[1], floatVal[2]);
		floatVal[3] = surfboardData[SurfPlayerUse[playerid]][sppeed];
		GetXYInFrontOfPlayerOnSB(playerid, floatVal[0], floatVal[1], 50.0);
		surfboardGoTo[SurfPlayerUse[playerid]][0] = floatVal[0];
		surfboardGoTo[SurfPlayerUse[playerid]][1] = floatVal[1];
		surfboardGoTo[SurfPlayerUse[playerid]][2] = surfboardData[SurfPlayerUse[playerid]][position][2];
		if(ud == KEY_UP)
		{
			if(floatVal[3] >= 0.0 && floatVal[3] < MAX_SURFBOARD_SPEED) surfboardData[SurfPlayerUse[playerid]][sppeed] += 0.05;
			if(floatVal[3] >= MAX_SURFBOARD_SPEED) surfboardData[SurfPlayerUse[playerid]][sppeed] = MAX_SURFBOARD_SPEED;
		}
		else if(ud == KEY_DOWN)
		{
			if(floatVal[3] >= 0.0 && floatVal[3] < MAX_SURFBOARD_SPEED) surfboardData[SurfPlayerUse[playerid]][sppeed] -= 0.05;
			if(floatVal[3] >= MAX_SURFBOARD_SPEED) surfboardData[SurfPlayerUse[playerid]][sppeed] = MAX_SURFBOARD_SPEED;
		}
		if(lr == KEY_LEFT)
		{
			surfboardData[SurfPlayerUse[playerid]][sppeed] -= 0.01;
			surfboardData[SurfPlayerUse[playerid]][position][5] += 1.5;
			SetObjectRot(surfboardData[SurfPlayerUse[playerid]][objectID], surfboardData[SurfPlayerUse[playerid]][position][3], surfboardData[SurfPlayerUse[playerid]][position][4], surfboardData[SurfPlayerUse[playerid]][position][5]);
			SetPlayerFacingAngle(playerid, surfboardData[SurfPlayerUse[playerid]][position][5] + 270.0);
			surfboardGoTo[SurfPlayerUse[playerid]][0] = floatVal[0];
			surfboardGoTo[SurfPlayerUse[playerid]][1] = floatVal[1];
			surfboardGoTo[SurfPlayerUse[playerid]][2] = surfboardData[SurfPlayerUse[playerid]][position][2];
		}
		else if(lr == KEY_RIGHT)
		{
			surfboardData[SurfPlayerUse[playerid]][sppeed] -= 0.01;
			surfboardData[SurfPlayerUse[playerid]][position][5] -= 1.5;
			SetObjectRot(surfboardData[SurfPlayerUse[playerid]][objectID], surfboardData[SurfPlayerUse[playerid]][position][3], surfboardData[SurfPlayerUse[playerid]][position][4], surfboardData[SurfPlayerUse[playerid]][position][5]);
			SetPlayerFacingAngle(playerid, surfboardData[SurfPlayerUse[playerid]][position][5] + 270.0);
			surfboardGoTo[SurfPlayerUse[playerid]][0] = floatVal[0];
			surfboardGoTo[SurfPlayerUse[playerid]][1] = floatVal[1];
			surfboardGoTo[SurfPlayerUse[playerid]][2] = surfboardData[SurfPlayerUse[playerid]][position][2];
		}
		if(surfboardData[SurfPlayerUse[playerid]][sppeed] > 0.005)
		{
			surfboardData[SurfPlayerUse[playerid]][sppeed] -= 0.005;
			MoveObject(surfboardData[SurfPlayerUse[playerid]][objectID], surfboardGoTo[SurfPlayerUse[playerid]][0], surfboardGoTo[SurfPlayerUse[playerid]][1], surfboardGoTo[SurfPlayerUse[playerid]][2], surfboardData[SurfPlayerUse[playerid]][sppeed]);
		}
		else StopSurfboard(SurfPlayerUse[playerid]);
	}
	if(SurfPlayerUse[playerid] != -1)
	{
		if(!IsPlayerAtSurfboard(playerid, SurfPlayerUse[playerid]))
		{
			DestroySurfboard(SurfPlayerUse[playerid]);
			SurfPlayerUse[playerid] = -1;
			ClearAnimations(playerid,1);
		}
	}
	if(AFK[playerid] > -2)
	{
		AFK[playerid] = 0;
	}
	if(IsPlayerInAnyVehicle(playerid))
	{
		if(CarID[playerid] != INVALID_VEHICLE_ID)
	   	{
			GetVehicleVelocity(CarID[playerid],S_x[playerid],S_y[playerid],S_z[playerid]);
			SpeedVeh[playerid] = floatround(floatsqroot(S_x[playerid]*S_x[playerid]+S_y[playerid]*S_y[playerid]+S_z[playerid]*S_z[playerid])*295);
			if(SpeedVeh[playerid] == 14750.00)
			{
                if(PlayerInfo[playerid][pAdministration228] == 0)
                {
  					SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( AirBreek #1 )");
					GKick(playerid);
   					return 1;
				}
			}
   		}
		if(GetPlayerVehicleID(playerid) != GodCar[playerid])
		{
		    if(PlayerInfo[playerid][pAdministration228] == 0)
		    {
				SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( AirBreek #2 )");
				GKick(playerid);
				return 1;
			}
		}
		if(GetVehicleDistanceFromPoint(CarID[playerid],AC_Air[playerid][0],AC_Air[playerid][1],AC_Air[playerid][2]) > 15 && SpeedVeh[playerid] == 0)
		{
  			if(GetTickCount() - StatusAirTP[playerid] > 3000)
	    	{
      			if(!TunningGarages(playerid))
       			{
          			if(GetPlayerState(playerid) != PLAYER_STATE_SPECTATING)
           			{
		            	if(Spawn[playerid] == true)
			            {
			                if(PlayerInfo[playerid][pAdministration228] == 0)
			                {
	            				GetVehiclePos(CarID[playerid],AC_Air[playerid][0],AC_Air[playerid][1],AC_Air[playerid][2]);
		    					SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( AirBreek #3 )");
								GKick(playerid);
   								return 1;
							}
						}
    				}
   				}
				else
				{
					StatusAirTP[playerid] = GetTickCount();
				}
			}
		}
		GetVehiclePos(CarID[playerid],AC_Air[playerid][0],AC_Air[playerid][1],AC_Air[playerid][2]);
	}
	else
	{
		if(GetPlayerDistanceFromPoint(playerid,AC_Air[playerid][0],AC_Air[playerid][1],AC_Air[playerid][2]) > 20)
		{
			if(GetPlayerSurfingVehicleID(playerid) == INVALID_VEHICLE_ID)
			{
				if(GetTickCount() - StatusAirTP[playerid] > 3000)
				{
   					if(GetPlayerAnimationIndex(playerid) != 1130)
			    	{
       					if(GetPlayerState(playerid) != PLAYER_STATE_SPECTATING)
			        	{
							if(Spawn[playerid] == true)
							{
							    if(PlayerInfo[playerid][pAdministration228] == 0)
							    {
    								GetPlayerPos(playerid,AC_Air[playerid][0],AC_Air[playerid][1],AC_Air[playerid][2]);
		    						SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( AirBreek #4 )");
									GKick(playerid);
  									return 1;
	 							}
		    				}
	    				}
					}
				}
			}
 			else
	 		{
   				StatusAirTP[playerid] = GetTickCount();
			}
		}
		GetPlayerPos(playerid,AC_Air[playerid][0],AC_Air[playerid][1],AC_Air[playerid][2]);
	}
	GetPlayerVelocity(playerid,S_x[playerid],S_y[playerid],S_z[playerid]);
	SpeedVeh[playerid] = floatround(floatsqroot(S_x[playerid]*S_x[playerid]+S_y[playerid]*S_y[playerid]+S_z[playerid]*S_z[playerid])*295);
	if(SpeedVeh[playerid] > 50)
	{
		GetAnim[playerid] = GetPlayerAnimationIndex(playerid);
		if(GetAnim[playerid] == 1538 || GetAnim[playerid] == 1539)
		{
 			if(GetPlayerSurfingVehicleID(playerid) == INVALID_VEHICLE_ID)
   			{
   			    if(PlayerInfo[playerid][pAdministration228] == 0)
   			    {
      				SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( AirBreek #5 )");
					GKick(playerid);
					return 1;
				}
			}
		}
	}
	GetPlayerArmour(playerid,Armor[playerid]);
    if(Armor[playerid] != Armor2[playerid])
    {
        new stringF[10];
        new cba = floatround(Armor2[playerid])-floatround(Armor[playerid]);
        if(cba > 0)
        {
            KillTimer(KillTimeForShowDamage[playerid]);
            KillTimeForShowDamage[playerid] = SetTimerEx("HideDamageForPlayer", 2000, 0, "i", playerid);
            CountDamage[playerid] += cba;
            format(stringF,sizeof(stringF),"-%d",CountDamage[playerid]);
            Update3DTextLabelText(Damage[playerid],COLOR_BLUE,stringF);
            new bride[20];
            format(bride,sizeof(bride),"Armour: %.0f",Armor[playerid]);
            TextDrawSetString(heal44[playerid],bride);
            TextDrawShowForPlayer(playerid,heal44[playerid]);
            KillTimer(KillTimeForShowDamage2[playerid]);
            KillTimeForShowDamage2[playerid] = SetTimerEx("HideTDDamage", 5000, 0, "i", playerid);
        }
        Armor2[playerid] = Armor[playerid];
    }
    GetPlayerHealth(playerid,healthy[playerid]);
    if(healthy[playerid] != healthy2[playerid])
    {
        new stringF[10];
        new abc = floatround(healthy2[playerid])-floatround(healthy[playerid]);
        if(abc > 0)  {
            KillTimer(KillTimeForShowDamage[playerid]);
            KillTimeForShowDamage[playerid] = SetTimerEx("HideDamageForPlayer", 2000, 0, "i", playerid);
            CountDamage[playerid] += abc;
            format(stringF,sizeof(stringF),"-%d",CountDamage[playerid]);
            Update3DTextLabelText(Damage[playerid],COLOR_BLUE,stringF);
            new bride[20];
            format(bride,sizeof(bride),"Health:%.0f",healthy[playerid]);
            TextDrawSetString(heal44[playerid],bride);
            TextDrawShowForPlayer(playerid,heal44[playerid]);
            KillTimer(KillTimeForShowDamage2[playerid]);
            KillTimeForShowDamage2[playerid] = SetTimerEx("HideTDDamage", 5000, 0, "i", playerid);
        }
        healthy2[playerid] = healthy[playerid];
    }
	if(PlayerAFKTime[playerid][0] > 10)
	{
		SetPlayerChatBubble(playerid, " ", -1, 30.0, 1);
	}
	PlayerAFK[playerid] ++;
	PlayerAFKTime[playerid][0] = 0;
    new s = GetPVarInt(playerid,"GameStol");
	if(IsPlayerNearStol(playerid) != -1 && s == -1) GameTextForPlayer(playerid,"~g~PRESS ENTER",1300,4);
   //UpHealth(playerid);
	new gun[] = {4,9,26,27,37,38,35,36,39,44,45};
	for(new i= 0;i<sizeof(gun);i++)
	{
		if(gun[i] == GetPlayerWeapon(playerid))
		{
			format(YCMDstr,sizeof(YCMDstr),"{ffa500}― [x 009]: {808080}%s[%d] 被踢出服务器,疑似刷武器 [Ping:%d]",Name(playerid),playerid,GetPlayerPing(playerid));
			ABroadCast(-1,YCMDstr,1);
			SendErrorMessage(playerid, "使用作弊程序. {ff0000}(#gun)");
			DelGun(playerid); GKick(playerid);
		}
	}
	if(GetPlayerWeapon(playerid) != 0 && !Weapons[playerid][GetPlayerWeapon(playerid)] && GetPlayerWeapon(playerid) != 40)
	if(PlayerInfo[playerid][pAdministration228] == 0)
	{
		SendClientMessage(playerid,-1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Cheat Gun )");
		DelGun(playerid);
		GKick(playerid);
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][pAdministration228] <= 0)
	{
		ToCheat(1,playerid);
	}
    new index = GetPlayerAnimationIndex(playerid);
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		new newkeys,ud,lr;
		GetPlayerKeys(playerid,newkeys,ud,lr);
		new animlib[30], animname[30];
		GetAnimationName(index, animlib, sizeof(animlib), animname, sizeof(animname));
		if(!IsKicked(playerid) && strcmp(animlib, "PED", true) == 0 && strcmp(animname, "RUN_PLAYER", true) == 0 && GetPlayerSkin(playerid) != 0)
		{
		    format(YCMDstr,sizeof(YCMDstr),"― {808080}玩家 %s 被踢出服务器,疑似CJ加速跑",PlayerInfo[playerid][pName]);
		    ABroadCast(-1,YCMDstr,1);
		    SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( CJ Beg )");
			GKick(playerid);
		}
	}
    if(PlayerToPoint(3.0,playerid,1846.0536,-1744.4991,5206.0859))
    {
	   	PlayerTextDrawSetString(playerid,HelpText[1][playerid],"- PRESS: ~r~ALT~w~");
 	  	PlayerTextDrawSetString(playerid,HelpText[2][playerid],"- Prison yard");
	   	for(new i; i < sizeof(HelpText); i++) PlayerTextDrawShow(playerid,HelpText[i][playerid]);
        HelpMessage[10][playerid] = 0;
 	    return true;
    }
    if(PlayerToPoint(3.0,playerid,1862.9537,-1699.5010,5202.5859))
    {
	   	PlayerTextDrawSetString(playerid,HelpText[1][playerid],"- PRESS: ~r~ALT~w~");
 	  	PlayerTextDrawSetString(playerid,HelpText[2][playerid],"- Exit the prison");
	   	for(new i; i < sizeof(HelpText); i++) PlayerTextDrawShow(playerid,HelpText[i][playerid]);
        HelpMessage[9][playerid] = 0;
 	    return true;
    }
    if(IsAtyrma(playerid))
    {
	   	PlayerTextDrawSetString(playerid,HelpText[1][playerid],"- OPEN: ~r~/opendoor~w~");
 	  	PlayerTextDrawSetString(playerid,HelpText[2][playerid],"- CLOSE: ~r~/closedoor~w~");
	   	for(new i; i < sizeof(HelpText); i++) PlayerTextDrawShow(playerid,HelpText[i][playerid]);
        HelpMessage[8][playerid] = 0;
 	    return true;
    }
    if(PlayerToPoint(7.0,playerid,296.5536,-39.2788,1002.5291))
    {
	   	PlayerTextDrawSetString(playerid,HelpText[1][playerid],"- PRESS: ~r~ALT~w~");
 	  	PlayerTextDrawSetString(playerid,HelpText[2][playerid],"- To buy weapons");
	   	for(new i; i < sizeof(HelpText); i++) PlayerTextDrawShow(playerid,HelpText[i][playerid]);
        HelpMessage[7][playerid] = 0;
 	    return true;
    }
    if(PlayerToPoint(5.0,playerid,1721.9606,1076.6440,10.9795))
    {
	   	PlayerTextDrawSetString(playerid,HelpText[1][playerid],"- Signal: ~r~H~w~");
 	  	PlayerTextDrawSetString(playerid,HelpText[2][playerid],"- Leave the garage");
	   	for(new i; i < sizeof(HelpText); i++) PlayerTextDrawShow(playerid,HelpText[i][playerid]);
        HelpMessage[6][playerid] = 0;
 	    return true;
    }
    if(PlayerToPoint(15.0,playerid,1154.8494,-1356.6989,1001.9819))
    {
	   	PlayerTextDrawSetString(playerid,HelpText[1][playerid],"- Command: ~r~/hospital~w~");
 	  	PlayerTextDrawSetString(playerid,HelpText[2][playerid],"- To replenish health");
	   	for(new i; i < sizeof(HelpText); i++) PlayerTextDrawShow(playerid,HelpText[i][playerid]);
        HelpMessage[5][playerid] = 0;
 	    return true;
    }
    if(IsATune(playerid))
    {
    	PlayerTextDrawSetString(playerid,HelpText[1][playerid],"- Command: ~r~/tune~w~");
	   	PlayerTextDrawSetString(playerid,HelpText[2][playerid],"- Open menu tuning");
    	for(new i; i < sizeof(HelpText); i++) PlayerTextDrawShow(playerid,HelpText[i][playerid]);
    	HelpMessage[4][playerid] = 0;
    	return true;
    }
    if(IsAbtd(playerid))
    {
    	PlayerTextDrawSetString(playerid,HelpText[1][playerid],"- Command: ~r~/get guns~w~");
	   	PlayerTextDrawSetString(playerid,HelpText[2][playerid],"- To open the menu warehouse");
    	for(new i; i < sizeof(HelpText); i++) PlayerTextDrawShow(playerid,HelpText[i][playerid]);
    	HelpMessage[3][playerid] = 0;
    	return true;
    }
    if(IsAmtd(playerid))
    {
    	PlayerTextDrawSetString(playerid,HelpText[1][playerid],"- Command: ~r~/getgun~w~");
	   	PlayerTextDrawSetString(playerid,HelpText[2][playerid],"- To open the menu warehouse");
    	for(new i; i < sizeof(HelpText); i++) PlayerTextDrawShow(playerid,HelpText[i][playerid]);
    	HelpMessage[2][playerid] = 0;
    	return true;
    }
    if(IsABank(playerid))
    {
    	PlayerTextDrawSetString(playerid,HelpText[1][playerid],"- PRESS: ~r~Enter~w~ to use the Bank");
	   	PlayerTextDrawSetString(playerid,HelpText[2][playerid],"- Federal banking services");
    	for(new i; i < sizeof(HelpText); i++) PlayerTextDrawShow(playerid,HelpText[i][playerid]);
    	HelpMessage[1][playerid] = 0;
    	return true;
    }
    if(IsABankomat(playerid))
    {
   	    PlayerTextDrawSetString(playerid,HelpText[1][playerid],"- PRESS: ~r~Enter~w~ to use the ATM");
 	   	PlayerTextDrawSetString(playerid,HelpText[2][playerid],"- Federal banking services");
    	for(new i; i < sizeof(HelpText); i++) PlayerTextDrawShow(playerid,HelpText[i][playerid]);
	   	HelpMessage[0][playerid] = 0;
	   	return true;
    }
    if(!PlayerToPoint(2.0,playerid,1223.3671,-1173.4633,-46.8842) && !PlayerToPoint(2.0,playerid,1721.9606,1076.6440,10.9795) && !PlayerToPoint(2.0,playerid,296.5536,-39.2788,1002.5291) && !IsABankomat(playerid) && !IsABank(playerid) && !IsAmtd(playerid) && !IsAbtd(playerid) && !IsATune(playerid) && !IsAtyrma(playerid) && !PlayerToPoint(3.0,playerid,1862.9537,-1699.5010,5202.5859) && !PlayerToPoint(3.0,playerid,1846.0536,-1744.4991,5206.0859))
	{
    	HelpMessage[0][playerid] = 1;
    	HelpMessage[1][playerid] = 1;
    	HelpMessage[2][playerid] = 1;
    	HelpMessage[3][playerid] = 1;
    	HelpMessage[4][playerid] = 1;
    	HelpMessage[5][playerid] = 1;
    	HelpMessage[6][playerid] = 1;
    	HelpMessage[7][playerid] = 1;
    	HelpMessage[8][playerid] = 1;
    	HelpMessage[9][playerid] = 1;
    	HelpMessage[10][playerid] = 1;
 	    return true;
    }
	return true;
}

publics: SetCamBack(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:plocx,Float:plocy,Float:plocz;
		GetPlayerPos(playerid, plocx, plocy, plocz);
		Q_SetPlayerPos(playerid, -1863.15, -21.6598, 1060.15);
		SetPlayerInterior(playerid,14);
	}
}

publics: OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
    if (newkeys==1024 && PlayerToPoint(8.0,playerid,2019.9811,-2018.1111,13.5708))
    {
    	callcmd::quest(playerid,"");
    }
	if(newkeys == KEY_CROUCH && PlayerToPoint(8.0,playerid,1643.388671875,-40.182285308838,36.242427825928))
	{
		if(PlayerInfo[playerid][pCash] <= 100) return SendErrorMessage(playerid, "你没有 100$!");
		{
			SendClientMessage(playerid, COLOR_YELLOW,"[路线 LV - LS] 欢迎! Happy Way!");
			PlayerInfo[playerid][pCash] -= 100;
		}
		MoveObject(sflvslak1,1643.388671875,-40.182285308838,36.242427825928+0.004,0.004,0,0,20.0);
		SetTimer("sflvslakclose1", 5000, 0);
		return true;
	}
	if(newkeys == KEY_CROUCH && PlayerToPoint(8.0,playerid,1654.078125,-35.9287109375,36.295417785645))
	{
		if(PlayerInfo[playerid][pCash] <= 100) return SendErrorMessage(playerid, "你没有 100$!");
		{
			SendClientMessage(playerid, COLOR_YELLOW,"[路线 LS - LV] 欢迎! Happy Way!");
			PlayerInfo[playerid][pCash] -= 100;
		}
		MoveObject(sflvslak2,1654.078125,-35.9287109375,36.295417785645+0.004,0.004,0.0,0.0,20.994873046875);
		SetTimer("sflvslakclose2", 5000, 0);
		return true;
	}
	if(newkeys == KEY_CROUCH && PlayerToPoint(8.0,playerid,631.3212,-1193.0270,18.1094))
	{
		if(PlayerInfo[playerid][pCash] <= 100) return SendErrorMessage(playerid, "你没有 100$!");
		{
			SendClientMessage(playerid, COLOR_YELLOW,"[路线 SF - LS] 欢迎! Happy Way!");
			PlayerInfo[playerid][pCash] -=100;
		}
		MoveObject(Slak3,627.99127197,-1194.02526855,17.91875076+0.004,0.004,0.00000000,0.00000000,24.00000000);
		SetTimer("SlakClose3", 5000, 0);
	}
	if(newkeys == KEY_CROUCH && PlayerToPoint(8.0,playerid,69.1031,-1526.5974,4.8786))
	{
		if(PlayerInfo[playerid][pCash] <= 100) return SendErrorMessage(playerid, "你没有 100$!");
		{
			SendClientMessage(playerid, COLOR_YELLOW,"[路线 LS - SF] 欢迎! Happy Way!");
			PlayerInfo[playerid][pCash] -=100;
		}
		MoveObject(Slak1,67.97479248,-1530.02893066,4.71585941+0.004,0.004,0.00000000,0.00000000,88.00000000);
		SetTimer("SlakClose1", 5000, 0);
	}
	if(newkeys == KEY_CROUCH && PlayerToPoint(8.0,playerid,68.9619,-1541.6405,5.0647))
	{
		if(PlayerInfo[playerid][pCash] <= 100) return SendErrorMessage(playerid, "你没有 100$!");
		{
			SendClientMessage(playerid, COLOR_YELLOW,"[路线 SF - LS] 欢迎! Happy Way!");
			PlayerInfo[playerid][pCash] -=100;
		}
		MoveObject(Slak2,67.69296265,-1545.35229492,4.79085970+0.004,0.004,0.00000000,0.00000000,86.49499512);
		SetTimer("SlakClose2", 5000, 0);
	}
	if(newkeys == KEY_CROUCH && PlayerToPoint(8.0,playerid,610.8590,-1201.3280,18.1094))
	{
		if(PlayerInfo[playerid][pCash] <= 100) return SendErrorMessage(playerid, "你没有 100$!");
		{
			SendClientMessage(playerid, COLOR_YELLOW,"[路线 LV - SF] 欢迎! Happy Way!");
			PlayerInfo[playerid][pCash] -=100;
		}
		MoveObject(Slak4,607.03051758,-1202.02661133,17.89089012+0.004,0.004,0.00000000,0.00000000,16.75000000);
		SetTimer("SlakClose4", 5000, 0);
	}
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)
	{
		if(!IsAPlane(GetPlayerVehicleID(playerid)) && !IsABoat(GetPlayerVehicleID(playerid)))
		{
			new vid = GetPlayerVehicleID(playerid);
			if(newkeys & ( KEY_LOOK_LEFT ) && newkeys & ( KEY_LOOK_RIGHT ))
			{
				if(Indicators_xqz[vid][2] /*|| Indicators_xqz[vid][5]*/)
				{
					DestroyObject(Indicators_xqz[vid][5]);
					DestroyObject(Indicators_xqz[vid][2]);
					DestroyObject(Indicators_xqz[vid][3]);
					Indicators_xqz[vid][2]=0;
					SetPlayerChatBubble(playerid, "关闭双闪灯", COLOR_PURPLE, 20.0, 10000);
					TextDrawHideForPlayer(playerid,Textdraw7[playerid]);

				}
				else if(Indicators_xqz[vid][0] /*|| Indicators_xqz[vid][4]*/)
				{
					DestroyObject(Indicators_xqz[vid][4]);
					DestroyObject(Indicators_xqz[vid][0]);
					DestroyObject(Indicators_xqz[vid][1]);
					Indicators_xqz[vid][0]=0;
					SetPlayerChatBubble(playerid, "关闭双闪灯", COLOR_PURPLE, 20.0, 10000);
					TextDrawHideForPlayer(playerid,Textdraw8[playerid]);
				}
				else
				{
					SetVehicleIndicator(vid,1,1);
					TextDrawShowForPlayer(playerid,Textdraw7[playerid]);
					TextDrawShowForPlayer(playerid,Textdraw8[playerid]);
					SetPlayerChatBubble(playerid, "双闪灯", COLOR_PURPLE, 20.0, 10000);
					return 1;
				}
			}
			if(newkeys & KEY_LOOK_RIGHT)
			{
				if(Indicators_xqz[vid][0] /*|| Indicators_xqz[vid][4]*/)
				{
					DestroyObject(Indicators_xqz[vid][4]);
					DestroyObject(Indicators_xqz[vid][0]);
					DestroyObject(Indicators_xqz[vid][1]);
					Indicators_xqz[vid][0]=0;
					SetPlayerChatBubble(playerid, "关掉右转弯灯", COLOR_PURPLE, 20.0, 10000);
					TextDrawHideForPlayer(playerid,Textdraw8[playerid]);
				}
				else if(Indicators_xqz[vid][2]/*|| Indicators_xqz[vid][5]*/)
				{
					TextDrawHideForPlayer(playerid,Textdraw7[playerid]);
					DestroyObject(Indicators_xqz[vid][5]);
					DestroyObject(Indicators_xqz[vid][2]);
					DestroyObject(Indicators_xqz[vid][3]);
					SetPlayerChatBubble(playerid, "关掉右转弯灯", COLOR_PURPLE, 20.0, 10000);
					Indicators_xqz[vid][2]=0;
				}
				else
				{
					TextDrawShowForPlayer(playerid,Textdraw8[playerid]);
					SetVehicleIndicator(vid,0,1);
					SetPlayerChatBubble(playerid, "右转弯灯", COLOR_PURPLE, 20.0, 10000);
				}
			}
			if(newkeys & KEY_LOOK_LEFT)
			{
				if(Indicators_xqz[vid][2]/*|| Indicators_xqz[vid][5]*/)
				{
					DestroyObject(Indicators_xqz[vid][5]);
					DestroyObject(Indicators_xqz[vid][2]);
					DestroyObject(Indicators_xqz[vid][3]);
					Indicators_xqz[vid][2]=0;
					SetPlayerChatBubble(playerid, "关掉左转弯灯", COLOR_PURPLE, 20.0, 10000);
					TextDrawHideForPlayer(playerid,Textdraw7[playerid]);
				}
				else if(Indicators_xqz[vid][0] /*|| Indicators_xqz[vid][4]*/)
				{
					TextDrawHideForPlayer(playerid,Textdraw8[playerid]);
					DestroyObject(Indicators_xqz[vid][4]);
					DestroyObject(Indicators_xqz[vid][0]);
					DestroyObject(Indicators_xqz[vid][1]);
					SetPlayerChatBubble(playerid, "关掉左转弯灯", COLOR_PURPLE, 20.0, 10000);
					Indicators_xqz[vid][0]=0;
				}
				else
				{
					TextDrawShowForPlayer(playerid,Textdraw7[playerid]);
					SetVehicleIndicator(vid,1,0);
					SetPlayerChatBubble(playerid, "左转弯灯", COLOR_PURPLE, 20.0, 10000);
				}
			}
		}
	}
    if(newkeys == KEY_NO)
    {
        callcmd::lock(playerid,"");
    }
	if(PRESSED(KEY_CROUCH) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER || newkeys == 262144)
	{
	    if(IsPlayerInRangeOfPoint(playerid,5,828.2830,6.6600,1004.1870))
	    {
	        if(GetPVarInt(playerid,"Watching") == 0)
	        {
	            SetPlayerCameraPos(playerid, -331.6986, 1925.2861, 105.6225), SetPlayerCameraLookAt(playerid, 318.7538, -1998.8700, 17.8250, 1);
		        TogglePlayerControllable(playerid, 0);
				PlayerTextDrawShow(playerid,BG[playerid][1]);
				PlayerTextDrawShow(playerid,BG[playerid][0]);
				PlayerTextDrawShow(playerid,Start2[playerid]);
				PlayerTextDrawShow(playerid,Finish2[playerid]);
				for(new po = 0;po < 4;po++)
				{
			 		PlayerTextDrawShow(playerid,Horse[playerid][po]);
				    PlayerTextDrawShow(playerid,HorseNum[playerid][po]);
				}
				PlayerTextDrawShow(playerid,Start[playerid]);
		  		PlayerTextDrawShow(playerid,Finish[playerid]);
				SetPVarInt(playerid,"Watching",1);
				SetPlayerCameraPos(playerid, -331.6986, 1925.2861, 105.6225), SetPlayerCameraLookAt(playerid, 318.7538, -1998.8700, 17.8250, 1);
		        SendServerMessage(playerid, "你开始观看赛马，结束预览按下 'H'!");
			}
			else
			{
				TogglePlayerControllable(playerid, 1);
			    PlayerTextDrawHide(playerid,BG[playerid][1]);
			    PlayerTextDrawHide(playerid,BG[playerid][0]);
			    SetCameraBehindPlayer(playerid);
			    PlayerTextDrawHide(playerid,Start2[playerid]);
			    PlayerTextDrawHide(playerid,Finish2[playerid]);
			    for(new po = 0;po < 4;po++)
				{
			    	PlayerTextDrawHide(playerid,Horse[playerid][po]);
			    	PlayerTextDrawHide(playerid,HorseNum[playerid][po]);
				}
				PlayerTextDrawHide(playerid,Start[playerid]);
			    PlayerTextDrawHide(playerid,Finish[playerid]);
				SetPVarInt(playerid,"Watching",0);
			}
			return true;
  		}
	}
    if(PRESSED(KEY_WALK))
    {
    	if(IsPlayerInRangeOfPoint(playerid,6.0,-1320.4944,1643.0924,-36.6206) || IsPlayerInRangeOfPoint(playerid,6.0,-1324.0769,1643.6106,-37.8729) || IsPlayerInRangeOfPoint(playerid,6.0,-1324.7035,1639.2784,-38.8354) || IsPlayerInRangeOfPoint(playerid,4.0,-1338.7616,1647.6600,-39.6683) || IsPlayerInRangeOfPoint(playerid,4.0,-1343.1268,1640.6003,-39.6683) || IsPlayerInRangeOfPoint(playerid,4.0,-1368.8151,1635.1547,-43.3105))
        {
			if(GetPVarInt(playerid,"VodolazStart") != 1) return 1;
			switch(GetPVarInt(playerid,"VodolazGruzPicked"))
			{
		    	case 1:
		    	{
		        	RemovePlayerMapIcon(playerid, 0);
		    	}
				case 6:
				{
					SendErrorMessage(playerid,"你不能再拿材料了!");
					return 1;
				}
			}
			SetPVarInt(playerid,"VodolazGruzPicked",GetPVarInt(playerid,"VodolazGruzPicked")+1);
			format(YCMDstr,120,"― You took the materials %d of 6. 你可以去仓库或收集更多!",GetPVarInt(playerid,"VodolazGruzPicked"));
			SendClientMessage(playerid,-1,YCMDstr);
  			SetPlayerMapIcon(playerid,0,-1390.8951,1495.2004,1.8735,56,-1,MAPICON_LOCAL);
 		}
		if(IsPlayerInRangeOfPoint(playerid,5.0,-1376.1852,1493.3557,11.2031)) return ShowPlayerDialog(playerid,22825,2,"{1E90FF}作为潜水员工作","1. 开始/停止 - 潜水员的工作\n2. 带氧气管","选择","返回");
		if(IsPlayerInRangeOfPoint(playerid,5.0,-1390.5680,1496.7119,1.8735))
		{
  			if(GetPVarInt(playerid,"VodolazStart") != 1 || GetPVarInt(playerid,"VodolazGruzPicked") < 1) return 1;
			RemovePlayerMapIcon(playerid, 0);
			SetPlayerMapIcon(playerid,0,-1320.4944,1643.0924,-36.6206,56,-1,MAPICON_LOCAL);
			SetPVarInt(playerid,"VodolazZP",GetPVarInt(playerid,"VodolazZP") + GetPVarInt(playerid,"VodolazGruzPicked") * 150);
			SendServerMessage(playerid,"你把材料放在仓库里.");
			format(YCMDstr,50,"Earned: %d$",GetPVarInt(playerid,"VodolazZP"));
			PlayerTextDrawSetString(playerid,JobStats[playerid][3],YCMDstr);
			SetPVarInt(playerid,"VodolazGruzPicked",0);
 		}
    }
    if(newkeys == KEY_WALK)
	{
		if(GetPVarInt(playerid, "learnobject") == 1)
		{
	    	SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "", 0, 140, "Arial", 24, 0, -1, 0, 1);
			DestroyPlayerObject(playerid, LearnObject[playerid]);
			KillTimer(LearnTimer[playerid]);
			LearnObject[playerid] = 0;
        	SetCameraBehindPlayer(playerid);
    		SetPVarInt(playerid,"learnobject",0);
    		SetPVarInt(playerid,"learn", 0);
    		TogglePlayerControllable(playerid, 1);
		}
	}
	if(newkeys == KEY_CTRL_BACK)
	{
	    if(GetPVarInt(playerid, "PassPokaz") == 1)
	    {
	        new giveplayerid = GetPVarInt(playerid, "PassSkill");
			new ttext[32];
			new strpass[500];
			if(PlayerInfo[giveplayerid][pMember] == 0) { ttext = "公民"; }
			else if(PlayerInfo[giveplayerid][pMember] == 1) { ttext = "LSPD"; }
			else if(PlayerInfo[giveplayerid][pMember] == 2) { ttext = "FBI"; }
			else if(PlayerInfo[giveplayerid][pMember] == 3) { ttext = "监狱 SA"; }
			else if(PlayerInfo[giveplayerid][pMember] == 4) { ttext = "医院 SA"; }
			else if(PlayerInfo[giveplayerid][pMember] == 5) { ttext = "LCN"; }
			else if(PlayerInfo[giveplayerid][pMember] == 6) { ttext = "山口组"; }
			else if(PlayerInfo[giveplayerid][pMember] == 7) { ttext = "政府"; }
			else if(PlayerInfo[giveplayerid][pMember] == 8) { ttext = "大学"; }
			else if(PlayerInfo[giveplayerid][pMember] == 9) { ttext = "SFPD"; }
			else if(PlayerInfo[giveplayerid][pMember] == 11) { ttext = "驾驶学校"; }
			else if(PlayerInfo[giveplayerid][pMember] == 12) { ttext = "巴拉斯帮派"; }
			else if(PlayerInfo[giveplayerid][pMember] == 13) { ttext = "瓦戈斯帮派"; }
			else if(PlayerInfo[giveplayerid][pMember] == 14) { ttext = "俄罗斯黑手党"; }
			else if(PlayerInfo[giveplayerid][pMember] == 15) { ttext = "格罗夫帮派"; }
			else if(PlayerInfo[giveplayerid][pMember] == 16) { ttext = "媒体"; }
			else if(PlayerInfo[giveplayerid][pMember] == 17) { ttext = "阿兹特克帮派"; }
			else if(PlayerInfo[giveplayerid][pMember] == 18) { ttext = "14K帮派"; }
			else if(PlayerInfo[giveplayerid][pMember] == 19) { ttext = "军队"; }
			else if(PlayerInfo[giveplayerid][pMember] == 20) { ttext = "LVPD"; }
			new atext[32];
    		if(PlayerInfo[giveplayerid][pSex] == 1) { atext = "男性"; }
    		else if(PlayerInfo[giveplayerid][pSex] == 2) { atext = "女性"; }
			new level = PlayerInfo[giveplayerid][pLevel];
			new msg[] = "{8B3A3A}名称: {FFFFFF}%s\n{8B3A3A}年龄: {FFFFFF}%i\n{8B3A3A}性别: {FFFFFF}%s\n{8B3A3A}电话号码: {FFFFFF}%i\n{8B3A3A}组织: {FFFFFF}%s\n{8B3A3A}阶级: {FFFFFF}%i\n{8B3A3A}合法点: {FFFFFF}%i\n{8B3A3A}伴侣: {FFFFFF}%s";
    		format(strpass, sizeof(strpass), msg,GetName(giveplayerid),level,atext,PlayerInfo[giveplayerid][pPnumber],ttext,PlayerInfo[giveplayerid][pRank],PlayerInfo[giveplayerid][pZakonp],PlayerInfo[giveplayerid][pMarriedTo]);
    		ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}护照",strpass, "关闭", "");
			if(PlayerInfo[playerid][pWantedLevel] > 0)
			{
	    		SendServerMessage(giveplayerid, "请注意！ 这个人是通缉犯!");
			}
    		format(YCMDstr, sizeof(YCMDstr), "%s 向 %s 显示了护照",GetName(giveplayerid),GetName(playerid));
			ProxDetector(10.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			DeletePVar(playerid, "PassSkill");
			DeletePVar(playerid, "PassPokaz");
 		}
	}
	if(newkeys == KEY_NO)
	{
		if(GetPVarInt(playerid, "PassPokaz") == 1)
		{
			new targetid = GetPVarInt(playerid, "PassSkill");
		   	SendServerMessage(playerid, "你拒绝了这个提议");
			SendServerMessage(targetid, "玩家拒绝了这个提议");
			DeletePVar(playerid, "PassSkill");
			DeletePVar(playerid, "PassPokaz");
		    return 1;
		}
	}
	if(newkeys == KEY_CTRL_BACK)
	{
	    if(GetPVarInt(playerid, "SkillPokaz") == 1)
	    {
	        new targetid = GetPVarInt(playerid, "PlayerSkill");
	    	new stringskill[850];
    		new points[6],percent[2] = "%";
    		points[0] = 100 - PlayerInfo[targetid][pGunSkill][0];
    		points[1] = 100 - PlayerInfo[targetid][pGunSkill][1];
    		points[2] = 100 - PlayerInfo[targetid][pGunSkill][2];
    		points[3] = 100 - PlayerInfo[targetid][pGunSkill][3];
    		points[4] = 100 - PlayerInfo[targetid][pGunSkill][4];
    		points[5] = 100 - PlayerInfo[targetid][pGunSkill][5];
    		format(stringskill,sizeof(stringskill), "{008B8B}SDPistol:\t{F0F8FF}[%s]%i%s\n{008B8B}Deagle:\t{F0F8FF}[%s]%i%s\n{008B8B}ShotGun:\t{F0F8FF}[%s]%i%s\n{008B8B}MP5\t\t{F0F8FF}[%s]%i%s\n{008B8B}AK47:\t\t{F0F8FF}[%s]%i%s\n{008B8B}M4A1:\t\t{F0F8FF}[%s]%i%s",
    		ToDevelopSkills(PlayerInfo[targetid][pGunSkill][0],points[0]),PlayerInfo[targetid][pGunSkill][0],percent,
    		ToDevelopSkills(PlayerInfo[targetid][pGunSkill][1],points[1]),PlayerInfo[targetid][pGunSkill][1],percent,
    		ToDevelopSkills(PlayerInfo[targetid][pGunSkill][2],points[2]),PlayerInfo[targetid][pGunSkill][2],percent,
    		ToDevelopSkills(PlayerInfo[targetid][pGunSkill][3],points[3]),PlayerInfo[targetid][pGunSkill][3],percent,
    		ToDevelopSkills(PlayerInfo[targetid][pGunSkill][4],points[4]),PlayerInfo[targetid][pGunSkill][4],percent,
    		ToDevelopSkills(PlayerInfo[targetid][pGunSkill][5],points[5]),PlayerInfo[targetid][pGunSkill][5],percent);
    		ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}武器熟练技能",stringskill, "关闭", "");
    		format(YCMDstr, sizeof(YCMDstr), "%s 向 %s 展示了武器技能",GetName(targetid),GetName(playerid));
			ProxDetector(10.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			DeletePVar(playerid, "PlayerSkill");
			DeletePVar(playerid, "SkillPokaz");
		}
	}
	if(newkeys == KEY_NO)
	{
		if(GetPVarInt(playerid, "SkillPokaz") == 1)
		{
			new targetid = GetPVarInt(playerid, "PlayerSkill");
		   	SendServerMessage(playerid, "你拒绝了这个提议");
			SendServerMessage(targetid, "玩家拒绝了这个提议");
			DeletePVar(playerid, "PlayerSkill");
			DeletePVar(playerid, "SkillPokaz");
		    return 1;
		}
	}
	if(newkeys == KEY_CTRL_BACK)
	{
	    if(GetPVarInt(playerid, "Rukuzim") == 1)
	    {
	        new targetid = GetPVarInt(playerid, "PlayerRuki");
    		new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			SetPlayerFacingAngle(targetid, angle + 180);
			format(YCMDstr, sizeof(YCMDstr), "%s 与 %s 握手",GetName(playerid),GetName(targetid));
			ProxDetector(10.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			ApplyAnimation(playerid, "GANGS", "hndshkfa",4.0,0,0,0,0,0,1);
			ApplyAnimation(targetid, "GANGS", "hndshkfa",4.0,0,0,0,0,0,1);
			DeletePVar(playerid, "PlayerRuki");
			DeletePVar(playerid, "Rukuzim");
	    }
	}
 	if(newkeys == KEY_NO)
	{
		if(GetPVarInt(playerid, "Rukuzim") == 1)
		{
			new targetid = GetPVarInt(playerid, "PlayerRuki");
		   	SendServerMessage(playerid, "你拒绝了这个提议");
			SendServerMessage(targetid, "玩家拒绝了这个提议");
			DeletePVar(playerid, "Rukuzim");
			DeletePVar(playerid, "PlayerRuki");
		    return 1;
		}
	}
	if(newkeys == KEY_CTRL_BACK)
    {
    	if(GetPVarInt(playerid, "KeySim") == 1)
		{
			new targetid = GetPVarInt(playerid, "PlayerSim"), price = GetPVarInt(playerid, "SimPrice");
			if(PlayerInfo[playerid][pCash] < price)
			{
				SCMF(playerid,COLOR_FSERVER,"― 玩家 %s 没有足够的钱!", GetName(playerid));
				DeletePVar(playerid, "PlayerSim");
				DeletePVar(playerid, "SimPrice");
				DeletePVar(playerid, "KeySim");
				SendErrorMessage(playerid, "你没有足够的钱!");
				return 1;
			}
			PlayerInfo[playerid][pCash] -= price;
			PlayerInfo[targetid][pCash] += price;
			SCMF(playerid,COLOR_FSERVER,"― 你从 %s 买了一张 SIM-卡,花费 %i$", GetName(targetid), price);
			SCMF(targetid, COLOR_FSERVER, "― %s 从你这买了一张 SIM-卡,赚取 %i$", GetName(playerid), price);
			PlayerInfo[playerid][pPnumber] = PlayerInfo[targetid][pPnumber];
			new randphone = 100000 + random(899999);
			PlayerInfo[targetid][pPnumber] = randphone;
			SCMF(playerid,COLOR_FSERVER,"― 你的新号码: {FFFFFF}%i", PlayerInfo[playerid][pPnumber]);
			DeletePVar(playerid, "PlayerSim");
			DeletePVar(playerid, "SimPrice");
			DeletePVar(playerid, "KeySim");
  		    return 1;
		}
	}
	if(newkeys == KEY_NO)
	{
		if(GetPVarInt(playerid, "KeySim") == 1)
		{
			new targetid = GetPVarInt(playerid, "PlayerSim");
		   	SendServerMessage(playerid, "你拒绝了这个提议");
			SendServerMessage(targetid, "玩家拒绝了这个提议");
		   	DeletePVar(playerid, "PlayerSim");
			DeletePVar(playerid, "SimPrice");
			DeletePVar(playerid, "KeySim");
		    return 1;
		}
	}
    if(newkeys == KEY_CTRL_BACK)
    {
		if(GetPVarInt(playerid,"bizzProdaet"))
		{
  			new stringer[128];
			new id_prodaet = GetPVarInt(playerid,"bizzProdaet")-1;
			new id_pokupaet = GetPVarInt(id_prodaet,"bizzPokupaet")-1;
			new home_cena = GetPVarInt(playerid,"bizzCena");
			if(id_pokupaet == playerid)
			{
				if(PlayerInfo[playerid][pCash] < home_cena)
				{
					SendErrorMessage(playerid, "你没有足够的现金");
					SendErrorMessage(id_pokupaet, "买方没有足够的现金");
					DeletePVar(playerid,"bizzProdaet");
					DeletePVar(playerid,"bizzCena");
					DeletePVar(id_pokupaet,"bizzPokupaet");
					DeletePVar(id_pokupaet,"bizz_cell");
					return 1;
				}
				PlayerInfo[playerid][pCash] -= home_cena;
				PlayerInfo[id_prodaet][pCash] += home_cena;
				PlayerInfo[playerid][pBizpokup] = 1;
				PlayerInfo[id_prodaet][pBizpokup] = 0;
				OnPlayerUpdateAc(playerid);
				OnPlayerUpdateAc(id_prodaet);
				for(new idx = 1; idx <= TOTALBIZZ; idx++)
 				{
  					if(IsPlayerInRangeOfPoint(playerid, 10.0, BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]))
					{
						strmid(BizzInfo[idx][bOwner], Name(playerid), 0, strlen(Name(playerid)), MAX_PLAYER_NAME);
						format(stringer, sizeof(stringer), "UPDATE "TABLE_BIZZ" SET owner = '%s' WHERE id = '%d' LIMIT 1", BizzInfo[idx][bOwner], idx);
       					mysql_query(stringer);
       					UpdateBizz(idx);
					}
				}
				format(stringer,128,"你从 %s [%i] 手上买了一个产业, 花费 %i.",Name(id_prodaet),id_prodaet,home_cena);
				SendClientMessage(playerid,-1,stringer);
				format(stringer,128,"%s [%i] 从你手上买了产业, 赚取 %i.",Name(playerid),playerid,home_cena);
				SendClientMessage(id_prodaet,-1,stringer);
				DeletePVar(playerid,"bizzProdaet");
				DeletePVar(playerid,"bizzCena");
				DeletePVar(id_pokupaet,"bizzPokupaet");
				DeletePVar(playerid,"bizz_cell");
				return 1;
			}
			else
			{
				SendErrorMessage(playerid, "这个玩家不在游戏中");
				DeletePVar(playerid,"bizzProdaet");
				DeletePVar(playerid,"bizzCena");
				DeletePVar(playerid,"bizz_cell");
				return 1;
			}
		}
	}
	if(newkeys == KEY_NO)
	{
		if(GetPVarInt(playerid,"bizzProdaet"))
 		{
 			new id_prodaet = GetPVarInt(playerid,"bizzProdaet")-1;
   			new id_pokupaet = GetPVarInt(id_prodaet,"bizzPokupaet")-1;
   			SendServerMessage(playerid, "你拒绝了这个提议");
   			SendServerMessage(id_prodaet, "买方拒绝了这一提议");
   			DeletePVar(playerid,"bizzProdaet");
   			DeletePVar(playerid,"bizzCena");
   			DeletePVar(id_pokupaet,"bizzPokupaet");
   			return 1;
  		}
	}
	if(StartServerRiders)
    {
        if(gGamersLowRiders[0] == playerid || gGamersLowRiders[1] == playerid)
        {
            if(newkeys & KEY_UP)
            {
                if(PlayerImageID[playerid][1] == 0) GameTextForPlayer(playerid, "~g~GOOD KEYS", 500, 4), PlayerCountGoodKeys[playerid] += 5;
                else GameTextForPlayer(playerid, "~r~BAD KEYS", 500, 4);
                PlayerChangeImage(playerid, true);
            }
            if(newkeys & KEY_DOWN)
            {
                if(PlayerImageID[playerid][1] == 1) GameTextForPlayer(playerid, "~g~GOOD KEYS", 500, 4), PlayerCountGoodKeys[playerid] += 5;
                else GameTextForPlayer(playerid, "~r~BAD KEYS", 500, 4);
                PlayerChangeImage(playerid, true);
            }
            if(newkeys & KEY_LEFT)
            {
                if(PlayerImageID[playerid][1] == 2) GameTextForPlayer(playerid, "~g~GOOD KEYS", 500, 4), PlayerCountGoodKeys[playerid] += 5;
                else GameTextForPlayer(playerid, "~r~BAD KEYS", 500, 4);
                PlayerChangeImage(playerid, true);
            }
            if(newkeys & KEY_RIGHT)
            {
                if(PlayerImageID[playerid][1] == 3) GameTextForPlayer(playerid, "~g~GOOD KEYS", 500, 4), PlayerCountGoodKeys[playerid] += 5;
                else GameTextForPlayer(playerid, "~r~BAD KEYS", 500, 4);
                PlayerChangeImage(playerid, true);
            }
            new mes[MAX_PLAYER_NAME+20];
            if(gGamersLowRiders[0] == playerid) f(mes, "1. %s     %i", PlayerName[playerid], PlayerCountGoodKeys[playerid]), TextDrawSetString(LRRightBox[2],mes);
            else f(mes, "2. %s     %i", PlayerName[playerid], PlayerCountGoodKeys[playerid]), TextDrawSetString(LRRightBox[3],mes);
        }
    }
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING)
	{
		if(newkeys == KEY_WALK)
		{
		    SelectTextDraw(playerid, 0xFF4040AA);
		}
	}
	if(newkeys & KEY_HANDBRAKE  && newkeys & KEY_FIRE )
	{
		if(PlayerToPoint(7.0,playerid,1410.8140,-1897.8684,13.1220))
		{
			if(GetPlayerWeapon(playerid) == 41)
			{
			    if(GetPVarInt(playerid,"krstop") != 0) return SendErrorMessage(playerid,"等待..");
				{
					TimerP = SetTimerEx("Raskraska",6000, false, "i", playerid);
					SetPVarInt(playerid,"krstop",1);
				}
			}
		}
	}
    if(newkeys & KEY_SECONDARY_ATTACK && IsPlayerNearStol(playerid) != -1)
	{
		new s = GetPVarInt(playerid,"GameStol");
		new stolid = IsPlayerNearStol(playerid);
		new g = GetPVarInt(playerid,"Crupe");
		if(StolInfo[stolid][GameStart]) return SendErrorMessage(playerid,"游戏已经开启!");
		if(g == 1 && StolInfo[stolid][Crupe] != INVALID_PLAYER_ID) return SendErrorMessage(playerid,"庄家已经在这里工作了!");
		if(s != -1) return SendErrorMessage(playerid,"您已在另一张桌子上注册!");
		if(StolInfo[stolid][Stavka] == 0 && g != 1) return SendErrorMessage(playerid,"等待发牌人开始游戏");
		if(GetPlayerMoney(playerid) < StolInfo[stolid][Stavka]) return SendErrorMessage(playerid,"你没有足够的钱进入游戏");
		if(GetPVarInt(playerid, "RegCasino") == 1) return SendErrorMessage(playerid,"你已经注册了");
		if(g != 1)
		{
			if(SetNameStol(playerid,stolid) == 0) return SendErrorMessage(playerid,"桌子已满!");
		}
		TextDrawShowForPlayer(playerid,KostiBox[stolid]);
		TextDrawShowForPlayer(playerid,TableName[stolid]);
		TextDrawShowForPlayer(playerid,KostiInfo[stolid]);
		TextDrawShowForPlayer(playerid,KostiGameInfo[stolid]);
		TextDrawShowForPlayer(playerid,KostiKeyDone);
		TextDrawShowForPlayer(playerid,KostiKeyExit);
		TextDrawShowForPlayer(playerid,KostiKeyStavka);
		SetPVarInt(playerid,"GameStol",stolid);
		TogglePlayerControllable(playerid,0);
		SelectTextDraw(playerid,0x4169e1FF);
		if(g == 1)
		{
			StolInfo[stolid][Crupe] = playerid;
			return 1;
		}
		else
		{
			PlayerInfo[playerid][pCash] -= StolInfo[stolid][Stavka];//pcash
        	StolInfo[stolid][Bank] += StolInfo[stolid][Stavka];
        	SetPVarInt(playerid, "RegCasino", 1);
        	format(YCMDstr,sizeof(YCMDstr),"Bet: %d ~g~$~n~~w~Bank: %d ~g~$~n~",StolInfo[stolid][Stavka],StolInfo[stolid][Bank]);
			TextDrawSetString(KostiGameInfo[stolid],YCMDstr);
		}
	}
    if(PlayerToPoint(5.0,playerid,-408.3965,-1082.1865,707.2983))
	{
	    if(newkeys == KEY_WALK)
	    {
	    	if(Rudokop[playerid] == 1)
	    	{
	        	if(Vorotasah == 0)
	        	{
	            	MoveObject(RudaVorota,-412.4790039,-1084.4709473,702.93298339844,2.00);
	            	SetTimer("UpdateDoors",5000, false);
	        	}
	    	}
	    	else return SendErrorMessage(playerid,"你不是一个矿工.");
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		if(isPlayingBasketBall(playerid))
		{
			if(newkeys & KEY_JUMP) return tryScoreBBall(playerid);
			if(newkeys & KEY_SPRINT) return tryMarkOpponent(playerid);
			if(newkeys & KEY_HANDBRAKE) return tryPassBall(playerid);
			if(newkeys & KEY_WALK) return loadBBallAnims(BASKETBALL_DEFENSE);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 3.0,2317.0669,-1527.6624,25.3438))
	{
 		if(newkeys == 16)
		{
	    	if(IsPlayerInAnyVehicle(playerid)) return 1;
	    	{
 				joiningOrLeavingBBall(playerid); //basketball
			}
		}
	}
	if((newkeys & KEY_FIRE) && PlayerInfo[playerid][pWork] == 11 && PlayerInfo[playerid][pGraffityStop] == 0)
	{
	    if(IsPlayerInAnyVehicle(playerid)) return 1;
	    {
	    	//if((GetTickCount() - PlayerInfo[playerid][PlayerLastTick]) < 700 ) return 1;
	    	for(new i = 0; i < 15; i++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, ObjectTree[i][0],ObjectTree[i][1],ObjectTree[i][2]+(128.6059-124.36917)))
				{
			    	if(gTreeStatus[i] == false)
					{
						SendErrorMessage(playerid, "这棵树枯竭了，请等到树长大");
				 		ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
					}
					else
					{
				    	SetPVarInt(playerid,"MinerCount1",GetPVarInt(playerid,"MinerCount1")+1);
				    	if(GetPVarInt(playerid,"MinerCount1") >= 7)
						{
     						PlayerInfo[playerid][pGraffityStop] = 1;
					    	if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid,0);
					   	 	SetPlayerAttachedObject(playerid,0,19637,1,0.050000,0.445000,0.013999,2.099995,91.099983,0.000000,0.583999,0.672000,0.864999);
							ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
							SetTimerEx("CarryDelay",1000,false,"i",playerid);
							SetPlayerCheckpoint(playerid, 1059.5696,-345.3574,73.9922, 1.4);
							DeletePVar(playerid, "MinerCount1");
							SendServerMessage(playerid, "盒子里装满了苹果，把它带到仓库");
						}
						if(GetPVarInt(playerid, "MinerCount1") > 0)
						{
							ApplyAnimation(playerid,"SILENCED","Silence_fire",4.1,0,1,1,15,0);
							new mes[180];
							format(mes, sizeof(mes),"%d/7", GetPVarInt(playerid, "MinerCount1"));
					 		GameTextForPlayer(playerid, mes, 2000, 3);
					 		//PlayerInfo[playerid][PlayerLastTick] = GetTickCount();
				 			if(gTreeHealth[i] > 0)
							{
							 	gTreeHealth[i] -= 10;
							 	return 1;
							}
					 		else
					 		{
					 	    	SetTimerEx("CarryDelay",1000,false,"i",playerid);
					 	    	SetTimerEx("TreeVost",60000,false,"i", i);
					 	    	gTreeStatus[i] = false;
					 	    	gTreeHealth[i] = 0;
					 	    	DestroyDynamicObject(gTree[i]);
								gTree[i] = CreateDynamicObject(888, ObjectTree[i][0], ObjectTree[i][1], 72.7784, 0.00000, 0.00000, 359.23209);
					 	    	//DestroyDynamicCP(gTreeCP[i]);
					 	    	SendServerMessage(playerid, "树枯竭了.");
					 	    	SetPlayerSpecialAction(playerid ,SPECIAL_ACTION_NONE);
					 	    	ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
					 	    	return 1;
							}
					 	}
					}
				}
			}
		}
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid) && newkeys == 131072)
	{
 		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
   		{
			new Float:HelpX,Float:HelpY,Float:HelpZ;
   			GetPlayerPos(playerid,HelpX,HelpY,HelpZ);
			format(YCMDstr, sizeof(YCMDstr), "%s 呼叫了支援", Name(playerid));
			ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPlayerChatBubble(playerid,"呼叫支援",COLOR_PURPLE,30.0,10000);
   			if(GetPVarInt(playerid,"podmogals") > gettime())
			{
				SendErrorMessage(playerid,"可在30秒内重新呼叫支援..");
				return 1;
			}
   			foreach(new i : Player)
   			{
      			if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1)
         		{
					format(YCMDstr, sizeof(YCMDstr), "― [对讲机] %s {0015FF}需要增援 ( GPS上已经定位 )", Name(playerid));
					SendClientMessage(i,COLOR_ORANGE,YCMDstr);
     				SetPlayerCheckpoint(i,HelpX,HelpY,HelpZ,8);
     				GameTextForPlayer(i,"~w~NEED HELP",3000,1);
     				SetPVarInt(playerid,"podmogals",gettime()+30);
				}
			}
 		}
		return 1;
	}
	if(Animited[playerid])
	{
		Animited[playerid] = 0;
		ClearAnimations(playerid, 1);
		ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0,1);
		return 1;
	}
    if(newkeys == KEY_YES)
	{
	    new carid = GetPlayerVehicleID(playerid);
		new Ymenucar[500];
    	if(GetPlayerVehicleID(playerid) == INVALID_VEHICLE_ID) return true;
    	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
    	if(!IsPlayerInAnyVehicle(playerid)) return SendErrorMessage(playerid,"你没有在车上!");
   	 	new dvig[15],far[15],dver[25],kap[15],bag[15];
		GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
		if(engine == 1) dvig = "{32CD32}ON";
		else dvig = "{FF0000}OFF";
		if(lights == 1) far = "{32CD32}ON";
		else far = "{FF0000}OFF";
		if(bonnet == 1) kap = "{32CD32}ON";
		else kap = "{FF0000}OFF";
		if(boot == 1) bag = "{32CD32}ON";
		else bag = "{FF0000}OFF";
		if(gCarLock[carid] == 0) dver = "{32CD32}开启";
		else dver = "{FF0000}关闭";
		format(Ymenucar,sizeof(Ymenucar),"― [%s{FFFFFF}] 引擎\n― [%s{FFFFFF}] 车灯\n― [%s{FFFFFF}] 车门\n― [%s{FFFFFF}] 引擎盖\n― [%s{FFFFFF}] 后备箱\n― 燃料罐 [罐: %d/3]\n― 安全带\n― 信息",dvig,far,dver,kap,bag,PlayerInfo[playerid][pFuel]);
		ShowPlayerDialog(playerid, 8023, DIALOG_STYLE_LIST, "{1E90FF}车辆版面", Ymenucar, "选择", "返回");
    	return true;
	}
    if(IsPlayerInRangeOfPoint(playerid, 15.0, 87.52,1918.97,17.85))
    {
		if(newkeys == KEY_WALK)
		{
            if(PlayerInfo[playerid][pLeader] == 19 || PlayerInfo[playerid][pMember] == 19)
		    {
		        MoveObject(gatelva, 87.15, 1922.18, 17.63+0.004,0.12,0.00, -10.00, 90.00);
				SetTimer("gatelvaClose", 10000, 0);
				gatetimerlva = SetTimer("gatelvaClose", 10000, 0);
			    SendServerMessage(playerid,"大门打开了.将在10秒后关闭.");
            }
        }
        return 1;
	}
    if(IsPlayerInRangeOfPoint(playerid, 10.0, -1546.72, 510.74, 6.30))
    {
		if(newkeys == KEY_WALK)
		{
            if(PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3)
		    {
                MoveObject(gatesfa, -1546.72, 500.74, 6.30, 2);
			    SetTimer("gatesfaClose", 10000, 0);
			    gatetimersfa = SetTimer("gatesfaClose", 10000, 0);
		        SendServerMessage(playerid,"大门打开了.将在10秒后关闭.");
            }
        }
        return 1;
	}
    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1846.0536,-1744.4991,5206.0859))
	{
	    if(newkeys == KEY_WALK)
	    {
	        SetTimerEx("UnFreezePlayer", 2500, false, "i", playerid);
            TogglePlayerControllable(playerid, 0);
		    Q_SetPlayerPos(playerid,-1566.0635,313.7180,7.1875);
		    SetPlayerFacingAngle(playerid, 93.1625);
            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
	    }
    }
    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1862.9537,-1699.5010,5202.5859))
	{
	    if(newkeys == KEY_WALK)
	    {
	        SetTimerEx("UnFreezePlayer", 2500, false, "i", playerid);
            TogglePlayerControllable(playerid, 0);
		    Q_SetPlayerPos(playerid,-1532.4127,370.6526,14.8128);
		    SetPlayerFacingAngle(playerid, 0.9768);
            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
	    }
    }
    if(newkeys == KEY_WALK)
    {
  		if(GetPVarInt(playerid, "SMOKE") > gettime())
		{
		    new string[50];
		    if(GetPVarInt(playerid, "ZatJ") > gettime()) return 1;
		    SetPVarInt(playerid, "ZatJ", gettime()+10);
		    ApplyAnimation(playerid,"GANGS","smkcig_prtl",4.1,0,1,1,1,1,1);
		    SetTimerEx("ClearAnimText", 8000, false, "d", playerid);
		    format(string, sizeof(string), "%s 抽了一口烟", Name(playerid));
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
			new Float:health;
			GetPlayerHealth(playerid, health);
			GameTextForPlayer(playerid, "~h~~g~+5hp", 1500, 3),PlayerInfo[playerid][pHP] ++,SetPlayerHealthAC(playerid, health+5.0);
			return 1;
		}
	}
	if(InfoSkate[playerid][sActive] && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
    {
        static bool:act;
        SetPlayerArmedWeapon(playerid,0);
        if(newkeys & KEY_HANDBRAKE)
        {
            #if MODE_SKATE == 0
            ApplyAnimation(playerid, "SKATE","skate_run",4.1,1,1,1,1,1,1);
            #else
            ApplyAnimation(playerid, "SKATE","skate_sprint",4.1,1,1,1,1,1,1);
            #endif
            if(!act)
            {
                act = true;
                RemovePlayerAttachedObject(playerid,INDEX_SKATE);
                DestroyObject(InfoSkate[playerid][sSkate]);
                InfoSkate[playerid][sSkate] = CreateObject(19878,0,0,0,0,0,0);
                AttachObjectToPlayer(InfoSkate[playerid][sSkate],playerid, -0.2,0,-0.9,0,0,90);
            }
        }
        if(oldkeys & KEY_HANDBRAKE)
        {
            ApplyAnimation(playerid, "CARRY","crry_prtial",4.0,0,0,0,0,0);
            if(act)
            {
                act = false;
                DestroyObject(InfoSkate[playerid][sSkate]);
                RemovePlayerAttachedObject(playerid,INDEX_SKATE);
                #if TYPE_SKATE == 0
                SetPlayerAttachedObject(playerid,INDEX_SKATE,19878,6,-0.055999,0.013000,0.000000,-84.099983,0.000000,-106.099998,1.000000,1.000000,1.000000);
                #else
                SetPlayerAttachedObject(playerid,INDEX_SKATE,19878,1,0.055999,-0.173999,-0.007000,-95.999893,-1.600010,24.099992,1.000000,1.000000,1.000000);
                #endif
            }
        }
    }
    if(newkeys == 16 && GetBuritoID[playerid] >-1)
    {
        new Float:X, Float:Y, Float:Z;
        GetVehiclePos(GetBuritoID[playerid], X, Y, Z);
        Q_SetPlayerPos(playerid, X+4, Y, Z);
        SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid,0);
        GetBuritoID[playerid] = -1;
        TogglePlayerControllable(playerid,0);
        SetTimerEx("UnFreezePlayer", 2500, false, "i", playerid);
    	return 1;
  	}
	if(newkeys == KEY_ACTION && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
        {
            if(!Maxi[playerid]) { Maxi[playerid] = true;  }
	        else if(Maxi[playerid]) {  Maxi[playerid] = false; }
		}
    }
	if(newkeys == 16)//F
	{
		if(PlayerToPoint(1,playerid,773.0480,1.4300,1000.7209) && Trenag[playerid] == 0)
		{
			if(PlayerInfo[playerid][pSkillT] == 3) return SendErrorMessage(playerid,"你已经研究过所有的武术了.");
			if(usetre[1] == 1) return SendErrorMessage(playerid,"该健身器材被别人使用了.");
			if(GetPVarInt(playerid,"FormaSport") == 0) return SendErrorMessage(playerid,"你没有健身.");
            switch(PlayerInfo[playerid][pSkillT])
	        {
	        case 0: if(PlayerInfo[playerid][pShtanga] == 40) return SendErrorMessage(playerid,"在健身器材上完成健身.");
	        case 1: if(PlayerInfo[playerid][pShtanga] == 80) return SendErrorMessage(playerid,"在健身器材上完成健身.");
	        case 2: if(PlayerInfo[playerid][pShtanga] == 160) return SendErrorMessage(playerid,"在健身器材上完成健身.");
	        }
	        KolRaz(playerid);
            TogglePlayerControllable(playerid, 0);
            DestroyDynamicObject(KTrenag[1]);
		    Q_SetPlayerPos(playerid,773.0480,1.4300,1000.7209);
            SetPlayerFacingAngle(playerid,273.0756);
		    SetPlayerAttachedObject(playerid,0,2913,6,0.000000,0.000000,-0.102999, 0.000000,0.000000,0.000000, 1.000000,1.000000,1.000000);
		    ApplyAnimation(playerid,"benchpress","gym_bp_geton",4.1,0,0,0,1,1,1);
		    down[playerid] = 1; usetre[1] = 1;
		    SendSyntaxMessage(playerid,"帮助: {FFFFFF}NUM4 - 举起 | NUM1 - 放下 | [L.ALT] - 完成运动.");
		    Trenag[playerid] = 1; SetPlayerCameraPos(playerid,771.7218,1.4508,1000.7218);
			SetPlayerCameraLookAt(playerid,773.1321,1.4342,1000.7208);
			PlayerTextDrawShow(playerid,Trenia[playerid]);
		}
		if(PlayerToPoint(1,playerid,772.5930,8.8911,1000.7066) && Trenag[playerid] == 0)
	    {
            if(PlayerInfo[playerid][pSkillT] == 3) return SendErrorMessage(playerid,"你已经研究过所有的武术了.");
            if(usetre[2] == 1) return SendErrorMessage(playerid,"该健身器材被别人使用了.");
            if(GetPVarInt(playerid,"FormaSport") == 0) return SendErrorMessage(playerid,"你没有健身.");
            switch(PlayerInfo[playerid][pSkillT])
	        {
	        case 0: if(PlayerInfo[playerid][pVelo] == 40) return SendErrorMessage(playerid,"在健身器材上完成健身.");
	        case 1: if(PlayerInfo[playerid][pVelo] == 80) return SendErrorMessage(playerid,"在健身器材上完成健身.");
	        case 2: if(PlayerInfo[playerid][pVelo] == 160) return SendErrorMessage(playerid,"在健身器材上完成健身.");
	        }
	        KolRaz(playerid);
            TogglePlayerControllable(playerid, 0);
		    Q_SetPlayerPos(playerid,772.5930,8.8911,1000.7066);
		    SetPlayerFacingAngle(playerid,81.2905);
		    usetre[2] = 1;
		    ApplyAnimation( playerid, "GYMNASIUM", "gym_bike_geton", 4.1, 0, 0, 0, 1, 0 );
		    SendSyntaxMessage(playerid,"帮助: {FFFFFF}NUM1 - 蹬踏 | L.ALT - 完成运动.");
		    SendSyntaxMessage(playerid,"帮助: {FFFFFF}保持最大速度以提高运动量.");
		    Trenag[playerid] = 2; SetPlayerCameraPos(playerid,768.9656,9.3903,1000.7083);
			SetPlayerCameraLookAt(playerid,771.0875,9.4117,1000.7067);
			PlayerTextDrawShow(playerid,Trenia[playerid]);
		}
		if(PlayerToPoint(1,playerid,772.8024,5.4353,1000.7802) && Trenag[playerid] == 0)
		{
            if(PlayerInfo[playerid][pSkillT] == 3) return SendErrorMessage(playerid,"你已经研究过所有的武术了.");
            if(usetre[3]==1) return SendErrorMessage(playerid,"该健身器材被别人使用了.");
            if(GetPVarInt(playerid,"FormaSport") == 0) return SendErrorMessage(playerid,"你没有健身.");
            switch(PlayerInfo[playerid][pSkillT])
	        {
	        case 0: if(PlayerInfo[playerid][pGiri] == 40) return SendErrorMessage(playerid,"在健身器材上完成健身.");
	        case 1: if(PlayerInfo[playerid][pGiri] == 80) return SendErrorMessage(playerid,"在健身器材上完成健身.");
	        case 2: if(PlayerInfo[playerid][pGiri] == 160) return SendErrorMessage(playerid,"在健身器材上完成健身.");
	        }
	        KolRaz(playerid);
            TogglePlayerControllable(playerid, 0);
		    Q_SetPlayerPos(playerid,772.8024,5.4353,1000.7802);
		    SetPlayerFacingAngle(playerid,91.5603);
		    DestroyDynamicObject(KTrenag[2]); usetre[3] = 1;
            SetPlayerAttachedObject(playerid,0,2915,6,0.032999,0.002000,-0.014000, 4.099997,-91.799888,8.299996, 1.058000,1.028000,0.972000);
		    down[playerid] = 1;
		    SendSyntaxMessage(playerid,"帮助: {FFFFFF}NUM4 - 举起 | NUM1 - 放下 | [L.ALT] - 完成运动.");
		    Trenag[playerid] = 3; SetPlayerCameraPos(playerid,769.3055,5.3182,1000.7160);
			SetPlayerCameraLookAt(playerid,771.7000,5.3390,1000.7802);
            ApplyAnimation( playerid, "Freeweights", "gym_free_pickup", 4.1, 0, 0, 0, 1, 0 );
            PlayerTextDrawShow(playerid,Trenia[playerid]);
		}
		if(PlayerToPoint(1,playerid,773.4613,-0.8611,1000.7250) && Trenag[playerid] == 0)
		{
            if(PlayerInfo[playerid][pSkillT] == 3) return SendErrorMessage(playerid,"你已经研究过所有的武术了.");
            if(usetre[4] == 1) return SendErrorMessage(playerid,"该健身器材被别人使用了.");
            if(GetPVarInt(playerid,"FormaSport") == 0) return SendErrorMessage(playerid,"你没有健身.");
            switch(PlayerInfo[playerid][pSkillT])
	        {
	        case 0: if(PlayerInfo[playerid][pBeg] == 40) return SendErrorMessage(playerid,"在健身器材上完成健身.");
	        case 1: if(PlayerInfo[playerid][pBeg] == 80) return SendErrorMessage(playerid,"在健身器材上完成健身.");
	        case 2: if(PlayerInfo[playerid][pBeg] == 160) return SendErrorMessage(playerid,"在健身器材上完成健身.");
	        }
	        KolRaz(playerid);
            TogglePlayerControllable(playerid, 0);
		    Q_SetPlayerPos(playerid,773.4613,-0.8611,1000.7250);
		    SetPlayerFacingAngle(playerid,181.0015);
		    usetre[4] = 1;
		    SendSyntaxMessage(playerid,"帮助: {FFFFFF}NUM1 - 加速运动 | L.ALT - 完成运动.");
		    SendSyntaxMessage(playerid,"帮助: {FFFFFF}保持最大速度以提高运动量.");
		    Trenag[playerid]=4; SetPlayerCameraPos(playerid,770.7786,-2.6528,1000.7265);
			SetPlayerCameraLookAt(playerid,772.8804,-2.5842,1000.7288);
			ApplyAnimation( playerid, "GYMNASIUM", "gym_tread_geton", 4.1, 0, 0, 0, 1, 0 );
			kol[playerid] = 1;
			PlayerTextDrawShow(playerid,Trenia[playerid]);
		}
	}
	if(newkeys == 1024)
	{
        if(!IsPlayerInAnyVehicle(playerid))
		if(Trenag[playerid] == 1) { SendErrorMessage(playerid,"您已完成课程!"); EndKach(playerid,1); }
		if(Trenag[playerid] == 2) { SendErrorMessage(playerid,"您已完成课程!"); EndKach(playerid,2); }
		if(Trenag[playerid] == 3) { SendErrorMessage(playerid,"您已完成课程!"); EndKach(playerid,3); }
		if(Trenag[playerid] == 4) { SendErrorMessage(playerid,"您已完成课程!"); EndKach(playerid,4); }
	}
	if(newkeys == 8192)
	{
        if(Flood[playerid] > 0) return SendServerMessage(playerid, "等待...");
        if(Trenag[playerid] == 3 && down[playerid]==1)
	    {
	        ApplyAnimation( playerid, "Freeweights", "gym_free_up_smooth", 4.1, 0, 0, 0, 1, 1 );
	        down[playerid] = 0; PlayerInfo[playerid][pGiri]++;
			switch(PlayerInfo[playerid][pSkillT])
	        {
	        case 0: { if(PlayerInfo[playerid][pGiri] == 40) { EndKach(playerid,3); SendErrorMessage(playerid,"在健身器材上完成健身."); } }
	        case 1: { if(PlayerInfo[playerid][pGiri] == 80) { EndKach(playerid,3); SendErrorMessage(playerid,"在健身器材上完成健身."); } }
	        case 2: { if(PlayerInfo[playerid][pGiri] == 160) { EndKach(playerid,3); SendErrorMessage(playerid,"在健身器材上完成健身."); } }
	        }
	        KolRaz(playerid);
			CheckTrening(playerid);
			Flood[playerid] = 1;
	    }
	    if(Trenag[playerid] == 1 && down[playerid] == 1)
	    {
	        ApplyAnimation( playerid, "benchpress", "gym_bp_up_smooth", 4.1, 0, 0, 0, 1, 0 );
	        down[playerid] = 0; PlayerInfo[playerid][pShtanga]++;
			switch(PlayerInfo[playerid][pSkillT])
	        {
	        case 0: { if(PlayerInfo[playerid][pShtanga] == 40) { EndKach(playerid,1); SendErrorMessage(playerid,"在健身器材上完成健身."); } }
	        case 1: { if(PlayerInfo[playerid][pShtanga] == 80) { EndKach(playerid,1); SendErrorMessage(playerid,"在健身器材上完成健身."); } }
	        case 2: { if(PlayerInfo[playerid][pShtanga] == 160) { EndKach(playerid,1); SendErrorMessage(playerid,"在健身器材上完成健身."); } }
	        }
	        KolRaz(playerid);
			CheckTrening(playerid);
			Flood[playerid] = 2;
	    }
	}
	if(newkeys == 512)
	{
        if(Trenag[playerid] == 1 && down[playerid] == 0)
		{
            down[playerid]=1;
	        ApplyAnimation(playerid,"benchpress","gym_bp_down",4.1,0,0,0,1,1,1);
	    }
	    if(Trenag[playerid] == 2)
	    {
            if(kol[playerid]<4) kol[playerid]++;
	        switch(PlayerInfo[playerid][pSkillT])
	        {
	        case 0: { if(PlayerInfo[playerid][pVelo] == 40) { EndKach(playerid,2); SendErrorMessage(playerid,"在健身器材上完成健身."); } }
	        case 1: { if(PlayerInfo[playerid][pVelo] == 80) { EndKach(playerid,2); SendErrorMessage(playerid,"在健身器材上完成健身."); } }
	        case 2: { if(PlayerInfo[playerid][pVelo] == 160) { EndKach(playerid,2); SendErrorMessage(playerid,"在健身器材上完成健身."); } }
	        }
	        KolRaz(playerid);
			CheckTrening(playerid);
	    }
	    if(Trenag[playerid] == 4)
	    {
            if(kol[playerid]<3) kol[playerid]++;
	        switch(PlayerInfo[playerid][pSkillT])
	        {
	        case 0: { if(PlayerInfo[playerid][pBeg] == 40) { EndKach(playerid,4); SendErrorMessage(playerid,"在健身器材上完成健身."); } }
	        case 1: { if(PlayerInfo[playerid][pBeg] == 80) { EndKach(playerid,4); SendErrorMessage(playerid,"在健身器材上完成健身."); } }
	        case 2: { if(PlayerInfo[playerid][pBeg] == 160) { EndKach(playerid,4); SendErrorMessage(playerid,"在健身器材上完成健身."); } }
	        }
	        KolRaz(playerid);
			CheckTrening(playerid);
	    }
	    if(Trenag[playerid] == 3 && down[playerid]==0) { ApplyAnimation( playerid, "Freeweights", "gym_free_down", 4.1, 0, 0, 0, 1, 1 ); down[playerid] = 1; }
	}
	if(newkeys == KEY_CTRL_BACK)
	{
		if(fightSID[playerid] != INVALID_PLAYER_ID && IsPlayerConnected(fightSID[playerid]))
		{
			if(PlayerInfo[playerid][pCash]<fightM) return SendErrorMessage(playerid,"没有那么多钱作为赌注");
			if(TotalFight==0) { GFID1 = fightSID[playerid]; GFID2 = playerid; }
			else { SendErrorMessage(playerid,"擂台没有空位置."); return 1; }
			PlayerInfo[playerid][pCash] -= fightM;
			PlayerInfo[fightSID[playerid]][pCash] -= fightM;
			format(YCMDstr, sizeof(YCMDstr), "―  你同意与 %s 决斗.",Name(fightSID[playerid]));
			SendClientMessage(playerid, -1, YCMDstr);
			format(YCMDstr, sizeof(YCMDstr), "―  %s 同意与你决斗.",Name(playerid));
			SendClientMessage(fightSID[playerid], -1, YCMDstr);
			TotalFight = 1;
			UpdateFighText();
		}
	}
    if(newkeys == KEY_NO)
	{
	    if(fightSID[playerid] != INVALID_PLAYER_ID) { fightSID[playerid]=INVALID_PLAYER_ID; SendSyntaxMessage(playerid,"你取消了战斗邀请."); }
	}
    if(IsPlayerInRangeOfPoint(playerid, 15.0,1811.1471,-1889.3612,13.4075))
    {
    	if(IsPlayerInAnyVehicle(playerid) && newkeys == 2)
		{
            if(PlayerToPoint(15, playerid,1811.69995117,-1892.80004883,13.10000038))
            MoveObject (spgateLS, 1811.69995117,-1892.80004883,13.10000038+0.004, 0.004, 0.00000000,0.00000000,270.00000000);
            SetObjectRot(spgateLS,0.00000000,0.00000000,270.00000000);
            SetTimer ("GateSPCloseLS", 20000, 0);
            SendServerMessage(playerid, "将在20秒内关闭");
            PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
        }
    }
	if(IsPlayerInRangeOfPoint(playerid, 15.0,1415.21375, -1652.07068, 13.10040))
	{
		if(IsPlayerInAnyVehicle(playerid) && newkeys == 2)
		{
		    new vehicleid = GetPlayerVehicleID(playerid);
			if(vehicleid >= LicCar[0] && vehicleid <= LicCar[10])
			{
				MoveObject (Barrier,1415.21375, -1652.07068, 13.10040+0.004, 0.004,0.00000000,0.00000000,90.00000000);
				SetTimer("Licshlag", 10000, 0);
			}
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(IsKeyJustDown(KEY_CROUCH, newkeys, oldkeys))
		{
			if(IsPlayerInRangeOfPoint(playerid,9,1588.3058,-1637.9652,13.4227))
			{
				if(!IsACop(playerid)) return 1;
				openLSPDGate();
			}
			else if(IsPlayerInRangeOfPoint(playerid,9,1544.4913,-1627.2817,13.3828))
			{
				if(!IsACop(playerid)) return 1;
				if(pdgatebar==0)
				{
					pdgatebar = 1;
					MoveObject( pdbarriergateobj, 1544.682495, -1630.953003, 13.079567+0.01, 0.1, 0.0000, 360.0000, 90.0000);
				}
				else if(pdgatebar==1)
				{
					pdgatebar = 0;
					MoveObject( pdbarriergateobj, 1544.682495, -1630.980000, 13.215000, 0.1, 0.0000, 90.0000, 90.0000);
				}
			}
		}
	}
    if(newkeys == 1024)
    {
        new string[256];
        new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
        if(IsPlayerInRangeOfPoint(playerid,0.3,293.6721,-38.5141,1001.5156))
        {
        SetPlayerCameraPos(playerid, 293.5550, -38.6622, 1002.9490);
        SetPlayerCameraLookAt(playerid, 293.5551, -39.6610, 1000.8944);
        format(string,256,"{FFFFFF}手枪:\t\t{C13E1D}Desert Eagle\n{FFFFFF}弹药:\t\t{C13E1D}20 发子弹.\n\n{FFFFFF}价格: {0FC531}%i",till*50);
        ShowPlayerDialog(playerid,300,DIALOG_STYLE_MSGBOX,"{1E90FF}手枪 - Desert Eagle",string,"立即购买","返回");
        }
        if(IsPlayerInRangeOfPoint(playerid,0.3,294.3938,-38.5145,1001.5156))
        {
        SetPlayerCameraPos(playerid, 294.4572, -38.6204, 1002.8725);
        SetPlayerCameraLookAt(playerid, 294.4612, -39.6191, 1001.0381);
        format(string,256,"{FFFFFF}手枪:\t\t{C13E1D}SdPistol\n{FFFFFF}弹药:\t\t{C13E1D}20 发子弹.\n\n{FFFFFF}价格: {0FC531}%i",till*30);
        ShowPlayerDialog(playerid,301,DIALOG_STYLE_MSGBOX,"{1E90FF}手枪 - SdPistol",string,"立即购买","返回");
        }
        if(IsPlayerInRangeOfPoint(playerid,0.3,295.2726,-38.5150,1001.5156))
        {
        SetPlayerCameraPos(playerid, 295.4286, -38.6667, 1003.0334);
        SetPlayerCameraLookAt(playerid, 295.4344, -39.6655, 1000.9838);
        format(string,256,"{FFFFFF}滑膛枪:\t\t{C13E1D}Shot Gun\n{FFFFFF}弹药:\t\t{C13E1D}40 发子弹.\n\n{FFFFFF}价格: {0FC531}%i",till*40);
        ShowPlayerDialog(playerid,302,DIALOG_STYLE_MSGBOX,"{1E90FF}滑膛枪 - ShotGun",string,"立即购买","返回");
        }
        if(IsPlayerInRangeOfPoint(playerid,0.3,296.5346,-38.5150,1001.5156))
        {
        SetPlayerCameraPos(playerid, 296.4631, -38.6067, 1002.9152);
        SetPlayerCameraLookAt(playerid, 296.4595, -39.6049, 1000.9538);
        format(string,256,"{FFFFFF}半自动冲锋枪:\t\t{C13E1D}MP5\n{FFFFFF}弹药:\t\t{C13E1D}150 发子弹.\n\n{FFFFFF}价格: {0FC531}%i",till*60);
        ShowPlayerDialog(playerid,303,DIALOG_STYLE_MSGBOX,"{1E90FF}半自动冲锋枪 - MP5",string,"立即购买","返回");
        }
        if(IsPlayerInRangeOfPoint(playerid,0.3,297.0396,-38.3967,1001.5156))
        {
        SetPlayerCameraPos(playerid, 297.3016, -38.4249, 1002.6393);
        SetPlayerCameraLookAt(playerid, 298.3000, -38.4255, 1000.3725);
        format(string,256,"{FFFFFF}全自动步枪:\t\t{C13E1D}АК-47\n{FFFFFF}弹药:\t\t{C13E1D}160 发子弹.\n\n{FFFFFF}价格: {0FC531}%i",till*100);
        ShowPlayerDialog(playerid,304,DIALOG_STYLE_MSGBOX,"{1E90FF}全自动步枪 - AK-47",string,"立即购买","返回");
        }
        if(IsPlayerInRangeOfPoint(playerid,0.3,299.2400,-38.4304,1001.5156))
        {
        SetPlayerCameraPos(playerid, 298.8741, -38.5262, 1002.6832);
        SetPlayerCameraLookAt(playerid, 297.8757, -38.5313, 999.8607);
        format(string,256,"{FFFFFF}全自动步枪:\t\t{C13E1D}M4\n{FFFFFF}弹药:\t\t{C13E1D}160 发子弹.\n\n{FFFFFF}价格: {0FC531}%i",till*100);
        ShowPlayerDialog(playerid,305,DIALOG_STYLE_MSGBOX,"{1E90FF}全自动步枪 - M4",string,"立即购买","返回");
        }
        if(IsPlayerInRangeOfPoint(playerid,0.3,299.2404,-39.5468,1001.5156))
        {
        SetPlayerCameraPos(playerid, 298.9263, -39.4920, 1002.7551);
        SetPlayerCameraLookAt(playerid, 297.9278, -39.4851, 1000.3481);
        format(string,256,"{FFFFFF}保护:\t\t{C13E1D}防弹衣\n\n{FFFFFF}价格: {0FC531}%i",till*100);
        ShowPlayerDialog(playerid,306,DIALOG_STYLE_MSGBOX,"{1E90FF}防弹衣",string,"立即购买","返回");
        }
    }
	if(newkeys == KEY_DOWN)
	{
		if(IsaDobicha(playerid))
		{
			if(Rudokop[playerid] == 1 && Dobivat[playerid] == 1)
			{
			    TogglePlayerControllable(playerid, 0);
				SendServerMessage(playerid,"您已成功开始在这个地方开采矿石.");
				ClearAnimations(playerid, 1);
				Dobivat[playerid] = 0;
				ApplyAnimation(playerid, "SWORD", "sword_4", 4.0, 1, 0, 0, 0, 0);
				SetTimerEx("TimerGiveMiner", 13000, false, "i", playerid);
				return true;
			}
		}
		return true;
	}
	if(PRESSED(KEY_SPRINT))
    {
        if(GetPVarInt(playerid,"Animation") > 0)
        {
        	ClearAnimations(playerid);
        	ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
        	SetPVarInt(playerid,"Animation", 0);
        	return 1;
        }
    }
	if(PRESSED(KEY_SPRINT))
    {
        if(GetPVarInt(playerid,"Animation") > 0)
        {
        	ClearAnimations(playerid);
        	ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
        	SetPVarInt(playerid,"Animation", 0);
        	return 1;
        }
    }
    if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
    {
           new Float:face[3];
           GetPlayerCameraFrontVector(playerid, face[0], face[1], face[2]);
           new bool:crash_player = false;
           for (new i = 0; !crash_player && i < sizeof(face); i++)
                 if(floatabs(face[i]) > 10.0)
                         crash_player = true;

           if(crash_player)
           {
                   SendErrorMessage(playerid, "使用作弊程序. (#12)");
				   GKick(playerid);
                   return 0;
           }
    }
	if(newkeys == 1024)
	{
		for(new i = 1; i <= TotalHouse; i++)
		{
			if(!PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz])) continue;
			if(GetPlayerVirtualWorld(playerid) == i+50)
			{
				PickupX[playerid] = HouseInfo[i][hEntrancex], PickupY[playerid] = HouseInfo[i][hEntrancey];
				oldpickup[playerid] = HouseInfo[i][hPickup];
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				Q_SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
			}
		}
	}
	if(newkeys == 16)
	{
		if(IsPlayerInRangeOfPoint(playerid,20.0,2075.8750, -2173.1252, 1115.1290))
		{
			if(GetPlayerVirtualWorld(playerid) == 0) return true;
			if(GetPlayerVirtualWorld(playerid) == world[playerid]){ShowPlayerDialog(playerid,17631,DIALOG_STYLE_MSGBOX, "{1E90FF}警告", "你打算买车. 如果你已经拥有\n有一辆车,\n然后它将被替换", "确定", "返回");return true;}
			if(GetPlayerVirtualWorld(playerid) == world1[playerid]){ShowPlayerDialog(playerid,17632,DIALOG_STYLE_MSGBOX, "{1E90FF}警告", "你打算买车. 如果你已经拥有\nn有一辆车,\n然后它将被替换", "确定", "返回");return true;}
			if(GetPlayerVirtualWorld(playerid) == world2[playerid]){ShowPlayerDialog(playerid,17633,DIALOG_STYLE_MSGBOX, "{1E90FF}警告", "你打算买车. 如果你已经拥有\nиn有一辆车,\n然后它将被替换", "确定", "返回");return true;}
		}
	}
	if(newkeys == 64)
	{
		if(IsPlayerInRangeOfPoint(playerid,20,2075.8750, -2173.1252, 1115.1290)){callcmd::nextcar(playerid,"");}
	}
	if(newkeys == 256)
	{
		if(IsPlayerInRangeOfPoint(playerid,20,2075.8750, -2173.1252, 1115.1290)){callcmd::backcar(playerid,"");}
	}
	if(newkeys == 16384)
	{
		if(IsPlayerInRangeOfPoint(playerid,20,2075.8750, -2173.1252, 1115.1290)){callcmd::selestcolorhh(playerid,"");}
	}
	if(newkeys == 8)
	{
		if(IsPlayerInRangeOfPoint(playerid,20,2075.8750, -2173.1252, 1115.1290)){callcmd::changecolorss(playerid,"");}
	}
	if(newkeys == 8192)
	{
		if(IsPlayerInRangeOfPoint(playerid,20,2075.8750, -2173.1252, 1115.1290)){callcmd::selestcolorhhss(playerid,"");}
	}
	if(newkeys == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid,20,2075.8750, -2173.1252, 1115.1290))
		{
			if(GetPlayerVirtualWorld(playerid) == world[playerid])
			{
				ShowPlayerDialog(playerid,17671,DIALOG_STYLE_MSGBOX, "{1E90FF}买车", "你真的想离开车展吗?", "是的", "不了");
				return true;
			}
			if(GetPlayerVirtualWorld(playerid) == world1[playerid])
			{
				ShowPlayerDialog(playerid,17682,DIALOG_STYLE_MSGBOX, "{1E90FF}买车", "你真的想离开车展吗?", "是的", "不了");
				return true;
			}
			if(GetPlayerVirtualWorld(playerid) == world2[playerid])
			{
				ShowPlayerDialog(playerid,17693,DIALOG_STYLE_MSGBOX, "{1E90FF}买车", "你真的想离开车展吗?", "是的", "不了");
				return true;
			}
		}
	}
	if(newkeys == 2)
	{
		if (PlayerToPoint(9.0,playerid,259.26099, -1232.58557, 74.72000))
		{
			if(PlayerInfo[playerid][pPhousekey] == 269)
			{
				MoveObject(vorota[0],259.26099, -1232.58557, 69.72000, 2.0);
				MoveObject(vorota[2],268.48770, -1225.76587, 69.72000, 2.0);
				Timer[6] = gettime()+5;
				SendErrorMessage(playerid,"大门敞开着，驶过.");
			}
		}
		if (PlayerToPoint(9.0,playerid,263.70630, -1333.29663, 55.62000))
		{
			if(PlayerInfo[playerid][pPhousekey] == 344)
			{
				MoveObject(vorota[1],263.70630, -1333.29663, 43.62000, 2.0);
				Timer[7] = gettime()+5;
				SendErrorMessage(playerid,"大门敞开着，驶过.");
			}
		}
	}
	/*if(newkeys & KEY_SPRINT && newkeys & KEY_JUMP)
	{
		if(!IsPlayerInAnyVehicle(playerid)) { if(times[playerid] == true) SetTimerEx("AntiBH",1000,false,"i",playerid); }
	}*/
	if(newkeys & KEY_FIRE || newkeys == 145 && oldkeys == 129 || (oldkeys & 128 && newkeys & 16))
	{
		if(IsAAntidm(playerid))
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
			    if(!IsPlayerInAnyVehicle(playerid))
			    {
			        SetPlayerArmedWeapon(playerid,0);
					ApplyAnimation(playerid,"ped", "endchat_03",4.1,0,0,0,0,0,1);
				    clearanim[playerid] = 4;
				    return 1;
				}
			}
		}
	}
	if(newkeys & KEY_HANDBRAKE && newkeys & KEY_ACTION)
	{
		if(IsAAntidm(playerid))
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
			    if(!IsPlayerInAnyVehicle(playerid))
			    {
			        SetPlayerArmedWeapon(playerid,0);
					ApplyAnimation(playerid,"ped", "endchat_03",4.1,0,0,0,0,0,1);
				    clearanim[playerid] = 4;
				    return 1;
				}
			}
		}
	}
	if(newkeys == KEY_CROUCH)
	{
		if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19 || proverkaforma[playerid] == 1)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerToPoint(8.0,playerid,290.2172,1822.6295,17.6406))
				{
					if (GetPlayerState(playerid) == 2)
					{
						if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 416 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 432 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 433)
						{
							SendServerMessage(playerid, "绕道而行!");
							return true;
						}
						new tmpcar = GetPlayerVehicleID(playerid);
						Q_SetVehiclePos(tmpcar, 282.0428, 1822.5503, 17.6406);
						TelePos[playerid][0] = 0.0;
						TelePos[playerid][1] = 0.0;
					}
				}
				else if(PlayerToPoint(8.0,playerid,282.0428,1822.5503,17.6406))
				{
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 416 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 432 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 433)
					{
						SendServerMessage(playerid, "绕道而行!");
						return true;
					}
					new tmpcar = GetPlayerVehicleID(playerid);
					Q_SetVehiclePos(tmpcar, 290.2172,1822.6295,17.6406);
					TelePos[playerid][0] = 0.0;
					TelePos[playerid][1] = 0.0;
					return true;
				}
			}
		}
	}
	if(newkeys & KEY_HANDBRAKE  && newkeys & KEY_SECONDARY_ATTACK )
	{
		if(IsAMafia(playerid))
		{
			new giveplayerid;
			if(GetPlayerState(playerid)!=PLAYER_STATE_ONFOOT) return true;
			if(GetPlayerState(giveplayerid)!=PLAYER_STATE_ONFOOT) return true;
			giveplayerid= GetClosestPlayer(playerid);
			new Float:health;
			GetPlayerHealth(giveplayerid,health);
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PlayerInfo[playerid][pMember] == 6)
				{
					if(KrishaOffer[giveplayerid] < MAX_SLOTS)
					{
						if(health <= 25)
						{
							SendServerMessage(playerid, "You beat the debtor to 25 hp, the roof was automatically installed!");
							PlayerInfo[giveplayerid][pKrisha] = 6;
							KrishaOffer[giveplayerid] = MAX_SLOTS;
							return true;
						}
					}
				}
			}
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PlayerInfo[playerid][pMember] == 5)
				{
					if(KrishaOffer[giveplayerid] < MAX_SLOTS)
					{
						if(health <= 25)
						{
							SendServerMessage(playerid, "You beat the debtor to 25 hp, the roof was automatically installed!");
							PlayerInfo[giveplayerid][pKrisha] = 5;
							KrishaOffer[giveplayerid] = MAX_SLOTS;
							return true;
						}
					}
				}
			}
			if(PlayerInfo[playerid][pMember] == 14)
			{
				if(KrishaOffer[giveplayerid] < MAX_SLOTS)
				{
					if(health <= 25)
					{
						SendServerMessage(playerid, "You beat the debtor to 25 hp, the roof was automatically installed!");
						PlayerInfo[giveplayerid][pKrisha] = 14;
						KrishaOffer[giveplayerid] = MAX_SLOTS;
						return true;
					}
				}
			}
		}
	}
	if(newkeys & KEY_HANDBRAKE  && newkeys & KEY_SECONDARY_ATTACK )
	{
		if(IsAMafia(playerid))
		{
			new giveplayerid;
			if(GetPlayerState(playerid)!=PLAYER_STATE_ONFOOT) return true;
			if(GetPlayerState(giveplayerid)!=PLAYER_STATE_ONFOOT) return true;
			giveplayerid= GetClosestPlayer(playerid);
			new Float:health;
			GetPlayerHealth(giveplayerid,health);
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PlayerInfo[giveplayerid][pKrisha] ==6)
				{
					if(health <= 25 && PlayerInfo[giveplayerid][pUseKrisha] !=0)
					{
						if(PlayerInfo[giveplayerid][pDolg] < 50) return SendServerMessage(playerid, "TA还没有赚到任何东西!");
						SendServerMessage(playerid, "You beat the debtor to 25 hp, the debt was dislodged");
						MafiaBank[2]+=PlayerInfo[giveplayerid][pDolg];
						SetOtherInt("MafiaBank[2]", MafiaBank[2]);
						PlayerInfo[giveplayerid][pDolg] = 0;
						PlayerInfo[giveplayerid][pUseKrisha] =0;
						return true;
					}
				}
			}
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PlayerInfo[giveplayerid][pKrisha] ==5)
				{
					if(health <= 25 && PlayerInfo[giveplayerid][pUseKrisha] !=0)
					{
						if(PlayerInfo[giveplayerid][pDolg] < 50) return SendServerMessage(playerid, "TA还没有赚到任何东西!");
						SendServerMessage(playerid, "You beat the debtor to 25 hp, the debt was dislodged");
						MafiaBank[0]+=PlayerInfo[giveplayerid][pDolg];
						SetOtherInt("MafiaBank[0]", MafiaBank[0]);
						PlayerInfo[giveplayerid][pDolg] = 0;
						PlayerInfo[giveplayerid][pUseKrisha] =0;
						return true;
					}
				}
			}
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PlayerInfo[giveplayerid][pKrisha] ==14)
				{
					if(health <= 25 && PlayerInfo[giveplayerid][pUseKrisha] !=0)
					{
						if(PlayerInfo[giveplayerid][pDolg] < 50) return SendServerMessage(playerid, "TA还没有赚到任何东西!");
						SendServerMessage(playerid, "You beat the debtor to 25 hp, the debt was dislodged");
						MafiaBank[1]+=PlayerInfo[giveplayerid][pDolg];
						SetOtherInt("MafiaBank[1]", MafiaBank[1]);
						PlayerInfo[giveplayerid][pDolg] = 0;
						PlayerInfo[giveplayerid][pUseKrisha] =0;
						return true;
					}
				}
			}
		}
	}
	if(newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK )
	{
		if(IsAAntidm(playerid))
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
			    if(!IsPlayerInAnyVehicle(playerid))
			    {
			    	SetPlayerArmedWeapon(playerid,0);
					ApplyAnimation(playerid,"ped", "endchat_03",4.1,0,0,0,0,0,1);
        			clearanim[playerid] = 10;
        			return 1;
				}
			}
		}
	}
	if(newkeys == KEY_SUBMISSION)
	{
	    callcmd::e(playerid,"");
	}
	if(newkeys == 16)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			if(IsABankomat(playerid))
			{
				if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { return true; }
				ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
				for(new x; x < 14; x ++) TextDrawShowForPlayer(playerid, ATM[x]);
				SelectTextDraw(playerid, COLOR_LIGHTBLUE);
				clicktd[playerid] = true;
				return true;
			}
			if(IsABank(playerid))
			{
				if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { return true; }
				ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
    			for(new i; i < 25; i++)
				{
					TextDrawShowForPlayer(playerid, bankmenu[i]);
    				SelectTextDraw(playerid,0xA3B4C5FF);
    				clicktd[playerid] = true;
				}
				return true;
			}
		}
	}
	if(newkeys == 16)
	{
		if(IsAFoods(playerid))
		{
			ApplyAnimation(playerid,"PED","fucku",4.1,0,0,0,0,0,1);
			SendErrorMessage(playerid, "可能不起作用!");
			return true;
		}
	}
	if(newkeys == KEY_JUMP)
	{
		if(!IsAMafia(playerid) && !IsAGang(playerid)) return true;
		{
			if(usemats[playerid] == 1)
			{
				RemovePlayerAttachedObject(playerid,1);
				SendServerMessage(playerid, "你放下了盒子");
				PlayerInfo[playerid][pMats] -= 250;
				usemats[playerid] = 0;
				usegruz[playerid] = 0;
				return true;
			}
		}
	}
	if(PlayerInfo[playerid][pGraffityStop] == 1)
	{
		if(newkeys == KEY_SECONDARY_ATTACK)
		{
 			DisablePlayerCheckpoint(playerid);
	    	RemovePlayerAttachedObject(playerid,0);
	    	ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
	    	SendServerMessage(playerid, "你放下了盒子");
	    	SetPVarInt(playerid,"MinerCount", 0);
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	    	SetPlayerAttachedObject(playerid,0,1356,6,0.166000,-0.045999,0.073999,89.099990,-9.800000,105.999992,0.550999,0.520999,0.517999);
	    	PlayerInfo[playerid][pGraffityStop] = 0;
     		ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
     		return true;
 		}
	}
	if(newkeys & KEY_JUMP)
	{
	    if(PlayerInfo[playerid][pGraffityStop] == 1)
	    {
 			DisablePlayerCheckpoint(playerid);
	    	RemovePlayerAttachedObject(playerid,0);
	    	ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
	    	SendServerMessage(playerid, "你放下了盒子");
	    	SetPVarInt(playerid,"MinerCount", 0);
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	    	SetPlayerAttachedObject(playerid,0,1356,6,0.166000,-0.045999,0.073999,89.099990,-9.800000,105.999992,0.550999,0.520999,0.517999);
	    	PlayerInfo[playerid][pGraffityStop] = 0;
     		ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
     		return true;
	  	}
	}
	if(newkeys == KEY_FIRE)
	{
		if(!IsAMafia(playerid) && !IsAGang(playerid)) return true;
		{
			if(usemats[playerid] == 1)
			{
				RemovePlayerAttachedObject(playerid,1);
				SendServerMessage(playerid, "你放下了盒子");
				PlayerInfo[playerid][pMats] -= 250;
				usemats[playerid] = 0;
				usegruz[playerid] = 0;
				return true;
			}
		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK || (newkeys & KEY_SUBMISSION && newkeys & KEY_SECONDARY_ATTACK))
	{
		if(!IsAMafia(playerid) && !IsAGang(playerid)) return true;
		{
			if(usemats[playerid] == 1)
			{
				RemovePlayerAttachedObject(playerid,1);
				SendServerMessage(playerid, "你放下了盒子");
				PlayerInfo[playerid][pMats] -= 250;
				usemats[playerid] = 0;
				usegruz[playerid] = 0;
				return true;
			}
		}
	}
	return true;
}

publics: OnVehicleStreamIn(vehicleid, forplayerid)
{
	OnUpdateVehiclePos(vehicleid, 0);
	SetVehicleParamsForPlayer(vehicleid, forplayerid, 0, gCarLock[vehicleid]);
}

publics: OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	if(PlayerInfo[playerid][pMember] == 11)
	{
		if(duty[playerid] == 0) return SendServerMessage(playerid, "你需要在执照中心开始一个工作日");
		new listitems[] = " [0] 驾驶执照\n [1] 飞机执照\n [2] 钓鱼执照\n [3] 船只执照\n [4] 武器执照\n [5] 营业执照\n [6] 开始上课\n [7] 完成课程";
		ShowPlayerDialog(playerid, 7777, DIALOG_STYLE_LIST, "{1E90FF}颁发执照", listitems, "选择", "退出");
		ChosenPlayer[playerid] = clickedplayerid;
		SetPVarInt(ChosenPlayer[playerid],"PlayerSell",playerid);
	}
	return true;
}

stock IsMonth31(month)
{
	switch (month)
	{
	case 1: return true;
	case 3: return true;
	case 5: return true;
	case 7: return true;
	case 8: return true;
	case 10: return true;
	case 12: return true;
	default: return false;
	}
	return false;
}

stock IsMonth29(year)
{
	new y = 2000;
	for(new i = 4; i < 3000; i += 4) if ((y+i) == year) return true;
	return false;
}

stock strvalEx(const string[])
{
	if(strlen(string) >= 50) return false;
	return strval(string);
}
printr(message[])
{
	FixConsole(message);
	print(message);
	return true;
}

stock encode_lights(light1, light2, light3, light4)
{
	return light1 | (light2 << 1) | (light3 << 2) | (light4 << 3);
}

publics: GiveMoney(playerid, amount)
{
	PlayerInfo[playerid][pCash] += amount;
	GivePlayerMoney(playerid, amount);
}

publics: ResetMoney(playerid)
{
	PlayerInfo[playerid][pCash] = 0;
	ResetPlayerMoney(playerid);
}
stock IsAnAmbulance(carid)
{
	if(carid >= medicsls[0] && carid <= medicsls[5])
	{
		return true;
	}
	return false;
}

stock CarLic(carid)
{
	switch (GetVehicleModel(carid))
	{
	case 400..416,418..424,426..429,431..445,449,451,455,456,458,459,461: return true;
	case 463,466..468,470,471,474,475,477..480,482,483,485,486,489..492,494..496,498..508: return true;
	case 514..518,521..531,533..537,539..547,549..551,554..562,564..568,572..576,578..583,585..589,596..605,609: return true;
	}
	return false;
}

stock CreateVehicles() // тачки сервера
{
	/// маршруктки
	taxicar[0] = AddStaticVehicleEx(418,1098.3833,-1760.9425,13.4444,90.1169,241,241,SPAWN_CARS);
	taxicar[1] = AddStaticVehicleEx(418,1098.3768,-1757.8010,13.4457,90.1169,241,241,SPAWN_CARS);
	taxicar[2] = AddStaticVehicleEx(418,1098.3713,-1755.1431,13.4469,90.1169,241,241,SPAWN_CARS);
	taxicar[3] = AddStaticVehicleEx(418,1098.3943,-1766.6619,13.4419,90.1169,241,241,SPAWN_CARS);
	taxicar[4] = AddStaticVehicleEx(418,1098.4001,-1769.5807,13.4406,90.1169,241,241,SPAWN_CARS);
	taxicar[5] = AddStaticVehicleEx(418,1098.4121,-1775.5410,13.4380,90.1169,241,241,SPAWN_CARS);
	taxicar[6] = AddStaticVehicleEx(418,1062.6476,-1775.5210,13.4375,269.8810,241,241,SPAWN_CARS);
	taxicar[7] = AddStaticVehicleEx(418,1062.6537,-1772.6727,13.4610,269.8824,241,241,SPAWN_CARS);
	taxicar[8] = AddStaticVehicleEx(418,1062.6599,-1769.7968,13.4863,269.8804,241,241,SPAWN_CARS);
	taxicar[9] = AddStaticVehicleEx(418,1062.7211,-1740.2498,13.6341,269.8804,241,241,SPAWN_CARS);
	taxicar[10] = AddStaticVehicleEx(418,1062.7156,-1743.0381,13.6201,269.8804,241,241,SPAWN_CARS);
	taxicar[11] = AddStaticVehicleEx(418,1062.7090,-1746.2123,13.6043,269.8804,241,241,SPAWN_CARS);
	taxicar[12] = AddStaticVehicleEx(418,1062.6974,-1751.9136,13.5757,269.8804,241,241,SPAWN_CARS);
	taxicar[13] = AddStaticVehicleEx(418,1083.8550,-1755.0043,13.5596,269.8804,241,241,SPAWN_CARS);
	taxicar[14] = AddStaticVehicleEx(418,1083.8427,-1760.8958,13.5301,269.8804,241,241,SPAWN_CARS);
	taxicar[15] = AddStaticVehicleEx(418,1083.6658,-1766.4940,13.5021,269.8804,241,241,SPAWN_CARS);
	taxicar[16] = AddStaticVehicleEx(418,1083.8770,-1772.4791,13.4722,269.8804,241,241,SPAWN_CARS);
	new tshaska0 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new tshaska1 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new tshaska2 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new tshaska3 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new tshaska4 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new tshaska5 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new tshaska6 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new tshaska7 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new tshaska8 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new tshaska9 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new tshaska10 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new tshaska11 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new tshaska12 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new tshaska13 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new tshaska14 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new tshaska15 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new tshaska16 = CreateObject(19309,0,0,0,0,0,0,100.0);
	SetObjectMaterialText(tshaska0, "小巴", 0, 50, "Tahoma", 27, 1, -1, 0x66CC00AA, 1);
	SetObjectMaterialText(tshaska1, "小巴", 0, 50, "Tahoma", 27, 1, -1, 0x66CC00AA, 1);
	SetObjectMaterialText(tshaska2, "小巴", 0, 50, "Tahoma", 27, 1, -1, 0x66CC00AA, 1);
	SetObjectMaterialText(tshaska3, "小巴", 0, 50, "Tahoma", 27, 1, -1, 0x66CC00AA, 1);
	SetObjectMaterialText(tshaska4, "小巴", 0, 50, "Tahoma", 27, 1, -1, 0x66CC00AA, 1);
	SetObjectMaterialText(tshaska5, "小巴", 0, 50, "Tahoma", 27, 1, -1, 0x66CC00AA, 1);
	SetObjectMaterialText(tshaska6, "小巴", 0, 50, "Tahoma", 27, 1, -1, 0x66CC00AA, 1);
	SetObjectMaterialText(tshaska7, "小巴", 0, 50, "Tahoma", 27, 1, -1, 0x66CC00AA, 1);
	SetObjectMaterialText(tshaska8, "小巴", 0, 50, "Tahoma", 27, 1, -1, 0x66CC00AA, 1);
	SetObjectMaterialText(tshaska9, "小巴", 0, 50, "Tahoma", 27, 1, -1, 0x66CC00AA, 1);
	SetObjectMaterialText(tshaska10, "小巴", 0, 50, "Tahoma", 27, 1, -1, 0x66CC00AA, 1);
	SetObjectMaterialText(tshaska11, "小巴", 0, 50, "Tahoma", 27, 1, -1, 0x66CC00AA, 1);
	SetObjectMaterialText(tshaska12, "小巴", 0, 50, "Tahoma", 27, 1, -1, 0x66CC00AA, 1);
	SetObjectMaterialText(tshaska13, "小巴", 0, 50, "Tahoma", 27, 1, -1, 0x66CC00AA, 1);
	SetObjectMaterialText(tshaska14, "小巴", 0, 50, "Tahoma", 27, 1, -1, 0x66CC00AA, 1);
	SetObjectMaterialText(tshaska15, "小巴", 0, 50, "Tahoma", 27, 1, -1, 0x66CC00AA, 1);
	SetObjectMaterialText(tshaska16, "小巴", 0, 50, "Tahoma", 27, 1, -1, 0x66CC00AA, 1);
	AttachObjectToVehicle(tshaska0, taxicar[0], 0.0, 0.0, 1.12, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(tshaska1, taxicar[1], 0.0, 0.0, 1.12, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(tshaska2, taxicar[2], 0.0, 0.0, 1.12, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(tshaska3, taxicar[3], 0.0, 0.0, 1.12, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(tshaska4, taxicar[4], 0.0, 0.0, 1.12, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(tshaska5, taxicar[5], 0.0, 0.0, 1.12, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(tshaska6, taxicar[6], 0.0, 0.0, 1.12, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(tshaska7, taxicar[7], 0.0, 0.0, 1.12, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(tshaska8, taxicar[8], 0.0, 0.0, 1.12, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(tshaska9, taxicar[9], 0.0, 0.0, 1.12, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(tshaska10, taxicar[10], 0.0, 0.0, 1.12, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(tshaska11, taxicar[11], 0.0, 0.0, 1.12, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(tshaska12, taxicar[12], 0.0, 0.0, 1.12, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(tshaska13, taxicar[13], 0.0, 0.0, 1.12, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(tshaska14, taxicar[14], 0.0, 0.0, 1.12, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(tshaska15, taxicar[15], 0.0, 0.0, 1.12, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(tshaska16, taxicar[16], 0.0, 0.0, 1.12, 0.0, 0.0, 0.0);
	for(new i=0; i<MAX_TAXI; i++)
	{
	    TAXI_ID[i] = AddStaticVehicleEx(TaxiInfo[i][tModel], TaxiInfo[i][tPosX], TaxiInfo[i][tPosY], TaxiInfo[i][tPosZ], TaxiInfo[i][tPosA], 1, 1,900);
		SetVehicleToRespawn(TAXI_ID[i]);
	}
	//====================================[ Фуры дальнобойщиков ]==================================//
    furii[0] = AddStaticVehicleEx(403,1675.8793,-1097.7195,24.5118,92.0985,4,1,SPAWN_CARS); // Фура 1
    furii[1] = AddStaticVehicleEx(403,1675.5231,-1102.3929,24.5122,90.8991,4,1,SPAWN_CARS); // Фура 2
    furii[2] = AddStaticVehicleEx(403,1675.6996,-1107.1904,24.5118,89.2890,4,1,SPAWN_CARS); // Фура 3
    furii[3] = AddStaticVehicleEx(514,1675.5991,-1111.4119,24.4923,90.0651,4,1,SPAWN_CARS); // Фура 4
    furii[4] = AddStaticVehicleEx(514,1675.8276,-1115.7159,24.4928,89.7384,4,1,SPAWN_CARS); // Фура 5
    furii[5] = AddStaticVehicleEx(514,1675.7611,-1120.2181,24.4943,91.3780,4,1,SPAWN_CARS); // Фура 6
    furii[6] = AddStaticVehicleEx(515,1677.0577,-1125.0500,24.9295,88.5855,4,4,SPAWN_CARS); // Фура 7
    furii[7] = AddStaticVehicleEx(515,1676.1169,-1129.2706,24.9260,89.9432,4,4,SPAWN_CARS); // Фура 8
	AddStaticVehicleEx(435,894.1283,-1234.9071,16.2691,357.9176,1,1,SPAWN_CARS); // трейлер и 435
    AddStaticVehicleEx(435,888.9652,-1234.7203,16.2838,357.9176,1,1,SPAWN_CARS); // трейлер2 и 435
    AddStaticVehicleEx(435,885.0090,-1234.5771,16.2951,357.9176,1,1,SPAWN_CARS); // трейлер3 и 435
    AddStaticVehicleEx(435,880.2448,-1234.4048,16.3087,357.9176,1,1,SPAWN_CARS); // трейлер4 и 435
    AddStaticVehicleEx(435,873.8111,-1234.1722,16.3271,357.9176,1,1,SPAWN_CARS); // трейлер5 и 435
    AddStaticVehicleEx(435,868.0374,-1233.9634,16.3436,357.9176,1,1,SPAWN_CARS); // трейлер6 и 435
    AddStaticVehicleEx(435,901.2273,-1235.1632,16.2489,357.9176,1,1,SPAWN_CARS); // трейлер7 и 435
    AddStaticVehicleEx(435,902.1908,-1208.6283,16.7182,178.3153,1,1,SPAWN_CARS); // трейлер8 и 435
    //====================================[ Аренда лимузин у церкви]==================================//
    rentcarcerkva[0] = AddStaticVehicleEx(409,-1982.18701172,1103.81103516,53.14199829,0.00000000,1,1,SPAWN_CARS); //Stretch
	rentcarcerkva[1] = AddStaticVehicleEx(409,-1982.39196777,1117.09204102,53.04899979,0.00000000,1,1,SPAWN_CARS); //Stretch
	rentcarcerkva[2] = AddStaticVehicleEx(409,-1982.69995117,1129.66198730,53.10900116,180.00000000,1,1,SPAWN_CARS); //Stretch
	//====================================[ Аренда машин механиков ]==================================//
	mehan[0] = AddStaticVehicleEx(525,1629.5000000,-1107.6000000,23.9000000,270.0000000,1,106,SPAWN_CARS); //Tow Truck
	mehan[1] = AddStaticVehicleEx(525,1629.5000000,-1102.8000000,23.9000000,270.0000000,1,106,SPAWN_CARS); //Tow Truck
	mehan[2] = AddStaticVehicleEx(525,1629.5000000,-1098.5000000,23.9000000,270.0000000,1,106,SPAWN_CARS); //Tow Truck
	mehan[3] = AddStaticVehicleEx(525,1629.5000000,-1094.0000000,23.9000000,270.0000000,1,106,SPAWN_CARS); //Tow Truck
	mehan[4] = AddStaticVehicleEx(525,1629.5000000,-1089.7000000,23.9000000,270.0000000,1,106,SPAWN_CARS); //Tow Truck
	mehan[5] = AddStaticVehicleEx(525,1629.5000000,-1085.0000000,23.9000000,270.0000000,1,106,SPAWN_CARS); //Tow Truck
	mehan[6] = AddStaticVehicleEx(525,1621.1000000,-1102.8000000,23.9000000,90.0000000,1,106,SPAWN_CARS); //Tow Truck
	mehan[7] = AddStaticVehicleEx(525,1621.1000000,-1107.6000000,23.9000000,90.0000000,1,106,SPAWN_CARS); //Tow Truck
	mehan[8] = AddStaticVehicleEx(525,1621.1000000,-1098.5000000,23.9000000,90.0000000,1,106,SPAWN_CARS); //Tow Truck
	mehan[9] = AddStaticVehicleEx(525,1621.1000000,-1094.0000000,23.9000000,90.0000000,1,106,SPAWN_CARS); //Tow Truck
	mehan[10] = AddStaticVehicleEx(525,1621.1000000,-1089.8000000,23.9000000,90.0000000,1,106,SPAWN_CARS); //Tow Truck
	mehan[11] = AddStaticVehicleEx(525,1621.1000000,-1085.1000000,23.9000000,90.0000000,1,106,SPAWN_CARS); //Tow Truck
	mehan[12] = AddStaticVehicleEx(525,-78.6000000,-1198.6000000,2.2000000,0.0000000,1,106,SPAWN_CARS); //Tow Truck
	mehan[13] = AddStaticVehicleEx(525,-83.0000000,-1197.3000000,2.2000000,0.0000000,1,106,SPAWN_CARS); //Tow Truck
	mehan[14] = AddStaticVehicleEx(525,-87.6000000,-1196.3000000,2.2000000,0.0000000,1,106,SPAWN_CARS); //Tow Truck
	mehan[15] = AddStaticVehicleEx(525,-92.1000000,-1195.4000000,2.2000000,0.0000000,1,106,SPAWN_CARS); //Tow Truck
	mehan[16] = AddStaticVehicleEx(525,-96.4000000,-1194.6000000,2.2000000,0.0000000,1,106,SPAWN_CARS); //Tow Truck
	mehan[17] = AddStaticVehicleEx(525,-1914.3000000,306.0000000,41.0000000,120.0000000,1,106,SPAWN_CARS); //Tow Truck
	mehan[18] = AddStaticVehicleEx(525,-1913.9000000,300.2999900,41.0000000,119.9980000,1,106,SPAWN_CARS); //Tow Truck
	mehan[19] = AddStaticVehicleEx(525,-1913.9000000,294.2999900,41.0000000,119.9980000,1,106,SPAWN_CARS); //Tow Truck
	mehan[20] = AddStaticVehicleEx(525,-1913.9000000,289.0000000,41.0000000,119.9980000,1,106,SPAWN_CARS); //Tow Truck
	mehan[21] = AddStaticVehicleEx(525,-1913.9000000,283.7999900,41.0000000,119.9980000,1,106,SPAWN_CARS); //Tow Truck
	mehan[22] = AddStaticVehicleEx(525,-1913.9000000,278.5000000,41.0000000,119.9980000,1,106,SPAWN_CARS); //Tow Truck
	mehan[23] = AddStaticVehicleEx(525,2623.8000000,1128.4000000,10.8000000,240.0000000,1,106,SPAWN_CARS); //Tow Truck
	mehan[24] = AddStaticVehicleEx(525,2623.8000000,1123.3000000,10.8000000,239.9960000,1,106,SPAWN_CARS); //Tow Truck
	mehan[25] = AddStaticVehicleEx(525,2623.8000000,1117.7000000,10.8000000,239.9960000,1,106,SPAWN_CARS); //Tow Truck
	mehan[26] = AddStaticVehicleEx(525,2623.8000000,1112.2000000,10.8000000,239.9960000,1,106,SPAWN_CARS); //Tow Truck
	mehan[27] = AddStaticVehicleEx(525,2623.8000000,1106.5000000,10.8000000,239.9960000,1,106,SPAWN_CARS); //Tow Truck
	mehan[28] = AddStaticVehicleEx(525,2623.8000000,1101.5000000,10.8000000,239.9960000,1,106,SPAWN_CARS); //Tow Truck
	mehan[29] = AddStaticVehicleEx(525,2623.8000000,1096.4000000,10.8000000,239.9960000,1,106,SPAWN_CARS); //Tow Truck
	//====================================[ Бульдозеры - карьера ]==================================//
	nouncar[0] = AddStaticVehicleEx(486,692.3820,882.3915,-38.9564,73.5352,1,1,SPAWN_CARS); //
	nouncar[1] = AddStaticVehicleEx(486,693.6558,887.1174,-38.6717,76.6255,1,1,SPAWN_CARS); //
	nouncar[2] = AddStaticVehicleEx(486,694.4067,892.3955,-38.7377,85.1006,1,1,SPAWN_CARS); //
	nouncar[3] = AddStaticVehicleEx(486,694.3974,897.6894,-38.8131,95.0132,1,1,SPAWN_CARS); //
	nouncar[4] = AddStaticVehicleEx(486,692.9650,903.2133,-38.9314,113.8649,1,1,SPAWN_CARS); //
	nouncar[5] = AddStaticVehicleEx(486,689.8938,907.7513,-39.3230,131.7550,1,1,SPAWN_CARS); //
	nouncar[6] = AddStaticVehicleEx(486,691.5724,878.0186,-39.3436,79.6954,1,1,SPAWN_CARS); //
	nouncar[7] = AddStaticVehicleEx(486,686.1878,911.6445,-39.7643,136.7734,1,1,SPAWN_CARS); //
	nouncar[8] = AddStaticVehicleEx(486,683.3029,915.0306,-40.0777,126.9964,1,1,SPAWN_CARS); //
	//====================================[ Автобусы всех городов ]==================================//
	buscar[0] = AddStaticVehicleEx(431,1558.6442,-1014.2372,24.0062,180.2764,2,6,SPAWN_CARS); //
	buscar[1] = AddStaticVehicleEx(431,1563.0188,-1014.2044,24.0073,180.1162,2,6,SPAWN_CARS); //
	buscar[2] = AddStaticVehicleEx(431,1567.3496,-1014.2218,24.0041,179.1621,2,6,SPAWN_CARS); //
	buscar[3] = AddStaticVehicleEx(431,1571.9456,-1014.1213,24.0112,180.1776,2,6,SPAWN_CARS); //
	buscar[4] = AddStaticVehicleEx(431,1576.5427,-1014.0023,24.0088,179.9429,2,6,SPAWN_CARS); //
	buscar[5] = AddStaticVehicleEx(431,1581.5945,-1013.3597,24.0083,185.7416,2,6,SPAWN_CARS); //
	buscar[6] = AddStaticVehicleEx(431,1586.1919,-1012.7946,24.0086,185.9320,2,6,SPAWN_CARS); //
	buscar[7] = AddStaticVehicleEx(431,1590.5437,-1012.3279,24.0098,186.1272,2,6,SPAWN_CARS); //
	buscar[8] = AddStaticVehicleEx(431,1595.1151,-1011.7958,24.0070,186.4672,2,6,SPAWN_CARS); //
	buscar[9] = AddStaticVehicleEx(431,1599.5419,-1011.3151,24.0038,185.7627,2,6,SPAWN_CARS); //
	buscar[10] = AddStaticVehicleEx(437,1604.3047,-1010.5965,24.0396,177.8144,3,3,SPAWN_CARS); //
	buscar[11] = AddStaticVehicleEx(437,1608.7588,-1010.6608,24.0396,177.5564,3,3,SPAWN_CARS); //
	buscar[12] = AddStaticVehicleEx(437,1613.2377,-1010.7612,24.0376,178.2260,3,3,SPAWN_CARS); //
	buscar[13] = AddStaticVehicleEx(437,1617.7178,-1010.8320,24.0358,179.1110,3,3,SPAWN_CARS); //
	buscar[14] = AddStaticVehicleEx(437,1623.1877,-1012.0567,24.0318,161.9070,3,3,SPAWN_CARS); //
	buscar[15] = AddStaticVehicleEx(437,1627.6073,-1013.4907,24.0317,162.6594,20,20,SPAWN_CARS); //
	buscar[16] = AddStaticVehicleEx(437,1631.8489,-1014.7670,24.0318,162.4851,20,20,SPAWN_CARS); //
	buscar[17] = AddStaticVehicleEx(437,1636.0364,-1016.0609,24.0318,162.6077,20,20,SPAWN_CARS); //
	buscar[18] = AddStaticVehicleEx(437,1640.3051,-1017.3679,24.0317,161.7494,20,20,SPAWN_CARS); //
	buscar[19] = AddStaticVehicleEx(431,2806.2493,1367.7533,10.8510,270.4489,16,86,SPAWN_CARS); // автобусы лв
	buscar[20] = AddStaticVehicleEx(431,2806.3394,1362.8693,10.8541,270.1660,16,86,SPAWN_CARS); //
	buscar[21] = AddStaticVehicleEx(431,2806.3599,1358.1427,10.8476,270.0286,16,86,SPAWN_CARS); //
	buscar[22] = AddStaticVehicleEx(431,2806.4082,1353.3931,10.8522,270.1113,16,86,SPAWN_CARS); //
	buscar[23] = AddStaticVehicleEx(437,2806.5791,1348.6183,10.8833,269.8230,16,86,SPAWN_CARS); //
	buscar[24] = AddStaticVehicleEx(437,2806.6074,1343.7616,10.8833,270.5894,16,86,SPAWN_CARS); //
	buscar[25] = AddStaticVehicleEx(437,2806.5837,1338.9972,10.8857,269.7455,16,86,SPAWN_CARS); //
	buscar[26] = AddStaticVehicleEx(437,2806.5696,1334.1976,10.8527,269.5435,16,86,SPAWN_CARS); //
	buscar[27] = AddStaticVehicleEx(431,-1974.3689,171.6140,27.7924,90.0751,1,4,SPAWN_CARS); // автобусы сф
	buscar[28] = AddStaticVehicleEx(431,-1974.3839,176.8849,27.7927,90.0518,1,4,SPAWN_CARS); //
	buscar[29] = AddStaticVehicleEx(431,-1974.3860,181.7248,27.7330,89.4794,1,4,SPAWN_CARS); //
	buscar[30] = AddStaticVehicleEx(431,-1974.4037,186.7716,27.6468,89.9690,1,4,SPAWN_CARS); //
	buscar[31] = AddStaticVehicleEx(437,-1974.7349,191.6180,27.6194,90.4808,10,10,SPAWN_CARS); //
	buscar[32] = AddStaticVehicleEx(437,-1974.7974,196.7498,27.5341,90.2381,10,10,SPAWN_CARS); //
	buscar[33] = AddStaticVehicleEx(437,-1974.8387,202.3020,27.4706,89.9567,10,10,SPAWN_CARS); //
	buscar[34] = AddStaticVehicleEx(437,1644.6718,-1018.8337,24.0317,161.6114,20,20,SPAWN_CARS);
	buscar[35] = AddStaticVehicleEx(431,1278.5420,-1799.1348,13.4897,180.0011,1,1,SPAWN_CARS); // автобус респаун
    buscar[36] = AddStaticVehicleEx(431,1272.8939,-1799.1594,13.5016,179.9940,1,1,SPAWN_CARS); // автобус респаун
    buscar[37] = AddStaticVehicleEx(431,1267.2555,-1799.3193,13.5110,179.7631,1,1,SPAWN_CARS); // автобус респаун
    buscar[38] = AddStaticVehicleEx(431,1261.4353,-1799.3138,13.5186,180.0712,1,1,SPAWN_CARS); // автобус респаун
    buscar[39] = AddStaticVehicleEx(437,1200.6388,-1827.3286,13.5409,269.9492,1,1,SPAWN_CARS); // автобус респаун
    buscar[40] = AddStaticVehicleEx(437,1200.5763,-1835.3561,13.5347,270.0127,1,1,SPAWN_CARS); // автобус респаун
	//====================================[ Развозчик продуктов ]==================================//
	jobproduct[0] = AddStaticVehicleEx(456,2786.5605,-2417.7188,13.8075,91.2355,-1,-1,SPAWN_CARS); //
	jobproduct[1] = AddStaticVehicleEx(456,2788.2126,-2494.3130,13.8072,91.2355,-1,-1,SPAWN_CARS); //
	jobproduct[2] = AddStaticVehicleEx(440,2737.9542,-2388.6167,13.7532,179.9226,-1,-1,SPAWN_CARS); //
	jobproduct[3] = AddStaticVehicleEx(440,2741.5295,-2388.6218,13.7531,179.9226,-1,-1,SPAWN_CARS); //
	jobproduct[4] = AddStaticVehicleEx(440,2745.1663,-2388.6270,13.7531,179.9226,-1,-1,SPAWN_CARS); //
	jobproduct[5] = AddStaticVehicleEx(440,2748.7155,-2388.6328,13.7531,179.9226,-1,-1,SPAWN_CARS); //
	jobproduct[6] = AddStaticVehicleEx(440,2746.6423,-2462.8911,13.7525,272.3864,-1,-1,SPAWN_CARS); //
	jobproduct[7] = AddStaticVehicleEx(440,2746.7739,-2466.1138,13.7879,272.3806,-1,-1,SPAWN_CARS); //
	jobproduct[8] = AddStaticVehicleEx(440,2752.3909,-2388.6169,13.7603,179.6397,-1,-1,SPAWN_CARS); //
	jobproduct[9] = AddStaticVehicleEx(440,2746.5908,-2459.5146,13.7636,270.5418,-1,-1,SPAWN_CARS); //
	jobproduct[10] = AddStaticVehicleEx(440,2746.7878,-2447.9821,13.7620,268.9051,-1,-1,SPAWN_CARS); //
	jobproduct[11] = AddStaticVehicleEx(440,2746.8450,-2444.7056,13.7622,268.9051,-1,-1,SPAWN_CARS); //
	jobproduct[12] = AddStaticVehicleEx(440,2746.8850,-2441.3806,13.7623,268.9051,-1,-1,SPAWN_CARS); //
	jobproduct[13] = AddStaticVehicleEx(440,2746.9553,-2469.3800,13.7879,272.3806,-1,-1,SPAWN_CARS); //
	//====================================[ Развозчик бензина ]==================================//
	fuelcar[0] = AddStaticVehicleEx(583,285.5172,1394.7618,10.1267,92.0947,1,1,SPAWN_CARS); //
	fuelcar[1] = AddStaticVehicleEx(583,285.6495,1391.8717,10.1305,92.1380,1,1,SPAWN_CARS); //
	fuelcar[2] = AddStaticVehicleEx(583,285.7787,1388.7703,10.1264,92.2174,1,1,SPAWN_CARS); //
	fuelcar[3] = AddStaticVehicleEx(583,285.9521,1385.6863,10.1264,94.4238,1,1,SPAWN_CARS); //
	fuelcar[4] = AddStaticVehicleEx(583,286.1293,1382.5796,10.1265,94.0490,1,1,SPAWN_CARS); //
	fuelcar[5] = AddStaticVehicleEx(583,286.2761,1379.4426,10.1264,92.8482,1,1,SPAWN_CARS); //
	fuelcar[6] = AddStaticVehicleEx(583,286.3885,1376.5985,10.1264,92.0819,1,1,SPAWN_CARS); //
	fuelcar[7] = AddStaticVehicleEx(403,283.5932,1366.8313,11.1921,89.7761,2,2,SPAWN_CARS); //
	fuelcar[8] = AddStaticVehicleEx(403,283.7147,1362.2080,11.1926,89.5164,2,2,SPAWN_CARS); //
	fuelcar[9] = AddStaticVehicleEx(403,283.6336,1357.1893,11.2216,89.7186,2,2,SPAWN_CARS); //
	fuelcar[10] = AddStaticVehicleEx(403,283.5963,1352.5117,11.1817,89.7769,2,2,SPAWN_CARS); //
	fuelcar[11] = AddStaticVehicleEx(403,283.6777,1347.7845,11.1648,89.7439,2,2,SPAWN_CARS); //
	fuelcar[12] = AddStaticVehicleEx(403,283.5008,1342.9812,11.1682,89.0126,2,2,SPAWN_CARS); //
	fuelcar[13] = AddStaticVehicleEx(584,281.5816,1442.2512,11.6653,90.5705,1,1,SPAWN_CARS); //
	fuelcar[14] = AddStaticVehicleEx(584,281.5816,1446.2512,11.6653,90.5705,1,1,SPAWN_CARS); //
	fuelcar[15] = AddStaticVehicleEx(584,281.5816,1450.2512,11.6653,90.5705,1,1,SPAWN_CARS); //
	fuelcar[16] = AddStaticVehicleEx(584,281.5816,1454.2512,11.6653,90.5705,1,1,SPAWN_CARS); //
	fuelcar[17] = AddStaticVehicleEx(584,281.5816,1458.2512,11.6653,90.5705,1,1,SPAWN_CARS); //
	fuelcar[18] = AddStaticVehicleEx(584,281.5816,1462.2512,11.6653,90.5705,1,1,SPAWN_CARS); //
	fuelcar[19] = AddStaticVehicleEx(584,281.5816,1466.2512,11.6653,90.5705,1,1,SPAWN_CARS); //
	fuelcar[20] = AddStaticVehicleEx(584,281.5816,1470.2512,11.6653,90.5705,1,1,SPAWN_CARS); //
	fuelcar[21] = AddStaticVehicleEx(583,286.5170,1373.5460,10.1264,92.8148,1,1,SPAWN_CARS); //
	//====================================[ Мэдики ЛС ]==================================//
	medicsls[0] = AddStaticVehicleEx(416,1178.5431,-1338.7671,14.0167,270.0624,1,6,SPAWN_CARS); // Ambulance 0
	medicsls[1] = AddStaticVehicleEx(416,1178.0116,-1308.9192,13.9939,268.2672,1,6,SPAWN_CARS); // Ambulance 1
	medicsls[2] = AddStaticVehicleEx(487,1181.8800,-1361.3124,14.3347,269.0836,1,3,SPAWN_CARS); // Ambulance 2
	medicsls[3] = AddStaticVehicleEx(416,1145.6483,-1311.8895,13.8003,91.8553,1,3,SPAWN_CARS); // Ambulance 3
	medicsls[4] = AddStaticVehicleEx(416,1145.3275,-1306.1224,13.8045,88.2659,1,3,SPAWN_CARS); // Ambulance 4
	medicsls[5] = AddStaticVehicleEx(416,1145.8798,-1302.2570,13.8015,88.1521,1,3,SPAWN_CARS); // Ambulance 5
    medicsls[6] = AddStaticVehicleEx(489,1123.7997,-1329.0176,12.9041,359.9820,1,3,SPAWN_CARS); // paru medic
    medicsls[7] = AddStaticVehicleEx(489,1110.9640,-1327.4535,13.0349,0.3266,1,3,SPAWN_CARS); // paru medic
    medicsls[8] = AddStaticVehicleEx(489,1097.6215,-1327.3960,13.0396,2.5296,1,3,SPAWN_CARS); // paru medic
   	new myobject4 = CreateObject(11701,0,0,0,0,0,0,0.0);
	new myobject5 = CreateObject(11701,0,0,0,0,0,0,0.0);
	new myobject6 = CreateObject(11701,0,0,0,0,0,0,0.0);
	AttachObjectToVehicle(myobject4,medicsls[6],0.0, 0.0, 1.15, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(myobject5,medicsls[7],0.0, 0.0, 1.15, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(myobject6,medicsls[8],0.0, 0.0, 1.15, 0.0, 0.0, 0.0);
	//====================================[ SFPD ]==================================//
	sfpdcar[0] = AddStaticVehicleEx(427,-1638.7850,653.7558,-5.1094,271.5658,1,79,SPAWN_CARS); // SFPD Enforcer 0
	sfpdcar[1] = AddStaticVehicleEx(427,-1638.8691,657.6266,-5.1104,271.5658,1,79,SPAWN_CARS); // SFPD Enforcer 1
    sfpdcar[2] = AddStaticVehicleEx(427,-1638.9778,661.6664,-5.1103,271.5658,1,79,SPAWN_CARS); // SFPD Enforcer 2
	sfpdcar[3] = AddStaticVehicleEx(427,-1639.0596,666.1422,-5.1103,271.5658,1,79,SPAWN_CARS); // SFPD Enforcer 3
	sfpdcar[4] = AddStaticVehicleEx(427,-1639.1912,670.1107,-5.1098,271.5658,1,79,SPAWN_CARS); // SFPD Enforcer 4
	sfpdcar[5] = AddStaticVehicleEx(597,-1608.5095,748.6892,-5.4740,180.7957,1,79,SPAWN_CARS); // SFPD Cruiser 0
	sfpdcar[6] = AddStaticVehicleEx(597,-1604.3743,748.7833,-5.4732,180.8979,1,79,SPAWN_CARS); // SFPD Cruiser 1
	sfpdcar[7] = AddStaticVehicleEx(597,-1600.1812,748.8475,-5.4732,180.6038,1,79,SPAWN_CARS); // SFPD Cruiser 2
	sfpdcar[8] = AddStaticVehicleEx(597,-1579.5892,749.2114,-5.4732,180.1104,1,79,SPAWN_CARS); // SFPD Cruiser 3
	sfpdcar[9] = AddStaticVehicleEx(597,-1591.9786,748.9724,-5.4733,180.5795,1,79,SPAWN_CARS); // SFPD Cruiser 4
	sfpdcar[10] = AddStaticVehicleEx(597,-1583.8110,749.2034,-5.4739,179.4646,1,79,SPAWN_CARS); // SFPD Cruiser 5
	sfpdcar[11] = AddStaticVehicleEx(597,-1596.0133,748.9694,-5.4740,179.9943,1,79,SPAWN_CARS); // SFPD Cruiser 6
	sfpdcar[12] = AddStaticVehicleEx(597,-1587.7101,749.0371,-5.4737,180.2399,1,79,SPAWN_CARS); // SFPD Cruiser 7
	sfpdcar[13] = AddStaticVehicleEx(597,-1574.1715,738.8038,-5.4727,90.8081,1,79,SPAWN_CARS); // SFPD Cruiser 8
	sfpdcar[14] = AddStaticVehicleEx(597,-1574.2087,714.2832,-5.4741,90.8081,1,79,SPAWN_CARS); // SFPD Cruiser 9
	sfpdcar[15] = AddStaticVehicleEx(597,-1574.2324,718.6381,-5.4733,90.8081,1,79,SPAWN_CARS); // SFPD Cruiser 10
	sfpdcar[16] = AddStaticVehicleEx(597,-1573.9800,734.5951,-5.4732,90.8081,1,79,SPAWN_CARS); // SFPD Cruiser 11
	sfpdcar[17] = AddStaticVehicleEx(597,-1573.7732,730.6323,-5.4739,90.8081,1,79,SPAWN_CARS); // SFPD Cruiser 12
	sfpdcar[18] = AddStaticVehicleEx(497,-1680.9225,705.6724,30.7915,95.5060,0,1,SPAWN_CARS); // SFPD Helicopter 0
	sfpdcar[19] = AddStaticVehicleEx(523,-1600.0845,695.2717,-5.6700,180.5546,0,1,SPAWN_CARS); // SFPD Bike 0
	sfpdcar[20] = AddStaticVehicleEx(523,-1603.5908,695.2377,-5.6700,180.5546,0,1,SPAWN_CARS); // SFPD Bike 1
	sfpdcar[21] = AddStaticVehicleEx(523,-1608.4457,695.1907,-5.6700,180.5546,0,1,SPAWN_CARS); // SFPD Bike 2
	sfpdcar[22] = AddStaticVehicleEx(523,-1611.6722,695.1595,-5.6701,180.5546,0,1,SPAWN_CARS); // SFPD Bike 3
	sfpdcar[23] = AddStaticVehicleEx(523,-1616.8567,692.3514,-5.6723,177.3526,0,1,SPAWN_CARS); // SFPD Bike 4
	sfpdcar[24] = AddStaticVehicleEx(523,-1620.4467,692.5175,-5.6723,177.3526,0,1,SPAWN_CARS); // SFPD Bike 5
	sfpdcar[25] = AddStaticVehicleEx(523,-1624.2755,692.6945,-5.6723,177.3526,0,1,SPAWN_CARS); // SFPD Bike 6
	sfpdcar[26] = AddStaticVehicleEx(523,-1629.6143,692.9413,-5.6722,177.3526,0,1,SPAWN_CARS); // SFPD Bike 7
	sfpdcar[27] = AddStaticVehicleEx(523,-1632.7988,693.0886,-5.6722,177.3526,0,1,SPAWN_CARS); // SFPD Bike 8
	//====================================[ Russian Mafia ]==================================//
	ruscar[0] = AddStaticVehicleEx(579,984.1832,1720.4199,8.5910,90.3216,0,0,SPAWN_CARS); // RM HUNTLEY 0
	ruscar[1] = AddStaticVehicleEx(468,969.2242,1758.8146,8.3169,177.5194,111,111,SPAWN_CARS); // санчез
    ruscar[2] = AddStaticVehicleEx(468,967.1728,1758.9135,8.3175,180.1490,111,111,SPAWN_CARS); // санчез
    ruscar[3] = AddStaticVehicleEx(468,965.1633,1758.8478,8.3176,180.1245,111,111,SPAWN_CARS); // санчез
	ruscar[4] = AddStaticVehicleEx(579,984.1126,1723.8441,8.5843,91.2075,0,0,SPAWN_CARS); // RM HUNTLEY 1
	ruscar[5] = AddStaticVehicleEx(579,984.1122,1727.3198,8.5860,91.1532,0,0,SPAWN_CARS); // RM HUNTLEY 2
	ruscar[6] = AddStaticVehicleEx(579,983.9010,1734.5618,8.5911,90.6430,0,0,SPAWN_CARS); // RM HUNTLEY 3
	ruscar[7] = AddStaticVehicleEx(579,983.8235,1737.5437,8.5824,91.0029,0,0,SPAWN_CARS); // RM HUNTLEY 4
	ruscar[8] = AddStaticVehicleEx(579,983.6899,1740.7048,8.5631,92.9132,0,0,SPAWN_CARS); // RM HUNTLEY 5
	ruscar[9] = AddStaticVehicleEx(579,983.7421,1744.0139,8.5786,91.0281,0,0,SPAWN_CARS); // RM HUNTLEY 6
 	ruscar[10] = AddStaticVehicleEx(580,966.0602,1706.5366,8.5400,270.8105,0,0,SPAWN_CARS); // RM STAFFORD 0
	ruscar[11] = AddStaticVehicleEx(580,959.2162,1706.4982,8.5321,270.0911,0,0,SPAWN_CARS); // RM STAFFORD 1
	ruscar[12] = AddStaticVehicleEx(579,983.9714,1730.7939,8.5866,90.0946,0,0,SPAWN_CARS); // RM HUNTLEY 7
	ruscar[13] = AddStaticVehicleEx(487,957.9562,1754.1691,8.4446,248.4217,0,0,SPAWN_CARS); // RM Helicopter 0
	ruscar[14] = AddStaticVehicleEx(409,949.6057,1715.6672,8.5426,181.0793,0,0,SPAWN_CARS); // RM Limo 0
	matsrm = AddStaticVehicleEx(482,967.1138,1684.2468,8.9669,270.6095,0,0,600); // RM fura 0
	//====================================[ La Cosa Nostra ]==================================//
	lcncar[0] =	AddStaticVehicleEx(445,1413.5277,787.9661,10.6953,270.0358,0,0,SPAWN_CARS); // LCN Admiral 0
	lcncar[1] =	AddStaticVehicleEx(468,1413.1625,718.1850,10.4846,88.5988,61,61,SPAWN_CARS); // санчез
    lcncar[2] =	AddStaticVehicleEx(468,1413.5184,714.9282,10.4868,91.2241,61,61,SPAWN_CARS); // санчез
    lcncar[3] =	AddStaticVehicleEx(468,1413.4194,711.7184,10.4857,89.9269,61,61,SPAWN_CARS); // санчез
	lcncar[4] =	AddStaticVehicleEx(405,1446.6985,763.4872,10.6953,178.7065,0,0,SPAWN_CARS); // LCN Admiral 1
	lcncar[5] =	AddStaticVehicleEx(405,1446.8546,738.1332,10.6953,180.8378,0,0,SPAWN_CARS); // LCN Admiral 2
	lcncar[6] =	AddStaticVehicleEx(445,1413.5338,778.3932,10.6951,270.0358,0,0,SPAWN_CARS); // LCN Admiral 3
	lcncar[7] =	AddStaticVehicleEx(445,1413.5360,775.1172,10.6950,270.0358,0,0,SPAWN_CARS); // LCN Admiral 4
	lcncar[8] =	AddStaticVehicleEx(445,1413.5380,771.8521,10.6949,270.0358,0,0,SPAWN_CARS); // LCN Admiral 5
	lcncar[9] =	AddStaticVehicleEx(445,1413.5419,765.7633,10.9611,270.0358,0,0,SPAWN_CARS); // LCN Admiral 6
	lcncar[10] = AddStaticVehicleEx(445,1413.5499,759.3215,10.6498,270.0358,0,0,SPAWN_CARS); // LCN Admiral 7
	lcncar[11] = AddStaticVehicleEx(445,1413.5537,753.0690,10.6495,270.0358,0,0,SPAWN_CARS); // LCN Admiral 8
	lcncar[12] = AddStaticVehicleEx(445,1413.5576,746.6254,10.6493,270.0358,0,0,SPAWN_CARS); // LCN Admiral 9
	lcncar[13] = AddStaticVehicleEx(487,1414.5128,730.6333,10.9784,267.1382,0,0,SPAWN_CARS); // LCN Helicopter 0
	lcncar[14] = AddStaticVehicleEx(409,1429.0035,787.3469,10.6200,179.3787,0,0,SPAWN_CARS); // LCN Limo 0
	matslcn = AddStaticVehicleEx(482,1445.9418,760.1117,10.9449,87.9741,0,0,600); // LCN fura 0
	//====================================[ Аренда SF ]==================================//
	rentcarsf[0] = AddStaticVehicleEx(401,-1992.3820,243.3328,34.9512,261.7145,3,3,SPAWN_CARS); // Rent Car SF 0
	rentcarsf[1] = AddStaticVehicleEx(405,-1991.3319,247.8476,35.0468,261.2777,3,3,SPAWN_CARS); // Rent Car SF 1
	rentcarsf[2] = AddStaticVehicleEx(404,-1990.6476,251.4531,34.9059,261.8576,3,3,SPAWN_CARS); // Rent Car SF 2
	rentcarsf[3] = AddStaticVehicleEx(410,-1990.2252,255.0063,34.8230,263.9150,3,3,SPAWN_CARS); // Rent Car SF 3
	rentcarsf[4] = AddStaticVehicleEx(426,-1989.7439,259.0538,34.9228,264.1123,3,3,SPAWN_CARS); // Rent Car SF 4
	rentcarsf[5] = AddStaticVehicleEx(436,-1989.3835,263.5551,34.9737,264.1029,3,3,SPAWN_CARS); // Rent Car SF 5
	//====================================[ Аренда LS ]==================================//
	rentcarls[0] = AddStaticVehicleEx(401,525.5535,-1283.5392,17.0309,249.2930,1,1,SPAWN_CARS); // Rent Car LS 0
	rentcarls[1] = AddStaticVehicleEx(526,529.7659,-1280.2317,16.9532,245.8029,1,1,SPAWN_CARS); // Rent Car LS 1
	rentcarls[2] = AddStaticVehicleEx(585,534.1425,-1277.2675,16.8415,246.4638,1,1,SPAWN_CARS); // Rent Car LS 2
	rentcarls[3] = AddStaticVehicleEx(551,538.4374,-1274.0146,17.0553,248.1329,1,1,SPAWN_CARS); // Rent Car LS 3
	rentcarls[4] = AddStaticVehicleEx(546,542.0103,-1270.6676,16.8926,244.0262,1,1,SPAWN_CARS); // Rent Car LS 4
	rentcarls[5] = AddStaticVehicleEx(540,546.1081,-1267.5892,17.1557,244.3047,1,1,SPAWN_CARS); // Rent Car LS 5
	rentcarls[6] = AddStaticVehicleEx(516,567.4392,-1288.4241,17.1140,50.6030,1,1,SPAWN_CARS); // Rent Car LS 6
	rentcarls[7] = AddStaticVehicleEx(410,566.5842,-1283.0811,16.9026,57.9391,1,1,SPAWN_CARS); // Rent Car LS 7
	rentcarls[8] = AddStaticVehicleEx(436,565.1833,-1277.9972,17.0457,60.2207,1,1,SPAWN_CARS); // Rent Car LS 8
	//====================================[ Аренда LV ]==================================//
	rentcarlv[0] = AddStaticVehicleEx(401,2148.7632,1398.2522,10.5919,179.3318,125,125,SPAWN_CARS); // Rent Car LV 0
	rentcarlv[1] = AddStaticVehicleEx(526,2142.2549,1398.5380,10.5895,180.1983,125,125,SPAWN_CARS); // Rent Car LV 1
	rentcarlv[2] = AddStaticVehicleEx(585,2136.0012,1398.4728,10.4594,179.7632,125,125,SPAWN_CARS); // Rent Car LV 2
	rentcarlv[3] = AddStaticVehicleEx(551,2129.5227,1398.3572,10.6811,179.9108,125,125,SPAWN_CARS); // Rent Car LV 3
	rentcarlv[4] = AddStaticVehicleEx(546,2123.1968,1398.0679,10.5173,180.2094,125,125,SPAWN_CARS); // Rent Car LV 4
	rentcarlv[5] = AddStaticVehicleEx(540,2116.7009,1398.6531,10.7517,180.8054,125,125,SPAWN_CARS); // Rent Car LV 5
	rentcarlv[6] = AddStaticVehicleEx(516,2110.3887,1398.8379,10.7088,178.9539,125,125,SPAWN_CARS); // Rent Car LV 6
	rentcarlv[7] = AddStaticVehicleEx(436,2103.8853,1399.1855,10.6324,180.4412,125,125,SPAWN_CARS); // Rent Car LV 7
	rentcarlv[8] = AddStaticVehicleEx(410,2097.7957,1398.6720,10.4728,180.8700,125,125,SPAWN_CARS); // Rent Car LV 8
	rentcarlv[9] = AddStaticVehicleEx(410,2148.6797,1408.0872,10.5066,0.9862,125,125,SPAWN_CARS); // Rent Car LV 9
	rentcarlv[10] = AddStaticVehicleEx(516,2142.3816,1408.8521,10.6997,0.1314,125,125,SPAWN_CARS); // Rent Car LV 10
	rentcarlv[11] = AddStaticVehicleEx(436,2135.9126,1408.2151,10.6270,0.4270,125,125,SPAWN_CARS); // Rent Car LV 11
	rentcarlv[12] = AddStaticVehicleEx(540,2129.6021,1408.2108,10.7522,0.6938,125,125,SPAWN_CARS); // Rent Car LV 12
	rentcarlv[13] = AddStaticVehicleEx(546,2123.1118,1408.6428,10.5633,0.3106,125,125,SPAWN_CARS); // Rent Car LV 13
	rentcarlv[14] = AddStaticVehicleEx(551,2116.7241,1408.6730,10.6830,359.9039,125,125,SPAWN_CARS); // Rent Car LV 14
	rentcarlv[15] = AddStaticVehicleEx(585,2110.1846,1407.9718,10.4684,359.9608,125,125,SPAWN_CARS); // Rent Car LV 15
	rentcarlv[16] = AddStaticVehicleEx(526,2104.1704,1408.4935,10.5844,0.1492,125,125,SPAWN_CARS); // Rent Car LV 16
	rentcarlv[17] = AddStaticVehicleEx(401,2097.4080,1408.4969,10.5998,0.4172,125,125,SPAWN_CARS); // Rent Car LV 17
	//====================================[ Аренда Самолетов ]==================================//
	arendasf[0] = AddStaticVehicleEx(592,-1375.6530,-221.6730,15.3426,314.9691,1,1,SPAWN_CARS); // Самолет
	arendasf[1] = AddStaticVehicleEx(592,-1337.9583,-257.9826,15.3446,314.1372,1,1,SPAWN_CARS); // Самолет
	arendasf[2] = AddStaticVehicleEx(553,-1202.2268,-141.1448,16.8184,134.5790,1,1,SPAWN_CARS); // Самолет1
	arendasf[3] = AddStaticVehicleEx(553,-1244.5048,-98.3275,16.5927,134.5962,1,1,SPAWN_CARS); // Самолет1
	arendasf[4] = AddStaticVehicleEx(487,-1370.7666,-154.2356,14.2942,272.1273,1,1,SPAWN_CARS); // вертолет
	arendasf[5] = AddStaticVehicleEx(487,-1374.2295,-161.6673,14.3086,270.0030,1,1,SPAWN_CARS); // вертолет
	arendasf[6] = AddStaticVehicleEx(487,-1367.3057,-146.7845,14.3632,269.9982,1,1,SPAWN_CARS); // вертолет
	arendasf[7] = AddStaticVehicleEx(511,-1466.4888,-190.6572,15.5208,77.0542,1,1,SPAWN_CARS); // самолет3
	arendasf[8] = AddStaticVehicleEx(511,-1459.8632,-161.8265,15.5348,77.0565,1,1,SPAWN_CARS); // самолет3
	arendasf[9] = AddStaticVehicleEx(511,-1452.8995,-131.5172,15.5479,77.0605,1,1,SPAWN_CARS); // самолет3
	arendasf[10] = AddStaticVehicleEx(593,-1314.3964,-346.6638,14.6080,192.9901,1,1,SPAWN_CARS); // кукуруза
	arendasf[11] = AddStaticVehicleEx(593,-1299.1277,-343.1431,14.6155,192.9891,1,1,SPAWN_CARS); // кукуруза
	arendasf[12] = AddStaticVehicleEx(513,-1284.8121,-339.1837,14.6987,193.3029,1,1,SPAWN_CARS); // кукуруза
	arendasf[13] = AddStaticVehicleEx(513,-1269.3329,-335.5244,14.7163,193.3110,1,1,SPAWN_CARS); // кукуруза
	//====================================[ Аренда лодок в СФ ]=================================//
	arendalodoksf[0] = AddStaticVehicleEx(473,-1720.0527,1431.8951,-0.6399,279.4514,0,1,SPAWN_CARS);
	arendalodoksf[1] = AddStaticVehicleEx(473,-1720.0527,1436.3878,-0.6399,279.4514,0,1,SPAWN_CARS);
	arendalodoksf[2] = AddStaticVehicleEx(473,-1720.0527,1441.8951,-0.6399,279.4514,0,1,SPAWN_CARS);
	arendalodoksf[3] = AddStaticVehicleEx(473,-1720.0527,1446.8951,-0.6399,279.4514,0,1,SPAWN_CARS);
	arendalodoksf[4] = AddStaticVehicleEx(473,-1720.0527,1451.8951,-0.6399,279.4514,0,1,SPAWN_CARS);
	//====================================[ Аренда лодок ЛС ]==================================//
	arendalodok[0] = AddStaticVehicleEx(446,-121.9897,-1659.7396,-0.5717,188.6102,0,1,SPAWN_CARS); // лодка
	arendalodok[1] = AddStaticVehicleEx(446,-127.6374,-1660.2963,-0.5366,188.9682,0,1,SPAWN_CARS); // лодка
	arendalodok[2] = AddStaticVehicleEx(446,-133.5468,-1660.8464,-0.7414,184.1519,0,1,SPAWN_CARS); // лодка
	arendalodok[3] = AddStaticVehicleEx(446,-138.8130,-1660.5803,-0.5123,175.5793,0,1,SPAWN_CARS); // лодка
	arendalodok[4] = AddStaticVehicleEx(454,-52.5845,-1630.4453,0.0136,216.0417,0,1,SPAWN_CARS); // лодка1
	arendalodok[5] = AddStaticVehicleEx(454,-58.8401,-1634.7495,-0.0060,212.4743,0,1,SPAWN_CARS); // лодка1
	arendalodok[6] = AddStaticVehicleEx(454,-65.0972,-1639.0431,0.0866,206.2665,0,1,SPAWN_CARS); // лодка1
	arendalodok[7] = AddStaticVehicleEx(454,-71.3218,-1643.1051,0.2233,203.4007,0,1,SPAWN_CARS); // лодка1
	arendalodok[8] = AddStaticVehicleEx(473,-111.1278,-1641.6063,-0.1939,149.4776,0,1,SPAWN_CARS); // лодка2
	arendalodok[9] = AddStaticVehicleEx(473,-115.6112,-1649.4478,-0.4412,156.6936,0,1,SPAWN_CARS); // лодка2
	arendalodok[10] = AddStaticVehicleEx(493,-34.5293,-1607.3196,-0.2696,219.3918,0,1,SPAWN_CARS); // лодка3
	arendalodok[11] = AddStaticVehicleEx(493,-40.1071,-1611.1444,0.0589,215.9219,0,1,SPAWN_CARS); // лодка3
	arendalodok[12] = AddStaticVehicleEx(493,-45.3149,-1615.6124,-0.1153,222.3783,0,1,SPAWN_CARS); // лодка3
	//====================================[ Полиции LVPD ]==================================//
	lvpdcar[0] = AddStaticVehicleEx(598,2268.9678,2443.6958,10.5668,359.5409,0,1,SPAWN_CARS); // LVPD Cruiser 0
	lvpdcar[1] = AddStaticVehicleEx(598,2273.5706,2443.7290,10.5665,0.6987,0,1,SPAWN_CARS); // LVPD Cruiser 1
	lvpdcar[2] = AddStaticVehicleEx(598,2277.9482,2443.7490,10.5654,359.8027,0,1,SPAWN_CARS); // LVPD Cruiser 2
	lvpdcar[3] = AddStaticVehicleEx(598,2282.1309,2443.7957,10.5660,359.7104,0,1,SPAWN_CARS); // LVPD Cruiser 3
	lvpdcar[4] = AddStaticVehicleEx(598,2282.5002,2476.4595,10.5663,181.3129,0,1,SPAWN_CARS); // LVPD Cruiser 4
	lvpdcar[5] = AddStaticVehicleEx(598,2277.6665,2476.5178,10.5670,180.8092,0,1,SPAWN_CARS); // LVPD Cruiser 5
	lvpdcar[6] = AddStaticVehicleEx(598,2273.6030,2476.5684,10.5669,180.3357,0,1,SPAWN_CARS); // LVPD Cruiser 6
	lvpdcar[7] = AddStaticVehicleEx(598,2268.8853,2476.6331,10.5663,179.7468,0,1,SPAWN_CARS); // LVPD Cruiser 7
	lvpdcar[8] = AddStaticVehicleEx(598,2269.2004,2459.8330,10.5683,0.1298,0,1,SPAWN_CARS); // LVPD Cruiser 8
	lvpdcar[9] = AddStaticVehicleEx(598,2273.3623,2459.5422,10.5661,178.7547,0,1,SPAWN_CARS); // LVPD Cruiser 9
	lvpdcar[10] = AddStaticVehicleEx(598,2278.0513,2459.7075,10.5667,359.0662,0,1,SPAWN_CARS); // LVPD Cruiser 10
	lvpdcar[11] = AddStaticVehicleEx(598,2281.9307,2459.4504,10.5672,180.7914,0,1,SPAWN_CARS); // LVPD Cruiser 11
	lvpdcar[12] = AddStaticVehicleEx(599,2290.6970,2443.7861,11.0110,1.2899,0,1,SPAWN_CARS); // LVPD Cruiser 12
	lvpdcar[13] = AddStaticVehicleEx(599,2260.5859,2476.3032,11.0123,180.0692,0,1,SPAWN_CARS); // LVPD Cruiser 13
	lvpdcar[14] = AddStaticVehicleEx(497,2271.4736,2470.6799,38.8604,0.0013,0,1,SPAWN_CARS); // LVPD Rancher 14
	lvpdcar[15] = AddStaticVehicleEx(523,2255.9148,2476.6135,10.4263,180.0082,1,1,SPAWN_CARS); //
	lvpdcar[16] = AddStaticVehicleEx(523,2251.9368,2476.6135,10.4263,180.0082,1,1,SPAWN_CARS); //
	//====================================[ univer car ]==================================//
	univercar[0] = AddStaticVehicleEx(437,1247.3240,-2012.3124,59.8902,181.6548,66,66,SPAWN_CARS); //
	univercar[1] = AddStaticVehicleEx(437,1252.3213,-2012.1672,59.7462,181.6544,66,66,SPAWN_CARS); //
	univercar[2] = AddStaticVehicleEx(551,1277.5480,-2010.4282,58.7198,180.7515,66,66,SPAWN_CARS); //
	univercar[3] = AddStaticVehicleEx(551,1273.3285,-2010.4839,58.8536,180.7498,66,66,SPAWN_CARS); //
	univercar[4] = AddStaticVehicleEx(551,1269.4221,-2010.5352,58.9780,180.7473,66,66,SPAWN_CARS); //
	//====================================[ LS NEWS ]==================================//
	lsnewscar[0] = AddStaticVehicleEx(582,744.7864,-1334.5149,13.5968,179.8765,1,2,SPAWN_CARS); // car
	lsnewscar[1] = AddStaticVehicleEx(582,749.7391,-1334.2587,13.6280,181.5500,1,2,SPAWN_CARS); // car
	lsnewscar[2] = AddStaticVehicleEx(582,754.6861,-1334.1964,13.5992,180.7298,1,2,SPAWN_CARS); // car
	lsnewscar[3] = AddStaticVehicleEx(582,759.5175,-1334.4348,13.5971,178.3622,1,2,SPAWN_CARS); // car
	lsnewscar[4] = AddStaticVehicleEx(582,764.3333,-1334.5206,13.5956,180.1963,1,2,SPAWN_CARS); // car
	lsnewscar[5] = AddStaticVehicleEx(488,741.5397,-1368.7804,25.8689,180.8807,1,2,SPAWN_CARS); // vert
	//====================================[ Mayor ]==================================//
	govcar[0] =	AddStaticVehicleEx(421,1406.5829,-1775.7263,13.3825,62.3187,1,1,SPAWN_CARS); // Goverment Washingtone
	govcar[1] =	AddStaticVehicleEx(421,1406.0670,-1780.0697,13.3301,66.5176,1,1,SPAWN_CARS); // Goverment Washingtone
	govcar[2] =	AddStaticVehicleEx(421,1406.4202,-1785.5613,13.3880,60.2430,1,1,SPAWN_CARS); // Goverment Washingtone
	govcar[3] =	AddStaticVehicleEx(487,1404.9635,-1809.2954,13.7130,67.7569,1,1,SPAWN_CARS); // Вертолет
	govcar[4] =	AddStaticVehicleEx(409,1405.6885,-1797.0092,13.3953,358.7616,1,1,SPAWN_CARS); // Goverment Limo
	//====================================[ Автошкола транспорт и учебки ]==================================//
	LicCar[0] =  AddStaticVehicleEx(602,1374.0680, -1638.0337, 13.0953, 90.0000,2,2,100);
	LicCar[1] =  AddStaticVehicleEx(602,1374.1149, -1635.2374, 13.0953, 90.0000,2,2,100);
	LicCar[2] =  AddStaticVehicleEx(602,1374.0125, -1640.9402, 13.0953, 90.0000,2,2,100);
	LicCar[3] =  AddStaticVehicleEx(426,1361.2186, -1639.5520, 13.0984, -90.0000,2,2,100);
	LicCar[4] =  AddStaticVehicleEx(426,1361.2261, -1643.1932, 13.0984, -90.0000,2,2,100);// лицкар
	LicCar[5] =  AddStaticVehicleEx(426,1361.2710, -1646.9052, 13.0984, -90.0000,2,2,100); // LicCar
	LicCar[6] =  AddStaticVehicleEx(426,1361.2983, -1650.8224, 13.0984, -90.0000,2,2,100); // licca1
	LicCar[7] =  AddStaticVehicleEx(426,1361.4052, -1654.9083, 13.0984, -90.0000,2,2,100); // licca2
	LicCar[8] =  AddStaticVehicleEx(426,1361.3293, -1658.7872, 13.0984, -90.0000,2,2,100); // licca3
	LicCar[9] =  AddStaticVehicleEx(426,1361.1803, -1636.0872, 13.0984, -90.0000,2,2,100); // licca4
	LicCar[10] = AddStaticVehicleEx(487,1352.7592, -1658.5425, 18.0429, -90.0000,2,2,100); // lic mav
	new avtock0 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new avtock1 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new avtock2 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new avtock3 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new avtock4 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new avtock5 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new avtock6 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new avtock7 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new avtock8 = CreateObject(19309,0,0,0,0,0,0,100.0);
	new avtock9 = CreateObject(19309,0,0,0,0,0,0,100.0);
	SetObjectMaterialText(avtock0, "考试车辆", 0, 50, "Tahoma", 27, 1, -1, -65536, 1);
	SetObjectMaterialText(avtock1, "考试车辆", 0, 50, "Tahoma", 27, 1, -1, -65536, 1);
	SetObjectMaterialText(avtock2, "考试车辆", 0, 50, "Tahoma", 27, 1, -1, -65536, 1);
	SetObjectMaterialText(avtock3, "考试车辆", 0, 50, "Tahoma", 27, 1, -1, -65536, 1);
	SetObjectMaterialText(avtock4, "考试车辆", 0, 50, "Tahoma", 27, 1, -1, -65536, 1);
	SetObjectMaterialText(avtock5, "考试车辆", 0, 50, "Tahoma", 27, 1, -1, -65536, 1);
	SetObjectMaterialText(avtock6, "考试车辆", 0, 50, "Tahoma", 27, 1, -1, -65536, 1);
	SetObjectMaterialText(avtock7, "考试车辆", 0, 50, "Tahoma", 27, 1, -1, -65536, 1);
	SetObjectMaterialText(avtock8, "考试车辆", 0, 50, "Tahoma", 27, 1, -1, -65536, 1);
	SetObjectMaterialText(avtock9, "考试车辆", 0, 50, "Tahoma", 27, 1, -1, -65536, 1);
	AttachObjectToVehicle(avtock0, LicCar[0], 0.0, -0.5, 0.8, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(avtock1, LicCar[1], 0.0, -0.5, 0.8, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(avtock2, LicCar[2], 0.0, -0.5, 0.8, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(avtock3, LicCar[3], 0.0, -0.5, 0.9, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(avtock4, LicCar[4], 0.0, -0.5, 0.9, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(avtock5, LicCar[5], 0.0, -0.5, 0.9, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(avtock6, LicCar[6], 0.0, -0.5, 0.9, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(avtock7, LicCar[7], 0.0, -0.5, 0.9, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(avtock8, LicCar[8], 0.0, -0.5, 0.9, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(avtock9, LicCar[9], 0.0, -0.5, 0.9, 0.0, 0.0, 0.0);
	//====================================[ Yakuza Mafia ]==================================//
	yakcar[0] = AddStaticVehicleEx(550,1494.2484,2848.7676,10.6405,178.6475,0,0,SPAWN_CARS); // Yakuza Car 0
    yakcar[1] = AddStaticVehicleEx(468,1470.0001,2846.5298,10.4898,177.9943,3,3,SPAWN_CARS); // санчез 1
    yakcar[2] = AddStaticVehicleEx(468,1465.8835,2846.5410,10.4895,180.0019,3,3,SPAWN_CARS); // санчез 2
    yakcar[3] = AddStaticVehicleEx(468,1460.9244,2846.7544,10.4902,180.0020,3,3,SPAWN_CARS); // санчез 3
	yakcar[4] = AddStaticVehicleEx(550,1489.7351,2848.1570,10.6399,179.4486,0,0,SPAWN_CARS); // Yakuza Car 1
	yakcar[5] = AddStaticVehicleEx(550,1484.5413,2847.4619,10.6357,177.8342,0,0,SPAWN_CARS); // Yakuza Car 2
	yakcar[6] = AddStaticVehicleEx(550,1479.5450,2847.2419,10.6412,180.0046,0,0,SPAWN_CARS); // Yakuza Car 3
	yakcar[7] = AddStaticVehicleEx(550,1475.3090,2847.5596,10.6374,179.9559,0,0,SPAWN_CARS); // Yakuza Car 4
	yakcar[8] = AddStaticVehicleEx(409,1472.8611,2773.2961,10.5400,180.4315,0,0,SPAWN_CARS); // Yakuza Limo 0
	yakcar[9] = AddStaticVehicleEx(487,1500.6167,2820.9463,10.9702,180.0113,0,0,SPAWN_CARS); // Yakuza Helicopter 0
	yakcar[10] = AddStaticVehicleEx(561,1472.9874,2782.9106,10.5561,178.6964,0,0,SPAWN_CARS); // yakuza2
    yakcar[11] = AddStaticVehicleEx(561,1472.8729,2763.6611,10.5561,182.2135,0,0,SPAWN_CARS); // yakuza2
    matsyakuza = AddStaticVehicleEx(482,1463.2362,2760.5835,10.8690,191.2535,0,0,600); // fura
	//====================================[ Полиции LSPD ]==================================//
    SapdCar[0] = AddStaticVehicleEx(437,1602.7440200,-1608.8420400,13.7130000,180.0000000,0,1,600); //Coach
	SapdCar[1] = AddStaticVehicleEx(437,1595.1779800,-1608.8420400,13.7130000,180.0000000,0,1,600); //Coach
	SapdCar[2] = AddStaticVehicleEx(560, 1545.3879, -1685.0350, 5.6960, 90.0000, 0, 0, 600, 1); //Sultan
	SapdCar[3] = AddStaticVehicleEx(560, 1545.3879, -1680.3580, 5.6960, 90.0000, 0, 0, 600, 1); //Sultan
	SapdCar[4] = AddStaticVehicleEx(560, 1545.3879, -1676.1949, 5.6960, 90.0000, 0, 0, 600, 1); //Sultan
	SapdCar[5] = AddStaticVehicleEx(560, 1545.3879, -1672.0970, 5.6960, 90.0000, 0, 0, 600, 1); //Sultan
	for(new i = 2; i < 6; i ++) {
		new attach_object_id = CreateDynamicObject(19620, 0.00, 0.00, 0.00, 0.00, 0.00, 0.0, 0, 0, -1, 300.00, 300.00, STREAMER_TAG_AREA - 1, 0);
		AttachDynamicObjectToVehicle(attach_object_id, SapdCar[i], 0.00, -0.20, 0.79, 0.00, 0.00, 0.00);
		AddVehicleComponent(SapdCar[i], 1015);
	}
	SapdCar[6] = AddStaticVehicleEx(596,1558.8979500,-1710.3409400,5.7110000,0.0000000,210,1,600); //Police Car (LSPD)
	SapdCar[7] = AddStaticVehicleEx(596,1570.2440200,-1710.3409400,5.7110000,0.0000000,210,1,600); //Police Car (LSPD)
	SapdCar[8] = AddStaticVehicleEx(596,1574.5360100,-1710.3409400,5.7110000,0.0000000,210,1,600); //Police Car (LSPD)
	SapdCar[9] = AddStaticVehicleEx(596,1578.5340600,-1710.3409400,5.7110000,0.0000000,210,1,600); //Police Car (LSPD)
	SapdCar[10] = AddStaticVehicleEx(596,1583.3260500,-1710.3409400,5.7110000,0.0000000,210,1,600); //Police Car (LSPD)
	SapdCar[11] = AddStaticVehicleEx(596,1587.3659700,-1710.3409400,5.7110000,0.0000000,210,1,600); //Police Car (LSPD)
	SapdCar[12] = AddStaticVehicleEx(596,1591.1099900,-1710.3409400,5.7110000,0.0000000,210,1,600); //Police Car (LSPD)
	SapdCar[13] = AddStaticVehicleEx(596,1595.3540000,-1710.3409400,5.7110000,0.0000000,210,1,600); //Police Car (LSPD)
	SapdCar[14] = AddStaticVehicleEx(597,1601.2010500,-1704.2480500,5.7610000,90.0000000,210,1,600); //Police Car (SFPD)
	SapdCar[15] = AddStaticVehicleEx(597,1601.2010500,-1700.2209500,5.7610000,90.0000000,210,1,600); //Police Car (SFPD)
	SapdCar[16] = AddStaticVehicleEx(597,1601.2010500,-1696.0300300,5.7610000,90.0000000,210,1,600); //Police Car (SFPD)
	SapdCar[17] = AddStaticVehicleEx(597,1601.2010500,-1692.0350300,5.7610000,90.0000000,210,1,600); //Police Car (SFPD)
	SapdCar[18] = AddStaticVehicleEx(597,1601.2010500,-1688.0379600,5.7610000,90.0000000,210,1,600); //Police Car (SFPD)
	SapdCar[19] = AddStaticVehicleEx(597,1601.2010500,-1684.0329600,5.7610000,90.0000000,210,1,600); //Police Car (SFPD)
	SapdCar[20] = AddStaticVehicleEx(597,1601.2010500,-1679.5369900,5.7610000,90.0000000,210,1,600); //Police Car (SFPD)
	SapdCar[21] = AddStaticVehicleEx(597,1601.2010500,-1675.5419900,5.7610000,90.0000000,210,1,600); //Police Car (SFPD)
	SapdCar[22] = AddStaticVehicleEx(498,1585.2030000,-1671.8270300,6.0770000,270.0000000,210,0,600); //FBI Truck
	SapdCar[23] = AddStaticVehicleEx(498,1585.2030000,-1667.6760300,6.0770000,270.0000000,210,0,600); //FBI Truck
	new tmpobjid = CreateDynamicObject(2662,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "SAPD", 120, "Ariel", 160, 1, -1, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[22], 1.270, -1.180, 1.160, 0.000, 0.000, 90.200);
    tmpobjid = CreateDynamicObject(2662,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "SAPD", 120, "Ariel", 160, 1, -1, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[22], -1.262, -1.070, 1.080, 0.000, 0.000, -90.499);
    tmpobjid = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[22], -0.980, -3.060, 1.889, 0.000, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[22], 0.929, -3.061, 1.879, 0.000, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[22], 0.909, -3.241, -1.839, 0.000, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[22], 0.929, -3.241, -1.839, 0.000, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[22], -0.960, -3.149, -0.550, 0.000, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[22], 0.970, -3.150, -0.550, 0.000, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[22], 1.010, 3.209, -0.480, 0.000, 0.000, 179.000);
    tmpobjid = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[22], -1.029, 3.196, -0.480, 0.000, 0.000, -179.900);
    tmpobjid = CreateDynamicObject(19173,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[22], 0.000, 3.000, 0.000, 0.000, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(2678,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 3, 14674, "civic02cj", "sl_hotelwallplain1", 0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[22], 0.123, -3.693, -0.696, -88.900, -89.299, 0.000);
    tmpobjid = CreateDynamicObject(2662,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "88", 90, "Ariel", 199, 1, -1, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[22], 0.040, 0.080, 2.140, -88.899, -0.900, 88.700);
    tmpobjid = CreateDynamicObject(2662,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "10", 90, "Ariel", 199, 1, -1, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[22], 0.002, -1.490, 2.139, -90.300, 0.000, 89.699);
   	tmpobjid = CreateDynamicObject(2662,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "SAPD", 120, "Ariel", 160, 1, -1, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[23], 1.270, -1.180, 1.160, 0.000, 0.000, 90.200);
    tmpobjid = CreateDynamicObject(2662,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "SAPD", 120, "Ariel", 160, 1, -1, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[23], -1.262, -1.070, 1.080, 0.000, 0.000, -90.499);
    tmpobjid = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[23], -0.980, -3.060, 1.889, 0.000, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[23], 0.929, -3.061, 1.879, 0.000, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[23], 0.909, -3.241, -1.839, 0.000, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[23], 0.929, -3.241, -1.839, 0.000, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[23], -0.960, -3.149, -0.550, 0.000, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[23], 0.970, -3.150, -0.550, 0.000, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[23], 1.010, 3.209, -0.480, 0.000, 0.000, 179.000);
    tmpobjid = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[23], -1.029, 3.196, -0.480, 0.000, 0.000, -179.900);
    tmpobjid = CreateDynamicObject(19173,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[23], 0.000, 3.000, 0.000, 0.000, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(2678,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 3, 14674, "civic02cj", "sl_hotelwallplain1", 0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[23], 0.123, -3.693, -0.696, -88.900, -89.299, 0.000);
    tmpobjid = CreateDynamicObject(2662,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "89", 90, "Ariel", 199, 1, -1, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[23], 0.040, 0.080, 2.140, -88.899, -0.900, 88.700);
    tmpobjid = CreateDynamicObject(2662,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "10", 90, "Ariel", 199, 1, -1, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[23], 0.002, -1.490, 2.139, -90.300, 0.000, 89.699);
	SapdCar[24] = AddStaticVehicleEx(523,1526.4909700,-1645.7900400,5.5510000,180.0000000,210,0,600); //HPV1000
	SapdCar[25] = AddStaticVehicleEx(523,1530.4820600,-1645.7900400,5.5510000,180.0000000,210,0,600); //HPV1000
	SapdCar[26] = AddStaticVehicleEx(523,1534.4759500,-1645.7900400,5.5510000,180.0000000,210,0,600); //HPV1000
	SapdCar[27] = AddStaticVehicleEx(523,1538.7220500,-1645.7900400,5.5510000,180.0000000,210,0,600); //HPV1000
	SapdCar[28] = AddStaticVehicleEx(523,1544.7380400,-1651.1629600,5.5510000,90.0000000,210,0,600); //HPV1000
	SapdCar[29] = AddStaticVehicleEx(523,1544.7380400,-1654.9029500,5.5510000,90.0000000,210,0,600); //HPV1000
	SapdCar[30] = AddStaticVehicleEx(523,1544.7380400,-1658.8929400,5.5510000,90.0000000,210,0,600); //HPV1000
	SapdCar[31] = AddStaticVehicleEx(523,1544.7380400,-1663.3599900,5.5510000,90.0000000,210,0,600); //HPV1000
	SapdCar[32] = AddStaticVehicleEx(523,1544.7380400,-1667.5789800,5.5510000,90.0000000,210,0,600); //HPV1000
	SapdCar[33] = AddStaticVehicleEx(497, 1547.7259500, -1609.5300300, 13.6480000, 90.0000000, 210, 1, 600); //Police Maverick
	SapdCar[34] = AddStaticVehicleEx(497, 1563.0770300, -1609.6269500, 13.6480000, 90.0000000, 210, 1, 600); //Police Maverick
	tmpobjid = CreateDynamicObject(2679,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 3, 14674, "civic02cj", "sl_hotelwallplain1", 0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[33], 1.841, 0.171, -0.972, 89.999, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(2679,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 3, 14674, "civic02cj", "sl_hotelwallplain1", 0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[33], 1.839, 1.476, -0.975, 89.799, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(2678,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 3, 14674, "civic02cj", "sl_hotelwallplain1", 0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[33], -1.859, 0.169, -1.011, 89.400, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(2678,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 3, 14674, "civic02cj", "sl_hotelwallplain1", 0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[33], -1.861, 1.460, -1.020, 89.999, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(2679,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 3, 14674, "civic02cj", "sl_hotelwallplain1", 0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[34], 1.841, 0.171, -0.972, 89.999, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(2679,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 3, 14674, "civic02cj", "sl_hotelwallplain1", 0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[34], 1.839, 1.476, -0.975, 89.799, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(2678,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 3, 14674, "civic02cj", "sl_hotelwallplain1", 0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[34], -1.859, 0.169, -1.011, 89.400, 0.000, 0.000);
    tmpobjid = CreateDynamicObject(2678,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "black64", 0);
    SetDynamicObjectMaterial(tmpobjid, 3, 14674, "civic02cj", "sl_hotelwallplain1", 0);
    AttachDynamicObjectToVehicle(tmpobjid, SapdCar[34], -1.861, 1.460, -1.020, 89.999, 0.000, 0.000);
	//====================================[ Federal (FBI) ]==================================//
	fbicar[0] = AddStaticVehicleEx(490,-509.4714,2606.2029,53.5551,89.5353,0,0,SPAWN_CARS); //
	fbicar[1] =	AddStaticVehicleEx(490,-509.4924,2603.6274,53.5520,89.5353,0,0,SPAWN_CARS); //
	fbicar[2] =	AddStaticVehicleEx(490,-509.6595,2582.9778,53.5474,89.5361,0,0,SPAWN_CARS); //
	fbicar[3] =	AddStaticVehicleEx(490,-509.6799,2580.4658,53.5433,89.5358,0,0,SPAWN_CARS); //
	fbicar[4] = AddStaticVehicleEx(411,-539.1658,2580.4927,53.1411,270.2287,0,0,SPAWN_CARS);
	fbicar[5] =	AddStaticVehicleEx(411,-539.1763,2583.1309,53.1411,270.2287,0,0,SPAWN_CARS); //
	fbicar[6] =	AddStaticVehicleEx(560,-538.8605,2606.2554,53.1202,268.9297,0,0,SPAWN_CARS); //
	fbicar[7] =	AddStaticVehicleEx(560,-538.9057,2603.8257,53.1202,268.9298,0,0,SPAWN_CARS); //
	fbicar[8] =	AddStaticVehicleEx(437,-536.9207,2549.1619,53.5474,269.1760,0,0,SPAWN_CARS); //
	fbicar[9] = AddStaticVehicleEx(487,-571.0804,2597.0256,66.1238,0.0013,0,0,SPAWN_CARS); //
	fbicar[10] = AddStaticVehicleEx(418,-539.7224,2553.6301,53.5077,268.7695,0,0,SPAWN_CARS); // migr0
    fbicar[11] = AddStaticVehicleEx(418,-539.4084,2556.0430,53.5132,268.7684,0,0,SPAWN_CARS); // migr1
	new myobject0 = CreateObject(19620,0,0,0,0,0,0,0.0);
	new myobject1 = CreateObject(19620,0,0,0,0,0,0,0.0);
	new myobject2 = CreateObject(19620,0,0,0,0, -90, 0, 0);
	new myobject3 = CreateObject(19620,0,0,0,0, -90, 0, 0);
	AttachObjectToVehicle(myobject0,fbicar[4],0.0, 0.0, 0.77, 0.0, 0.0, 0.0); // infernus
	AttachObjectToVehicle(myobject1,fbicar[5],0.0, 0.0, 0.77, 0.0, 0.0, 0.0); // infernus
	AttachObjectToVehicle(myobject2,fbicar[6],0.000000,-0.074999,0.824999,0.0,0.0,0.0); // sultan
	AttachObjectToVehicle(myobject3,fbicar[7],0.000000,-0.074999,0.824999,0.0,0.0,0.0); // sultan
	new myobjmin = CreateObject(19620,0,0,0,0,0,0,0.0);
	new myobjmin1 = CreateObject(19620,0,0,0,0,0,0,0.0);
	AttachObjectToVehicle(myobjmin,fbicar[10],0.0, 0.0, 1.12, 0.0, 0.0, 0.0); // miniven
	AttachObjectToVehicle(myobjmin1,fbicar[11],0.0, 0.0, 1.12, 0.0, 0.0, 0.0); // miniven
    //====================================[ Casers ]==================================//
	AddStaticVehicleEx(584,-984.8389,-635.7936,33.1543,91.1889,1,1,SPAWN_CARS); // Pricep 0
	AddStaticVehicleEx(584,-984.7327,-640.9091,33.1543,91.1889,1,1,SPAWN_CARS); // Pricep 1
	AddStaticVehicleEx(584,-984.6266,-646.0191,33.1543,91.1889,1,1,SPAWN_CARS); // Pricep 2
	AddStaticVehicleEx(584,-984.5270,-650.8137,33.1543,91.1889,1,1,SPAWN_CARS); // Pricep 3
	AddStaticVehicleEx(584,-984.4152,-656.2086,33.1543,91.1889,1,1,SPAWN_CARS); // Pricep 4
	AddStaticVehicleEx(584,-984.3068,-661.4308,33.1543,91.1889,1,1,SPAWN_CARS); // Pricep 5
	//====================================[ tyrma SF]==================================//
	armycarsf[0] = AddStaticVehicleEx(579,-1382.8628,456.3147,7.1837,358.4553,98,98,SPAWN_CARS);// хантли
	armycarsf[1] = AddStaticVehicleEx(579,-1388.7695,456.4739,7.1835,358.4553,98,98,SPAWN_CARS);// хантли
	armycarsf[2] = AddStaticVehicleEx(579,-1396.8483,456.6917,7.1833,358.4553,98,98,SPAWN_CARS); // хантли
	armycarsf[3] = AddStaticVehicleEx(430,-1441.8682,504.9640,-0.1769,90.9145,98,98,SPAWN_CARS); // Predator 0
	armycarsf[4] = AddStaticVehicleEx(430,-1444.5718,497.6307,-0.2322,87.5099,98,98,SPAWN_CARS); // Predator 1
	armycarsf[5] = AddStaticVehicleEx(497,-1267.7926,492.7711,18.4409,205.9990,98,98,SPAWN_CARS); // Hunter 0
	armycarsf[6] = AddStaticVehicleEx(609,-1353.6660,456.0203,7.2077,358.8921,98,98,SPAWN_CARS); // перевозка
	armycarsf[7] = AddStaticVehicleEx(609,-1359.6062,456.1334,7.2077,0.0182,98,98,SPAWN_CARS); // перевозка
	armycarsf[8] = AddStaticVehicleEx(505,-1365.3795,456.2057,7.2077,358.6358,98,98,SPAWN_CARS); // ранчо
	armycarsf[9] = AddStaticVehicleEx(505,-1371.5607,456.2316,7.1983,0.0280,98,98,SPAWN_CARS); // ранчо
	armycarsf[10] = AddStaticVehicleEx(579,-1377.2144,456.3732,7.1839,357.9771,98,98,SPAWN_CARS); // хантли
	armycarsf[11] = AddStaticVehicleEx(579,-1348.1566,455.9752,7.1812,359.4036,98,98,SPAWN_CARS); // хантли
	armycarsf[12] = AddStaticVehicleEx(579,-1342.1515,456.1178,7.1960,358.9728,98,98,SPAWN_CARS); // хантли
	armycarsf[13] = AddStaticVehicleEx(548,-1274.5247,445.3733,8.8554,29.1718,98,98,SPAWN_CARS); // Army Helicopter 0
	armycarsf[14] = AddStaticVehicleEx(548,-1247.8242,441.6462,8.7771,29.1654,98,98,SPAWN_CARS); // Army Helicopter 1
	armycarsf[15] = AddStaticVehicleEx(497,-1280.7985,492.3235,18.4684,205.9990,98,98,SPAWN_CARS); // Hunter 0
	armycarsf[16] = AddStaticVehicleEx(497,-1294.0475,493.1786,18.4904,205.9990,98,98,SPAWN_CARS); // Hunter 0
	armycarsf[17] = AddStaticVehicleEx(497,-1308.1738,493.4060,18.5170,205.9990,98,98,SPAWN_CARS); // Hunter 0
	armycarsf[18] = AddStaticVehicleEx(497,-1404.1675,493.7274,18.4051,206.0088,98,98,SPAWN_CARS); // Hunter 0
	armycarsf[19] = AddStaticVehicleEx(497,-1422.7838,493.1982,18.4068,206.0107,98,98,SPAWN_CARS); // Hunter 0
	armycarsf[20] = AddStaticVehicleEx(497,-1448.2502,492.6282,18.4413,205.9975,98,98,SPAWN_CARS); // Hunter 0
	armycarsf[21] = AddStaticVehicleEx(469,-1229.0856,446.0725,7.1966,27.8582,98,98,SPAWN_CARS); // Верт tyrmasa
    armycarsf[22] = AddStaticVehicleEx(469,-1228.6740,462.8824,7.2147,117.5638,98,98,SPAWN_CARS); // Верт sa
    armycarsf[23] = AddStaticVehicleEx(519,-1254.5056,501.6258,19.1521,90.2087,98,98,SPAWN_CARS); // Самик sa
    armycarsf[24] = AddStaticVehicleEx(469,-1593.7711,330.6941,21.7806,357.7206,98,98,SPAWN_CARS); // sa верт
    armycarsf[25] = AddStaticVehicleEx(469,-1575.9083,330.5238,21.8194,356.8781,98,98,SPAWN_CARS); // sa верт
    armycarsf[26] = AddStaticVehicleEx(469,-1585.5979,330.6047,21.7964,0.0029,98,98,SPAWN_CARS); // sa верт
	//====================================[ Aztecas Cars ]==================================//
	coronoscar[0] = AddStaticVehicleEx(534,1714.50000000,-2118.69995117,13.39999962,328.00000000,2,1,SPAWN_CARS); // Remington 0
	coronoscar[1] = AddStaticVehicleEx(534,1710.19995117,-2118.69995117,13.39999962,327.99682617,2,1,SPAWN_CARS); // Remington 1
	coronoscar[2] = AddStaticVehicleEx(567,1698.9780,-2083.4270,13.4163,180.3256,2,1,SPAWN_CARS); // Savanna
	coronoscar[3] = AddStaticVehicleEx(481,1663.9554,-2110.3213,13.0616,269.0359,2,1,SPAWN_CARS); // Bike
	coronoscar[4] = AddStaticVehicleEx(478,1683.1912,-2106.0867,13.5400,239.7240,2,1,SPAWN_CARS); // Walton
	coronoscar[5] = AddStaticVehicleEx(534,1710.00000000,-2107.19995117,13.39999962,227.99682617,2,1,SPAWN_CARS); // Remington 2
	coronoscar[6] = AddStaticVehicleEx(534,1714.59997559,-2106.80004883,13.39999962,227.99377441,2,1,SPAWN_CARS); // Remington 3
	matsfuraactek = AddStaticVehicleEx(482,1670.80004883,-2115.50000000,13.80000019,268.00000000,2,1,600); // MatsVan 0
	//====================================[ Vagos Cars ]==================================//
	vagoscar[0] = AddStaticVehicleEx(474,2782.1636,-1623.6354,10.6842,329.0284,6,6,SPAWN_CARS); // Hermes 0
	vagoscar[1] = AddStaticVehicleEx(474,2786.2476,-1623.0164,10.6844,329.1863,6,6,SPAWN_CARS); // Hermes 1
	vagoscar[2] = AddStaticVehicleEx(467,2771.0518,-1606.1017,10.5311,268.8685,84,6,SPAWN_CARS); // Oceanic 0
	vagoscar[3] = AddStaticVehicleEx(467,2790.3171,-1623.4697,10.6618,330.5728,84,6,SPAWN_CARS); // Oceanic 1
	vagoscar[4] = AddStaticVehicleEx(467,2771.1968,-1615.2633,10.5306,270.8752,84,6,SPAWN_CARS); // Oceanic 2
	vagoscar[5] = AddStaticVehicleEx(474,2778.0803,-1623.6750,10.6844,326.1422,6,6,SPAWN_CARS); // Hermes 2
	vagoscar[6] = AddStaticVehicleEx(474,2772.8315,-1623.4960,10.6874,322.4687,6,6,SPAWN_CARS); // Hermes 3
	matsfuravagos = AddStaticVehicleEx(482,2801.3621,-1599.0444,11.1306,337.2412,6,6,600); // MatsVan 0
	//====================================[ Groove Cars ]==================================//
	grovecar[0] = AddStaticVehicleEx(492,2469.6772,-1671.0565,13.1814,13.2198,86,86,SPAWN_CARS); // GreenWood 0
	grovecar[1] = AddStaticVehicleEx(492,2509.2651,-1672.5288,13.1906,342.6730,86,86,SPAWN_CARS); // GreenWood 1
	grovecar[2] = AddStaticVehicleEx(492,2488.3328,-1684.1450,13.1991,85.5844,86,86,SPAWN_CARS); // GreenWood 2
	grovecar[3] = AddStaticVehicleEx(492,2506.2107,-1678.6152,13.2417,324.9343,86,86,SPAWN_CARS); // GreenWood 3
	grovecar[4] = AddStaticVehicleEx(600,2474.3723,-1692.1406,13.2249,1.0014,86,1,SPAWN_CARS); // Picador 0
	grovecar[5] = AddStaticVehicleEx(600,2502.7886,-1655.3229,13.1999,56.7785,86,1,SPAWN_CARS); // Picador 1
	grovecar[6] = AddStaticVehicleEx(600,2471.9756,-1653.3414,13.1145,88.9228,86,1,SPAWN_CARS); // Picador 2
	matsfuragrove = AddStaticVehicleEx(482,2505.2205,-1694.3320,13.6723,358.9510,86,1,600); // MatsVan 0
	//====================================[ Rifa Cars ]==================================//
	rifacar[0] = AddStaticVehicleEx(547,2721.6655,-1926.2322,13.2717,180.0653,125,125,SPAWN_CARS);
	rifacar[1] = AddStaticVehicleEx(547,2721.9148,-1979.4735,13.2839,1.2552,125,125,SPAWN_CARS);
	rifacar[2] = AddStaticVehicleEx(518,2732.9128,-1934.0751,13.2173,90.5026,125,125,SPAWN_CARS);
 	rifacar[3] = AddStaticVehicleEx(518,2732.7786,-1937.6602,13.2178,88.6822,125,125,SPAWN_CARS);
	rifacar[4] = AddStaticVehicleEx(518,2726.7190,-1934.0822,13.2102,89.9153,125,125,SPAWN_CARS);
	rifacar[5] = AddStaticVehicleEx(518,2726.7568,-1937.5748,13.2101,90.4373,125,125,SPAWN_CARS);
	rifacar[6] = AddStaticVehicleEx(533,2726.5911,-1967.5734,13.2541,90.3387,125,125,SPAWN_CARS);
	rifacar[7] = AddStaticVehicleEx(533,2726.6189,-1972.2620,13.2721,90.3389,125,125,SPAWN_CARS);
	matsfurarifa = AddStaticVehicleEx(482,2733.9946,-1969.8779,13.6694,89.6135,125,125,600); // MatsVan 0
	//====================================[ Ballas Cars ]==================================//
	ballascar[0] = AddStaticVehicleEx(412,2088.1731,-1170.6750,25.1161,89.0737,85,1,SPAWN_CARS); // Ballas
	ballascar[1] = AddStaticVehicleEx(412,2079.5769,-1178.3295,23.6691,180.2138,85,1,SPAWN_CARS); // Ballas
	ballascar[2] = AddStaticVehicleEx(412,2078.8049,-1200.7745,23.7422,359.4043,85,1,SPAWN_CARS); // Ballas
	ballascar[3] = AddStaticVehicleEx(566,2116.3557,-1165.4967,24.2104,179.2922,85,1,SPAWN_CARS); // Ballas
 	ballascar[4] = AddStaticVehicleEx(566,2121.2041,-1165.9114,24.0373,177.7032,85,1,SPAWN_CARS); // Ballas
	ballascar[5] = AddStaticVehicleEx(516,2122.3369,-1192.9025,23.7813,2.5444,85,1,SPAWN_CARS); // Ballas
	ballascar[6] = AddStaticVehicleEx(516,2122.0308,-1180.8604,23.9023,359.9187,85,1,SPAWN_CARS); // Ballas
	matsfura = AddStaticVehicleEx(482,2098.0889,-1175.7133,25.7187,91.0765,85,1,600); // MatsVan
	//====================================[ Army CB Cars ]==================================//
	armcar[0] = AddStaticVehicleEx(500,221.9194,1855.0072,13.0356,1.6078,77,77,SPAWN_CARS); // Mesa0
	armcar[1] = AddStaticVehicleEx(500,217.1713,1854.8744,13.0242,1.6078,77,77,SPAWN_CARS); // Mesa1
	armcar[2] = AddStaticVehicleEx(500,212.6617,1854.7483,13.0134,1.6078,77,77,SPAWN_CARS); // Mesa2
 	armcar[3] = AddStaticVehicleEx(500,203.7943,1862.3488,13.2462,271.1720,77,77,SPAWN_CARS); // Mesa3
	armcar[4] = AddStaticVehicleEx(500,203.7240,1866.9736,13.2801,271.3324,77,77,SPAWN_CARS); // Mesa4
 	armcar[5] = AddStaticVehicleEx(500,203.5927,1872.2008,13.2459,271.1720,77,77,SPAWN_CARS); // Mesa5
	armcar[6] = AddStaticVehicleEx(497,144.9689,1950.7150,29.1754,359.9992,44,44,SPAWN_CARS); // Helicopter1
	armcar[7] = AddStaticVehicleEx(497,135.1045,1950.7152,29.1515,359.9985,44,44,SPAWN_CARS); // Helicopter2
	armcar[8] = AddStaticVehicleEx(417,282.5943,1930.2881,17.7617,269.2092,1,1,SPAWN_CARS); // Грузовой вертолет
	armcar[9] = AddStaticVehicleEx(470,298.5669,1795.9558,17.6341,270.6636,77,77,SPAWN_CARS); // patriot
	armcar[10] = AddStaticVehicleEx(470,298.4042,1799.5295,17.6314,270.4124,77,77,SPAWN_CARS); // patriot
	armcar[11] = AddStaticVehicleEx(513,301.5449,2051.3459,18.1912,184.5428,10,1,SPAWN_CARS); // Кукурузник
	armcar[12] = AddStaticVehicleEx(513,313.9678,2051.5259,18.1909,185.4663,10,1,SPAWN_CARS); // Кукурузник
	armcar[13] = AddStaticVehicleEx(500,152.90450000,1970.09780000, 19.92540000,269.68860000,77,77,SPAWN_CARS); //Mesa0
	armcar[14] = AddStaticVehicleEx(500,153.69040000,1964.66420000, 20.11020000,267.78740000,77,77,SPAWN_CARS); //Mesa1
	armcar[15] = AddStaticVehicleEx(500,156.62200000,1958.41270000, 20.02840000,270.06060000,77,77,SPAWN_CARS); //Mesa2
	armcar[16] = AddStaticVehicleEx(500,172.75340000,1953.63980000, 20.06320000,270.24240000,77,77,SPAWN_CARS); //Mesa3
	armcar[17] = AddStaticVehicleEx(500,172.99880000,1958.34790000, 20.00980000,268.88950000,77,77,SPAWN_CARS); //Mesa4
	armcar[18] = AddStaticVehicleEx(500,173.07350000,1963.36410000, 19.93220000,270.17900000,77,77,SPAWN_CARS); //Mesa5
	armcar[19] = AddStaticVehicleEx(500,173.13080000,1968.48190000, 20.04760000,270.81270000,77,77,SPAWN_CARS); //Mesa6
	armcar[20] = AddStaticVehicleEx(500,172.93550000,1973.29700000, 20.05970000,269.62710000,77,77,SPAWN_CARS); //Mesa7
	armcar[21] = AddStaticVehicleEx(500,173.09060000,1978.29140000, 20.10240000,269.76820000,77,77,SPAWN_CARS); //Mesa8
	armcar[22] = AddStaticVehicleEx(500,172.92090000,1983.38120000, 20.00140000,268.40320000,77,77,SPAWN_CARS); //Mesa9
	armcar[23] = AddStaticVehicleEx(470,184.40990000,1945.04360000, 19.65430000,91.06440000,77,77,SPAWN_CARS); //Patriot0
	armcar[24] = AddStaticVehicleEx(470,183.96970000,1950.09970000, 19.78680000,88.88780000,77,77,SPAWN_CARS); //Patriot1
	armcar[25] = AddStaticVehicleEx(470,183.67430000,1954.93640000, 19.77820000,90.21300000,77,77,SPAWN_CARS); //Patriot2
	armcar[26] = AddStaticVehicleEx(470,184.13430000,1960.09620000, 19.57300000,88.98510000,77,77,SPAWN_CARS); //Patriot3
 	armcar[27] = AddStaticVehicleEx(470,183.87360000,1965.14810000, 19.73130000,91.99030000,77,77,SPAWN_CARS); //Patriot4
	armcar[28] = AddStaticVehicleEx(470,184.05790000,1970.22350000, 19.77450000,89.54330000,77,77,SPAWN_CARS); //Patriot5
	armcar[29] = AddStaticVehicleEx(470,183.93110000,1975.23380000, 19.79280000,90.13170000,77,77,SPAWN_CARS); //Patriot6
	armcar[30] = AddStaticVehicleEx(470,183.60440000,1980.46470000, 19.71780000,90.51290000,77,77,SPAWN_CARS); //Patriot7
	armcar[31] = AddStaticVehicleEx(470,183.64470000,1985.51730000, 19.79170000,88.25440000,77,77,SPAWN_CARS); //Patriot8
	armcar[32] = AddStaticVehicleEx(470,183.76640000,1990.41660000, 19.74800000,88.68630000,77,77,SPAWN_CARS); //Patriot9
	armcar[33] = AddStaticVehicleEx(470,183.59310000,1995.62610000, 19.76930000,87.44930000,77,77,SPAWN_CARS); //Patriot10
	armcar[34] = AddStaticVehicleEx(470,274.89999390,1945.69995117,17.79999924,269.25000000,77,77,SPAWN_CARS); //Patriot11
	armcar[35] = AddStaticVehicleEx(470,274.89999390,1951.19995117,17.79999924,269.24743652,77,77,SPAWN_CARS); //Patriot12
	armcar[36] = AddStaticVehicleEx(470,274.60000610,1955.80004883,17.79999924,269.24743652,77,77,SPAWN_CARS); //Patriot13
	armcar[37] = AddStaticVehicleEx(470,274.70001221,1966.09997559,17.79999924,269.24743652,77,77,SPAWN_CARS); //Patriot14
	armcar[38] = AddStaticVehicleEx(470,274.79998779,1960.59997559,17.79999924,269.24743652,77,77,SPAWN_CARS); //Patriot15
	gunscar[0] = AddStaticVehicleEx(433,275.2985,1982.4747,18.0773,269.3129,34,34,SPAWN_CARS); // ArmyTruck0
	AddStaticVehicleEx(433,275.3807,1989.3337,18.0773,269.3129,34,34,SPAWN_CARS); // ArmyTruck1
	AddStaticVehicleEx(573,273.9944,2030.2230,18.2909,269.8529,77,77,SPAWN_CARS); // Дюна
	AddStaticVehicleEx(573,272.2696,2018.8751,18.2900,263.6666,77,77,SPAWN_CARS); // Дюна
	gunscar[1] = AddStaticVehicleEx(433,275.4670,1996.5306,18.0773,269.3129,34,34,SPAWN_CARS); // ArmyTruck2
	//====================================[ Скутеры СФ ]==================================//
	AddStaticVehicleEx(462,-2015.4257,-92.8266,35.0008,268.8789,1,0,SPAWN_CARS); // Faggio 0
    AddStaticVehicleEx(462,-2015.4576,-94.5252,35.0106,275.3567,1,0,SPAWN_CARS); //
    AddStaticVehicleEx(462,-2015.3447,-91.2103,35.0032,270.4940,1,0,SPAWN_CARS); //
    AddStaticVehicleEx(462,-2015.4861,-89.9519,35.0003,275.1641,1,0,SPAWN_CARS); //
    AddStaticVehicleEx(462,-2015.4813,-88.5635,35.0033,271.9252,1,0,SPAWN_CARS); //
	AddStaticVehicleEx(462,-2015.2842,-86.9358,35.0077,264.9317,1,0,SPAWN_CARS); // Faggio 5
	//====================================[ Свободные лодки ЛС ]==================================//
	AddStaticVehicleEx(452,719.01116943359,-1704.5384521484,0,182,1,1,SPAWN_CARS);
	AddStaticVehicleEx(452,719.07446289063,-1691.9649658203,0,181.99951171875,1,1,SPAWN_CARS);
	AddStaticVehicleEx(452,-1476.5729980469,686.76409912109,0,180,1,1,SPAWN_CARS);
	return true;
}

publics: PlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return true;
	return false;
}

stock IsPlayerInArea(playerid, Float:min_x, Float:min_y ,Float:max_x, Float:max_y)
{
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	if(X <= max_x && X >= min_x && Y <= max_y && Y >= min_y) return true;
	return false;
}

stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid,PX,PY,PZ);
		GetVehiclePos(vehicleid, X,Y,Z);
		new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
		if(Distance <= radi*radi)
		{
			return true;
		}
	}
	return false;
}

stock GetGangColor(g)
{
	new zx;
	switch(g)
	{
		case 12: zx = 0xFF0000AA;
		case 13: zx = 0xFF0000AA;
		case 15: zx = 0xFF0000AA;
		case 17: zx = 0xFF0000AA;
		case 18: zx = 0xFF0000AA;
		default: zx = 0xFEFEFEAA;
	}
	return zx;
}

stock GetGangZoneColor(gangzonex)
{
	new zx;
	switch(GZInfo[gangzonex][gFrakVlad])
	{
		case 12: zx = 0xCC00FFAA;
		case 13: zx = 0xffff00AA;
		case 15: zx = 0x009900AA;
		case 17: zx = 0x00CCFFAA;
		case 18: zx = 0x6666FFAA;
		default: zx = 0xC0C0C0AA;
	}
	return zx;
}

stock GetNearestPlayer(playerid)
{
	foreach(new i : Player)
	{
		new Float:x,Float:y,Float:z;
		GetPlayerPos(i,x,y,z);
		if(PlayerToPoint(6.0,playerid,x,y,z)) return i;
	}
	return -1;
}

stock GetNearestVehicle(playerid)
{
	for(new i; i < MAX_VEHICLES; i++)
	{
		if(GetVehicleModel(i))
		{
			new Float:X,Float:Y,Float:Z;
			GetVehiclePos(i,X,Y,Z);
			if(PlayerToPoint(6.0, playerid, X, Y, Z))return i;
		}
	}
	return -1;
}

stock GetMafiaName(fnumbwer)
{
	new string[256];
	switch(fnumbwer)
	{
	case 5: format(string,sizeof(string), "La Cosa Nostra");
	case 6: format(string,sizeof(string), "山口组");
	case 14: format(string,sizeof(string), "俄罗斯黑手党");
	}
	return string;
}

publics: CompVehDel(playerid)
{
	PlayerInfo[playerid][pWheels] = 0;
	PlayerInfo[playerid][pNitro] = 0;
	PlayerInfo[playerid][pHydraulics] = 0;
	PlayerInfo[playerid][pSpoilers] = 0;
	PlayerInfo[playerid][pHBumper] = 0;
	PlayerInfo[playerid][pBBumper] = 0;
	return true;
}

publics: CompVeh(playerid,vehicleid)
{
	AddVehicleComponent (vehicleid, PlayerInfo[playerid][pWheels]);
	AddVehicleComponent (vehicleid, PlayerInfo[playerid][pNitro]);
	AddVehicleComponent (vehicleid, PlayerInfo[playerid][pHydraulics]);
	SetVehicleNumberPlate(vehicleid, PlayerInfo[playerid][pNumbercar]);
	if(PJ(vehicleid))
	{
		AddVehicleComponent (vehicleid, PlayerInfo[playerid][pSpoilers]);
		AddVehicleComponent (vehicleid, PlayerInfo[playerid][pHBumper]);
		AddVehicleComponent (vehicleid, PlayerInfo[playerid][pBBumper]);
	}
	return true;
}

publics: OnVehicleSpawn(vehicleid)
{
	if(Indicators_xqz[vehicleid][2]) DestroyObject(Indicators_xqz[vehicleid][2]), DestroyObject(Indicators_xqz[vehicleid][3]),DestroyObject(Indicators_xqz[vehicleid][5]),Indicators_xqz[vehicleid][2]=0;
	if(Indicators_xqz[vehicleid][0]) DestroyObject(Indicators_xqz[vehicleid][0]), DestroyObject(Indicators_xqz[vehicleid][1]),DestroyObject(Indicators_xqz[vehicleid][4]),Indicators_xqz[vehicleid][0]=0;
	foreach(new i : Player)
	{
	    if(vehicleid >= nouncar[0] && vehicleid <= nouncar[8])
	    {
	        Fuell[vehicleid] = 100;
	    }
	}
 	foreach(new i : Player)
	{
        if(vehicleid >= LicCar[0] && vehicleid <= LicCar[10])
		{
			Fuell[vehicleid] = 100;
		}
	}
    foreach(new i : Player)
	{
		if(vehicleid >= buscar[0] && vehicleid <= buscar[40])
		{
			Fuell[vehicleid] = 70;
		}
	}
	if(GetVehicleModel(vehicleid) == 462)
	{
		foreach(new i : Player)
		{
			if(GetPVarInt(i,"FaggioRent") == vehicleid)
			{
	 			DestroyVehicle(vehicleid);
	 			DeletePVar(i,"FaggioRent");
	 			PlayerInfo[i][pAreaskut] = 0;
	 			SendServerMessage(i,"[租车]: 你租来的车辆已经到期了!");
			}
		}
	}
	zavodis[vehicleid] = 0;
	Light[vehicleid] = 0;
	foreach(new i : Player)
	{
		if(vehicleid == caridhouse[i])
		{
			Fuell[caridhouse[i]] = PlayerInfo[i][pFuelcar];
			CompVeh(i,caridhouse[i]);
		}
	}
	return true;
}

publics: UnlockVehicle(vehicleid)
{
	foreach(new i : Player)
	{
		SetVehicleParamsForPlayer(vehicleid,i, 0, 0);
	}
	IsLocked[vehicleid] = 0;
}

publics: Random(min, max)
{
	new a = random(max - min) + min;
	return a;
}

publics: PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return true;
		}
	}
	return false;
}

stock GetWeaponNameEx(idsss, name[], len) return format(name,len, "%s", GunNames[idsss]);
stock IsAPistol(gunid)
{
	if(gunid >= 22 && gunid <=24)
	{
		return true;
	}
	return false;
}

stock IsAMelee(gunid)
{
	if(gunid >= 2 && gunid <= 9 )
	{
		return true;
	}
	return false;
}

stock IsAGirlsStuff(gunid)
{
	if(gunid >= 10 && gunid <= 15 || gunid == 46)
	{
		return true;
	}
	return false;
}

stock IsAGrenade(gunid)
{
	if((gunid >= 16 && gunid <= 18) || gunid == 39)
	{
		return true;
	}
	return false;
}

stock IsAShotgun(gunid)
{
	if(gunid >= 25 && gunid <= 27)
	{
		return true;
	}
	return false;
}

stock IsAMachineGun(gunid)
{
	if(gunid == 28 || gunid == 29 || gunid == 32)
	{
		return true;
	}
	return false;
}

stock IsAnAssault(gunid)
{
	if(gunid == 30 || gunid == 31)
	{
		return true;
	}
	return false;
}

stock IsARifle(gunid)
{
	if(gunid == 33 || gunid == 34)
	{
		return true;
	}
	return false;
}

stock IsAHeavyAssault(gunid)
{
	if(gunid >= 35 && gunid <= 37 )
	{
		return true;
	}
	return false;
}

stock IsAStuff1(gunid)
{
	if(gunid >= 41 && gunid <= 43 )
	{
		return true;
	}
	return false;
}

stock GiveWeapon(playerid,weaponid,ammo)
{
    Weapons[playerid][weaponid]= 1;
	SetPVarInt(playerid, "GunCheckTime", 5);
	if(IsAMelee(weaponid))
	{
		PlayerInfo[playerid][pSlot][0] = weaponid;
		PlayerInfo[playerid][pSlotammo][0] = ammo;
	}
	if(IsAPistol(weaponid))
	{
		PlayerInfo[playerid][pSlot][1] = weaponid;
		PlayerInfo[playerid][pSlotammo][1] = ammo;
	}
	else if(IsAShotgun(weaponid))
	{
		PlayerInfo[playerid][pSlot][2] = weaponid;
		PlayerInfo[playerid][pSlotammo][2] = ammo;
	}
	else if(IsAMachineGun(weaponid))
	{
		PlayerInfo[playerid][pSlot][3] = weaponid;
		PlayerInfo[playerid][pSlotammo][3] = ammo;
	}
	else if(IsAnAssault(weaponid))
	{
		PlayerInfo[playerid][pSlot][4] = weaponid;
		PlayerInfo[playerid][pSlotammo][4] = ammo;
	}
	else if(IsARifle(weaponid))
	{
		PlayerInfo[playerid][pSlot][5] = weaponid;
		PlayerInfo[playerid][pSlotammo][5] = ammo;
	}
	else if(IsAHeavyAssault(weaponid))
	{
		PlayerInfo[playerid][pSlot][6] = weaponid;
		PlayerInfo[playerid][pSlotammo][6] = ammo;
	}
	else if(IsAHeavyAssault(weaponid))
	{
		PlayerInfo[playerid][pSlot][7] = weaponid;
		PlayerInfo[playerid][pSlotammo][7] = ammo;
	}
	else if(IsAGrenade(weaponid))
	{
		PlayerInfo[playerid][pSlot][8] = weaponid;
		PlayerInfo[playerid][pSlotammo][8] = ammo;
	}
	else if(IsAStuff1(weaponid))
	{
		PlayerInfo[playerid][pSlot][9] = weaponid;
		PlayerInfo[playerid][pSlotammo][9] = ammo;
	}
	else if(IsAGirlsStuff(weaponid))
	{
		PlayerInfo[playerid][pSlot][10] = weaponid;
		PlayerInfo[playerid][pSlotammo][10] = ammo;
	}
	GivePlayerWeapon(playerid,weaponid,ammo);
	return true;
}

stock GetSRVMoney(playerid)
{
	return PlayerInfo[playerid][pCash];
}

publics: DelGun(playerid)
{
	SetPVarInt(playerid, "GunCheckTime",5);
	PlayerInfo[playerid][pSlot][0] = 0;
	PlayerInfo[playerid][pSlot][1] = 0;
	PlayerInfo[playerid][pSlot][2] = 0;
	PlayerInfo[playerid][pSlot][3] = 0;
	PlayerInfo[playerid][pSlot][4] = 0;
	PlayerInfo[playerid][pSlot][5] = 0;
	PlayerInfo[playerid][pSlot][6] = 0;
	PlayerInfo[playerid][pSlot][7] = 0;
	PlayerInfo[playerid][pSlot][8] = 0;
	PlayerInfo[playerid][pSlot][9] = 0;
	PlayerInfo[playerid][pSlot][10] = 0;
	PlayerInfo[playerid][pSlotammo][0] = 0;
	PlayerInfo[playerid][pSlotammo][1] = 0;
	PlayerInfo[playerid][pSlotammo][2] = 0;
	PlayerInfo[playerid][pSlotammo][3] = 0;
	PlayerInfo[playerid][pSlotammo][4] = 0;
	PlayerInfo[playerid][pSlotammo][5] = 0;
	PlayerInfo[playerid][pSlotammo][6] = 0;
	PlayerInfo[playerid][pSlotammo][7] = 0;
	PlayerInfo[playerid][pSlotammo][8] = 0;
	PlayerInfo[playerid][pSlotammo][9] = 0;
	PlayerInfo[playerid][pSlotammo][10] = 0;
	ResetPlayerWeapons(playerid);
	return true;
}

stock GiveArmour(playerid, Float:armour)
{
	if(IsPlayerConnected(playerid))
	{
		Armour[playerid] = armour;
		SetPlayerArmourAC(playerid,armour);
	}
	return true;
}

publics: GetMoney()
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			new money = GetPlayerMoney(i);
			if(PlayerInfo[i][pCash] > money)
			{
				ResetPlayerMoney(i);
				GivePlayerMoney(i, PlayerInfo[i][pCash]);
			}
			else if(PlayerInfo[i][pCash] < money)
			{
				ResetPlayerMoney(i);
				GivePlayerMoney(i, PlayerInfo[i][pCash]);
			}
		}
	}
	return;
}

UnLockCar(carid)
{
	foreach(new i : Player)
	{
		gCarLock[carid] = 0;
		IsLocked[carid] = 0;
		GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(carid,engine,lights,alarm,VEHICLE_PARAMS_OFF,bonnet,boot,objective);
		SetVehicleParamsForPlayer(carid,i, 0, 0);
	}
}

stock SpeedVehicle(playerid)
{
    new Float:ST[4];
    if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
    else return 0;
    ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 130;
    return floatround(ST[3]);
}

publics: UpdateSpeedometr(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		new vehicleid; vehicleid = GetPlayerVehicleID(playerid);
		new locked[32],str[64],str2[64],str4[64],str5[64],Float:vehhel,vehh[20],vehs[20],maxx[20],str3[64],str6[64],vehe[20];
		if(IsLocked[GetPlayerVehicleID(playerid)] == 1) { locked = "~r~~h~Lock"; }
		else { locked = "~g~~h~Open";}
		GetVehicleHealth(GetPlayerVehicleID(playerid), vehhel);
		if(vehhel <= 500) vehh = "~r~";
		else vehh = "";
		if(Fuell[GetPlayerVehicleID(playerid)] <= 30) vehs = "~r~";
		else vehs = "";
		if(zavodis[GetPlayerVehicleID(playerid)] == 0) vehe = "~r~OFF";
		else vehe = "~g~ON";
		format(str, sizeof(str),"%d",SpeedVehicle(playerid));
        if(vehhel <= 300) format(str2, sizeof(str2),"%s30%",vehh); else format(str2, sizeof(str2),"%s%.0f%",vehh,vehhel / 10);
		format(str3, sizeof(str3), "%s", locked);
		format(str4, sizeof(str4), "%s%.0f", vehs,Fuell[GetPlayerVehicleID(playerid)]);
		format(str6, sizeof(str6), "%s", vehe);
		if(Maxi[playerid])
        {
		    maxx = "MAX";
	    }
		else
		{
		    maxx = "~w~MAX";
	    }
		format(str5, sizeof(str5), "%s",maxx);
	    if(Maxi[playerid])
        {
            GetVehiclePos(vehicleid, s_fX, s_fY, s_fZ);
            GetVehicleVelocity(vehicleid, s_fVX, s_fVY, s_fVZ);
            if(!IsPlayerInRangeOfPoint(playerid, 0.5, s_fX + s_fVX, s_fY + s_fVY, s_fZ + s_fVZ))
            {
                s_fLength = floatsqroot(( s_fVX * s_fVX) + (s_fVY * s_fVY) + (s_fVZ * s_fVZ));
	            s_fVX = (s_fVX / s_fLength) * 0.5;
                s_fVY = (s_fVY / s_fLength) * 0.5;
	            s_fVZ = (s_fVZ / s_fLength) * 0.5;
	           	SetVehicleVelocity(vehicleid, s_fVX, s_fVY, s_fVZ);
            }
	   	}
		if(SpeedVehicle(playerid) >= 180 && PlayerInfo[playerid][pAdministration228] == 0) SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Speed Hack )"), GKick(playerid);
        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 486 && SpeedVehicle(playerid) > 100) SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Speed Hack )"), GKick(playerid);
        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 462 && SpeedVehicle(playerid) > 150) SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Speed Hack )"), GKick(playerid);
		foreach(new i : Player)
		{
			if(PlayerToPoint(200,playerid,X777[i],Y777[i],Z777[i]) && PlayerInfo[playerid][pNr] == 0 )
			{
				new string[180];
				format(string,sizeof(string),"― 附近安装的雷达. 允许的速度: %d km/h",Skor[i]);
				SendClientMessage(playerid,-1,string);
				PlayerInfo[playerid][pNr] = 1;
			}
			if(PlayerToPoint(20,playerid,X777[i],Y777[i],Z777[i]) )
			{
				new string[180];
				if(SpeedVehicle(playerid) > Skor[i] && PlayerInfo[playerid][pNr1] == 0)
				{
					PlayerInfo[playerid][pCash] -= (SpeedVehicle(playerid)-Skor[i])*10;
					format(string,sizeof(string),"― 你被罚了 %d $, 超速!",(SpeedVehicle(playerid)-Skor[i])*10);
					SendClientMessage(playerid,-1,string);
					PlayerInfo[playerid][pNr1] = 1;
					if(PlayerInfo[i][pRadar] == 1)
					{
						PlayerInfo[i][pCash] +=(SpeedVehicle(playerid)-Skor[i])*10;
						format(string,sizeof(string),"― 你被罚款 %d $",(SpeedVehicle(playerid)-Skor[i])*10);
						SendClientMessage(i,-1,string);
					}
				}
			}
		}
		if(Fuell[vehicleid] <= 0)
		{
			Fuell[vehicleid] = 0;
			GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
			zavodis[GetPlayerVehicleID(playerid)] = 0;
			GameTextForPlayer(playerid,"~r~FUEL HAS ENDED", 5000, 3);
		}
		new Float:hp;
		GetVehicleHealth(vehicleid, hp);
		if(hp <= 425)
		{
			GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
			zavodis[GetPlayerVehicleID(playerid)] = 0;
			GameTextForPlayer(playerid,"~r~ STOP THE ENGINE", 5000, 3);
		}
		if(vehicleid == caridhouse[playerid]) PlayerInfo[playerid][pFuelcar] = Fuell[vehicleid];

		//for(new t; t != 6; t++) PlayerTextDrawSetString(playerid, VehInfo[playerid][t]);

		PlayerTextDrawSetString(playerid, VehInfo[playerid][0], str);
		PlayerTextDrawSetString(playerid, VehInfo[playerid][3], str2);
		PlayerTextDrawSetString(playerid, VehInfo[playerid][5], str3);
		PlayerTextDrawSetString(playerid, VehInfo[playerid][1], str4);
		PlayerTextDrawSetString(playerid, VehInfo[playerid][2], str6);
		PlayerTextDrawSetString(playerid, VehInfo[playerid][4], str5);
	}
	return true;
}

publics: OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	new string[256];
	new Float: carhp;
	if(PlayerInfo[playerid][pProcents] < 10)
	{
		if(GetPlayerVehicleID(playerid) == caridhouse[playerid])
		{
			format(string, sizeof(string), "~r~ENGINE HAS BROKENED");
			GameTextForPlayer(playerid, string, 5000, 3);
			GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
			zavodis[GetPlayerVehicleID(playerid)] = 0;
		}
	}
	GetVehicleHealth(vehicleid, carhp);
	foreach(new i : Player)
	{
		if(GetPlayerVehicleID(playerid) == caridhouse[i])
		{
			if(carhp > 700 && carhp < 1000)
			{
				PlayerInfo[playerid][pProcents] -= 0;
				return true;
			}
			else if(carhp > 500 && carhp < 700)
			{
				if(PlayerInfo[playerid][pProcents] > 0)
				{
					PlayerInfo[playerid][pProcents] -= 1;
					return true;
				}
			}
			else if(carhp > 300 && carhp < 500)
			{
				if(PlayerInfo[playerid][pProcents] > 0)
				{
					PlayerInfo[playerid][pProcents] -= 2;
					return true;
				}
			}
		}
	}
	return true;
}
stock ConnectedPlayers()
{
	new count;
	foreach(new x : Player)
	{
		if(IsPlayerConnected(x))
		{
			count++;
		}
	}
	return count;
}

publics: ChangeName(playerid,string[])
{
	new query[200];
	format(query, sizeof(query), "UPDATE `"TABLE_ACCOUNT"` SET `Name`='%s' WHERE `Name` = '%s'",string,Name(playerid));
	mysql_query(query);
	new string2[356];
	new key = PlayerInfo[playerid][pPhousekey];
	if(PlayerInfo[playerid][pPhousekey] != 799 && strcmp(Name(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
	{
		strmid(HouseInfo[key][hOwner], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 255);
	}
	format(string2,sizeof(string2), "― [改名] %s 改名为: %s.",Name(playerid),WantNickChange[playerid]);
	SendClientMessageToAll(COLOR_BBLUE,string2);
	SetPlayerName(playerid, string);
	PlayerInfo[playerid][pDonatemoney] -= 25;
	SendSyntaxMessage(playerid,"在 SA-MP 框中重新输入名称");
	OnPlayerUpdateAc(playerid);
    GKick(playerid);
	return true;
}

stock Convert(number)
{
	new hours = 0, mins = 0, secs = 0, string[30];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0) format(string, 30, "%d:%02d:%02d", hours, mins, secs);
	else format(string, 30, "%d:%02d", mins, secs);
	return string;
}

stock SetPlayerHealthAC(playerid, Float: Health)
{
	PlayerHealth[playerid] = Health;
	DamHealth[playerid] = Health;
	SetPlayerHealth(playerid, Health);
	HealthOn[playerid] = 1;
	return SetPlayerHealth(playerid,Health);
}

stock SetPlayerArmourAC(playerid, Float: Arm)
{
	if(IsPlayerConnected(playerid))
	{
		Armour[playerid] = Arm;
		SetPlayerArmour(playerid, Arm);
	}
	return true;
}

stock AnRepairVehicle(vehicleid)
{
	foreach(Player, i)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(GetPlayerVehicleID(i) == vehicleid && GetPlayerState(i) == PLAYER_STATE_DRIVER)
	        {
	            player_NoCheck[i] = 3;
			}
		}
	}
	RepairVehicle(vehicleid);
    return 1;
}

stock GetPlayerID(string[])
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i) == 1)
		{
			new testname[MAX_PLAYER_NAME];
			GetPlayerName(i, testname, sizeof(testname));
			if(strcmp(testname, string, true, strlen(string)) == 0)
			{
				return i;
			}
		}
	}
	return INVALID_PLAYER_ID;
}

stock ToDevelopSkills(Slashes,Points)
{
	new SlashesAndPoints[200];
	new Slash[2] = "|";
	new Point[2] = "'";
	for(new i = 0; i < Slashes; i++) strcat(SlashesAndPoints, Slash);
	for(new i = 0; i < Points; i++) strcat(SlashesAndPoints, Point);
	return SlashesAndPoints;
}
stock SetPlayerSkills(playerid)
{
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, PlayerInfo[playerid][pGunSkill][0]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, PlayerInfo[playerid][pGunSkill][1]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, PlayerInfo[playerid][pGunSkill][2]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, PlayerInfo[playerid][pGunSkill][3]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, PlayerInfo[playerid][pGunSkill][4]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, PlayerInfo[playerid][pGunSkill][5]*10);
	return true;
}

stock OnPlayerAmmoChange(playerid, newammo, oldammo)
{
	if(newammo < oldammo)
	{
		switch(GetPlayerWeapon(playerid))
		{
		case 24:
			{
				SetPVarInt(playerid, "SkillD",GetPVarInt(playerid, "SkillD") +1);
				if(GetPVarInt(playerid, "SkillD") >= Ammo_DEAGLE && PlayerInfo[playerid][pGunSkill][1] < 100)
				{
					PlayerInfo[playerid][pGunSkill][1]++;
					SetPVarInt(playerid, "SkillD",0);
				}
			}
		case 23:
			{
				SetPVarInt(playerid, "SkillSD",GetPVarInt(playerid, "SkillSD") +1);
				if(GetPVarInt(playerid, "SkillSD")>= Ammo_SDPISTOL && PlayerInfo[playerid][pGunSkill][0] < 100)
				{
					PlayerInfo[playerid][pGunSkill][0]++;
					SetPVarInt(playerid, "SkillSD",0);
				}
			}
		case 25:
			{
				SetPVarInt(playerid, "SkillShot",GetPVarInt(playerid, "SkillShot") +1);
				if(GetPVarInt(playerid, "SkillShot") >= Ammo_SHOTGUN && PlayerInfo[playerid][pGunSkill][2] < 100)
				{
					PlayerInfo[playerid][pGunSkill][2]++;
					SetPVarInt(playerid, "SkillShot",0);
				}
			}
		case 29:
			{
				SetPVarInt(playerid, "SkillMP5",GetPVarInt(playerid, "SkillMP5") +1);
				if(GetPVarInt(playerid, "SkillMP5") >= Ammo_MP5 && PlayerInfo[playerid][pGunSkill][3] < 100)
				{
					PlayerInfo[playerid][pGunSkill][3]++;
					SetPVarInt(playerid, "SkillMP5",0);
				}
			}
		case 30:
			{
				SetPVarInt(playerid, "SkillAk47",GetPVarInt(playerid, "SkillAk47") +1);
				if(GetPVarInt(playerid, "SkillAk47") >= Ammo_AK47 && PlayerInfo[playerid][pGunSkill][4] < 100)
				{
					PlayerInfo[playerid][pGunSkill][4]++;
					SetPVarInt(playerid, "SkillAk47",0);
				}
			}
		case 31:
			{
				SetPVarInt(playerid, "SkillM4",GetPVarInt(playerid, "SkillM4") +1);
				if(GetPVarInt(playerid, "SkillM4") >= Ammo_M4A1 && PlayerInfo[playerid][pGunSkill][5] < 100)
				{
					PlayerInfo[playerid][pGunSkill][5]++;
					SetPVarInt(playerid, "SkillM4",0);
				}
			}
		}
	}
	return true;
}

stock IsWheelModel(modelid)
{
	new wheelmodels[17] = {1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};
	for(new i=0;i<17;i++)
	{
		if (modelid == wheelmodels[i])
		return true;
	}
	return false;
}

stock IsLegalCarNitroIde(carmodel)
{
	new illegalvehs[29] = { 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449 };
	for(new i=0;i<29;i++)
	{
		if (carmodel == illegalvehs[i])
		return true;
	}
	return false;
}

stock IsLegal_Nos_Vehicle(PlayerID)
{
	new carid = GetPlayerVehicleID(PlayerID);
	new playercarmodel = GetVehicleModel(carid);
	return IsLegalCarNitroIde(playercarmodel);
}

stock IsLegalCarMod(vehicleide, componentid)
{
	new modok = false;
	if((IsWheelModel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010)))
	{
		new nosblocker = IsLegalCarNitroIde(vehicleide);
		if (!nosblocker)
		modok = true;
	}
	else
	{
		for(new I=0;I<48;I++)
		{
			if (legalmods[I][0] == vehicleide)
			{
				for(new J = 1; J < 22; J++)
				{
					if (legalmods[I][J] == componentid)
					modok = true;
				}
			}
		}
	}
	return modok;
}

publics: OnVehicleMod(playerid, vehicleid, componentid)
{
    if(GetPlayerInterior(playerid) == 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Vehicle Cheat #7 )"),GKick(playerid);
	}
	new vehicleide = GetVehicleModel(vehicleid);
	new modok = IsLegalCarMod(vehicleide, componentid);
	if(!modok)
	{
		SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Vehicle Cheat #8 )"),GKick(playerid);
	}
	return true;
}

stock AdvertList(playerid)
{
	new full, str[128], strrr[2000];
	switch(PlayerInfo[playerid][pMember])
	{
	case 16: full = 0;
	case 9: full = 1;
	case 20: full = 2;
	}
	for(new i = 1; i <= TOTALADVERT[full];i++)
	{
		format(str, sizeof(str), " [%i] 发送者: %s, 电话号码: %i\n",i, AdvertInfo[i][full][adName], AdvertInfo[i][full][adPhone]);
		strcat(strrr, str);
	}
	if(TOTALADVERT[full] == 0) return ShowPlayerDialog(playerid, 69, 0, "{1E90FF}广告", "没有新广告", "关闭", "");
	ShowPlayerDialog(playerid, 11518, 2, "{1E90FF}广告", strrr, "确定", "退出");
	return true;
}

stock GetPlayerSpeed(playerid)
{
    new Float:ST[4];
    if(IsPlayerInAnyVehicle(playerid))
    GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
    else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
    ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 179.28625;
    return floatround(ST[3]);
}

stock GetSquareDistance(Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2)
{
	x1-= x2;
	y1-= y2;
	z1-= z2;
	x1*= x1;
	y1*= y1;
	z1*= z1;
	return floatround(x1+y1+z1);
}

stock GetPlayerCameraLookAt(playerid, &Float:rX, &Float:rY, &Float:rZ, Float:dist = 10.0)
{
	new Float: locAt[6];
	GetPlayerCameraFrontVector(playerid, locAt[0], locAt[1], locAt[2]);
	GetPlayerCameraPos(playerid, locAt[3], locAt[4], locAt[5]);
	rX = locAt[0] * dist + locAt[3];
	rY = locAt[1] * dist + locAt[4];
	rZ = locAt[2] * dist + locAt[5];
}

stock CanUninvitePlayer(playerid,playerid2)
{
	if(PlayerInfo[playerid][pLeader] >= 1) return true;
	new rank = PlayerInfo[playerid][pRank];
	if(PlayerInfo[playerid][pMember] > 0 && PlayerInfo[playerid2][pMember] > 0 &&
			rank < PlayerInfo[playerid2][pRank]) return false;
	switch(PlayerInfo[playerid][pMember])
	{
	case 1:
		{
			switch(rank)
			{
			case 15:return true;
			case 14:return true;
			case 13:return true;
			}
		}
	case 2:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 3:
		{
			switch(rank)
			{
			case 16:return true;
			case 15:return true;
			case 14:return true;
			}
		}
	case 4:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 5:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 6:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 7:
		{
			switch(rank)
			{
			case 6:return true;
			case 5:return true;
			case 4:return true;
			}
		}
	case 8:
		{
			switch(rank)
			{
			case 2:return true;
			}
		}
	case 9:
		{
			switch(rank)
			{
			case 15:return true;
			case 14:return true;
			case 13:return true;
			}
		}
	case 11..18:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 19:
		{
			switch(rank)
			{
			case 16:return true;
			case 15:return true;
			case 14:return true;
			}
		}
	case 20:
		{
			switch(rank)
			{
			case 15:return true;
			case 14:return true;
			case 13:return true;
			}
		}
	case 23..32:
		{
			switch(rank)
			{
			case 8:return true;
			case 7:return true;
			}
		}
	case 33:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 34:
		{
			switch(rank)
			{
			case 5:return true;
			case 4:return true;
			}
		}
	}
	return false;
}

publics: OnPlayerCommandPerformed(playerid, cmd[], params[], result, flags)
{
	return true;
}

publics: OnPlayerCommandReceived(playerid, cmd[], params[], flags)
{
    if(!IsPlayerConnected(playerid)) return 0;
    if(!PlayerInfo[playerid][pLogin]) return 0;
    if(PlayerInfo[playerid][pDialog])
	{
		SendErrorMessage(playerid,"打开对话框时无法使用命令");
		return 0;
	}
	return true;
}

stock PreloadAnimLib(playerid, animlib[])
{
	return ApplyAnimation(playerid, animlib, "null", 0.0, 0, 0, 0, 1, 1);
}

publics: OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	if(playertextid == AccInv[playerid][0])
 	{
  		AccInvInfo[playerid][0] = 0;
    	PlayerTextDrawHide(playerid, AccInv[playerid][0]);
     	RemovePlayerAttachedObject(playerid, 2);
    }
    if(playertextid == AccInv[playerid][1])
    {
    	AccInvInfo[playerid][1] = 0;
     	PlayerTextDrawHide(playerid, AccInv[playerid][1]);
      	RemovePlayerAttachedObject(playerid, 3);
    }
    for(new i = 2; i<14; i++)
    {
    	if(playertextid == AccInv[playerid][i])
     	{
      		AccSlot[playerid] = i;
   			new title[10];
      		format(title, sizeof(title), "皮肤 No.%d",i-1);
        	ShowPlayerDialog(playerid, 9436, DIALOG_STYLE_LIST, title, "穿上\n扔", "选择", "退出");
        }
	}
	for(new i = 2; i < sizeof(Captcha); i++)
	{
	    if(playertextid == Captcha[i])
	    {
			new sstring[96];
			GetPVarString(playerid, "CaptchaText", sstring, sizeof(sstring));
			switch(GetPVarInt(playerid, "CaptchaStep"))
			{
				case 0: format(sstring, sizeof(sstring), "%c", TextArray[i - 2]), strcat(sstring, "----"), SetPVarString(playerid, "CaptchaText", sstring);
				case 1: format(sstring, sizeof(sstring), "%s%c", sstring, TextArray[i - 2]), strdel(sstring, 1, 5), strcat(sstring, "---"), SetPVarString(playerid, "CaptchaText", sstring);
				case 2: format(sstring, sizeof(sstring), "%s%c", sstring, TextArray[i - 2]), strdel(sstring, 2, 5), strcat(sstring, "--"), SetPVarString(playerid, "CaptchaText", sstring);
				case 3: format(sstring, sizeof(sstring), "%s%c", sstring, TextArray[i - 2]), strdel(sstring, 3, 5), strcat(sstring, "-"), SetPVarString(playerid, "CaptchaText", sstring);
				case 4:
				{
					strdel(sstring, 4, 5);
					format(sstring, sizeof(sstring), "%s%c", sstring, TextArray[i - 2]);
					PlayerTextDrawSetString(playerid, Captcha[1], sstring);
					if(!strcmp(PlayerInfo[playerid][pSuperKey], "None", true))
                    {
                        for(new l = 0; l < sizeof(Captcha); l++)PlayerTextDrawHide(playerid, Captcha[l]);
					    DeletePVar(playerid, "CaptchaStep");
					    DeletePVar(playerid, "CaptchaText");
                        strmid(PlayerInfo[playerid][pSuperKey], sstring, 0, strlen(sstring), 96);
                        format(YCMDstr, sizeof(YCMDstr), "― {17D4AE}[安全系统]{FFFFFF} 安全码: {14E5F8}%s{FFFFFF} - 成功启用.", PlayerInfo[playerid][pSuperKey]);
	                    SendClientMessage(playerid, -1, YCMDstr);
	                    SendServerMessage(playerid, "{17D4AE}[安全系统]{FFFFFF} 为了不忘记安全代码，请截图保存. (按下: F8)");
	                    CancelSelectTextDraw(playerid);
	                    TogglePlayerControllable(playerid, 1);
	                    PlayerInfo[playerid][pKeylog] = 1;
						return 1;
                    }
                    else
                    {
					    if(strcmp(PlayerInfo[playerid][pSuperKey], sstring) != 0)
					    {
						    for(new l = 0; l < sizeof(Captcha); l++) PlayerTextDrawHide(playerid, Captcha[l]);
						    DeletePVar(playerid, "CaptchaStep"); DeletePVar(playerid, "CaptchaText");
						    SendErrorMessage(playerid, "Код безопасности введен неверно.");
						    GKick(playerid);
						    return 1;
					    }
					    else
					    {
						    for(new l = 0; l < sizeof(Captcha); l++) PlayerTextDrawHide(playerid, Captcha[l]);
						    DeletePVar(playerid, "CaptchaStep"); DeletePVar(playerid, "CaptchaText");
						    CancelSelectTextDraw(playerid);
						    TogglePlayerControllable(playerid, 1);
                            OnPlayerLoginToServer1(playerid);
						    return 1;
					    }
                    }
				}
			}
			SetPVarInt(playerid, "CaptchaStep", GetPVarInt(playerid, "CaptchaStep") + 1);
			PlayerTextDrawSetString(playerid, Captcha[1], sstring);
		}
    }
	new c = GetPlayerVehicleID(playerid),vehmodel = GetVehicleModel(c);
	if(playertextid == TuningTD[4][playerid])//left1
	{
		SetPVarInt(playerid,"Selected1",GetPVarInt(playerid,"Selected1")-1);
		if(GetPVarInt(playerid,"Selected1") < 1)
		{
			SetPVarInt(playerid,"Selected1",1);
			PlayerTextDrawSetString(playerid,TuningTD[2][playerid],"WHEELS");
			SetPVarInt(playerid,"Selected2",1);
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Shadow");
			SetPVarInt(playerid,"Wheels",9);
		}
		else if(GetPVarInt(playerid,"Selected1") == 2)
		{
			PlayerTextDrawSetString(playerid,TuningTD[2][playerid],"SPOILERS");
			SetPVarInt(playerid,"Selected2",1);
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Not Available");
			if(vehmodel == 562 || vehmodel == 560 || vehmodel == 565 || vehmodel == 561 || vehmodel == 559 || vehmodel == 558) {
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"X-Flow"); }
			SetPVarInt(playerid,"Spoilers",2);
		}
		else if(GetPVarInt(playerid,"Selected1") == 3)
		{
			PlayerTextDrawSetString(playerid,TuningTD[2][playerid],"HYDRAULICS");
			SetPVarInt(playerid,"Spoilers",0);
			SetPVarInt(playerid,"Wheels",0);
			SetPVarInt(playerid,"Hydraulics",1);
			SetPVarInt(playerid,"Selected2",1);
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"-");
		}
		else if(GetPVarInt(playerid,"Selected1") == 4)
		{
			PlayerTextDrawSetString(playerid,TuningTD[2][playerid],"H.BUMPER");
			SetPVarInt(playerid,"Selected2",1);
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Not Available");
			if(vehmodel == 562 || vehmodel == 560 || vehmodel == 565 || vehmodel == 561 || vehmodel == 559 || vehmodel == 558) {
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"X-Flow"); }
			SetPVarInt(playerid,"HBumper",2);
		}
		else if(GetPVarInt(playerid,"Selected1") == 5)
		{
			PlayerTextDrawSetString(playerid,TuningTD[2][playerid],"B.BUMPER");
			SetPVarInt(playerid,"Selected2",1);
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Not Available");
			if(vehmodel == 562 || vehmodel == 560 || vehmodel == 565 || vehmodel == 561 || vehmodel == 559 || vehmodel == 558) {
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"X-Flow"); }
			SetPVarInt(playerid,"BBumper",2);
		}
		else if(GetPVarInt(playerid,"Selected1") == 6)
		{
			PlayerTextDrawSetString(playerid,TuningTD[2][playerid],"NITRO");
			SetPVarInt(playerid,"Selected2",1);
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"x2");
			SetPVarInt(playerid,"Nitro",4);
		}
		else if(GetPVarInt(playerid,"Selected1") > 6)
		{
			SetPVarInt(playerid,"Selected1",1);
			PlayerTextDrawSetString(playerid,TuningTD[2][playerid],"WHEELS");
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Shadow");
			SetPVarInt(playerid,"Wheels",9);
		}
		TuningCamera(playerid);
	}
	if(playertextid == TuningTD[6][playerid])//right1
	{
		SetPVarInt(playerid,"Selected1",GetPVarInt(playerid,"Selected1")+1);
		if(GetPVarInt(playerid,"Selected1") == 1)
		{
			PlayerTextDrawSetString(playerid,TuningTD[2][playerid],"WHEELS");
			SetPVarInt(playerid,"Selected2",1);
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Shadow");
			SetPVarInt(playerid,"Wheels",9);
		}
		else if(GetPVarInt(playerid,"Selected1") == 2)
		{
			PlayerTextDrawSetString(playerid,TuningTD[2][playerid],"SPOILERS");
			SetPVarInt(playerid,"Selected2",1);
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Not Available");
			if(vehmodel == 562 || vehmodel == 560 || vehmodel == 565 || vehmodel == 561 || vehmodel == 559 || vehmodel == 558) {
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"X-Flow"); }
			SetPVarInt(playerid,"Spoilers",2);
		}
		else if(GetPVarInt(playerid,"Selected1") == 3)
		{
			PlayerTextDrawSetString(playerid,TuningTD[2][playerid],"HYDRAULICS");
			SetPVarInt(playerid,"Spoilers",0);
			SetPVarInt(playerid,"Wheels",0);
			SetPVarInt(playerid,"Hydraulics",1);
			SetPVarInt(playerid,"Selected2",1);
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"-");
		}
		else if(GetPVarInt(playerid,"Selected1") == 4)
		{
			PlayerTextDrawSetString(playerid,TuningTD[2][playerid],"H.BUMPER");
			SetPVarInt(playerid,"Selected2",1);
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Not Available");
			if(vehmodel == 562 || vehmodel == 560 || vehmodel == 565 || vehmodel == 561 || vehmodel == 559 || vehmodel == 558  || vehmodel == 534  || vehmodel == 536  || vehmodel == 535  || vehmodel == 576) {
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"X-Flow"); }
			SetPVarInt(playerid,"HBumper",2);
		}
		else if(GetPVarInt(playerid,"Selected1") == 5)
		{
			PlayerTextDrawSetString(playerid,TuningTD[2][playerid],"B.BUMPER");
			SetPVarInt(playerid,"Selected2",1);
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Not Available");
			if(vehmodel == 562 || vehmodel == 560 || vehmodel == 565 || vehmodel == 561 || vehmodel == 559 || vehmodel == 558  || vehmodel == 534  || vehmodel == 536  || vehmodel == 535  || vehmodel == 576) {
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"X-Flow"); }
			SetPVarInt(playerid,"BBumper",2);
		}
		else if(GetPVarInt(playerid,"Selected1") == 6)
		{
			PlayerTextDrawSetString(playerid,TuningTD[2][playerid],"NITRO");
			SetPVarInt(playerid,"Selected2",1);
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"x2");
			SetPVarInt(playerid,"Nitro",4);
		}
		else if(GetPVarInt(playerid,"Selected1") > 7)
		{
			SetPVarInt(playerid,"Selected1",1);
			PlayerTextDrawSetString(playerid,TuningTD[2][playerid],"WHEELS");
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Shadow");
			SetPVarInt(playerid,"Wheels",9);
		}
		TuningCamera(playerid);
	}
	if(playertextid == TuningTD[5][playerid])//left2
	{
		NullComponents(playerid);
		if(GetPVarInt(playerid,"Selected1") == 1)//колёса
		{
			SetPVarInt(playerid,"Selected2",GetPVarInt(playerid,"Selected2")-1);
			if(GetPVarInt(playerid,"Selected2") < 1)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Shadow");
				SetPVarInt(playerid,"Wheels",8);
				SetPVarInt(playerid,"Selected2",1);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceWheels[7]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") == 1)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Shadow");
				SetPVarInt(playerid,"Wheels",9);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceWheels[0]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") == 2)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Mega");
				NullComponents(playerid);
				SetPVarInt(playerid,"Wheels",2);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceWheels[1]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") == 3)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Wires");
				SetPVarInt(playerid,"Wheels",3);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceWheels[2]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") == 4)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Classic");
				SetPVarInt(playerid,"Wheels",4);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceWheels[3]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") == 5)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Twist");
				SetPVarInt(playerid,"Wheels",5);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceWheels[4]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") == 6)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Grove");
				SetPVarInt(playerid,"Wheels",6);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceWheels[5]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") == 7)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Atomic");
				SetPVarInt(playerid,"Wheels",7);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceWheels[6]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") == 8)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Dollar");
				SetPVarInt(playerid,"Wheels",8);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceWheels[7]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
		}
		if(GetPVarInt(playerid,"Selected1") == 2)//спойлеры
		{
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Not Available");
			if(vehmodel == 562 || vehmodel == 560 || vehmodel == 565 || vehmodel == 561 || vehmodel == 559 || vehmodel == 558)
			{
				SetPVarInt(playerid,"Selected2",GetPVarInt(playerid,"Selected2")-1);
				if(GetPVarInt(playerid,"Selected2") < 1)
				{
					PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Alien");
					SetPVarInt(playerid,"Spoilers",3);
					SetPVarInt(playerid,"Selected2",2);
					format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceSpoilers[1]);
					GameTextForPlayer(playerid, YCMDstr, 2000, 1);
				}
				else if(GetPVarInt(playerid,"Selected2") == 1)
				{
					PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"X-Flow");
					SetPVarInt(playerid,"Spoilers",2);
					format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceSpoilers[0]);
					GameTextForPlayer(playerid, YCMDstr, 2000, 1);
				}
				else if(GetPVarInt(playerid,"Selected2") == 2)
				{
					PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Alien");
					SetPVarInt(playerid,"Spoilers",3);
					format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceSpoilers[1]);
					GameTextForPlayer(playerid, YCMDstr, 2000, 1);
				}
			}
		}
		if(GetPVarInt(playerid,"Selected1") == 3)//гидравлика
		{
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"-");
			SetPVarInt(playerid,"Spoilers",0);
			SetPVarInt(playerid,"Wheels",0);
			SetPVarInt(playerid,"Hydraulics",1);
			SetPVarInt(playerid,"Selected2",1);
			format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceHydraulics);
			GameTextForPlayer(playerid, YCMDstr, 2000, 1);
		}
		if(GetPVarInt(playerid,"Selected1") == 4)//передний бампер
		{
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Not Available");
			if(vehmodel == 562 || vehmodel == 560 || vehmodel == 565 || vehmodel == 561 || vehmodel == 559 || vehmodel == 558  || vehmodel == 534  || vehmodel == 536  || vehmodel == 535  || vehmodel == 576)
			{
				SetPVarInt(playerid,"Selected2",GetPVarInt(playerid,"Selected2")-1);
				if(GetPVarInt(playerid,"Selected2") < 1)
				{
					PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Alien");
					SetPVarInt(playerid,"HBumper",3);
					SetPVarInt(playerid,"Selected2",2);
					format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceHBumper[1]);
					GameTextForPlayer(playerid, YCMDstr, 2000, 1);
				}
				else if(GetPVarInt(playerid,"Selected2") == 1)
				{
					PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"X-Flow");
					SetPVarInt(playerid,"HBumper",2);
					format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceHBumper[0]);
					GameTextForPlayer(playerid, YCMDstr, 2000, 1);
				}
				else if(GetPVarInt(playerid,"Selected2") == 2)
				{
					PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Alien");
					SetPVarInt(playerid,"HBumper",3);
					format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceHBumper[1]);
					GameTextForPlayer(playerid, YCMDstr, 2000, 1);
				}
			}
		}
		if(GetPVarInt(playerid,"Selected1") == 5)//задний бампер
		{
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Not Available");
			if(vehmodel == 562 || vehmodel == 560 || vehmodel == 565 || vehmodel == 561 || vehmodel == 559 || vehmodel == 558  || vehmodel == 534  || vehmodel == 536  || vehmodel == 535  || vehmodel == 576)
			{
				SetPVarInt(playerid,"Selected2",GetPVarInt(playerid,"Selected2")-1);
				if(GetPVarInt(playerid,"Selected2") < 1)
				{
					PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Alien");
					SetPVarInt(playerid,"BBumper",3);
					SetPVarInt(playerid,"Selected2",2);
					format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceBBumper[1]);
					GameTextForPlayer(playerid, YCMDstr, 2000, 1);
				}
				else if(GetPVarInt(playerid,"Selected2") == 1)
				{
					PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"X-Flow");
					SetPVarInt(playerid,"BBumper",2);
					format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceBBumper[0]);
					GameTextForPlayer(playerid, YCMDstr, 2000, 1);
				}
				else if(GetPVarInt(playerid,"Selected2") == 2)
				{
					PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Alien");
					SetPVarInt(playerid,"BBumper",3);
					format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceBBumper[1]);
					GameTextForPlayer(playerid, YCMDstr, 2000, 1);
				}
			}
		}
		if(GetPVarInt(playerid,"Selected1") == 6)//нитро
		{
			SetPVarInt(playerid,"Selected2",GetPVarInt(playerid,"Selected2")-1);
			if(GetPVarInt(playerid,"Selected2") < 1)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"x10");
				SetPVarInt(playerid,"Nitro",3);
				SetPVarInt(playerid,"Selected2",3);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceNitro[2]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") == 1)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"x2");
				SetPVarInt(playerid,"Nitro",4);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceNitro[1]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") == 2)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"x5");
				SetPVarInt(playerid,"Nitro",2);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceNitro[2]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") == 3)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"x10");
				SetPVarInt(playerid,"Nitro",3);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceNitro[0]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
		}
	}
	if(playertextid == TuningTD[7][playerid])//right2
	{
		NullComponents(playerid);
		if(GetPVarInt(playerid,"Selected1") == 1)//колёса
		{
			SetPVarInt(playerid,"Selected2",GetPVarInt(playerid,"Selected2")+1);
			if(GetPVarInt(playerid,"Selected2") == 1)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Shadow");
				SetPVarInt(playerid,"Wheels",9);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceWheels[0]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") == 2)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Mega");
				NullComponents(playerid);
				SetPVarInt(playerid,"Wheels",2);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceWheels[1]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") == 3)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Wires");
				SetPVarInt(playerid,"Wheels",3);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceWheels[2]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") == 4)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Classic");
				SetPVarInt(playerid,"Wheels",4);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceWheels[3]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") == 5)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Twist");
				SetPVarInt(playerid,"Wheels",5);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceWheels[4]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") == 6)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Grove");
				SetPVarInt(playerid,"Wheels",6);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceWheels[5]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") == 7)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Atomic");
				SetPVarInt(playerid,"Wheels",7);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceWheels[6]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") == 8)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Dollar");
				SetPVarInt(playerid,"Wheels",8);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceWheels[7]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") > 8)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Shadow");
				SetPVarInt(playerid,"Wheels",9);
				SetPVarInt(playerid,"Selected2",1);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceWheels[0]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
		}
		if(GetPVarInt(playerid,"Selected1") == 2)//спойлеры
		{
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Not Available");
			if(vehmodel == 562 || vehmodel == 560 || vehmodel == 565 || vehmodel == 561 || vehmodel == 559 || vehmodel == 558)
			{
				SetPVarInt(playerid,"Selected2",GetPVarInt(playerid,"Selected2")+1);if(GetPVarInt(playerid,"Selected2") == 1)
				{
					PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"X-Flow");
					SetPVarInt(playerid,"Spoilers",2);
					format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceSpoilers[0]);
					GameTextForPlayer(playerid, YCMDstr, 2000, 1);
				}
				else if(GetPVarInt(playerid,"Selected2") == 2)
				{
					PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Alien");
					SetPVarInt(playerid,"Spoilers",3);
					format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceSpoilers[1]);
					GameTextForPlayer(playerid, YCMDstr, 2000, 1);
				}
				else if(GetPVarInt(playerid,"Selected2") > 2)
				{
					PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Alien");
					SetPVarInt(playerid,"Spoilers",2);
					SetPVarInt(playerid,"Selected2",2);
					format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceSpoilers[0]);
					GameTextForPlayer(playerid, YCMDstr, 2000, 1);
				}
			}
		}
		if(GetPVarInt(playerid,"Selected1") == 3)//гидравлика
		{
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"-");
			SetPVarInt(playerid,"Spoilers",0);
			SetPVarInt(playerid,"Wheels",0);
			SetPVarInt(playerid,"Hydraulics",1);
			SetPVarInt(playerid,"Selected2",1);
			format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceHydraulics);
			GameTextForPlayer(playerid, YCMDstr, 2000, 1);
		}
		if(GetPVarInt(playerid,"Selected1") == 4)//передний бампер
		{
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Not Available");
			if(vehmodel == 562 || vehmodel == 560 || vehmodel == 565 || vehmodel == 561 || vehmodel == 559 || vehmodel == 558  || vehmodel == 534  || vehmodel == 536  || vehmodel == 535  || vehmodel == 576)
			{
				SetPVarInt(playerid,"Selected2",GetPVarInt(playerid,"Selected2")+1);if(GetPVarInt(playerid,"Selected2") == 1)
				{
					PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"X-Flow");
					SetPVarInt(playerid,"HBumper",2);
					format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceHBumper[0]);
					GameTextForPlayer(playerid, YCMDstr, 2000, 1);
				}
				else if(GetPVarInt(playerid,"Selected2") == 2)
				{
					PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Alien");
					SetPVarInt(playerid,"HBumper",3);
					format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceHBumper[1]);
					GameTextForPlayer(playerid, YCMDstr, 2000, 1);
				}
				else if(GetPVarInt(playerid,"Selected2") > 2)
				{
					PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Alien");
					SetPVarInt(playerid,"HBumper",2);
					SetPVarInt(playerid,"Selected2",2);
					format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceHBumper[0]);
					GameTextForPlayer(playerid, YCMDstr, 2000, 1);
				}
			}
		}
		if(GetPVarInt(playerid,"Selected1") == 5)//задний бампер
		{
			PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Not Available");
			if(vehmodel == 562 || vehmodel == 560 || vehmodel == 565 || vehmodel == 561 || vehmodel == 559 || vehmodel == 558  || vehmodel == 534  || vehmodel == 536  || vehmodel == 535  || vehmodel == 576)
			{
				SetPVarInt(playerid,"Selected2",GetPVarInt(playerid,"Selected2")+1);if(GetPVarInt(playerid,"Selected2") == 1)
				{
					PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"X-Flow");
					SetPVarInt(playerid,"BBumper",2);
					format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceBBumper[0]);
					GameTextForPlayer(playerid, YCMDstr, 2000, 1);
				}
				else if(GetPVarInt(playerid,"Selected2") == 2)
				{
					PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Alien");
					SetPVarInt(playerid,"BBumper",3);
					format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceBBumper[1]);
					GameTextForPlayer(playerid, YCMDstr, 2000, 1);
				}
				else if(GetPVarInt(playerid,"Selected2") > 2)
				{
					PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"Alien");
					SetPVarInt(playerid,"BBumper",2);
					SetPVarInt(playerid,"Selected2",2);
					format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceBBumper[0]);
					GameTextForPlayer(playerid, YCMDstr, 2000, 1);
				}
			}
		}
		if(GetPVarInt(playerid,"Selected1") == 6)//нитро
		{
			SetPVarInt(playerid,"Selected2",GetPVarInt(playerid,"Selected2")+1);
			if(GetPVarInt(playerid,"Selected2") == 1)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"x2");
				SetPVarInt(playerid,"Nitro",4);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceNitro[0]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") == 2)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"x5");
				SetPVarInt(playerid,"Nitro",2);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceNitro[1]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") == 3)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"x10");
				SetPVarInt(playerid,"Nitro",3);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceNitro[2]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
			else if(GetPVarInt(playerid,"Selected2") > 3)
			{
				PlayerTextDrawSetString(playerid,TuningTD[3][playerid],"x10");
				SetPVarInt(playerid,"Nitro",4);
				SetPVarInt(playerid,"Selected2",3);
				format(YCMDstr,sizeof(YCMDstr),"~g~PRICE: %d$~n~",_TuningPriceNitro[0]);
				GameTextForPlayer(playerid, YCMDstr, 2000, 1);
			}
		}
	}
	if(playertextid == TuningTD[8][playerid]) return ShowPlayerDialog(playerid, 6675, 0, "{1E90FF}Tuning", "你真的想买?", "确定", "退出");
	if(playertextid == TuningTD[9][playerid])//apply
	{
		if(GetPVarInt(playerid,"Wheels") > 1)
		{
			//NullComponentid(playerid);
			if(GetPVarInt(playerid,"Wheels") == 0) PlayerInfo[playerid][pWheels] = 0;
			else if(GetPVarInt(playerid,"Wheels") == 1) AddVehicleComponent(GetPlayerVehicleID(playerid),1073);
			else if(GetPVarInt(playerid,"Wheels") == 2) AddVehicleComponent(GetPlayerVehicleID(playerid),1074);
			else if(GetPVarInt(playerid,"Wheels") == 3) AddVehicleComponent(GetPlayerVehicleID(playerid),1076);
			else if(GetPVarInt(playerid,"Wheels") == 4) AddVehicleComponent(GetPlayerVehicleID(playerid),1077);
			else if(GetPVarInt(playerid,"Wheels") == 5) AddVehicleComponent(GetPlayerVehicleID(playerid),1078);
			else if(GetPVarInt(playerid,"Wheels") == 6) AddVehicleComponent(GetPlayerVehicleID(playerid),1081);
			else if(GetPVarInt(playerid,"Wheels") == 7) AddVehicleComponent(GetPlayerVehicleID(playerid),1085);
			else if(GetPVarInt(playerid,"Wheels") == 8) AddVehicleComponent(GetPlayerVehicleID(playerid),1083);
			else if(GetPVarInt(playerid,"Wheels") == 9) AddVehicleComponent(GetPlayerVehicleID(playerid),1073);
		}
		if(GetPVarInt(playerid,"Hydraulics") == 1) AddVehicleComponent(GetPlayerVehicleID(playerid),1087);
		if(GetPVarInt(playerid,"Nitro") > 1)
		{
			//NullComponentid(playerid);
			if(GetPVarInt(playerid,"Nitro") == 0) PlayerInfo[playerid][pNitro] = 0;
			else if(GetPVarInt(playerid,"Nitro") == 1) AddVehicleComponent(GetPlayerVehicleID(playerid),1008);
			else if(GetPVarInt(playerid,"Nitro") == 2) AddVehicleComponent(GetPlayerVehicleID(playerid),1009);
			else if(GetPVarInt(playerid,"Nitro") == 3) AddVehicleComponent(GetPlayerVehicleID(playerid),1010);
			else if(GetPVarInt(playerid,"Nitro") == 4) AddVehicleComponent(GetPlayerVehicleID(playerid),1008);
		}
		if(GetPVarInt(playerid,"Spoilers") > 1)
		{
			//NullComponentid(playerid);
			new TuneID[2];
			if(GetVehicleModel(c) == 562) TuneID[0] = 1146, TuneID[1] = 1147;
			else if(GetVehicleModel(c) == 560) TuneID[0] = 1138, TuneID[1] = 1139;
			else if(GetVehicleModel(c) == 565) TuneID[0] = 1049, TuneID[1] = 1050;
			else if(GetVehicleModel(c) == 561) TuneID[0] = 1058, TuneID[1] = 1060;
			else if(GetVehicleModel(c) == 559) TuneID[0] = 1158, TuneID[1] = 1162;
			else if(GetVehicleModel(c) == 558) TuneID[0] = 1063, TuneID[1] = 1064;
			if(GetPVarInt(playerid,"Spoilers") == 1) PlayerInfo[playerid][pSpoilers] = 0;
			else if(GetPVarInt(playerid,"Spoilers") == 2) AddVehicleComponent(GetPlayerVehicleID(playerid),TuneID[0]);
			else if(GetPVarInt(playerid,"Spoilers") == 3) AddVehicleComponent(GetPlayerVehicleID(playerid),TuneID[1]);
		}
		if(GetPVarInt(playerid,"HBumper") > 1)
		{
			//NullComponentid(playerid);
			new TuneID[2];
			if(GetVehicleModel(c) == 562) TuneID[0] = 1171, TuneID[1] = 1172;
			else if(GetVehicleModel(c) == 560) TuneID[0] = 1169, TuneID[1] = 1170;
			else if(GetVehicleModel(c) == 575) TuneID[0] = 1174, TuneID[1] = 1175;
			else if(GetVehicleModel(c) == 565) TuneID[0] = 1152, TuneID[1] = 1153;
			else if(GetVehicleModel(c) == 561) TuneID[0] = 1155, TuneID[1] = 1157;
			else if(GetVehicleModel(c) == 559) TuneID[0] = 1160, TuneID[1] = 1173;
			else if(GetVehicleModel(c) == 558) TuneID[0] = 1165, TuneID[1] = 1166;
			else if(GetVehicleModel(c) == 534) TuneID[0] = 1179, TuneID[1] = 1185;
			else if(GetVehicleModel(c) == 536) TuneID[0] = 1181, TuneID[1] = 1182;
			else if(GetVehicleModel(c) == 535) TuneID[0] = 1188, TuneID[1] = 1189;
			else if(GetVehicleModel(c) == 576) TuneID[0] = 1190, TuneID[1] = 1191;
			if(GetPVarInt(playerid,"HBumper") == 1) PlayerInfo[playerid][pHBumper] = 0;
			else if(GetPVarInt(playerid,"HBumper") == 2) AddVehicleComponent(GetPlayerVehicleID(playerid),TuneID[0]);
			else if(GetPVarInt(playerid,"HBumper") == 3) AddVehicleComponent(GetPlayerVehicleID(playerid),TuneID[1]);
		}
		if(GetPVarInt(playerid,"BBumper") > 1)
		{
			//NullComponentid(playerid);
			new TuneID[2];
			if(GetVehicleModel(c) == 562) TuneID[0] = 1148, TuneID[1] = 1149;
			else if(GetVehicleModel(c) == 560) TuneID[0] = 1140, TuneID[1] = 1141;
			else if(GetVehicleModel(c) == 575) TuneID[0] = 1176, TuneID[1] = 1177;
			else if(GetVehicleModel(c) == 565) TuneID[0] = 1150, TuneID[1] = 1151;
			else if(GetVehicleModel(c) == 561) TuneID[0] = 1154, TuneID[1] = 1156;
			else if(GetVehicleModel(c) == 559) TuneID[0] = 1159, TuneID[1] = 1161;
			else if(GetVehicleModel(c) == 558) TuneID[0] = 1167, TuneID[1] = 1168;
			else if(GetVehicleModel(c) == 534) TuneID[0] = 1178, TuneID[1] = 1180;
			else if(GetVehicleModel(c) == 536) TuneID[0] = 1183, TuneID[1] = 1184;
			else if(GetVehicleModel(c) == 535) TuneID[0] = 1186, TuneID[1] = 1187;
			else if(GetVehicleModel(c) == 576) TuneID[0] = 1192, TuneID[1] = 1193;
			if(GetPVarInt(playerid,"BBumper") == 1) PlayerInfo[playerid][pBBumper] = 0;
			else if(GetPVarInt(playerid,"BBumper") == 2) AddVehicleComponent(GetPlayerVehicleID(playerid),TuneID[0]);
			else if(GetPVarInt(playerid,"BBumper") == 3) AddVehicleComponent(GetPlayerVehicleID(playerid),TuneID[1]);
		}
	}
	if(playertextid == TuningTD[10][playerid]) ShowPlayerDialog(playerid, 6676, 0, "{1E90FF}Tuning", "你真的想退出服务站吗?", "确定", "退出");
    if(playertextid == RegName[playerid][0]) ShowPlayerDialog(playerid, 2091, DIALOG_STYLE_INPUT, "{1E90FF}登记入住州", "{ffffff}请输入一个复杂的密码:", "确定", "退出");
    new text[32];
	format(text, 32, "%d", GetPVarInt(playerid, "SpecID"));
	if(playertextid == SpecTD[7][playerid]) return callcmd::re(playerid,text);
	if(playertextid == SpecTD[8][playerid]) return callcmd::re(playerid,text);
	if(playertextid == SpecTD[1][playerid]) return SlapPlayer(GetPVarInt(playerid, "SpecID"));
	if(playertextid == SpecTD[2][playerid]) return callcmd::gm(playerid,text);
	if(playertextid == SpecTD[3][playerid]) return ShowPlayerDialog(playerid, 3019, 1, " ", "输入此玩家封禁的原因", "确定", "返回");
	if(playertextid == SpecTD[4][playerid]) return ShowPlayerDialog(playerid, 3015, 1, " ", "输入ID，以分钟为单位的时间和以逗号分隔的原因", "确定", "返回");
	if(playertextid == SpecTD[5][playerid]) return callcmd::getstats(playerid,text);
	if(playertextid == SpecTD[6][playerid]) return ShowPlayerDialog(playerid, 3016, 1, " ", "输入此玩家踢出的原因", "确定", "返回");
	if(playertextid == SpecTD[10][playerid]) return ShowPlayerDialog(playerid, 3017, 1, " ", "输入此玩家警告的原因", "确定", "返回");
	if(playertextid == SpecTD[11][playerid]) return ShowPlayerDialog(playerid, 3018, 1, " ", "输入时间和原因 (用逗号分隔)", "确定", "返回");
	if(playertextid == SpecTD[15][playerid]) return callcmd::specoff(playerid,"");
	return 1;
}

publics: OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	if(clickedid == STDAUTO[7])
    {
        format(YCMDstr, sizeof(YCMDstr), "{FFFFFF}请输入账户密码:");
		ShowPlayerDialog(playerid,1091,DIALOG_STYLE_PASSWORD, "{1E90FF}登录",YCMDstr, "登录", "退出");
    }

    if(clickedid == Text:INVALID_TEXT_DRAW && clicktd[playerid] == true)
    {
		// без проверки
		for(new i; i < 42; i++) TextDrawHideForPlayer(playerid, Teleport[i]);
		for(new i = 0;  i < 25; i++) TextDrawHideForPlayer(playerid, bankmenu[i]);
		for(new c; c <= 3; c++) TextDrawHideForPlayer(playerid,LRRegister[c]);
        PlayerTextDrawHide(playerid,LRShowVehicle[playerid]);
		for(new i = 0;  i < 20; i++) TextDrawHideForPlayer(playerid, menutd[i]);
		for(new t; t != 6; t++) TextDrawHideForPlayer(playerid, PlayTD[t]);
		for(new i = 0;  i < 52; i++) TextDrawHideForPlayer(playerid, weapmenu[i]);
		for(new i = 0;  i < 14; i++) TextDrawHideForPlayer(playerid, ATM[i]);
        for(new i = 0;  i < 25; i++) TextDrawHideForPlayer(playerid, playergun[i]);
        for(new i = 0;  i < 4; i++) TextDrawHideForPlayer(playerid, Filling[i]);
        clicktd[playerid] = false;
        // с проверками
  		if(JobFarm[playerid] == true)
  		{
  		    clicktd[playerid] = false;
         	TogglePlayerControllable(playerid, 1);
          	TextDrawHideForPlayer(playerid, FarmJob[0]);
          	TextDrawHideForPlayer(playerid, FarmJob[1]);
           	TextDrawHideForPlayer(playerid, FarmJob[2]);
          	TextDrawHideForPlayer(playerid, FarmJob[3]);
          	TextDrawHideForPlayer(playerid, FarmJob[4]);
           	TextDrawHideForPlayer(playerid, FarmJob[5]);
          	TextDrawHideForPlayer(playerid, FarmJob[6]);
           	CancelSelectTextDraw(playerid);
           	TextDrawFarm[playerid] = 0;
          	ApplyAnimation(playerid, "OTB", "wtchrace_lose", 4.0999, 0, 1, 1, 1, 1, 0);
          	switch(random(4))
         	{
             	case 0: SetPlayerCheckpoint(playerid,-318.1014,-1378.0062,10.9144,1.0);
         		case 1: SetPlayerCheckpoint(playerid,-319.2519,-1401.7625,13.5333,1.0);
          		case 2: SetPlayerCheckpoint(playerid,-301.7332,-1424.6324,14.2088,1.0);
           		case 3: SetPlayerCheckpoint(playerid,-270.9319,-1401.2894,11.3363,1.0);
         	}
      		SendErrorMessage(playerid,"您违反了操作模式.");
       	}
		if(GetPVarInt(playerid, "PlayerMenu"))
		{
		    clicktd[playerid] = false;
		    for(new x; x < 4; x++) TextDrawHideForPlayer(playerid, BPH[x]);
		    for(new x; x < 7; x++) TextDrawHideForPlayer(playerid, PHONES[x]);
		    DeletePVar(playerid, "PlayerMenu");
		    CancelSelectTextDraw(playerid);
		}
		if(GetPVarInt(playerid,"RentDraw"))
		{
	        for(new i; i < 16; i++)
	        {
				TextDrawHideForPlayer(playerid, RentDraw[i]);
			}
			DeletePVar(playerid,"RentDraw");
		}
	}
	if(JobFarm[playerid] == true)
	{
    	if(clickedid == FarmJob[1])
    	{
        	TextDrawFarm[playerid] += 1;
        	TextDrawHideForPlayer(playerid, FarmJob[1]);
        	if(TextDrawFarm[playerid] == 6)
        	{
        	    clicktd[playerid] = false;
    			TogglePlayerControllable(playerid, 1);
    			TextDrawHideForPlayer(playerid, FarmJob[0]);
    			TextDrawHideForPlayer(playerid, FarmJob[1]);
    			TextDrawHideForPlayer(playerid, FarmJob[2]);
    			TextDrawHideForPlayer(playerid, FarmJob[3]);
    			TextDrawHideForPlayer(playerid, FarmJob[4]);
    			TextDrawHideForPlayer(playerid, FarmJob[5]);
    			TextDrawHideForPlayer(playerid, FarmJob[6]);
    			CancelSelectTextDraw(playerid);
    			SetPlayerCheckpoint(playerid,-372.6919,-1428.2528,25.7266,1.0);
 		    	SetPlayerAttachedObject(playerid, 4, 2247, 6, -0.003353, 0.093383, 0.176903, 0.000000, 0.000000, 0.000000, 0.788097, 1.000000, 0.991011);
			}
		}
 		else if(clickedid == FarmJob[2])
		{
        	TextDrawFarm[playerid] += 1;
        	TextDrawHideForPlayer(playerid, FarmJob[2]);
         	if(TextDrawFarm[playerid] == 6)
        	{
        	    clicktd[playerid] = false;
    			TogglePlayerControllable(playerid, 1);
    			TextDrawHideForPlayer(playerid, FarmJob[0]);
    			TextDrawHideForPlayer(playerid, FarmJob[1]);
    			TextDrawHideForPlayer(playerid, FarmJob[2]);
    			TextDrawHideForPlayer(playerid, FarmJob[3]);
    			TextDrawHideForPlayer(playerid, FarmJob[4]);
    			TextDrawHideForPlayer(playerid, FarmJob[5]);
    			TextDrawHideForPlayer(playerid, FarmJob[6]);
    			CancelSelectTextDraw(playerid);
    			SetPlayerCheckpoint(playerid,-372.6919,-1428.2528,25.7266,1.0);
 		    	SetPlayerAttachedObject(playerid, 4, 2247, 6, -0.003353, 0.093383, 0.176903, 0.000000, 0.000000, 0.000000, 0.788097, 1.000000, 0.991011);
			}
		}
        else if(clickedid == FarmJob[3])
		{
        	TextDrawFarm[playerid] += 1;
        	TextDrawHideForPlayer(playerid, FarmJob[3]);
         	if(TextDrawFarm[playerid] == 6)
        	{
        	    clicktd[playerid] = false;
    			TogglePlayerControllable(playerid, 1);
    			TextDrawHideForPlayer(playerid, FarmJob[0]);
    			TextDrawHideForPlayer(playerid, FarmJob[1]);
    			TextDrawHideForPlayer(playerid, FarmJob[2]);
    			TextDrawHideForPlayer(playerid, FarmJob[3]);
    			TextDrawHideForPlayer(playerid, FarmJob[4]);
    			TextDrawHideForPlayer(playerid, FarmJob[5]);
    			TextDrawHideForPlayer(playerid, FarmJob[6]);
    			CancelSelectTextDraw(playerid);
    			SetPlayerCheckpoint(playerid,-372.6919,-1428.2528,25.7266,1.0);
 		    	SetPlayerAttachedObject(playerid, 4, 2247, 6, -0.003353, 0.093383, 0.176903, 0.000000, 0.000000, 0.000000, 0.788097, 1.000000, 0.991011);
			}
		}
  		else if(clickedid == FarmJob[4])
		{
        	TextDrawFarm[playerid] += 1;
        	TextDrawHideForPlayer(playerid, FarmJob[4]);
         	if(TextDrawFarm[playerid] == 6)
        	{
        	    clicktd[playerid] = false;
    			TogglePlayerControllable(playerid, 1);
    			TextDrawHideForPlayer(playerid, FarmJob[0]);
    			TextDrawHideForPlayer(playerid, FarmJob[1]);
    			TextDrawHideForPlayer(playerid, FarmJob[2]);
    			TextDrawHideForPlayer(playerid, FarmJob[3]);
    			TextDrawHideForPlayer(playerid, FarmJob[4]);
    			TextDrawHideForPlayer(playerid, FarmJob[5]);
    			TextDrawHideForPlayer(playerid, FarmJob[6]);
    			CancelSelectTextDraw(playerid);
    			SetPlayerCheckpoint(playerid,-372.6919,-1428.2528,25.7266,1.0);
 		    	SetPlayerAttachedObject(playerid, 4, 2247, 6, -0.003353, 0.093383, 0.176903, 0.000000, 0.000000, 0.000000, 0.788097, 1.000000, 0.991011);
			}
		}
  		else if(clickedid == FarmJob[5])
		{
        	TextDrawFarm[playerid] += 1;
        	TextDrawHideForPlayer(playerid, FarmJob[5]);
         	if(TextDrawFarm[playerid] == 6)
        	{
        	    clicktd[playerid] = false;
    			TogglePlayerControllable(playerid, 1);
    			TextDrawHideForPlayer(playerid, FarmJob[0]);
    			TextDrawHideForPlayer(playerid, FarmJob[1]);
    			TextDrawHideForPlayer(playerid, FarmJob[2]);
    			TextDrawHideForPlayer(playerid, FarmJob[3]);
    			TextDrawHideForPlayer(playerid, FarmJob[4]);
    			TextDrawHideForPlayer(playerid, FarmJob[5]);
    			TextDrawHideForPlayer(playerid, FarmJob[6]);
    			CancelSelectTextDraw(playerid);
    			SetPlayerCheckpoint(playerid,-372.6919,-1428.2528,25.7266,1.0);
 		    	SetPlayerAttachedObject(playerid, 4, 2247, 6, -0.003353, 0.093383, 0.176903, 0.000000, 0.000000, 0.000000, 0.788097, 1.000000, 0.991011);
			}
		}
        else if(clickedid == FarmJob[6])
		{
        	TextDrawFarm[playerid] += 1;
        	TextDrawHideForPlayer(playerid, FarmJob[6]);
         	if(TextDrawFarm[playerid] == 6)
        	{
        		clicktd[playerid] = false;
    			TogglePlayerControllable(playerid, 1);
    			TextDrawHideForPlayer(playerid, FarmJob[0]);
    			TextDrawHideForPlayer(playerid, FarmJob[1]);
    			TextDrawHideForPlayer(playerid, FarmJob[2]);
    			TextDrawHideForPlayer(playerid, FarmJob[3]);
    			TextDrawHideForPlayer(playerid, FarmJob[4]);
    			TextDrawHideForPlayer(playerid, FarmJob[5]);
    			TextDrawHideForPlayer(playerid, FarmJob[6]);
    			CancelSelectTextDraw(playerid);
    			SetPlayerCheckpoint(playerid,-372.6919,-1428.2528,25.7266,1.0);
 		    	SetPlayerAttachedObject(playerid, 4, 2247, 6, -0.003353, 0.093383, 0.176903, 0.000000, 0.000000, 0.000000, 0.788097, 1.000000, 0.991011);
			}
		}
	}
	if(clickedid == playergun[23])
	{
 		ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}信息","{ffffff}制作武器,你只需要单击它,以及输入子弹数量\
		\n例如 1 子弹 / 3 材料 - 这意味着一颗子弹需要3个材料","OK","");
	}
	if(clickedid ==  playergun[3])
	{
		ShowPlayerDialog(playerid, 4545, DIALOG_STYLE_INPUT, "{1E90FF}制作武器", "{ffffff}输入子弹数量 {0E820C}Silenced 9mm", "制作", "退出");
	}
	if(clickedid ==  playergun[4])
	{
		ShowPlayerDialog(playerid, 4546, DIALOG_STYLE_INPUT, "{1E90FF}制作武器", "{ffffff}输入子弹数量 {0E820C}Desert Eagle", "制作", "退出");
	}
	if(clickedid ==  playergun[5])
	{
		ShowPlayerDialog(playerid, 4547, DIALOG_STYLE_INPUT, "{1E90FF}制作武器", "{ffffff}输入子弹数量 {0E820C}Shotgun", "制作", "退出");
	}
	if(clickedid ==  playergun[6])
	{
		ShowPlayerDialog(playerid, 4548, DIALOG_STYLE_INPUT, "{1E90FF}制作武器", "{ffffff}输入子弹数量 {0E820C}MP5", "制作", "退出");
	}
	if(clickedid ==  playergun[7])
	{
		ShowPlayerDialog(playerid, 4549, DIALOG_STYLE_INPUT, "{1E90FF}制作武器", "{ffffff}输入子弹数量 {0E820C}AK47", "制作", "退出");
	}
	if(clickedid ==  playergun[8])
	{
		ShowPlayerDialog(playerid, 4550, DIALOG_STYLE_INPUT, "{1E90FF}制作武器", "{ffffff}输入子弹数量 {0E820C}M4", "制作", "退出");
	}
	if(clickedid ==  playergun[9])
	{
		ShowPlayerDialog(playerid, 4551, DIALOG_STYLE_INPUT, "{1E90FF}制作武器", "{ffffff}输入子弹数量 {0E820C}Сuntgun", "制作", "退出");
	}
	if(clickedid ==  playergun[10])
	{
		ShowPlayerDialog(playerid, 4552, DIALOG_STYLE_INPUT, "{1E90FF}制作武器", "{ffffff}输入子弹数量 {0E820C}Colt 45", "制作", "退出");
	}
	if(clickedid ==  playergun[11])
	{
		ShowPlayerDialog(playerid, 4553, DIALOG_STYLE_INPUT, "{1E90FF}制作武器", "{ffffff}输入子弹数量 {0E820C}Molotov", "制作", "退出");
	}
	if(clickedid == playergun[24])
	{
	    clicktd[playerid] = false;
        for(new i = 0;  i < 25; i++) TextDrawHideForPlayer(playerid, playergun[i]);
   		CancelSelectTextDraw(playerid);
	}
    if(clickedid == Filling[1])
    {
        if(GetPlayerState(playerid) != 2) return SendErrorMessage(playerid,"你必须在车上!");
   		if(Fuell[GetPlayerVehicleID(playerid)] >= 200) return SendErrorMessage(playerid,"燃料已满!");
		if(GetPVarInt(playerid, "Refueling") > 0) return SendErrorMessage(playerid,"你已经在加油了!");
    	new full;
		for(new i = 1; i <= TOTALBIZZ; i++)
		{
	    	if(IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]) && BizzInfo[i][bType] == 2)
			{
		    	ShowPlayerDialog(playerid, D_JOB+128, 1,"{1E90FF}燃料", "{FFFFFF}输入燃料升数", "确定", "退出");
		    	full++;
		    	SetPVarInt(playerid, "FuelBizzID", i);
			}
		}
		if(full == 0) return SendErrorMessage(playerid,"你必须在加油站!");
    }
    if(clickedid == Filling[2])
    {
    	for(new i = 1; i <= TOTALBIZZ; i++)
	    {
            if(IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]) && BizzInfo[i][bType] == 2)
	        {
	            if(10 > BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bProduct]) return SendErrorMessage(playerid,"产业燃料不足!");
                if(PlayerInfo[playerid][pFuel] > 2) return SendErrorMessage(playerid,"你已经有3罐了.");
				if(PlayerInfo[playerid][pCash] < 500) return SendErrorMessage(playerid,"你没有足够的钱 (500$)!");
				PlayerInfo[playerid][pFuel]++;
            	BizzInfo[i][bMoney] += 500;
				BizzPay[i] += 500;
				BizzInfo[i][bProduct] -= 10;
				PlayerInfo[playerid][pCash] -= 500;
				SetBizzInt(i, "money", BizzInfo[i][bMoney]);
				SetBizzInt(i, "product", BizzInfo[i][bProduct]);
			    format(YCMDstr, sizeof(YCMDstr), "― 你买了一罐 20升的燃料罐,花费 500$. ( %i/3 罐 )",PlayerInfo[playerid][pFuel]);
			    SendClientMessage(playerid, -1, YCMDstr);
			}
		}
    }
    if(clickedid == Filling[3])
    {
    	for(new i = 1; i <= TOTALBIZZ; i++)
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]) && BizzInfo[i][bType] == 2)
	        {
				if(PlayerInfo[playerid][pCash] < 300) return SendErrorMessage(playerid,"你没有足够的钱 (300$)!");
				if(GetPlayerState(playerid) != 2) return SendErrorMessage(playerid,"你必须在车上!");
                RepairVehicle(GetPlayerVehicleID(playerid));
            	BizzInfo[i][bMoney] += 300;
				BizzPay[i] += 300;
				BizzInfo[i][bProduct] -= 10;
				PlayerInfo[playerid][pCash] -= 300;
				SetBizzInt(i, "money", BizzInfo[i][bMoney]);
				SetBizzInt(i, "product", BizzInfo[i][bProduct]);
				SendErrorMessage(playerid,"你的车辆修理好了,花费 300$");
			}
		}
    }
	if(clickedid == ATM[10])
    {
        format(YCMDstr,sizeof(YCMDstr), "{FFFFFF}您的帐户余额: {1E90FF}%i $", PlayerInfo[playerid][pBank]);
    	ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
		ShowPlayerDialog(playerid,8904,DIALOG_STYLE_LIST,YCMDstr, "{FFFFFF}― 500 $\n― 1.000 $\n― 5.000 $\n― 10.000 $\n― 20.000 $\n― 50.000 $\n― 100.000 $", "确定", "返回");
  		PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
	}
	if(clickedid == ATM[11]) // оплата телефона
	{
        format(YCMDstr,sizeof(YCMDstr), "{FFFFFF}手机账户: {1E90FF}%i $\n{FFFFFF}输入您要在手机上存入的金额",PlayerInfo[playerid][pMobile]);
		ShowPlayerDialog(playerid,9522,DIALOG_STYLE_INPUT, "{1E90FF}ATM",YCMDstr, "确定", "退出");
		PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
 		ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
	}
	if(clickedid == ATM[12]) // оплата дома
	{
		new bouse = PlayerInfo[playerid][pPhousekey];
		if(PlayerInfo[playerid][pPhousekey] == 799) return SendErrorMessage(playerid,"你没有房产");
		format(YCMDstr,sizeof(YCMDstr), "{FFFFFF}房屋账户: {1E90FF}%i $\n{FFFFFF}输入存入金额",HouseInfo[bouse][hTakings]);
		ShowPlayerDialog(playerid,9523,DIALOG_STYLE_INPUT, "{1E90FF}房屋账户",YCMDstr, "确定", "退出");
		PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
  		ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
	}
	if(clickedid == ATM[13]) // закрыть
	{
	    clicktd[playerid] = false;
        for(new i = 0;  i < 14; i++) TextDrawHideForPlayer(playerid, ATM[i]);
        CancelSelectTextDraw(playerid);
	}
	if(clickedid == weapmenu[51])
    {
        clicktd[playerid] = false;
        for(new i = 0;  i < 52; i++) TextDrawHideForPlayer(playerid, weapmenu[i]);
        CancelSelectTextDraw(playerid);
	}
	if(clickedid == weapmenu[50])
    {
        format(YCMDstr,sizeof(YCMDstr),"将材料放入仓库");
		ShowPlayerDialog(playerid,22249,DIALOG_STYLE_INPUT,"{1E90FF}输入材料数量",YCMDstr,"OK","X");
	}
	if(clickedid == weapmenu[49])
    {
    	format(YCMDstr,sizeof(YCMDstr),"从仓库中取材料");
		ShowPlayerDialog(playerid,22248,DIALOG_STYLE_INPUT,"{1E90FF}输入材料数量",YCMDstr,"OK","X");
	}
	if(clickedid == weapmenu[46])
    {
		switch(PlayerInfo[playerid][pMember])
		{
  			case 13:
  			{
    			if(vagosmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				vagosmatbi -= 250;
				SetOtherInt("vagosmatbi", vagosmatbi);
				GiveWeapon(playerid, 29, 100);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 MP5 100发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
			}
 			case 12:
  			{
	    		if(ballasmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				ballasmatbi -= 250;
				SetOtherInt("ballasmatbi", ballasmatbi);
				GiveWeapon(playerid, 29, 100);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 MP5 100发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
	  		case 18:
	  		{
	    		if(rifamatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				rifamatbi -= 250;
				SetOtherInt("rifamatbi", rifamatbi);
				GiveWeapon(playerid, 29, 100);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 MP5 100发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
	  		case 17:
	  		{
	    		if(aztekmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				aztekmatbi -= 250;
				SetOtherInt("aztekmatbi", aztekmatbi);
				GiveWeapon(playerid, 29, 100);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 MP5 100发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
	  		case 15:
	  		{
	    		if(groovmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				groovmatbi -= 250;
				SetOtherInt("groovmatbi", groovmatbi);
				GiveWeapon(playerid,29, 100);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 MP5 100发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
		}
	}
	if(clickedid == weapmenu[45])
    {
		switch(PlayerInfo[playerid][pMember])
		{
  			case 13:
  			{
    			if(vagosmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				vagosmatbi -= 450;
				SetOtherInt("vagosmatbi", vagosmatbi);
				GiveWeapon(playerid, 30, 150);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 Ak-47 150发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
			}
 			case 12:
  			{
	    		if(ballasmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				ballasmatbi -= 450;
				SetOtherInt("ballasmatbi", ballasmatbi);
				GiveWeapon(playerid, 30, 150);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 Ak-47 150发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
	  		case 18:
	  		{
	    		if(rifamatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				rifamatbi -= 450;
				SetOtherInt("rifamatbi", rifamatbi);
				GiveWeapon(playerid, 30, 150);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 Ak-47 150发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
	  		case 17:
	  		{
	    		if(aztekmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				aztekmatbi -= 450;
				SetOtherInt("aztekmatbi", aztekmatbi);
				GiveWeapon(playerid, 30, 150);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 Ak-47 150发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
	  		case 15:
	  		{
	    		if(groovmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				groovmatbi -= 450;
				SetOtherInt("groovmatbi", groovmatbi);
				GiveWeapon(playerid, 30, 150);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 Ak-47 150发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
		}
	}
	if(clickedid == weapmenu[44])
    {
		switch(PlayerInfo[playerid][pMember])
		{
  			case 13:
  			{
    			if(vagosmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				vagosmatbi -= 450;
				SetOtherInt("vagosmatbi", vagosmatbi);
				GiveWeapon(playerid, 31, 150);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 M4A1 150发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
			}
 			case 12:
  			{
	    		if(ballasmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				ballasmatbi -= 450;
				SetOtherInt("ballasmatbi", ballasmatbi);
				GiveWeapon(playerid, 31, 150);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 M4A1 150发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
	  		case 18:
	  		{
	    		if(rifamatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				rifamatbi -= 450;
				SetOtherInt("rifamatbi", rifamatbi);
				GiveWeapon(playerid, 31, 150);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 M4A1 150发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
	  		case 17:
	  		{
	    		if(aztekmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				aztekmatbi -= 450;
				SetOtherInt("aztekmatbi", aztekmatbi);
				GiveWeapon(playerid, 31, 150);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 M4A1 150发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
	  		case 15:
	  		{
	    		if(groovmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				groovmatbi -= 450;
				SetOtherInt("groovmatbi", groovmatbi);
				GiveWeapon(playerid, 31, 150);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 M4A1 150发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
		}
	}
	if(clickedid == weapmenu[43])
    {
		switch(PlayerInfo[playerid][pMember])
		{
  			case 13:
  			{
    			if(vagosmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				vagosmatbi -= 500;
				SetOtherInt("vagosmatbi", vagosmatbi);
				GiveWeapon(playerid, 33, 100);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 Rifle 100发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
			}
 			case 12:
  			{
	    		if(ballasmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				ballasmatbi -= 500;
				SetOtherInt("ballasmatbi", ballasmatbi);
				GiveWeapon(playerid, 33, 100);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 Rifle 100发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
	  		case 18:
	  		{
	    		if(rifamatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				rifamatbi -= 500;
				SetOtherInt("rifamatbi", rifamatbi);
				GiveWeapon(playerid, 33, 100);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 Rifle 100发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
	  		case 17:
	  		{
	    		if(aztekmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				aztekmatbi -= 500;
				SetOtherInt("aztekmatbi", aztekmatbi);
				GiveWeapon(playerid, 33, 100);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 Rifle 100发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
	  		case 15:
	  		{
	    		if(groovmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				groovmatbi -= 300;
				SetOtherInt("groovmatbi", groovmatbi);
				GiveWeapon(playerid, 33, 100);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 Rifle 100发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
		}
	}
	if(clickedid == weapmenu[42])
    {
		switch(PlayerInfo[playerid][pMember])
		{
  			case 13:
  			{
    			if(vagosmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				vagosmatbi -= 300;
				SetOtherInt("vagosmatbi", vagosmatbi);
				GiveWeapon(playerid, 25, 100);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 Shotgun 100发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
			}
 			case 12:
  			{
	    		if(ballasmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				ballasmatbi -= 300;
				SetOtherInt("ballasmatbi", ballasmatbi);
				GiveWeapon(playerid, 25, 100);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 Shotgun 100发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
	  		case 18:
	  		{
	    		if(rifamatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				rifamatbi -= 300;
				SetOtherInt("rifamatbi", rifamatbi);
				GiveWeapon(playerid, 25, 100);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 Shotgun 100发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
	  		case 17:
	  		{
	    		if(aztekmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				aztekmatbi -= 300;
				SetOtherInt("aztekmatbi", aztekmatbi);
				GiveWeapon(playerid, 25, 100);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 Shotgun 100发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
	  		case 15:
	  		{
	    		if(groovmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				groovmatbi -= 300;
				SetOtherInt("groovmatbi", groovmatbi);
				GiveWeapon(playerid, 25, 100);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 Shotgun 100发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
		}
	}
	if(clickedid == weapmenu[41])
    {
		switch(PlayerInfo[playerid][pMember])
		{
  			case 13:
  			{
    			if(vagosmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				vagosmatbi -= 300;
				SetOtherInt("vagosmatbi", vagosmatbi);
				GiveWeapon(playerid, 24, 100);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 Deagle 100发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
			}
 			case 12:
  			{
	    		if(ballasmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				ballasmatbi -= 300;
				SetOtherInt("ballasmatbi", ballasmatbi);
				GiveWeapon(playerid, 24, 100);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 Deagle 100发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
	  		case 18:
	  		{
	    		if(rifamatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				rifamatbi -= 300;
				SetOtherInt("rifamatbi", rifamatbi);
				GiveWeapon(playerid, 24, 100);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 Deagle 100发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
	  		case 17:
	  		{
	    		if(aztekmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				aztekmatbi -= 300;
				SetOtherInt("aztekmatbi", aztekmatbi);
				GiveWeapon(playerid, 24, 100);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 Deagle 100发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
	  		case 15:
	  		{
	    		if(groovmatbi <= 99)return SendErrorMessage(playerid,"库存中没有材料!");
				groovmatbi -= 300;
				SetOtherInt("groovmatbi", groovmatbi);
				GiveWeapon(playerid, 24, 100);
				format(YCMDstr, sizeof(YCMDstr), "[警告] %s 从仓库拿走了一把 Deagle 100发子弹.", PlayerInfo[playerid][pName]);
                SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
  			}
		}
	}
	if(clickedid == menutd[19])
    {
        if(buyaccessor[playerid] == 1) return 1;
        if(accessor[playerid] == 0) ShowAccessories(playerid);
        else StopShowAccessories(playerid);
	}
	if(clickedid == menutd[18])
    {
        ShowPlayerDialog(playerid, 9627, DIALOG_STYLE_LIST, "{1E90FF}安全系统", "[1] 验证 E-Mail(暂未完善)\n[2] 安全码", "选择", "返回");
	}
	if(clickedid == menutd[17])
    {
        callcmd::donate(playerid);
	}
	if(clickedid == menutd[16])
    {
        new rulesdialog[1300];
		format(rulesdialog,sizeof(rulesdialog), "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
		RulesMSG[0],RulesMSG[1],RulesMSG[2],RulesMSG[3],RulesMSG[4],RulesMSG[5],RulesMSG[6],RulesMSG[7],RulesMSG[8],RulesMSG[9],RulesMSG[10],RulesMSG[11],RulesMSG[12],RulesMSG[13],RulesMSG[14],RulesMSG[15],RulesMSG[16]);
		ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX, "{1E90FF}服务器规则", rulesdialog, "我同意", "退出");
	}
	if(clickedid == menutd[15])
    {
        ShowPlayerDialog(playerid, 229, DIALOG_STYLE_INPUT, "{1E90FF}提交问题", "您将发送一个问题到辅导员", "确定", "退出");
	}
	if(clickedid == menutd[14])
    {
        ShowPlayerDialog(playerid,10,DIALOG_STYLE_INPUT, "{1E90FF}发送投诉", "{c2c2c2}你将发送一个投诉至 {00D900}管理组{c2c2c2}\n按表格发送 {c2c2c2}[{FF0000}ID/玩家名称{c2c2c2}] [{FF0000}投诉文本{c2c2c2}]", "确定", "返回");
	}
	if(clickedid == menutd[13])
    {
        ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{1E90FF}服务器命令", "[1] 常用指令\n[2] 游戏聊天\n[3] 手机\n[4] 工作\n[5] 领导者\n[6] 房屋\n[7] 产业\n[8] 车辆\n[9] 银行", "选择", "返回");
	}
	if(clickedid == menutd[12])
    {
        ShowStats(playerid,playerid);
	}
	if(clickedid == menutd[11])
    {
        ShowPlayerDialog(playerid, 9973, DIALOG_STYLE_LIST, "{1E90FF}设置", "[0]禁用组织频道\n[1] 启用组织频道\n[2] 改变性别\n[4] 清屏\n[5] 在你头上显示名称", "选择", "返回");
	}
	if(clickedid == menutd[13]) // закрыть
    {
        clicktd[playerid] = false;
        for(new i = 0;  i < 20; i++) TextDrawHideForPlayer(playerid, menutd[i]);
        CancelSelectTextDraw(playerid);
	}
    if(clickedid == bankmenu[24]) // закрыть
    {
        clicktd[playerid] = false;
        for(new i = 0;  i < 25; i++) TextDrawHideForPlayer(playerid, bankmenu[i]);
        CancelSelectTextDraw(playerid);
    }
    if(clickedid == bankmenu[18]) // снять
    {
		format(YCMDstr,sizeof(YCMDstr), "{FFFFFF}银行账户: %i $\n输入取款金额", PlayerInfo[playerid][pBank]);
		ShowPlayerDialog(playerid,8814,DIALOG_STYLE_INPUT, "{1E90FF}取款",YCMDstr, "确定", "返回");
		PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
    }
    if(clickedid == bankmenu[19]) // положить
    {
		format(YCMDstr,sizeof(YCMDstr), "{FFFFFF}银行账户: %i $\n输入存入金额", PlayerInfo[playerid][pBank]);
		ShowPlayerDialog(playerid,8816,DIALOG_STYLE_INPUT, "{1E90FF}存款",YCMDstr, "确定", "返回");
		PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
    }
    if(clickedid == bankmenu[20]) // info
    {
		format(YCMDstr, sizeof(YCMDstr), "{FFFFFF}名称: %s\n 银行账户: %i $", PlayerInfo[playerid][pName], PlayerInfo[playerid][pBank]);
		ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_LIST, "{1E90FF}信息", YCMDstr, "确定", "返回");
    }
    if(clickedid == bankmenu[21]) // оплата биза
    {
		if(GetPlayerBizz(playerid) == 0) { SendErrorMessage(playerid,"你没有产业!"); return true; }
		ShowPlayerDialog(playerid, D_HEAL+21, 1, "{1E90FF}产业账户", "输入美元数量:", "确定", "返回");
    }
    if(clickedid == bankmenu[22]) // деньги за дом
    {
		if(PlayerInfo[playerid][pHousecash] <= 0) return SendErrorMessage(playerid, "没有租金");
		if(!IsABank(playerid)) return SendErrorMessage(playerid,"你不在银行里");
		PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pHousecash];
		format(YCMDstr, sizeof(YCMDstr), "― 收租金 %i$", PlayerInfo[playerid][pHousecash]);
		SendClientMessage(playerid, -1, YCMDstr);
		PlayerInfo[playerid][pHousecash] = 0;
		PlayerInfo[playerid][pText] = 0;
    }
    if(clickedid == bankmenu[23]) // получить зп
    {
		if(PlayerInfo[playerid][pPayCheck] <= 0) return	SendErrorMessage(playerid, "你没有薪水");
		if(!IsABank(playerid)) return SendErrorMessage(playerid,"你不在银行里");
		PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pPayCheck];
		format(YCMDstr, sizeof(YCMDstr), "― 你收到了薪水: {ffa500}$%i", PlayerInfo[playerid][pPayCheck]);
		SendClientMessage(playerid, -1, YCMDstr);
		PlayerInfo[playerid][pPayCheck] = 0;
		PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
		OnPlayerUpdateAc(playerid);
    }
	if(clickedid == LRRegister[1]) // left
 	{
  		if(!gNumberLRList[playerid]) gNumberLRList[playerid] = 7;
    	else gNumberLRList[playerid]--;
     	PlayerTextDrawSetPreviewModel(playerid, LRShowVehicle[playerid], gChangeLRVehicle[gNumberLRList[playerid]]);
      	PlayerTextDrawShow(playerid,LRShowVehicle[playerid]);
  	}
   	if(clickedid == LRRegister[2]) // right
   	{
    	if(gNumberLRList[playerid] == 7) gNumberLRList[playerid] = 0;
     	else gNumberLRList[playerid]++;
      	PlayerTextDrawSetPreviewModel(playerid, LRShowVehicle[playerid], gChangeLRVehicle[gNumberLRList[playerid]]);
       	PlayerTextDrawShow(playerid,LRShowVehicle[playerid]);
  	}
   	if(clickedid == LRRegister[3]) // play
    {
    	CancelSelectTextDraw(playerid);
    	PlayerInfo[playerid][pCash] -= 5000;
     	PlayerCountGoodKeys[playerid] = 0;
    	SendErrorMessage(playerid, "你开始了! 现在等待......直到有人去战斗.");
    	for(new i; i <= 1; i++)
     	{
      		if(gGamersLowRiders[i] != INVALID_PLAYER_ID) continue;
        	gGamersLowRiders[i] = playerid;
         	PlayerVehicleID[playerid] = CreateVehicle(gChangeLRVehicle[gNumberLRList[playerid]], gDriversPlace[i][0],gDriversPlace[i][1],gDriversPlace[i][2], gDriversPlace[i][3], random(10), 0, -1);
          	Q_PutPlayerInVehicle(playerid, PlayerVehicleID[playerid], 0);
           	AddVehicleComponent(PlayerVehicleID[playerid], 1087);
            for(new c; c <= 3; c++) TextDrawHideForPlayer(playerid,LRRegister[c]);
            PlayerTextDrawHide(playerid,LRShowVehicle[playerid]);
            for(new c; c <= 4; c++) TextDrawShowForPlayer(playerid, LRRightBox[c]);
            new randomImage = random(sizeof(SelectedImage));
            PlayerTextDrawSetString(playerid, LRArrows[playerid][0], SelectedImage[randomImage]);
            PlayerTextDrawShow(playerid,LRArrows[playerid][0]);
            PlayerImageID[playerid][0] = randomImage;
            new mes[MAX_PLAYER_NAME+20];
            f(mes, "%i. %s     0", i+1, PlayerName[playerid]), TextDrawSetString(LRRightBox[i+2],mes);
            return 1;
      	}
       	SendErrorMessage(playerid, "战斗的地方满了.");
  	}
	static const Float: Sposition [] [] =
    {
        {1511.5485,-1744.5945,14.0392}, // maria
        {-544.9883,2600.1982,53.5156}, // fbi
        {1554.9030,-1696.0925,6.2188}, // lspd
        {1214.7112,-1323.9266,13.5669}, // hospital ls
        {1101.3879,-300.1970,73.9922}, // sad
        {603.5378,867.8923,-40.4602}, // karier
        {1510.1595,-848.2604,65.5188}, // vinewood
        {-2026.0707,179.2475,28.8359}, // San Fierro
        {1797.3173,839.3347,10.6719}, // las venturas
        {2201.7083,-1697.3547,13.6818}, // ghetto
        {327.3990,1793.3446,17.8174}, // army LVA
        {-1338.7937,455.3340,7.1875}, // Tyrma SA
        {1420.0571,-1662.3203,13.5469}, // autoshkol
        {456.6613,-1499.9032,31.0517}, // magazin odezda
        {-2332.7297,-1644.2808,483.7031}, // gora chiliad
        {1630.3284,-1150.3087,24.0703}, // parkovka
        {322.0048,-1773.7140,4.8116}, // santa maria
        {1554.4344,29.2538,24.1530}, // gonki
        {1756.3417,-1912.0850,13.5684}, // spawn
        {1519.5220,-46.0987,7575.2827} // adm spawn
    };
    for(new x = 20; x < 40; x++)
    {
        if(clickedid == Teleport[x])
        {
            Q_SetPlayerPos(playerid,Sposition[x-20][0], \
            Sposition[x-20][1],Sposition[x-20][2]);
            break;
        }
    }
	if(clickedid == RegisterTD[12])
    {
        if(GetPVarInt(playerid, "SelectRegPass") == 0) return SendErrorMessage(playerid,"首先，您需要输入密码!");
        PlayerInfo[playerid][pSex] = 1; PlayerInfo[playerid][pModel] = 255; PlayerInfo[playerid][pMember] = 0; PlayerInfo[playerid][pLeader] = 0; PlayerInfo[playerid][pRank] = 1;
	    SetPVarInt(playerid, "SelectRegPol", 1);
	    SetTimerEx("UnFreezePlayer", 9000, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
	    SendSyntaxMessage(playerid, "您选择了性别：男性!");
    }
    if(clickedid == RegisterTD[13])
    {
        if(GetPVarInt(playerid, "SelectRegPass") == 0) return SendErrorMessage(playerid,"首先，您需要输入密码!");
        PlayerInfo[playerid][pSex] = 2; PlayerInfo[playerid][pModel] = 255; PlayerInfo[playerid][pMember] = 0; PlayerInfo[playerid][pLeader] = 0; PlayerInfo[playerid][pRank] = 1;
	    SetPVarInt(playerid, "SelectRegPol", 1);
	    SetTimerEx("UnFreezePlayer", 9000, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
	    SendSyntaxMessage(playerid, "您选择了性别：女性!");
    }
    if(clickedid == RegisterTD[14])
    {
		if(GetPVarInt(playerid, "SelectRegPass") == 0) return SendErrorMessage(playerid,"首先，您需要输入密码!");
		if(GetPVarInt(playerid, "SelectRegPol") == 0) return SendErrorMessage(playerid,"首先，您需要选择性别!");
		new str[228];
		format(str, sizeof(str), "INSERT INTO `"TABLE_ACCOUNT"` (`Name`, `pKey`, `pLogin`) VALUES ('%s', '%s', '1')", Name(playerid), reg_pass[playerid]);
		mysql_query(str);
		PlayerInfo[playerid][pLogin] = 1;
	    SetPlayerHealthAC(playerid, 100.0);
        PlayerInfo[playerid][pHP] = 100;
		DeletePVar(playerid, "SelectRegPass");
		DeletePVar(playerid, "SelectRegPol");
        for(new t; t != 19; t++) TextDrawHideForPlayer(playerid, RegisterTD[t]);
        for(new p; p != 1; p++) PlayerTextDrawHide(playerid, RegName[playerid][p]);
        ShowPlayerDialog(playerid,22830,1,"{1E90FF}邀请人","\n\n{ffffff}指定邀请您加入服务器的玩家的昵称\n\n当你达到 {A6FC05}4{ffffff} 级时,TA将获得 {A6FC05}100.000${ffffff}\n\n如果是您自己找到的服务器,请单击 {A6FC05}跳过","确定","跳过");
    }
   	if(clickedid == SkinRabCancel)
	{
	    SendErrorMessage(playerid,"你没有选择任何东西!");
	    return true;
	}
	if(clickedid == SkinRabLeft)
	{
		switch (SelectCharID[playerid])
		{
		case 1: // LSPD
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[0][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[0][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[1][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[1][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[2][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[2][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[3][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[3][0]; }
				else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[4][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[4][0]; }
				else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[5][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[5][0]; }
				else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[6][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[6][0]; }
				else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[7][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[7][0]; }
			}
		case 2: // FBI
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[8][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[8][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[9][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[9][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[10][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[10][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[11][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[11][0]; }
				else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[12][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[12][0]; }
				else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[13][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[13][0]; }
			}
		case 3: // tyrma
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[14][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[14][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[15][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[15][0]; }
			}
		case 4: // Medics SF
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[16][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[17][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[18][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[19][0]; }
				else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[20][0]; }
			}
		case 5: // La Cosa Nostra
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[21][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[21][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[22][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[22][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[23][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[23][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[24][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[24][0]; }
			}
		case 6: // Yakuza
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[25][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[25][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[26][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[26][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[27][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[27][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[28][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[28][0]; }
			}
		case 7: // Goverment
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[29][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[29][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[30][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[30][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[31][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[31][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[32][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[32][0]; }
				else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[33][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[33][0]; }
			}
		case 8: // Университет
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 295); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 295; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[46][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[46][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[47][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[47][0]; }
			}
		case 9: // SFPD
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[34][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[34][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[35][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[35][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[36][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[36][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[37][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[37][0]; }
				else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[38][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[38][0]; }
				else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[39][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[39][0]; }
				else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[40][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[40][0]; }
				else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[41][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[41][0]; }
			}
		case 11: // Instructors
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[48][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[48][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[49][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[49][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[51][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[51][0]; }
			}
		case 12: // Ballas
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[74][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[74][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[75][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[75][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[76][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[76][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 195); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 195; }
			}
		case 13: // Vagos
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[80][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[80][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[81][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[81][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[82][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[82][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 226; }
			}
		case 14: // Russian Mafia
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[60][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[60][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[61][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[61][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[62][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[62][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[63][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[63][0]; }
				else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[64][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[64][0]; }
			}
		case 15: // Grove
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[65][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[65][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[66][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[66][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[67][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[67][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[68][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[68][0]; }
				else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[69][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[69][0]; }
				else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[70][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[70][0]; }
				else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 56); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = 56; }
			}
		case 16: // LS News
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[85][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[85][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[86][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[86][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[87][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[87][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[88][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[88][0]; }
			}
		case 17: // Aztek
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[71][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[71][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[72][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[72][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[73][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[73][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 226; }
			}
		case 18: // Rifa
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[77][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[77][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[78][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[78][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[79][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[79][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 30); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 30; }
				else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = 226; }
			}
		case 19: // Army LV
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[91][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[91][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[89][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[89][0]; }
			}
		case 20: // LVPD
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[52][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[52][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[53][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[53][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[54][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[54][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[55][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[55][0]; }
				else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[56][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[56][0]; }
				else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[57][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[57][0]; }
				else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[58][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[58][0]; }
				else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[59][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[59][0]; }
			}
		}
	}
	if(clickedid == SkinRabRight)
	{
		switch (SelectCharID[playerid])
		{
		case 1: // LSPD
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[0][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[0][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[1][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[1][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[2][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[2][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[3][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[3][0]; }
				else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[4][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[4][0]; }
				else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[5][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[5][0]; }
				else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[6][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[6][0]; }
				else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[7][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[7][0]; }
			}
		case 2: // FBI
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[8][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[8][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[9][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[9][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[10][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[10][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[11][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[11][0]; }
				else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[12][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[12][0]; }
				else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[13][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[13][0]; }
			}
		case 3: // tyrma
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[14][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[14][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[15][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[15][0]; }
			}
		case 4: // Medics SF
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[16][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[17][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[18][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[19][0]; }
				else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[20][0]; }
			}
		case 5: // La Cosa Nostra
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[21][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[21][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[22][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[22][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[23][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[23][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[24][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[24][0]; }
			}
		case 6: // Yakuza
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[25][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[25][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[26][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[26][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[27][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[27][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[28][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[28][0]; }
			}
		case 7: // Goverment
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[29][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[29][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[30][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[30][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[31][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[31][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[32][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[32][0]; }
				else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[33][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[33][0]; }
			}
		case 8: // Университет
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 295); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = 295; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[46][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[46][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[47][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[47][0]; }
			}
		case 9: // SFPD
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[34][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[34][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[35][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[35][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[36][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[36][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[37][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[37][0]; }
				else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[38][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[38][0]; }
				else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[39][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[39][0]; }
				else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[40][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[40][0]; }
				else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[41][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[41][0]; }
			}
		case 11: // Instructors
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[48][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[48][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[49][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[49][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[51][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[51][0]; }
			}
		case 12: // Ballas
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[74][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[74][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[75][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[75][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[76][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[76][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 195); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 195; }
			}
		case 13: // Vagos
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[80][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[80][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[81][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[81][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[82][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[82][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 226; }
			}
		case 14: // Russian Mafia
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[60][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[60][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[61][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[61][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[62][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[62][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[63][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[63][0]; }
				else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[64][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[64][0]; }
			}
		case 15: // Grove
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[65][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[65][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[66][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[66][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[67][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[67][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[68][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[68][0]; }
				else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[69][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[69][0]; }
				else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[70][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[70][0]; }
				else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 56); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 56; }
			}
		case 16: // LS News
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[85][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[85][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[86][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[86][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[87][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[87][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[88][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[88][0]; }
			}
		case 17: // Aztek
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[71][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[71][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[72][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[72][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[73][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[73][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 226; }
			}
		case 18: // Rifa
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[77][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[77][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[78][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[78][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[79][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[79][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 30); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = 30; }
				else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 226; }
			}
		case 19: // Army LV
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[91][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[91][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[89][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[89][0]; }
			}
		case 20: // LVPD
			{
				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[52][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[52][0]; }
				else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[53][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[53][0]; }
				else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[54][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[54][0]; }
				else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[55][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[55][0]; }
				else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[56][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[56][0]; }
				else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[57][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[57][0]; }
				else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[58][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[58][0]; }
				else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[59][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[59][0]; }
			}
		}
	}
	if(clickedid == KostiKeyStavka)
	{
		new g = GetPVarInt(playerid,"Crupe");
		if(g != 1) return SendErrorMessage(playerid,"设置赌注只能发牌人");
		format(YCMDstr,sizeof(YCMDstr),"{ffffff}请开始 {03c03c}下注 {ffffff}\n最低金额: {03c03c}%d$\n{ffffff}最高金额: {03c03c}%d$",MIN_STAVKA,MAX_STAVKA);
		if(g == 1) return ShowPlayerDialog(playerid,3005,1,"{1E90FF}为游戏设置赌注:",YCMDstr,"确定","");
	}
	if(clickedid == KeyMoneyGang)
	{
		ShowPlayerDialog(playerid,3003,1,"{1E90FF}账户操作","{FFFFFF}输入存入金额\n这笔钱用于1场比赛\n\n开始后，所有的钱都没了","确定","退出");
	}
	if(clickedid == KeyStartGang)
	{
		if(Balance[playerid] <= 0) return SendErrorMessage(playerid,"账户上没有足够的资金");
	    format(YCMDstr,sizeof(YCMDstr),"Money: %d$", GetPlayerMoney(playerid));
		PlayerTextDrawSetString(playerid, CasinoAllMoney, YCMDstr);
		PutPlayerInSlotMachine(playerid, Balance[playerid]);
	}
	if(clickedid == KeyExitGang)
	{
	    ExitPlayerFromSlotMachine(playerid);
	    if(Balance[playerid] > 0)
		{
		    PlayerInfo[playerid][pCash] += Balance[playerid];//pcash
		    Balance[playerid] = 0;
			GangUpdateBalanceTextDraw(playerid, 0);
		}
	}
	if(clickedid == KostiKeyDone)
	{
		new stolid = GetPVarInt(playerid,"GameStol");
		new g = GetPVarInt(playerid,"Crupe");
		if(StolInfo[stolid][GameStart] == 1) return SendErrorMessage(playerid,"游戏已经开始了!");
		if(g == 1)
		{
			if(StolInfo[stolid][Igrokov] >= MIN_IGROKOV)
			{
				TimeStavka[stolid] = 11; StolInfo[stolid][GameStart] = 1;
				PlayerInfo[playerid][pCash] += 100;//pcash
				SendSyntaxMessage(playerid, "运行游戏并得到了 +100$");
			}
			else SendErrorMessage(playerid,"没有足够的玩家开始游戏!");
		}
		else
		{
			return SendErrorMessage(playerid,"只有发牌人才能开始游戏");
		}
	}
	if(clickedid == Text:INVALID_TEXT_DRAW)
	{
	    if(GetPVarInt(playerid,"TuningCar")) return ShowPlayerDialog(playerid, 6676, 0, "{1E90FF}服务站", "你想退出服务站吗?", "确定", "退出");
	}
	if(!(_:clickedid ^ 0xFFFF))
    {
        if(accessor[playerid] == 1) StopShowAccessories(playerid);
        if(buyaccessor[playerid] == 1) StopShowBuyAccessories(playerid);
    }
    if(_:clickedid != INVALID_TEXT_DRAW)
    {
        if(clickedid == Accessories[19])
        {
            EditAttachedObject(playerid, 3);
        }
        if(clickedid == BuyAccesor[5]) StopShowBuyAccessories(playerid); //exit
        if(clickedid == BuyAccesor[4])
        {
            if(Accesor[HatsGlasses[playerid]][accchoose[playerid]][1] > PlayerInfo[playerid][pCash]) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{1E90FF}饰品","你没有足够的钱","确定", "");
            new price[126];
            format(price, sizeof(price),"饰品价格 {FFA5AD}%d$",Accesor[HatsGlasses[playerid]][accchoose[playerid]][1]);
            ShowPlayerDialog(playerid, 9435, DIALOG_STYLE_MSGBOX, "{1E90FF}饰品",price,"选择", "退出");
        }
        if(clickedid == BuyAccesor[0]) //left
        {
            if(HatsGlasses[playerid] == 1)
            {
                if(accchoose[playerid] == 0) accchoose[playerid] = 32;
                else accchoose[playerid]--;
                new price[12];
                format(price, sizeof(price), "%d$",Accesor[HatsGlasses[playerid]][accchoose[playerid]][1]);
                TextDrawSetString(BuyAcc[playerid], price);
                RemovePlayerAttachedObject(playerid, 2);
                new skin = GetPlayerSkin(playerid);
                SetPlayerAttachedObject(playerid, 2, Accesor[HatsGlasses[playerid]][accchoose[playerid]][0], 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5], SkinOffSet[skin][6], SkinOffSet[skin][6], SkinOffSet[skin][6]);
            }
            else if(HatsGlasses[playerid] == 0)
            {
                if(accchoose[playerid] == 0) accchoose[playerid] = 33;
                else accchoose[playerid]--;
                new price[12];
                format(price, sizeof(price), "%d$",Accesor[HatsGlasses[playerid]][accchoose[playerid]][1]);
                TextDrawSetString(BuyAcc[playerid], price);
                RemovePlayerAttachedObject(playerid, 3);
                new typehat = GetType(Accesor[HatsGlasses[playerid]][accchoose[playerid]][0]);
                SetPlayerAttachedObject(playerid, 3, Accesor[HatsGlasses[playerid]][accchoose[playerid]][0], 2, AccAngle[typehat][0], 0.03, 0.0, AccAngle[typehat][1], AccAngle[typehat][2], AccAngle[typehat][3]);
            }
        }
        if(clickedid == BuyAccesor[1]) //right
        {
            if(HatsGlasses[playerid] == 1)
            {
                if(accchoose[playerid] == 32) accchoose[playerid] = 0;
                else accchoose[playerid]++;
                new price[12];
                format(price, sizeof(price), "%d$",Accesor[HatsGlasses[playerid]][accchoose[playerid]][1]);
                TextDrawSetString(BuyAcc[playerid], price);
                RemovePlayerAttachedObject(playerid, 2);
                new skin = GetPlayerSkin(playerid);
                SetPlayerAttachedObject(playerid, 2, Accesor[HatsGlasses[playerid]][accchoose[playerid]][0], 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5], SkinOffSet[skin][6], SkinOffSet[skin][6], SkinOffSet[skin][6]);
            }
            else if(HatsGlasses[playerid] == 0)
            {
                if(accchoose[playerid] == 33) accchoose[playerid] = 0;
                else accchoose[playerid]++;
                new price[12];
                format(price, sizeof(price), "%d$",Accesor[HatsGlasses[playerid]][accchoose[playerid]][1]);
                TextDrawSetString(BuyAcc[playerid], price);
                RemovePlayerAttachedObject(playerid, 3);
                new typehat = GetType(Accesor[HatsGlasses[playerid]][accchoose[playerid]][0]);
                SetPlayerAttachedObject(playerid, 3, Accesor[HatsGlasses[playerid]][accchoose[playerid]][0], 2, AccAngle[typehat][0], 0.03, 0.0, AccAngle[typehat][1], AccAngle[typehat][2], AccAngle[typehat][3]);
            }
        }
        if(clickedid == BuyAccesor[2])
        {
            accchoose[playerid] = 0;
            HatsGlasses[playerid] = 0;
            new price[12];
            format(price, sizeof(price), "%d$",Accesor[HatsGlasses[playerid]][accchoose[playerid]][1]);
            TextDrawSetString(BuyAcc[playerid], price);
            RemovePlayerAttachedObject(playerid, 2);
            RemovePlayerAttachedObject(playerid, 3);
            new typehat = GetType(Accesor[HatsGlasses[playerid]][accchoose[playerid]][0]);
            SetPlayerAttachedObject(playerid, 3, Accesor[HatsGlasses[playerid]][accchoose[playerid]][0], 2, AccAngle[typehat][0], 0.03, 0.0, AccAngle[typehat][1], AccAngle[typehat][2], AccAngle[typehat][3]);
        }
        if(clickedid == BuyAccesor[3])
        {
            accchoose[playerid] = 0;
            HatsGlasses[playerid] = 1;
            new price[12];
            format(price, sizeof(price), "%d$",Accesor[0][accchoose[playerid]][1]);
            TextDrawSetString(BuyAcc[playerid], price);
            RemovePlayerAttachedObject(playerid, 2);
            RemovePlayerAttachedObject(playerid, 3);
            new skin = GetPlayerSkin(playerid);
            SetPlayerAttachedObject(playerid, 2, Accesor[HatsGlasses[playerid]][accchoose[playerid]][0], 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5], SkinOffSet[skin][6], SkinOffSet[skin][6], SkinOffSet[skin][6]);
        }
	}
	if(clickedid == Text:INVALID_TEXT_DRAW)
	{
		new stolid = GetPVarInt(playerid,"GameStol");
    	if(stolid != -1)
    	{
    	    SendErrorMessage(playerid,"使用 ESC 无法退出!");
    	    SelectTextDraw(playerid,0xA3B4C5FF);
		}
	}
	if(clickedid == KostiKeyExit)
	{
		new g = GetPVarInt(playerid,"Crupe");
		new stolid = GetPVarInt(playerid,"GameStol");
		if(StolInfo[stolid][GameStart] == 1) return SendErrorMessage(playerid,"游戏开始了! 你不能退出!");
		if(GetPVarInt(playerid,"StolReg") != -1 && g != 1)
		{
		    StolInfo[stolid][Bank] -= StolInfo[stolid][Stavka];
 			PlayerInfo[playerid][pCash] += StolInfo[stolid][Stavka];//pcash
 			SetPVarInt(playerid,"GameStol",-1);
			SetPVarInt(playerid,"StolReg",-1);
			SetPVarInt(playerid,"Ochki",-1);
			SetPVarInt(playerid,"RegCasino", 0);
		}
		if(StolInfo[stolid][Stavka] > 0 && StolInfo[stolid][GameStart] == 1 && g == 1) return SendErrorMessage(playerid,"你不能离开桌子! 你已经开始游戏了!");
		TextDrawHideForPlayer(playerid,KostiBox[stolid]);
		TextDrawHideForPlayer(playerid,TableName[stolid]);
		TextDrawHideForPlayer(playerid,KostiInfo[stolid]);
		TextDrawHideForPlayer(playerid,KostiGameInfo[stolid]);
		TextDrawHideForPlayer(playerid,KostiKeyDone);
		TextDrawHideForPlayer(playerid,KostiKeyExit);
		TextDrawHideForPlayer(playerid,KostiKeyStavka);
		SetPVarInt(playerid,"GameStol",-1);
		SetPVarInt(playerid,"StolReg",-1);
		CancelSelectTextDraw(playerid);
		TogglePlayerControllable(playerid,1);
		DelName(playerid,stolid);
		SetPVarInt(playerid,"Ochki",-1);
		if(g == 1)
		{
			StolInfo[stolid][Crupe] = INVALID_PLAYER_ID;
			foreach(new i : Player)
			{
				if(GetPVarInt(i,"GameStol") == stolid && GetPVarInt(i, "RegCasino") == 1)
				{
					TextDrawHideForPlayer(i,KostiBox[stolid]);
					TextDrawHideForPlayer(i,TableName[stolid]);
	  				TextDrawHideForPlayer(i,KostiInfo[stolid]);
			  		TextDrawHideForPlayer(i,KostiGameInfo[stolid]);
		  			TextDrawHideForPlayer(i,KostiKeyDone);
			  		TextDrawHideForPlayer(i,KostiKeyExit);
			  		TextDrawHideForPlayer(i,KostiKeyStavka);
			  		PlayerInfo[i][pCash] += StolInfo[stolid][Stavka];//pcash
			  		SendServerMessage(i, "一名商人离开了桌子");
			  		SetPVarInt(i,"GameStol",-1);
					SetPVarInt(i,"StolReg",-1);
					SetPVarInt(i,"RegCasino",0);
					TogglePlayerControllable(i,1);
					DelName(i,stolid);
					SetPVarInt(i,"Ochki",-1);
					CancelSelectTextDraw(i);
					format(YCMDstr,sizeof(YCMDstr),"游戏桌 %d", stolid+1);
					UpdateDynamic3DTextLabelText(StolCoorText[stolid], -1, YCMDstr);
				}
			}
			for(new i;i<5;i++) StolInfo[stolid][Gamer][i] = INVALID_PLAYER_ID;
			StolInfo[stolid][Stavka] = 0;
			StolInfo[stolid][Bank] = 0;
			StolInfo[stolid][Igrokov] = 0;
			StolInfo[stolid][GameStart] = 0;
		}
	}
	if(clickedid == PHONES[0])
	{
		new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
		if(PlayerInfo[playerid][pCash] < till*10) return SendErrorMessage(playerid,"你没有足够的钱!");
		if(BizzInfo[i][bProduct] < 10) return SendServerMessage(playerid, "产业缺货了!");
 		BizzInfo[i][bMoney] += till*10;
		BizzPay[i] += till*10;
		BizzInfo[i][bProduct] -= 10;
		PlayerInfo[playerid][pCash] -= till*10;
		SetBizzInt(i, "money", BizzInfo[i][bMoney]);
		SetBizzInt(i, "product", BizzInfo[i][bProduct]);
		SCMF(playerid,COLOR_FSERVER,"― 您购买了品牌手机: {FFA500}HTC {FFFFFF}花费了: %d$.",till*10);
		PlayerInfo[playerid][pPhonePlayer] = 1;
		clicktd[playerid] = false;
		for(new x; x < 4; x++) TextDrawHideForPlayer(playerid, BPH[x]);
		for(new x; x < 7; x++) TextDrawHideForPlayer(playerid, PHONES[x]);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		CancelSelectTextDraw(playerid);
	}
	if(clickedid == PHONES[1])//
	{
		new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
		if(PlayerInfo[playerid][pCash] < till*20) return SendErrorMessage(playerid,"你没有足够的钱!");
		if(BizzInfo[i][bProduct] < 20) return SendServerMessage(playerid, "产业缺货了!");
 		BizzInfo[i][bMoney] += till*20;
		BizzPay[i] += till*20;
		BizzInfo[i][bProduct] -= 20;
		PlayerInfo[playerid][pCash] -= till*20;
		SetBizzInt(i, "money", BizzInfo[i][bMoney]);
		SetBizzInt(i, "product", BizzInfo[i][bProduct]);
		clicktd[playerid] = false;
		SCMF(playerid,COLOR_FSERVER,"― 您购买了品牌手机: {FFA500}LG {FFFFFF}花费了: %d$.",till*20);
        PlayerInfo[playerid][pPhonePlayer] = 1;
        for(new x; x < 4; x++) TextDrawHideForPlayer(playerid, BPH[x]);
		for(new x; x < 7; x++) TextDrawHideForPlayer(playerid, PHONES[x]);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		CancelSelectTextDraw(playerid);
	}
	if(clickedid == PHONES[2])//
	{
		new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
		if(PlayerInfo[playerid][pCash] < till*30) return SendErrorMessage(playerid,"你没有足够的钱!");
		if(BizzInfo[i][bProduct] < 30) return SendServerMessage(playerid, "产业缺货了!");
 		BizzInfo[i][bMoney] += till*30;
		BizzPay[i] += till*30;
		BizzInfo[i][bProduct] -= 30;
		PlayerInfo[playerid][pCash] -= till*30;
		SetBizzInt(i, "money", BizzInfo[i][bMoney]);
		SetBizzInt(i, "product", BizzInfo[i][bProduct]);
		clicktd[playerid] = false;
		SCMF(playerid,COLOR_FSERVER,"― 您购买了品牌手机: {FFA500}NOKIA {FFFFFF}花费了: %d$.",till*30);
		PlayerInfo[playerid][pPhonePlayer] = 1;
		for(new x; x < 4; x++) TextDrawHideForPlayer(playerid, BPH[x]);
		for(new x; x < 7; x++) TextDrawHideForPlayer(playerid, PHONES[x]);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		CancelSelectTextDraw(playerid);
	}
	if(clickedid == PHONES[3])//
	{
	    new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
		if(PlayerInfo[playerid][pCash] < till*40) return SendErrorMessage(playerid,"你没有足够的钱!");
		if(BizzInfo[i][bProduct] < 40) return SendServerMessage(playerid, "产业缺货了!");
 		BizzInfo[i][bMoney] += till*40;
		BizzPay[i] += till*40;
		BizzInfo[i][bProduct] -= 40;
		PlayerInfo[playerid][pCash] -= till*40;
		SetBizzInt(i, "money", BizzInfo[i][bMoney]);
		SetBizzInt(i, "product", BizzInfo[i][bProduct]);
		clicktd[playerid] = false;
		SCMF(playerid,COLOR_FSERVER,"― 您购买了品牌手机: {FFA500}Lenovo {FFFFFF}花费了: %d$.",till*40);
		PlayerInfo[playerid][pPhonePlayer] = 1;
		for(new x; x < 4; x++) TextDrawHideForPlayer(playerid, BPH[x]);
		for(new x; x < 7; x++) TextDrawHideForPlayer(playerid, PHONES[x]);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		CancelSelectTextDraw(playerid);
	}
	if(clickedid == PHONES[4])//
	{
		new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
		if(PlayerInfo[playerid][pCash] < till*50) return SendErrorMessage(playerid,"你没有足够的钱!");
		if(BizzInfo[i][bProduct] < 50) return SendServerMessage(playerid, "产业缺货了!");
 		BizzInfo[i][bMoney] += till*50;
		BizzPay[i] += till*50;
		BizzInfo[i][bProduct] -= 50;
		PlayerInfo[playerid][pCash] -= till*50;
		SetBizzInt(i, "money", BizzInfo[i][bMoney]);
		SetBizzInt(i, "product", BizzInfo[i][bProduct]);
		clicktd[playerid] = false;
		SCMF(playerid,COLOR_FSERVER,"― 您购买了品牌手机: {FFA500}Samsung Galaxy S3 {FFFFFF}花费了: %d$.",till*50);
		PlayerInfo[playerid][pPhonePlayer] = 1;
		for(new x; x < 4; x++) TextDrawHideForPlayer(playerid, BPH[x]);
		for(new x; x < 7; x++) TextDrawHideForPlayer(playerid, PHONES[x]);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		CancelSelectTextDraw(playerid);
	}
	if(clickedid == PHONES[5])//
	{
		new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
		if(PlayerInfo[playerid][pCash] < till*60) return SendErrorMessage(playerid,"你没有足够的钱!");
		if(BizzInfo[i][bProduct] < 60) return SendServerMessage(playerid, "产业缺货了!");
 		BizzInfo[i][bMoney] += till*60;
		BizzPay[i] += till*60;
		BizzInfo[i][bProduct] -= 60;
		PlayerInfo[playerid][pCash] -= till*60;
		SetBizzInt(i, "money", BizzInfo[i][bMoney]);
		SetBizzInt(i, "product", BizzInfo[i][bProduct]);
		clicktd[playerid] = false;
		SCMF(playerid,COLOR_FSERVER,"― 您购买了品牌手机: {FFA500}iPhone 5S {FFFFFF}花费了: %d$.",till*60);
		PlayerInfo[playerid][pPhonePlayer] = 1;
		for(new x; x < 4; x++) TextDrawHideForPlayer(playerid, BPH[x]);
		for(new x; x < 7; x++) TextDrawHideForPlayer(playerid, PHONES[x]);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		CancelSelectTextDraw(playerid);
	}
	if(clickedid == PHONES[6])//
	{
		new i = GetPVarInt(playerid, "PlayerBizz"),till = BizzInfo[i][bTill];
		if(PlayerInfo[playerid][pCash] < till*70) return SendErrorMessage(playerid,"你没有足够的钱!");
		if(BizzInfo[i][bProduct] < 70) return SendServerMessage(playerid, "产业缺货了!");
 		BizzInfo[i][bMoney] += till*70;
		BizzPay[i] += till*70;
		BizzInfo[i][bProduct] -= 70;
		PlayerInfo[playerid][pCash] -= till*70;
		SetBizzInt(i, "money", BizzInfo[i][bMoney]);
		SetBizzInt(i, "product", BizzInfo[i][bProduct]);
		clicktd[playerid] = false;
		SCMF(playerid,COLOR_FSERVER,"― 您购买了品牌手机: {FFA500}iPhone 6S {FFFFFF}花费了: %d$.",till*70);
		PlayerInfo[playerid][pPhonePlayer] = 1;
		for(new x; x < 4; x++) TextDrawHideForPlayer(playerid, BPH[x]);
		for(new x; x < 7; x++) TextDrawHideForPlayer(playerid, PHONES[x]);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		CancelSelectTextDraw(playerid);
	}
	if(clickedid == BPH[3])//
	{
	    clicktd[playerid] = false;
		for(new x; x < 4; x++) TextDrawHideForPlayer(playerid, BPH[x]);
		for(new x; x < 7; x++) TextDrawHideForPlayer(playerid, PHONES[x]);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		CancelSelectTextDraw(playerid);
	}
	if(clickedid == RentDraw[13])
	{
	    clicktd[playerid] = false;
 		RentFaggio(playerid);
 		for(new i; i < 16; i++)
		{
			TextDrawHideForPlayer(playerid,RentDraw[i]);
		}
		DeletePVar(playerid,"RentDraw");
   	 	CancelSelectTextDraw(playerid);
	}
	if(clickedid == RentDraw[14])
	{
	    clicktd[playerid] = false;
 		for(new i; i < 16; i++)
		{
			TextDrawHideForPlayer(playerid,RentDraw[i]);
		}
		DeletePVar(playerid,"RentDraw");
   	 	CancelSelectTextDraw(playerid);
	}
    if(clickedid == PlayTD[1])
    {
        if(PlayURLON[playerid] == 0) return SendErrorMessage(playerid,"单击按钮 PLAY");
        PlayURL[playerid]--;
        if(PlayURL[playerid] < 0) PlayURL[playerid] = 7;
        PlayAudio(playerid, PlayURL[playerid]);
    }
    if(clickedid == PlayTD[2])
    {
        if(PlayURLON[playerid] == 0) return SendErrorMessage(playerid,"单击按钮 PLAY");
        PlayURL[playerid]++;
        if(PlayURL[playerid] > 7) PlayURL[playerid] = 0;
        PlayAudio(playerid, PlayURL[playerid]);
    }
    if(clickedid == PlayTD[3])
    {
        if(PlayURLON[playerid] == 1) return SendErrorMessage(playerid,"单击按钮 STOP");
        PlayURLON[playerid] = 1;
        PlayAudio(playerid, PlayURL[playerid]);
    }
    if(clickedid == PlayTD[4])
    {
        if(PlayURLON[playerid] == 0) return SendErrorMessage(playerid,"单击按钮 PLAY");
        PlayURLON[playerid] = 0;
        StopAudioStreamForPlayer(playerid);
        RemovePlayerAttachedObject(playerid, 3);
    }
    if(clickedid == PlayTD[5])
    {
        clicktd[playerid] = false;
        for(new t; t != 6; t++) TextDrawHideForPlayer(playerid, PlayTD[t]);
        CancelSelectTextDraw(playerid);
    }
   	if(clickedid == SkinRabSelect)
	{
		PlayerInfo[playerid][pModel] = InviteSkin[playerid];
		forma[playerid] = 0;
		SetPlayerVirtualWorld(playerid,0);
		SelectCharPlace[playerid] = 0;
		CharPrice[playerid] = 0;
		SelectCharID[playerid] = 0;
		SelectChar[playerid] = 0;
		TogglePlayerControllable(playerid,1);
		CancelSelectTextDraw(playerid);
		SpawnPlayer(playerid);
		TextDrawHideForPlayer(playerid,SkinRabSelect);
		TextDrawHideForPlayer(playerid,SkinRabRight);
		TextDrawHideForPlayer(playerid,SkinRabLeft);
		TextDrawHideForPlayer(playerid,SkinRabCancel);
	}
	if(clickedid == RegSkin[5])
	{
		if(PlayerInfo[playerid][pSex] == 1)
		{
			if(ChangeSkin[playerid]	== sizeof(SkinViborN)-1) ChangeSkin[playerid] = 0;
			else ChangeSkin[playerid]++;
			SetPlayerSkin(playerid,SkinViborN[ChangeSkin[playerid]][0]);
		}
		else
		{
			if(ChangeSkin[playerid] == sizeof(SkinViborM)-1) ChangeSkin[playerid] = 0;
			else ChangeSkin[playerid]++;
			SetPlayerSkin(playerid,SkinViborM[ChangeSkin[playerid]][0]);
		}
		return true;
	}
	if(clickedid == RegSkin[3])
	{
		SetCameraBehindPlayer(playerid);
		CancelSelectTextDraw(playerid);
		for(new i = 0; i < 6; i++) TextDrawHideForPlayer(playerid, RegSkin[i]);
		DeletePVar(playerid, "SelectRegSkin");
		PlayerInfo[playerid][pChar][0] = GetPlayerSkin(playerid);
		PicCP[playerid] = 0; PlayerInfo[playerid][pRank] = 0;
		ShowPlayerDialog(playerid,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}> 信息","\
		{FFFFFF}强烈建议你随着任务的开始开始游戏 {FFBF00}/quest.\n\n\
		{FFFFFF}关于S-Pawn 游戏社区: {7df9ff}www.samp-pawn.cn\n\
		{FFFFFF}请务必阅读服务器命令 {FFBF00}/mn \n\n\
		{ffa500}你已到达洛圣都市！现在你在火车站.\n\
		","关闭","");
		SendServerMessage(playerid,"你来自另一个州,身上带了点现金.");
		SendServerMessage(playerid,"寻找工作，使用导航 {FFBF00}/gps.");
		PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
		SetTimerEx("UnFreezePlayer", 3500, false, "i", playerid);
        TogglePlayerControllable(playerid, 0);
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		PlayerInfo[playerid][pCash] = 500;
		SetPlayerHealthAC(playerid, 100.0);
        PlayerInfo[playerid][pHP] = 100;
		SetPlayerVirtualWorld(playerid, 0);
		OnPlayerRegister(playerid);
		PEfir[playerid] = 255;
		Pefir[playerid] = MAX_SLOTS;
	}
	if(clickedid == RegSkin[4])
	{
		if(PlayerInfo[playerid][pSex] == 1)
		{
			if(ChangeSkin[playerid] == 0) ChangeSkin[playerid] = sizeof(SkinViborN)-1;
			else ChangeSkin[playerid]--;
			SetPlayerSkin(playerid,SkinViborN[ChangeSkin[playerid]][0]);
		}
		else
		{
			if(ChangeSkin[playerid] == 0) ChangeSkin[playerid] = sizeof(SkinViborM)-1;
			else ChangeSkin[playerid]--;
			SetPlayerSkin(playerid,SkinViborM[ChangeSkin[playerid]][0]);
		}
	}
	if(clickedid == SkinMagazRight)
	{
	    new string[256];
		if(PlayerInfo[playerid][pSex] == 1)
		{
			if(ChangeSkin[playerid]	== sizeof(SkinMen)-1) ChangeSkin[playerid] = 0;
			else ChangeSkin[playerid]++;
			SetPlayerSkin(playerid,SkinMen[ChangeSkin[playerid]][0]);
			format(string,sizeof(string),"~n~~n~~n~~n~~n~~n~~b~CASH: ~w~%i~n~~g~COST: ~w~%i",PlayerInfo[playerid][pCash],SkinMen[ChangeSkin[playerid]][1]);
			GameTextForPlayer(playerid,string, 5000, 3);
		}
		else
		{
			if(ChangeSkin[playerid] == sizeof(SkinMale)-1)ChangeSkin[playerid] = 0;
			else ChangeSkin[playerid]++;
			SetPlayerSkin(playerid,SkinMale[ChangeSkin[playerid]][0]);
			format(string,sizeof(string),"~n~~n~~n~~n~~n~~n~~b~CASH: ~w~%i~n~~g~COST: ~w~%i",PlayerInfo[playerid][pCash],SkinMale[ChangeSkin[playerid]][1]);
			GameTextForPlayer(playerid,string, 5000, 3);
		}
	}
	if(clickedid == SkinMagazLeft)
	{
	    new string[256];
		if(PlayerInfo[playerid][pSex] == 1)
		{
			if(ChangeSkin[playerid] == 0)ChangeSkin[playerid] = sizeof(SkinMen)-1;
			else ChangeSkin[playerid]--;
			SetPlayerSkin(playerid,SkinMen[ChangeSkin[playerid]][0]);
			format(string,sizeof(string),"~n~~n~~n~~n~~n~~n~~b~CASH: ~w~%i~n~~g~COST: ~w~%i",PlayerInfo[playerid][pCash],SkinMen[ChangeSkin[playerid]][1]);
			GameTextForPlayer(playerid,string, 5000, 3);
		}
		else
		{
			if(ChangeSkin[playerid] == 0)ChangeSkin[playerid] = sizeof(SkinMale)-1;
			else ChangeSkin[playerid]--;
			SetPlayerSkin(playerid,SkinMale[ChangeSkin[playerid]][0]);
			format(string,sizeof(string),"~n~~n~~n~~n~~n~~n~~b~CASH: ~w~%i~n~~g~COST: ~w~%i",PlayerInfo[playerid][pCash],SkinMale[ChangeSkin[playerid]][1]);
			GameTextForPlayer(playerid,string, 5000, 3);
		}
	}
	if(clickedid == SkinMagazSelect)
	{
		if(PlayerInfo[playerid][pSex] == 1)
		{
			if(PlayerInfo[playerid][pCash] < SkinMen[ChangeSkin[playerid]][1]) return SendErrorMessage(playerid,"你没有足够的钱!");
			PlayerInfo[playerid][pCash]-= SkinMen[ChangeSkin[playerid]][1];
			TextDrawHideForPlayer(playerid,SkinMagazSelect);
			TextDrawHideForPlayer(playerid,SkinMagazRight);
			TextDrawHideForPlayer(playerid,SkinMagazLeft);
			TextDrawHideForPlayer(playerid,SkinMagazCancel);
			TogglePlayerControllable(playerid,1);
			CancelSelectTextDraw(playerid);
		}
		else
		{
			if(PlayerInfo[playerid][pCash] < SkinMale[ChangeSkin[playerid]][1]) return SendErrorMessage(playerid,"你没有足够的钱!");
			PlayerInfo[playerid][pCash]-= SkinMale[ChangeSkin[playerid]][1];
			TextDrawHideForPlayer(playerid,SkinMagazSelect);
			TextDrawHideForPlayer(playerid,SkinMagazRight);
			TextDrawHideForPlayer(playerid,SkinMagazLeft);
			TextDrawHideForPlayer(playerid,SkinMagazCancel);
			TogglePlayerControllable(playerid,1);
			CancelSelectTextDraw(playerid);
		}
		if(zips[playerid] == 1)
		{
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,18);
			PlayerInfo[playerid][pChar][0] = GetPlayerSkin(playerid);
			TogglePlayerControllable(playerid, 1);
			Q_SetPlayerPos(playerid ,181.1844,-88.0599,1002);
			SetCameraBehindPlayer(playerid);
			return true;
		}
		SetPlayerVirtualWorld(playerid,0);
		PlayerInfo[playerid][pChar][0] = GetPlayerSkin(playerid);
		TogglePlayerControllable(playerid, 1);
		Q_SetPlayerPos(playerid,221.7944,-8.4229,1002.2109);
		SetPlayerFacingAngle(playerid,273.5792);
		SetPlayerInterior(playerid,5);
		SetCameraBehindPlayer(playerid);
		OnPlayerUpdateAc(playerid);
		/*if(GetPVarInt(playerid,"quest_odezda"))
		{
			PlayerInfo[playerid][pQuest_3] = 1;
			PlayerInfo[playerid][pDonatemoney] += 1;
			SendServerMessage(playerid, "Вы прошли третий этап квеста и получили 1 донат рублей ( /quest )");
			DeletePVar(playerid,"quest_odezda");
		}*/
		if(PlayerInfo[playerid][pQuest_3] == 0)
		{
			PlayerInfo[playerid][pQuest_3] = 1;
			PlayerInfo[playerid][pDonatemoney] += 1;
			SendServerMessage(playerid, "你通过了第三阶段的任务，并收到了 1 捐赠点 ( /quest )");
		}
	}
	if(clickedid == SkinMagazCancel)
	{
		if(zips[playerid] == 1)
		{
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,18);
			TogglePlayerControllable(playerid, 1);//Размораживаем
			SetPlayerSkin(playerid,PlayerInfo[playerid][pChar][0]);
			Q_SetPlayerPos(playerid ,181.1844,-88.0599,1002);
			SetCameraBehindPlayer(playerid);
			TextDrawHideForPlayer(playerid,SkinMagazSelect);
			TextDrawHideForPlayer(playerid,SkinMagazRight);
			TextDrawHideForPlayer(playerid,SkinMagazLeft);
			TextDrawHideForPlayer(playerid,SkinMagazCancel);
			TogglePlayerControllable(playerid,1);
			CancelSelectTextDraw(playerid);
			return true;
		}
		SetPlayerVirtualWorld(playerid,0);
		TogglePlayerControllable(playerid, 1);//Размораживаем
		SetPlayerSkin(playerid,PlayerInfo[playerid][pChar][0]);
		Q_SetPlayerPos(playerid,221.7944,-8.4229,1002.2109);
		SetPlayerFacingAngle(playerid,273.5792);
		SetPlayerInterior(playerid,5);
		SetCameraBehindPlayer(playerid);
		TextDrawHideForPlayer(playerid,SkinMagazSelect);
		TextDrawHideForPlayer(playerid,SkinMagazRight);
		TextDrawHideForPlayer(playerid,SkinMagazLeft);
		TextDrawHideForPlayer(playerid,SkinMagazCancel);
		TogglePlayerControllable(playerid,1);
		CancelSelectTextDraw(playerid);
	}
	return 1;
}

publics: OnPlayerEditObject( playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ )
{
	if(!playerobject)
	{
		if(!IsValidObject(objectid)) return true;
		MoveObject(objectid, fX, fY, fZ, 10.0, fRotX, fRotY, fRotZ);
	}
	if(response)
	{
		SetObjectPos(objectid,fX, fY, fZ);
	}
	return 1;
}

publics: anim2(playerid)
{
        ApplyAnimation(playerid, "ped", "getup", 4.0, 0, 1, 0, 0, 0,0);
        return 1;
}

stock GeneratePassword(size)
{
	new
	bigletters[26][] = {"A", "B", "C", "D", "E", "F", "G", "H", "H", "J", "K", "K", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"},
	smallletters[26][] = {"a", "b", "c", "d", "e", "f", "g", "h", "h", "j", "k", "k", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"},
	numbers[10][] = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9"},
	password[128];
	if(size > sizeof(password)) size = sizeof(password);
	for(new i = 0; i < size; i ++)
	{
		switch(random(3))
		{
		case 0: strcat(password, bigletters[random(sizeof(bigletters))]);
		case 1: strcat(password, smallletters[random(sizeof(smallletters))]);
		case 2: strcat(password, numbers[random(sizeof(numbers))]);
		}
	}
	return password;
}

publics: KickPublic(playerid) Kick(playerid);

stock GKick(playerid)
{
    SetTimerEx("KickPublic", 100, false, "d", playerid);
    return true;
}

publics: PlayerMuteMessage(playerid)
{
	new string[255];
	format(string,sizeof(string), "― 你不能说话! ( 禁言 %i 秒 )", PlayerInfo[playerid][pMuteTime]);
	SendClientMessage(playerid,-1,string);
	return 1;
}

publics: SpcarsAvto(playerid)
{
	for(new c=0; c<MAX_VEHICLES; c++)
	{
		if(IsVehicleOccupied(c) == -1) SetVehicleToRespawn(c);
	}
	format(YCMDstr,sizeof(YCMDstr),"― 管理员 %s 刷新了所有未被使用的车辆!",Name(playerid));
	SendClientMessageToAll(-1,YCMDstr);
}

stock TeleportTimer(playerid)
{
	Q_SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
	SetPlayerInterior(playerid, TeleportDestNoFloat[playerid][0]);
	SetPlayerVirtualWorld(playerid, TeleportDestNoFloat[playerid][1]);
	return true;
}

stock LoadBizz()
{
    new time = GetTickCount();
    mysql_query("SELECT * FROM `"TABLE_BIZZ"` ORDER BY  `"TABLE_BIZZ"`.`id` ASC ");
	mysql_store_result();
	new query[256];
	new string[90];
	for(new i; i < TOTALBIZZ; i++)
	{
	    strmid(BizzInfo[i][bOwner],"None_Nones",0,strlen("None_Nones"),32);
	}
	if(mysql_num_rows() > 0)
	{
		for(new idx = 1; idx <= mysql_num_rows(); idx++)
		{
		   	mysql_fetch_row(query);
        	sscanf(query, "p<|>is[32]iiiiifffffffffiiis[32]iiiiii",
			BizzInfo[idx][bid],
			BizzInfo[idx][bOwner],
			BizzInfo[idx][bType],
			BizzInfo[idx][bPrice],
			BizzInfo[idx][bBuyPrice],
			BizzInfo[idx][bMoney],
			BizzInfo[idx][bLic],
			BizzInfo[idx][bEntrx],
			BizzInfo[idx][bEntry],
			BizzInfo[idx][bEntrz],
			BizzInfo[idx][bExitx],
			BizzInfo[idx][bExity],
			BizzInfo[idx][bExitz],
			BizzInfo[idx][bMenux],
			BizzInfo[idx][bMenuy],
			BizzInfo[idx][bMenuz],
			BizzInfo[idx][bInt],
			BizzInfo[idx][bVirtual],
			BizzInfo[idx][bMIcon],
			BizzInfo[idx][bName],
			BizzInfo[idx][bEnter],
			BizzInfo[idx][bLock],
			BizzInfo[idx][bProduct],
			BizzInfo[idx][bTill],
			BizzInfo[idx][bLockTime],
			BizzInfo[idx][bMafia]);
			TOTALBIZZ++;
			if(BizzInfo[idx][bType] > 2) BizzInfo[idx][bIcon] = CreateDynamicMapIcon(BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz], BizzInfo[idx][bMIcon], 0,-1,-1,-1,200.0);
			if(BizzInfo[idx][bType] != 2)
			{
			    BizzInfo[idx][bPickup] = CreatePickup(19132,1, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]);
				BizzInfo[idx][bPickupExit] = CreatePickup(19134, 1, BizzInfo[idx][bExitx],BizzInfo[idx][bExity],BizzInfo[idx][bExitz], BizzInfo[idx][bVirtual]);
			    BizzInfo[idx][bMenu] = CreateDynamicCP(BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz], 1.0,BizzInfo[idx][bVirtual],BizzInfo[idx][bInt]);
  				if(!strcmp(BizzInfo[idx][bOwner],"None",true))
				{
				    format(string, 90, "{dad37f}业主: {ffffff}国家\n{dad37f}产业名称: {ffffff}%s", BizzInfo[idx][bName]);
				 	LABELBIZZ[idx] = Create3DTextLabel(string,COLOR_GREEN,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz],20.0,0,1);
				}
				else
				{
	   				format(string, 90, "{dad37f}业主: {ffffff}%s\n{dad37f}产业名称: {ffffff}%s", BizzInfo[idx][bOwner], BizzInfo[idx][bName]);
				 	LABELBIZZ[idx] = Create3DTextLabel(string,COLOR_GREEN,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz],20.0,0,1);
				}
			}
			else
			{
				if(!strcmp(BizzInfo[idx][bOwner],"None",true))
				{
					format(string, 90, "业主: 无\n产业名称: %s\n每升价格: %i$", BizzInfo[idx][bName], BizzInfo[idx][bTill] / 3);
					LABELBIZZ[idx] = Create3DTextLabel(string,COLOR_GREENYELLOW,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz],20.0,0,1);
				}
				else
				{
   					format(string, 90, "业主: %s\n产业名称: %s\n每升价格: %i$",  BizzInfo[idx][bOwner], BizzInfo[idx][bName], BizzInfo[idx][bTill] / 3);
					LABELBIZZ[idx] = Create3DTextLabel(string,COLOR_GREENYELLOW,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz],20.0,0,1);
				}
			}
        }
    }
    mysql_free_result();
    printf("[产业]: 产业加载 - %d. 耗时 %d(毫秒)", TOTALBIZZ, GetTickCount() - time);
}

publics: LoadMode()
{
    LoadStuff();
	LoadProperty();
	LoadBizz();
	LoadGangZone();
	LoadOther();
	printf("[玩家]: 玩家容量: %d",MAX_PLAYERS);
	printf("[车辆]: 车辆容量: %d.",MAX_VEHICLES);
	if(mysql_ping() == 1) printf("[信息]: 连接数据库成功!"); else printf("[信息]: 连接数据库时出错!"), SendRconCommand("exit");
}

stock OnPlayerExitCar(playerid)
{
	new string[128];
	if(PlayerExitCount[playerid] > 3 && PlayerExitCount[playerid] < 11)
	{
 		format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~%d", PlayerExitCount[playerid]);
   		GameTextForPlayer(playerid, string, 900, 3);
	}
	if(PlayerExitCount[playerid] > 0 && PlayerExitCount[playerid] < 4)
	{
 		format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~%d", PlayerExitCount[playerid]);
		GameTextForPlayer(playerid, string, 900, 3);
	}
	if(PlayerExitCount[playerid] == 0)
	{
		new vehicleid = GetPlayerRentTaxi[playerid];
		foreach(new d: Player)
		{
			if(IsPlayerConnected(d) && IsTaxiCar(GetPlayerVehicleID(d))) RemovePlayerFromVehicle(d);
		}
	 	SendServerMessage(playerid, "您已完成行程");
	  	SetPVarInt(playerid, "OnPlayerExitCar", 0);
		GetPlayerRentTaxi[playerid] = INVALID_VEHICLE_ID;
		TaxiJobStarted[playerid] = false;
		PlayerTaxiStarted[playerid] = false;
		SetVehicleToRespawn(vehicleid);
	}
 	else
 	{
		PlayerExitCount[playerid] -= 1;
 	}
	return 1;
}

stock IsTaxiCar(vehicleid)
{
	for(new i=0; i<MAX_TAXI; i++)
	{
	    if(vehicleid == TAXI_ID[i]) return 1;
	}
	return 0;
}

stock GetPriceTaxi(playerid)
{
	new Float:dist = floatsqroot(floatpower(floatabs(floatsub(LASTPOS[playerid][0],FIRSTPOS[playerid][0])),2)
	+floatpower(floatabs(floatsub(LASTPOS[playerid][1],FIRSTPOS[playerid][1])),2)
	+floatpower(floatabs(floatsub(LASTPOS[playerid][2],FIRSTPOS[playerid][2])),2));
	return floatround(dist*TAXI_PRICEROUT);
}

stock GetPriceTaxiEx(playerid)
{
	new Float:POS[3];
	GetPlayerPos(playerid, POS[0], POS[1], POS[2]);
    new Float:dist = floatsqroot(floatpower(floatabs(floatsub(POS[0],FIRSTPOS[playerid][0])),2)
	+floatpower(floatabs(floatsub(POS[1],FIRSTPOS[playerid][1])),2)
	+floatpower(floatabs(floatsub(POS[2],FIRSTPOS[playerid][2])),2));
	return floatround(dist*TAXI_PRICEROUT);
}

stock GetPlayerCarDriver(playerid)
{
	foreach(new i: Player)
	{
   		if(IsPlayerConnected(i) && GetPlayerVehicleSeat(i) == 0 && GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid) && TaxiJobStarted[i]) return i;
   	}
	return INVALID_PLAYER_ID;
}

stock GetPlayerCarPass(playerid)
{
	foreach(new i: Player)
	{
   		if(IsPlayerConnected(i) && GetPlayerVehicleSeat(i) != 0 && GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid)) return i;
   	}
	return INVALID_PLAYER_ID;
}

enum SAZONE_MAIN
{ //Betamaster
	SAZONE_NAME[28],
	Float:SAZONE_AREA[6]
};

new gSAZones[365][SAZONE_MAIN] = {
{"The Big Ear",	                {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
{"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
{"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
{"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
{"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
{"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
{"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
{"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
{"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
{"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
{"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
{"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
{"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
{"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
{"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
{"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
{"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
{"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},
{"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
{"Blackfield Intersection",     {1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
{"Blackfield Intersection",     {1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
{"Blackfield Intersection",     {1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
{"Blackfield Intersection",     {1375.60,823.20,-89.00,1457.30,919.40,110.90}},
{"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},
{"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
{"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},
{"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
{"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
{"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
{"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
{"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
{"Come-A-Lot",                  {2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
{"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
{"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
{"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
{"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
{"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
{"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
{"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
{"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
{"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
{"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
{"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
{"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
{"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
{"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
{"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
{"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
{"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
{"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
{"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
{"Downtown Los Santos",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
{"Downtown Los Santos",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
{"Downtown Los Santos",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
{"Downtown Los Santos",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
{"Downtown Los Santos",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
{"Downtown Los Santos",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
{"Downtown Los Santos",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
{"Downtown Los Santos",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
{"Downtown Los Santos",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
{"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
{"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
{"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
{"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
{"East Los Santos",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
{"East Los Santos",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
{"East Los Santos",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
{"East Los Santos",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
{"East Los Santos",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
{"East Los Santos",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
{"East Los Santos",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
{"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
{"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
{"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
{"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
{"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
{"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
{"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
{"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
{"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
{"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
{"Easter Bay Chemicals",        {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
{"Easter Bay Chemicals",        {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
{"El Castillo del Diablo",      {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
{"El Castillo del Diablo",      {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
{"El Castillo del Diablo",      {-208.50,2337.10,0.00,8.40,2487.10,200.00}},
{"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
{"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
{"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
{"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
{"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
{"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
{"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
{"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
{"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
{"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
{"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},
{"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},
{"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
{"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
{"Flint Intersection",          {-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
{"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
{"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},
{"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
{"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
{"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
{"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
{"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
{"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
{"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
{"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
{"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
{"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
{"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
{"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
{"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
{"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
{"Glen Park",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
{"Glen Park",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
{"Glen Park",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
{"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},
{"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
{"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
{"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},
{"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},
{"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
{"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
{"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
{"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
{"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
{"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
{"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
{"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
{"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
{"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
{"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
{"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
{"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
{"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
{"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
{"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
{"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
{"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
{"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
{"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
{"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
{"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
{"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
{"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
{"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
{"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
{"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
{"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
{"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
{"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
{"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
{"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
{"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
{"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
{"K.A.C.C. Military Fuels",     {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
{"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
{"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
{"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
{"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
{"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
{"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
{"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
{"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
{"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
{"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
{"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
{"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
{"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
{"Las Colinas",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
{"Las Colinas",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
{"Las Colinas",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
{"Las Colinas",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
{"Las Colinas",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
{"Las Colinas",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
{"Las Colinas",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
{"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
{"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
{"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
{"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
{"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
{"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},
{"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
{"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
{"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
{"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
{"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
{"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
{"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
{"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
{"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
{"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
{"Los Santos International",    {1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
{"Los Santos International",    {1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
{"Los Santos International",    {1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
{"Los Santos International",    {1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
{"Los Santos International",    {1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
{"Los Santos International",    {2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
{"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
{"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
{"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
{"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
{"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
{"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
{"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
{"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
{"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},
{"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
{"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
{"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},
{"Montgomery Intersection",     {1546.60,208.10,0.00,1745.80,347.40,200.00}},
{"Montgomery Intersection",     {1582.40,347.40,0.00,1664.60,401.70,200.00}},
{"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
{"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
{"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
{"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
{"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
{"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
{"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},
{"Mulholland",                  {687.80,-860.60,-89.00,911.80,-768.00,110.90}},
{"Mulholland",                  {737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
{"Mulholland",                  {1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
{"Mulholland",                  {952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
{"Mulholland",                  {911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
{"Mulholland",                  {861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
{"Mulholland Intersection",     {1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
{"North Rock",                  {2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
{"Ocean Docks",                 {2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
{"Ocean Docks",                 {2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
{"Ocean Docks",                 {2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
{"Ocean Docks",                 {2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
{"Ocean Docks",                 {2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
{"Ocean Docks",                 {2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
{"Ocean Docks",                 {2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
{"Ocean Flats",                 {-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
{"Ocean Flats",                 {-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
{"Ocean Flats",                 {-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
{"Octane Springs",              {338.60,1228.50,0.00,664.30,1655.00,200.00}},
{"Old Venturas Strip",          {2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
{"Palisades",                   {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
{"Palomino Creek",              {2160.20,-149.00,0.00,2576.90,228.30,200.00}},
{"Paradiso",                    {-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
{"Pershing Square",             {1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
{"Pilgrim",                     {2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
{"Pilgrim",                     {2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
{"Pilson Intersection",         {1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
{"Pirates in Men's Pants",      {1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
{"Playa del Seville",           {2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
{"Prickle Pine",                {1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
{"Prickle Pine",                {1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
{"Prickle Pine",                {1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
{"Prickle Pine",                {1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
{"Queens",                      {-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
{"Queens",                      {-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
{"Queens",                      {-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
{"Randolph Industrial Estate",  {1558.00,596.30,-89.00,1823.00,823.20,110.90}},
{"Redsands East",               {1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
{"Redsands East",               {1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
{"Redsands East",               {1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
{"Redsands West",               {1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
{"Redsands West",               {1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
{"Redsands West",               {1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
{"Redsands West",               {1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
{"Regular Tom",                 {-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
{"Richman",                     {647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
{"Richman",                     {647.50,-954.60,-89.00,768.60,-860.60,110.90}},
{"Richman",                     {225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
{"Richman",                     {225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
{"Richman",                     {72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
{"Richman",                     {72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
{"Richman",                     {321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
{"Richman",                     {321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
{"Richman",                     {321.30,-860.60,-89.00,687.80,-768.00,110.90}},
{"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},
{"Robada Intersection",         {-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
{"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
{"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
{"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},
{"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},
{"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
{"Rodeo",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
{"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
{"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
{"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
{"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
{"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
{"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
{"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
{"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
{"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
{"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
{"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
{"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
{"San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},
{"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
{"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
{"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
{"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
{"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
{"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
{"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
{"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
{"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
{"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
{"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
{"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
{"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
{"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
{"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
{"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
{"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
{"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
{"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
{"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
{"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
{"The Four Dragons Casino",     {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
{"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
{"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},
{"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
{"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
{"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
{"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
{"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
{"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
{"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
{"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
{"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
{"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
{"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
{"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
{"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
{"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
{"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},
{"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
{"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
{"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
{"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
{"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
{"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
{"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
{"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
{"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
{"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
{"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
{"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
{"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
{"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
{"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
{"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
{"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
{"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
{"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
{"Los Santos",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
{"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
{"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
{"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
{"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
{"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
{"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
{"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
{"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};

stock GateCloseIluha()
{
	MoveObject(vorota[0],259.26099, -1232.58557, 74.72000, 2.0);
	MoveObject(vorota[2],268.48770, -1225.76587, 74.72000, 2.0);
	return 1;
}

stock GateCloseXatch()
{
	MoveObject(vorota[1],263.70630, -1333.29663, 55.62000, 2.0);
	return 1;
}

stock AntiReklama(playerid,text[],test[])
{
	for(new txt; txt < strlen(text); txt++)
	{
		if(text[txt] >= '0' && text[txt] <= '9')
		{
			SetPVarInt(playerid,"Text",GetPVarInt(playerid,"Text")+1);
			if(GetPVarInt(playerid,"Text")==10)
			{
			    format(YCMDstr, sizeof(YCMDstr), "― [Anti cheat] [%s] %s[%d]: %s",test,Name(playerid),playerid,text);
				ABroadCast(-1, YCMDstr, 1);
				antireklamka[playerid] = 1;
			}
		}
	}
	if(Rekl[playerid] == 1 && strfind(text,"www",true)!=-1 || Rekl[playerid] == 1 && strfind(text,".cn",true)!=-1
	|| Rekl[playerid] == 1 && strfind(text,"7777",true)!=-1 || Rekl[playerid] == 1 && strfind(text,".top",true)!=-1
	|| Rekl[playerid] == 1 && strfind(text,"服务器",true)!=-1 || Rekl[playerid] == 1 && strfind(text,"server",true)!=-1
	|| Rekl[playerid] == 1 && strfind(text,".net",true)!=-1 || Rekl[playerid] == 1 && strfind(text,".com",true)!=-1
	|| Rekl[playerid] == 1 && strfind(text,"http",true)!=-1 || Rekl[playerid] == 1 && strfind(text,"qq",true)!=-1)
	{
		format(YCMDstr,sizeof(YCMDstr),"― [Anti cheat] [%s] %s[%d]: %s",test,Name(playerid),playerid,text);
		ABroadCast(-1,YCMDstr,1);
		antireklamka[playerid] = 1;
	}
	return true;
}

publics: UpdateTimers()
{
	new GetTime = gettime();
	if(ServerTimer[0] <= GetTime && ServerTimer[0] != 0)
	{
	    ServerTimer[0] = GetTime+100;
	    UpdateDynamic3DTextLabelText(Horses3D, 0xFFFFFFFF,"Информационный экран по лошадиным скачкам\nСтатус: {9ACD32}Начало{ffffff}\nНажмите: `H`");
		SetTimer("HorseStartTimer", 2000, 0);
		RaceStarted = 1;
		HorseCD = 3;
		HorseStop = 0;
		HorseAnimCount = 1;
	}
    if(Timer[0] <= GetTime && Timer[0] != 0)
    {
        Timer[0] = GetTime+1;
        Fresh();
        Secund();
    }
    if(Timer[1] <= GetTime && Timer[1] != 0)
    {
        Timer[1] = GetTime+3;
        OtherTimer();
    }
    if(Timer[2] <= GetTime && Timer[2] != 0)
    {
        Timer[2] = GetTime+60;
        HPCheck();
    }
    if(Timer[4] <= GetTime && Timer[4] != 0)
    {
        Timer[4] = 0;
        LoadMode();
    }
    if(Timer[6] <= GetTime && Timer[6] != 0)
    {
        Timer[6] = 0;
        GateCloseIluha();
    }
    if(Timer[7] <= GetTime && Timer[7] != 0)
    {
        Timer[7] = 0;
        GateCloseXatch();
    }
    if(Timer[10] <= GetTime && Timer[10] != 0)
    {
        Timer[10] = GetTime+2;
        PaintBalls();
    }
    if(Timer[11] <= GetTime && Timer[11] != 0)
    {
        Timer[11] = GetTime+1;
        MzCheck();
    }
    if(Timer[12] <= GetTime && Timer[12] != 0)
    {
        Timer[12] = GetTime+2;
        GoniGo();
    }
   	foreach(new i: Player)
 	{
		if(IsPlayerInWater(i) && GetPVarInt(i,"VodolazOxygen") > 1)
		{
			SetPlayerHealthAC(i, 1000);
		}
	}
	foreach(new i: Player)
	{
		if(GetPVarInt(i, "BrosilBBall") > 0)  SetPVarInt(i, "BrosilBBall", -1);
	}
    if(racetimeboat) {
	    racetimeboat --;
	    if(raceActionboat == 1 && racetimeboat == 300) SendClientMessageToAll(0x73B461FF,"警告! 水上比赛开始于2分钟后. ( /gps -> [8] -> [3] )");
	    else if(raceActionboat == 2 && racetimeboat == 3) {
	        foreach (new v : Player)if(PlayerKartingboat[v])GameTextForPlayer(v, "~g~3", 5000,6);
	    }
	    else if(raceActionboat == 2 && racetimeboat == 2) {
	        foreach (new v : Player)if(PlayerKartingboat[v])GameTextForPlayer(v, "~g~2", 5000,6);
	    }
	    else if(raceActionboat == 2 && racetimeboat == 1) {
	        foreach (new v : Player)if(PlayerKartingboat[v])GameTextForPlayer(v, "~g~1", 5000,6);
	    }
	    else if(raceActionboat == 2 && racetimeboat == 0) {
	        foreach (new v : Player){
				if(PlayerKartingboat[v]){
					GameTextForPlayer(v, "~g~go go go!", 5000,6);
					SetPlayerRaceCheckpoint(v,0,557.0158,-2100.3333,-0.6977, 372.6215,-2166.6262,-0.4999,10);
					TogglePlayerControllable(v, 1);
				}
			}
			KartingPlayersboat = 0;
	        raceActionboat = 3;
	        racetimeboat = 700;
	    }
     	else if(raceActionboat == 3 && racetimeboat == 0)
		{
	        for(new i = 0;i<MAX_VEHICLES;i++)
			{
	            if(racecarr[i] == 2)DestroyVehicle(i);
	            racecarr[i] = 0;
	        }
	        raceActionboat = 0;
         	SendClientMessageToAll(0x73B461FF,"警告! 水上比赛结束了.");
	    }
        else if(raceActionboat == 1 && racetimeboat == 0){
            if(KartingPlayersboat > 3) {
                SendClientMessageToAll(0x73B461FF,"警告! 水上比赛开始了");
                raceActionboat = 2;
                racetimeboat = 10;
                new xxx = 445;
                foreach (new v : Player) {
                    if(PlayerKartingboat[v]) {
                        SetPlayerInterior(v,0);
                        GameTextForPlayer(v, "~b~please wait", 5000,6);
                        new car = CreateVehicle(446, xxx, -1960.7679, 2.9539, 180.0000, -1, -1, 100);
                        Light[car] = 1;
                        xxx += 10;
                        PutPlayerInVeh(v, car, 0);
                        TogglePlayerControllable(v, 0);
                        SetVehicleParamsEx(car,1,1,0,0,0,0,0);
                        Fuell[car]=100;
                        racecarr[car] = 2;
                    }
                }
            }
            else SendClientMessageToAll(0x73B461FF,"警告! 由于缺乏参赛者，比赛中断");
        }
	}
    for(new A, B = GetMaxPlayers(); A != B; A++)
    {
        if(GetPVarInt(A, "UnSurfCar") <= GetTime && GetPVarInt(A, "UnSurfCar") != 0)
        {
            SetPVarInt(A, "UnSurfCar", GetTime+1);
            UnSurfCar(A);
        }
        if(GetPVarInt(A, "OnPlayerExitCar") <= GetTime && GetPVarInt(A, "OnPlayerExitCar") != 0)
        {
            SetPVarInt(A, "OnPlayerExitCar", GetTime+1);
            OnPlayerExitCar(A);
        }
        if(GetPVarInt(A, "SaveAllGzDBS") <= GetTime && GetPVarInt(A, "SaveAllGzDBS") != 0)
        {
			new time = GetTickCount();
            SetPVarInt(A, "SaveAllGzDBS", 0);
 			for(new idx =1;idx<=TOTALGZ;idx++) SaveGZ(idx);
			format(YCMDstr,sizeof(YCMDstr),"― 帮派地盘, 加油站 - 保存. 耗时: %d <毫秒>",GetTickCount() - time);
			ABroadCast(-1,YCMDstr,1);
			SetPVarInt(A, "SaveAllacco", gettime()+5);
        }
        if(GetPVarInt(A, "SaveAllacco") <= GetTime && GetPVarInt(A, "SaveAllacco") != 0)
        {
            new time = GetTickCount();
            SetPVarInt(A, "SaveAllacco", 0);
            for(new h = 1; h <= TotalHouse;h++) SaveProperty(h);
			format(YCMDstr,sizeof(YCMDstr),"― 房子, 产业 - 保存. 耗时: %d <毫秒>",GetTickCount() - time);
			ABroadCast(-1,YCMDstr,1);
        }
        if(GetPVarInt(A, "TeleportTimer") <= GetTime && GetPVarInt(A, "TeleportTimer") != 0)
        {
            SetPVarInt(A, "TeleportTimer", 0);
            TeleportTimer(A);
        }
        if(GetPVarInt(A, "UnFreeze") <= GetTime && GetPVarInt(A, "UnFreeze") != 0)
        {
            SetPVarInt(A, "UnFreeze", 0);
            UnFreeze(A);
		}
		if(GetPVarInt(A, "GETHP") <= GetTime && GetPVarInt(A, "GETHP") != 0)
        {
            SetPVarInt(A, "GETHP", 0);
            GETHP(A);
		}
		if(GetPVarInt(A, "SpcarsAvto") <= GetTime && GetPVarInt(A, "SpcarsAvto") != 0)
        {
            SetPVarInt(A, "SpcarsAvto", 0);
            SpcarsAvto(A);
		}
		if(GetPVarInt(A, "AddictionTimer") <= GetTime && GetPVarInt(A, "AddictionTimer") != 0)
        {
            SetPVarInt(A, "AddictionTimer", 0);
            SetWeather(2);
		}
    }
    return 1;
}

stock UpdateBizz(idx)
{
	new string[128];
    Delete3DTextLabel(LABELBIZZ[idx]);
	if(BizzInfo[idx][bType] != 2)
	{
		if(!strcmp(BizzInfo[idx][bOwner],"None",true))
		{
			format(string, 90, "{dad37f}业主: {ffffff}国家\n{dad37f}产业名称: {ffffff}%s", BizzInfo[idx][bName]);
			LABELBIZZ[idx] = Create3DTextLabel(string,COLOR_GREEN,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz],20.0,0,1);
		}
		else
		{
			format(string, 90, "{dad37f}业主: {ffffff}%s\n{dad37f}产业名称: {ffffff}%s", BizzInfo[idx][bOwner], BizzInfo[idx][bName]);
			LABELBIZZ[idx] = Create3DTextLabel(string,COLOR_GREEN,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz],20.0,0,1);
		}
	}
	else
	{
		if(!strcmp(BizzInfo[idx][bOwner],"None",true))
		{
			format(string, 90, "业主: 无\n燃料: %s\n每升价格: %i$", BizzInfo[idx][bName], BizzInfo[idx], BizzInfo[idx][bTill] / 3);
			LABELBIZZ[idx] = Create3DTextLabel(string,COLOR_GREENYELLOW,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz],20.0,0,1);
		}
		else
		{
			format(string, 90, "业主: %s\n燃料: %s\n每升价格: %i$",  BizzInfo[idx][bOwner], BizzInfo[idx][bName], BizzInfo[idx][bTill] / 3);
			LABELBIZZ[idx] = Create3DTextLabel(string,COLOR_GREENYELLOW,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz],20.0,0,1);
		}
	}
	return 1;
}

stock GetPlayerBizz(playerid)
{
	new bizz = 0;
	for(new i = 1; i <= TOTALBIZZ;i++)
	{
		if(!strcmp(BizzInfo[i][bOwner],Name(playerid),true)) bizz++, SetPVarInt(playerid, "PlayerBizz", i);
	}
	return bizz;
}

stock ClearBizz(i)
{
	new playerid, string[256];
	sscanf(BizzInfo[i][bOwner], "u", playerid);
	if(IsPlayerConnected(playerid))
	{
   		PlayerInfo[playerid][pBank] += BizzInfo[i][bBuyPrice] / 2;
   		SetPVarInt(playerid, "GetBizz", 1);
	}
	BizzPay[i] = 0;
	BizzInfo[i][bLock] = 0;
	BizzInfo[i][bLockTime] = 0;
	BizzInfo[i][bBuyPrice] = 0;
	BizzInfo[i][bMoney] = 0;
	BizzInfo[i][bLic] = 0;
	BizzInfo[i][bEnter] = 100;
	BizzInfo[i][bTill] = 50;
	strmid(BizzInfo[i][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
	format(string, sizeof(string), "UPDATE "TABLE_BIZZ" SET owner='%s', block=%d, locktime=%d, money=%d, lic=%d, penter=%d, till=%d,buyprice=%d WHERE id = %d",
	BizzInfo[i][bOwner], BizzInfo[i][bLock], BizzInfo[i][bLockTime], BizzInfo[i][bMoney], BizzInfo[i][bLic], BizzInfo[i][bEnter], BizzInfo[i][bTill],BizzInfo[i][bBuyPrice],i);
	mysql_query(string);
	UpdateBizz(i);
}
stock MagazineList(playerid, idx)
{
	new string[600];
    new till = BizzInfo[idx][bTill];
	if(BizzInfo[idx][bProduct] < 50) return SendServerMessage(playerid, "产业缺货了!");
	format(string, 600, "SIM-卡\t\t\t{33AAFF}%i {ffffff}$\n电话簿\t\t{33AAFF}%i {ffffff}$\n服务电话簿\t\t\t{33AAFF}%i {ffffff}$\n急救包\t\t\t{33AAFF}%i {ffffff}$\n相机\t\t\t{33AAFF}%i {ffffff}$\n\
	鲜花\t\t\t\t{33AAFF}%i {ffffff}$\n万能钥匙\t\t\t{33AAFF}%i {ffffff}$\n滑板\t\t\t\t{33AAFF}%i {ffffff}$\n香烟\t\t\t{33AAFF}%i {ffffff}$\n气球\t\t\t{33AAFF}%i {ffffff}$\n绷带\t\t\t\t{33AAFF}%i {ffffff}$\n篝火\t\t\t{33AAFF}%i {ffffff}$\n冲浪板\t\t{33AAFF}%i {ffffff}$",
	till*1, till*6, till*20, till*50, till*8, till*8, till*1, till*150, till*15, till*8, till*5, till*10, till*50);
	ShowPlayerDialog(playerid, D_HEAL+13, 2, "{1E90FF}便利店 24/7", string, "选择", "退出");
	return 1;
}
stock EatList(playerid, idx)
{
	new string[256];
    new till = BizzInfo[idx][bTill];
	if(BizzInfo[idx][bProduct] < 50) return SendServerMessage(playerid, "产业缺货了!");
	new inter = GetPlayerInterior(playerid);
	if(inter == 5) format(string, 256, "小披萨{33AAFF}\t%i {ffffff}美元\n披萨\t{33AAFF}%i {ffffff}美元\n大披萨\t{33AAFF}%i {ffffff}美元",till*4, till*7, till*10);
	if(inter == 10) format(string, 256, "汉堡\t\t\t{33AAFF}%i {ffffff}美元\n大汉堡\t{33AAFF}%i {ffffff}美元\n香辣鸡腿堡\t\t{33AAFF}%i {ffffff}美元",till*4, till*7, till*10);
	if(inter == 9) format(string, 256, "鸡块\t\t{33AAFF}%i {ffffff}美元\n鸡翅\t\t{33AAFF}%i {ffffff}美元\n鸡腿\t\t{33AAFF}%i {ffffff}美元",till*4, till*7, till*10);
	return ShowPlayerDialog(playerid, D_HEAL+14, 2, "{1E90FF}小吃吧", string, "选择", "退出");
}

stock ClubList(playerid, idx)
{
    new string[300];
    new till = BizzInfo[idx][bTill];
	if(BizzInfo[idx][bProduct] < 50) return SendErrorMessage(playerid,"产业缺货了!");
	format(string, 300, "水\t\t\t{33AAFF}%i {ffffff}美元\n苏打\t\t\t{33AAFF}%i {ffffff}美元\n可口可乐\t\t{33AAFF}%i {ffffff}美元\n啤酒\t\t\t{33AAFF}%i {ffffff}美元\n伏特加\t\t\t{33AAFF}%i {ffffff}美元\n白兰地\t\t\t{33AAFF}%i {ffffff}美元\n苦艾酒\t\t\t{33AAFF}%i {ffffff}美元",
 	till*4, till*7, till*10, till*15, till*20, till*25, till*30);
	return ShowPlayerDialog(playerid, D_HEAL+15, 2, "{1E90FF}俱乐部", string, "选择", "退出");
}

stock BizzStats(playerid, idx)
{
    new string[512];
	if(BizzInfo[idx][bType] != 2)
	{
		format(string, 512, "{ffffff}产业名称:\t\t{00D900}%s\n{ffffff}业主:\t\t\t{00D900}%s\n\n{ffffff}产业账户:\t\t{00D900}%i{ffffff} 美元\n{ffffff}一小时赚了:\t{00D900}%i {ffffff}美元\n{ffffff}产品价格:\t\t百分之{00D900}%i \n\n{ffffff}货物:\t\t\t{00D900}%i / 20000\n\n{ffffff}状态:\t\t\t\t%s\n{ffffff}营业执照:\t\t%s\n{ffffff}是否属于黑手党:\t\t{00D900}%i",
		BizzInfo[idx][bName], BizzInfo[idx][bOwner], BizzInfo[idx][bMoney], BizzPay[idx], BizzInfo[idx][bTill], BizzInfo[idx][bProduct]
		,(!BizzInfo[idx][bLock])?("{00D900}开启") : ("{FF6347}关闭"),(!BizzInfo[idx][bLic])?("{FF6347}无"):("{00D900}有"),BizzInfo[idx][bMafia]);
 	}
 	else
 	{
 		format(string, 512, "{ffffff}产业名称:\t\t{00D900}%s\n{ffffff}业主:\t\t\t{00D900}%s\n\n{ffffff}产业账户:\t\t{00D900}%i{ffffff} 美元\n{ffffff}一小时赚了:\t{00D900}%i {ffffff}美元\n{ffffff}1升价格:\t\t{00D900}%i {ffffff}美元\n\n{ffffff}货物:\t\t\t{00D900}%i / 50000\n\n{ffffff}状态:\t\t\t\t%s\n{ffffff}营业执照:\t\t%s\n{FFFFFF}是否属于黑手党:\t\t{00D900}%i",
		BizzInfo[idx][bName], BizzInfo[idx][bOwner], BizzInfo[idx][bMoney], BizzPay[idx], BizzInfo[idx][bTill] / 3, BizzInfo[idx][bProduct]
		,(!BizzInfo[idx][bLock])?("{00D900}开启") : ("{FF6347}关闭"),(!BizzInfo[idx][bLic])?("{FF6347}无"):("{00D900}有"),BizzInfo[idx][bMafia]);
 	}
 	ShowPlayerDialog(playerid, D_NONE, 0, "{1E90FF}产业", string, "关闭", "");
 	return 1;
}

stock FuelEnter(playerid)
{
	new i = GetPVarInt(playerid, "PlayerBizz");
	if(BizzInfo[i][bProduct] >= 49800) return SendServerMessage(playerid, "你的产业不需要燃料!");
	return ShowPlayerDialog(playerid, D_JOB+125, 1, "{1E90FF}燃料", "{ffffff}输入燃料和每升价格 (用逗号分隔):\n\n{8d8dff}1{ffffff} 升燃料等于 {8d8dff}1{ffffff} 美元\n\n", "确定", "退出");
}

stock ProductEnter(playerid)
{
	new i = GetPVarInt(playerid, "PlayerBizz");
	if(BizzInfo[i][bProduct] >= 19950) return SendServerMessage(playerid, "你的产业不需要货物产品!");
	return ShowPlayerDialog(playerid, D_HEAL+24, 1, "{1E90FF}产品", "{ffffff}输入产品数量和付款 (用逗号分隔):\n\n至少 {8D8DFF}50{ffffff} 个产品和至少 {8D8DFF}5000 {ffffff}美元\n\n", "确定", "退出");
}

publics: OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	if(checkpointid >= gCasinoCP[0] && checkpointid <= gCasinoCP[6-1])
	{
		if(GetPVarInt(playerid, "StartCasino") == 1) return 1;
	    GangShowForTextDraw(playerid);
	    SetPVarInt(playerid, "StartCasino", 1);
	    GangUpdateBalanceTextDraw(playerid, Balance[playerid]);
	    SelectTextDraw(playerid,0x4169e1FF);
	}
	for(new idx = 1; idx <= TOTALBIZZ;idx++)
	{
 		if(checkpointid == BizzInfo[idx][bMenu])
 		{
			if(BizzInfo[idx][bType] == 1) MagazineList(playerid, idx);
			if(BizzInfo[idx][bType] == 3) EatList(playerid, idx);
			if(BizzInfo[idx][bType] == 4 || BizzInfo[idx][bType] == 5) ClubList(playerid, idx);
		}
	}
	return true;
}

stock PutPlayerInVeh(playerid, vehicleid, seatid)
{
    UseEnter[playerid] = true;
    IDVEH[playerid] = vehicleid;
    Q_PutPlayerInVehicle(playerid, vehicleid, seatid);
    return true;
}

stock IsPlayerInRangeOfPlayer(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid) && IsPlayerConnected(targetid) && !IsPlayerNPC(playerid) && !IsPlayerNPC(targetid))
    {
        new Float:posx, Float:posy, Float:posz;
        GetPlayerPos(targetid, posx, posy, posz);
        if(IsPlayerInRangeOfPoint(playerid, radi, posx, posy, posz)) return 1;
    }
    return 0;
}

publics: OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ) return true;
publics: UnFreezePlayer(playerid)
{
    TogglePlayerControllable(playerid, 1);
    return 1;
}

publics: OnMailScriptResponse(iIndex, iResponseCode, const szData[ ])
{
    if(szData[ 0 ]) printf( "Mailer script 说: %s", szData );
}

stock CreateDroppedGun(GunID, GunAmmo, Float:gPosX, Float:gPosY, Float:gPosZ)
{
	new f = MAX_OBJ+1;
	forEx(a, MAX_OBJ)
    {
        if(dGunData[a][ObjPos][0] == 0.0)
        {
            f = a;
            break;
        }
    }
    if(f > MAX_OBJ) return;
    dGunData[f][ObjData][0] = GunID;
	dGunData[f][ObjData][1] = GunAmmo;
	dGunData[f][ObjPos][0] = gPosX;
	dGunData[f][ObjPos][1] = gPosY;
	dGunData[f][ObjPos][2] = gPosZ;
	dGunData[f][ObjID] = CreateDynamicObject(GunObjects[GunID], dGunData[f][ObjPos][0], dGunData[f][ObjPos][1], dGunData[f][ObjPos][2]-1, 93.7, 120.0, random(360));
	return;
}

publics: GateSPCloseLS() return MoveObject (spgateLS,1811.69995117,-1892.80004883,13.10000038-0.004,0.004,0.00000000,270.00000000,270.00000000);

openLSPDGate()
{
    if(pdgategar==0)
	{
		pdgategar = 1;
		MoveObject(pdgaragegateobj, 1588.965698, -1637.882690, 7.710285, 1.50, 0.0, 0.0, 180.0);
	}
	else if(pdgategar==1)
	{
		pdgategar = 0;
		MoveObject(pdgaragegateobj, 1588.965698, -1637.882690, 15.260185, 1.50, 0.0, 0.0, 180.0);
	}
}

stock IsKeyJustDown(key, newkeys, oldkeys) {
	if((newkeys & key) && !(oldkeys & key))
		return 1;

	return 0;
}

openLSPDDoor()
{
	if(LSPD_Door[Opened] == 0)
	{
		MoveObject(LSPD_Door[ObjectID1], 247.3080, 72.3000, 1003.6700, 1.50, 0.0, 0.0, 180.0);
		MoveObject(LSPD_Door[ObjectID2], 245.480, 72.5750, 1003.6650, 1.50, 0.0, 0.0, 0.0);
		MoveObject(LSPD_Door[ObjectID3], 247.888, 72.4500, 1003.7000, 1.50, 0.0, 0.0, 180.0);
		MoveObject(LSPD_Door[ObjectID4], 244.908, 72.4500, 1003.7000, 1.50, 0.0, 0.0, 180.0);
		LSPD_Door[Opened] = 1; LSPD_Door[TimerID] = SetTimer("PDDoorCheck", 3000, 0);
	}
	else
	{
    	MoveObject(LSPD_Door[ObjectID1], 246.4050, 72.3000, 1003.6700, 1.50, 0.0, 0.0, 180.0);
		MoveObject(LSPD_Door[ObjectID2], 246.4050, 72.5750, 1003.6650, 1.50, 0.0, 0.0, 0.0);
		MoveObject(LSPD_Door[ObjectID3], 246.9850, 72.4500, 1003.7000, 1.50, 0.0, 0.0, 180.0);
		MoveObject(LSPD_Door[ObjectID4], 245.8330, 72.4500, 1003.7000, 1.50, 0.0, 0.0, 180.0);
		LSPD_Door[Opened] = 0; KillTimer(LSPD_Door[TimerID]);
	}
}

publics: PDDoorCheck()
{
	openLSPDDoor();
	return 1;
}

publics: OnPlayerPressButton(playerid, buttonid)
{
 	if(buttonid == 1)
	{
	    if(IsACop(playerid))
	    {
			openLSPDDoor();
		}
		else
		{
			SendErrorMessage(playerid,"你无法打开这扇门!");
			return 1;
		}
	}
	else if(buttonid == 2)
	{
	    openLSPDDoor();
	}
	return 1;
}

stock RentFaggio(playerid)
{
    if(PlayerInfo[playerid][pAreaskut] == 1) return SendErrorMessage(playerid,"你已经租了一辆电瓶车了");
	if(PlayerInfo[playerid][pCash] < 99) return SendErrorMessage(playerid,"需要 100 美金!");
	new Float:X, Float:Y, Float:Z, Float:R;
    GetPlayerPos(playerid, X,Y,Z);
	new faggiorent = CreateVehicle(462, X,Y,Z,R,random(100), random(100), 300);
	PutPlayerInVeh(playerid, faggiorent, 0);
	TogglePlayerControllable(playerid, 1);
	SetPVarInt(playerid, "FaggioRent", faggiorent);
	SendSyntaxMessage(playerid,"你租了一辆电瓶车,操作车锁 ( /slock )");
	SendSyntaxMessage(playerid,"你租了一辆电瓶车,操作车锁 ( /slock )");
	SendSyntaxMessage(playerid,"你租了一辆电瓶车,操作车锁 ( /slock )");
	SendSyntaxMessage(playerid,"你租了一辆电瓶车,操作车锁 ( /slock )");
	LockCar(faggiorent);
	IsLocked[faggiorent] = 1;
	Fuell[faggiorent] = 200;
	PlayerInfo[playerid][pCash] -= 100;
    PlayerInfo[playerid][pAreaskut] += 1;
	return true;
}

publics: FishTimer(playerid)
{
    if(Fishing[playerid] == 1)
    {
        new fish = random(10);
        new fishname[256];
        if(fish == 1) { fishname = "{FFFFFF}― 鱼吃了鱼饵就跑了!"; }
        else if(fish == 2) { fishname = "{FFFFFF}― 你钓到了 {88AA88}鲈鱼 {FFFFFF}它的价值 {88AA88}150 $"; }
        else if(fish == 3) { fishname = "{FFFFFF}― 你钓到了 {88AA88}鲤鱼 {FFFFFF}它的价值 {88AA88}170 $"; }
        else if(fish == 4) { fishname = "{FFFFFF}― 你钓到了 {88AA88}梭子鱼 {FFFFFF}它的价值 {88AA88}250 $"; }
        else if(fish == 5) { fishname = "{FFFFFF}― 你钓到了 {88AA88}白鲸 {FFFFFF}它的价值 {88AA88}200 $"; }
        else if(fish == 6) { fishname = "{FFFFFF}― 你钓到了 {88AA88}鲫鱼 {FFFFFF}它的价值 {88AA88}230 $"; }
        else if(fish == 7) { fishname = "{FFFFFF}― 你钓到了 {88AA88}粉红鲑鱼 {FFFFFF}它的价值 {88AA88}225 $"; }
        else if(fish == 8) { fishname = "{FFFFFF}― 你钓到了 {88AA88}三文鱼(大) {FFFFFF}它的价值 {88AA88}210 $"; }
        else if(fish == 9) { fishname = "{FFFFFF}― 你钓到了 {88AA88}红鲑鱼 {FFFFFF}它的价值 {88AA88}240 $"; }
        else if(fish == 10) { fishname = "{FFFFFF}― 你钓到了 {88AA88}三文鱼(小) {FFFFFF}它的价值 {88AA88}200 $"; }
        format(YCMDstr, sizeof(YCMDstr), "%s", fishname);
        SendClientMessage(playerid,-1, YCMDstr);
        if(fish == 1) { fishname = "0"; }
        else if(fish == 2) { fishname = "150"; }
        else if(fish == 3) { fishname = "170"; }
        else if(fish == 4) { fishname = "250"; }
        else if(fish == 5) { fishname = "200"; }
        else if(fish == 6) { fishname = "230"; }
        else if(fish == 7) { fishname = "225"; }
        else if(fish == 8) { fishname = "210"; }
        else if(fish == 9) { fishname = "240"; }
        else if(fish == 10) { fishname = "200"; }
        format(YCMDstr, sizeof(YCMDstr), "~g~+%s$", fishname);
        GameTextForPlayer(playerid, YCMDstr, 1200, 1);
        if(fish == 1) { PlayerInfo[playerid][pCash] += 0; }
        else if(fish == 2) { PlayerInfo[playerid][pCash] += 150; }
        else if(fish == 3) { PlayerInfo[playerid][pCash] += 170; }
        else if(fish == 4)
		{
			PlayerInfo[playerid][pCash] += 250;
			/*if(GetPVarInt(playerid,"quest_riba"))
			{
				PlayerInfo[playerid][pQuest_4] = 1;
				PlayerInfo[playerid][pDonatemoney] += 7;
				SendServerMessage(playerid, "Вы прошли четвёртый этап квеста и получили 7 донат рублей ( /quest )");
				DeletePVar(playerid,"quest_riba");
			}*/
			if(PlayerInfo[playerid][pQuest_4] == 0)
			{
			    PlayerInfo[playerid][pQuest_4] = 1;
				PlayerInfo[playerid][pDonatemoney] += 7;
				SendServerMessage(playerid, "你已经通过了第四阶段的任务，并收到了 7 捐赠点 ( /quest )");
			}
		}
        else if(fish == 5) { PlayerInfo[playerid][pCash] += 200; }
        else if(fish == 6) { PlayerInfo[playerid][pCash] += 230; }
        else if(fish == 7) { PlayerInfo[playerid][pCash] += 225; }
        else if(fish == 8) { PlayerInfo[playerid][pCash] += 210; }
        else if(fish == 9) { PlayerInfo[playerid][pCash] += 240; }
        else if(fish == 10){ PlayerInfo[playerid][pCash] += 200; }
        Fishing[playerid] = 0;
        ApplyAnimation(playerid, "CARRY", "crry_prtial", 2.0, 0, 0, 0, 0, 0);
        TogglePlayerControllable(playerid, 1);
   }
}

publics: AnimFixer(playerid)
{
    if(Fishing[playerid] == 1)
    {
        SetCameraBehindPlayer(playerid);
        ApplyAnimation(playerid,"SWORD","sword_block",50.0,0,1,0,1,1);
    }
    return 1;
}

publics: minertimer(playerid)
{
    SendSyntaxMessage(playerid,"你装好了，现在把货物拿到正确的地方.");
	SendSyntaxMessage(playerid,"目的地在地图上显示.");
	new rands = random(sizeof(RandomGruzRaz));
	SetPlayerCheckpoint(playerid, RandomGruzRaz[rands][0], RandomGruzRaz[rands][1], RandomGruzRaz[rands][2], 5);
	Gruzz[playerid] = 1;
	DeletePVar(playerid,"dalnaboirab");
	SetPVarInt(playerid,"metalgruz",gettime()+100);
}

publics: minertimer1(playerid)
{
    SendSyntaxMessage(playerid,"你装好了，现在把货物拿到正确的地方.");
	SendSyntaxMessage(playerid,"目的地在地图上显示.");
	SetPlayerCheckpoint(playerid, 1898.3387,-1335.0132,13.5469, 5);
	Gruzz[playerid] = 1;
	DeletePVar(playerid,"dalnaboirab");
	SetPVarInt(playerid,"metalgruz",gettime()+100);
}

publics: minertimer2(playerid)
{
	SendSyntaxMessage(playerid,"你装好了，现在把货物拿到正确的地方.");
	SendSyntaxMessage(playerid,"目的地在地图上显示.");
	SetPlayerCheckpoint(playerid, 2402.0471,-2617.7300,13.6641, 5);
	Gruzz[playerid] = 1;
	DeletePVar(playerid,"dalnaboirab");
	SetPVarInt(playerid,"metalgruz",gettime()+100);
}

publics: minertimer3(playerid)
{
    SendSyntaxMessage(playerid,"你装好了，现在把货物拿到正确的地方.");
	SendSyntaxMessage(playerid,"目的地在地图上显示.");
	SetPlayerCheckpoint(playerid, 2402.0471,-2617.7300,13.6641, 5);
	Gruzz[playerid] = 1;
	DeletePVar(playerid,"dalnaboirab");
	SetPVarInt(playerid,"metalgruz",gettime()+100);
}

publics: radar()
{
	foreach(new i : Player)
	{
		PlayerInfo[i][pNr] = 0;
		PlayerInfo[i][pNr1] = 0;
	}
}

publics: efectnarko(playerid)
{
	SetPlayerWeather(playerid, 1);
	PlayerStoned[playerid] = 0;
	SetPlayerDrunkLevel (playerid, 0);
	return true;
}

publics: Licshlag() return MoveObject (Barrier,1415.21375, -1652.07068, 13.10040-0.004,0.004,0.00000000,90.00000000,90.00000000);

stock Exit(playerid)
{
    HideMenuForPlayer(Buyint,playerid);
    pokupka[playerid] = 0;
    SpawnPlayer(playerid);
    PlayerInfo[playerid][pBolnicad] = 0;
}

stock FuelList(playerid)
{
	new str[90], str2[2048];
	for(new i = 1; i <= TOTALFUEL; i++)
	{
		format(str, sizeof(str), "No. %i - 订单: %s\n",i, FuelInfo[i][pNamesss]);
		strcat(str2, str);
	}
	if(TOTALFUEL == 0) return ShowPlayerDialog(playerid, 0, 0, "{1E90FF}订单", "暂无订单", "关闭", "");
	ShowPlayerDialog(playerid, D_JOB+126, 2, "{1E90FF}订单", str2, "接受", "退出");
	return 1;
}

stock IsTheMember(member)
{
	switch(member)
	{
		case 7,1,10,2,4,19,11,21,3,16: return true;
	}
	return false;
}

/*stock UpHealth(playerid)
{
    SetPlayerProgressBarValue(playerid, satiet[playerid], PlayerInfo[playerid][pGolod]);
    UpdatePlayerProgressBar(playerid, satiet[playerid]);
    return 1;
}*/

stock GoAnim(playerid,alib[],aanim[],Float:atime,amove,ax,ay,az,af,ac)
{
	ApplyAnimation(playerid,alib,aanim,atime,amove,ax,ay,az,af,ac);
	SetPVarInt(playerid,"Animation", 1);
	return 1;
}

stock UpdateFighText()
{
	new string[200];
	if(TotalFight !=0) { format(string,sizeof(string), "- 信息 - \n %s 对战 %s\n 赌注: $%d.",Name(GFID1),Name(GFID2),fightM); }
	else { format(string,sizeof(string), "- 信息 - \n 位置是免费的"); }
	Update3DTextLabelText(Fight3D, COLOR_YELLOW, string);
	return 1;
}

stock EndKach(playerid,number)
{
    SetCameraBehindPlayer(playerid);
	RemovePlayerAttachedObject(playerid, 0);
	SetPlayerVirtualWorld(playerid,0);
	TogglePlayerControllable(playerid,1);
	Trenag[playerid]=0;
	PlayerTextDrawHide(playerid,Trenia[playerid]);
	if(number == 1) { usetre[1]=0; ApplyAnimation(playerid,"benchpress","gym_bp_getoff",4.1,0,0,0,1,1,1); SetTimerEx("ClearAnim",6000,false,"i",playerid); KTrenag[1] = CreateDynamicObject(2913, 774.354431,1.900340,1000.605163, 90.000038,0.999999,-0.900000); }
    if(number == 2) { usetre[2]=0; ApplyAnimation( playerid, "GYMNASIUM", "gym_bike_getoff", 4.1, 0, 0, 0, 0, 0 ); SetTimerEx("ClearAnim",2000,false,"i",playerid); }
    if(number == 3) { usetre[3]=0;ApplyAnimation( playerid, "Freeweights", "gym_free_putdown", 4.1, 0, 0, 0, 1, 0 ); SetTimerEx("ClearAnim",3000,false,"i",playerid); KTrenag[2] = CreateDynamicObject(2915, 771.865661,5.590106,999.889953, 0.000000,-1.000000,91.299919); }
    if(number == 4) { usetre[4]=0; ApplyAnimation( playerid, "GYMNASIUM", "gym_tread_getoff", 4.1, 0, 0, 0, 0, 0 ); SetTimerEx("ClearAnim",3000,false,"i",playerid); }
    return 1;
}

stock CheckTrening(playerid)
{
	switch(PlayerInfo[playerid][pSkillT])
	{
	    case 0:
	    {
	        if(PlayerInfo[playerid][pShtanga] == 40 && PlayerInfo[playerid][pVelo] == 40 && PlayerInfo[playerid][pGiri] == 40 && PlayerInfo[playerid][pBeg] == 40)
	        {
		        SendServerMessage(playerid,"恭喜, 你现在学会了 '拳击' ( /fstyle )");
		        PlayerInfo[playerid][pSkillT] = 1; ApplyAnimation( playerid, "Freeweights", "gym_free_celebrate", 4.1, 0, 0, 0, 0, 0 );
		        PlayerInfo[playerid][pGiri] = 0; PlayerInfo[playerid][pShtanga] = 0; PlayerInfo[playerid][pVelo] = 0; PlayerInfo[playerid][pBeg] = 0;
	        }
	    }
	    case 1:
	    {
	        if(PlayerInfo[playerid][pShtanga] == 80 && PlayerInfo[playerid][pVelo] == 80 && PlayerInfo[playerid][pGiri] == 80 && PlayerInfo[playerid][pBeg] == 80)
	        {
		        SendServerMessage(playerid,"恭喜, 你现在学会了 '功夫' ( /fstyle )");
		        PlayerInfo[playerid][pSkillT] = 2; ApplyAnimation( playerid, "Freeweights", "gym_free_celebrate", 4.1, 0, 0, 0, 0, 0 );
		        PlayerInfo[playerid][pGiri] = 0; PlayerInfo[playerid][pShtanga] = 0; PlayerInfo[playerid][pVelo] = 0; PlayerInfo[playerid][pBeg] = 0;
	        }
	    }
	    case 2:
	    {
	        if(PlayerInfo[playerid][pShtanga] == 160 && PlayerInfo[playerid][pVelo] == 160 && PlayerInfo[playerid][pGiri] == 160 && PlayerInfo[playerid][pBeg] == 160)
	        {
		        SendServerMessage(playerid,"恭喜, 你现在学会了 '搏击' ( /fstyle )");
		        PlayerInfo[playerid][pSkillT] = 3; ApplyAnimation( playerid, "Freeweights", "gym_free_celebrate", 4.1, 0, 0, 0, 0, 0 );
		        PlayerInfo[playerid][pGiri] = 0; PlayerInfo[playerid][pShtanga] = 0; PlayerInfo[playerid][pVelo] = 0; PlayerInfo[playerid][pBeg] = 0;
	        }
    	}
	}
    return 1;
}

stock KolRaz(i)
{
    new string[10],raz,op;
    switch(PlayerInfo[i][pSkillT])
	{
	case 0:raz=40;
	case 1:raz=80;
	case 2:raz=160;
	}
	switch(Trenag[i])
	{
	case 1: op = PlayerInfo[i][pShtanga];
	case 2: op = PlayerInfo[i][pVelo];
	case 3: op = PlayerInfo[i][pGiri];
	case 4: op = PlayerInfo[i][pBeg];
	}
	format(string,10,"[%d/%d]",op,raz);
	PlayerTextDrawSetString(i,Trenia[i],string);
	return 1;
}

publics: StartDeathmatchRound()
{
	SendClientMessageToAll(0xBFFF00AA,"警告! 团队战斗开始于7分钟后。地点: ( /gps -> [8] -> [7] )");
    SetTimer("StartDeathmatchRoundyy", 420000, 0);
    DeathmatchRound = 1;
    TeamMapWa += 1;
    if(TeamMapWa == 5)
    {
        TeamMapWa = 1;
    }
    DeathmatchONRound = 1;
    return true;
}

publics: StartDeathmatchRoundyy()
{
	SendClientMessageToAll(0xBFFF00AA,"警告! 团队战斗开始于3分钟后。地点: ( /gps -> [8] -> [7] )");
    SetTimer("StartDeathmatchRound2", 180000, 0);
    return true;
}

publics: StartDeathmatchRound2()
{
    if(DeathmatchPlayers < 1)
	{
	    SendClientMessageToAll(0xBFFF00AA,"由于参赛人数不足，团队战斗被取消");
	    DeathmatchRound = 0;
	    DeathmatchPlayers = 0;
	    DeathmatchKill[0] = 0;
	    DeathmatchKill[1] = 0;
	    DeathmatchAmout[0] = 0;
	    DeathmatchAmout[1] = 0;
	    DeathmatchONRound = 0;
	    foreach(new i : Player)
	    {
	        if(IsPlayerConnected(i))
	        {
		        if(PlayerDeathmatch[i] != 0)
		        {
		            PlayerDeathmatch[i] = 0;
		        }
			}
		}
	    return true;
	}
 	SendClientMessageToAll(0xBFFF00AA,"警告! 团队战开始了.");
	TeamMap = TeamMapWa;
 	DeathmatchRound = 0;
    foreach(new i : Player)
	{
	    if(IsPlayerConnected(i))
	    {
            if(PlayerDeathmatch[i] != 0)
            {
	            SetPlayerArmourAC(i, 0);
	            SetPlayerHealthAC(i, 100);
                DelGun(i);
	            ResetPlayerWeapons(i);
	            SetPlayerVirtualWorld(i, 69);
                if(PlayerDeathmatch[i] == 1)
				{
      			    GiveWeapon(i, 24, 30);
      			    if(TeamMap == 1)
      			    {
      			        new rand;
		    	        rand = random(sizeof(DeathmatchSpawnsRed));
				        Q_SetPlayerPos(i, DeathmatchSpawnsRed[rand][0], DeathmatchSpawnsRed[rand][1], DeathmatchSpawnsRed[rand][2]);
				        SetPlayerInterior(i, 10);
		                PlayerInfo[i][pInt] = 10;
		                ShowPlayerDialog(i,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}地图 No. 1 | 规则", "{FFFFFF}1. 禁止杀死你的战友.\n2. 禁止使用第三方软件（作弊）.\n\n{0000FF}蓝队任务:\n\n{FFFFFF}1. 尽可能的杀死更多的红队.\n\n{FF0000}红队任务:\n\n{FFFFFF}1. 尽可能的杀死更多的蓝队.", "关闭", "");
				    }
				    else if(TeamMap == 2)
				    {
      			        new rand;
		    	        rand = random(sizeof(DeathmatchSpawnsRed2));
				        Q_SetPlayerPos(i, DeathmatchSpawnsRed2[rand][0], DeathmatchSpawnsRed2[rand][1], DeathmatchSpawnsRed2[rand][2]);
				        SetPlayerInterior(i, 0);
		                PlayerInfo[i][pInt] = 0;
		                ShowPlayerDialog(i,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}地图 No. 2 | 规则", "{FFFFFF}1. 禁止杀死你的战友.\n2. 禁止跳入水中.\n3. 禁止使用第三方软件（作弊）.\n\n{0000FF}蓝队任务:\n\n{FFFFFF}1. 找一个基于红队的警察.\n2. 将它交付给数据库.\n\n{FF0000}红队任务:\n\n{FFFFFF}1. 不要让蓝队拯救警察.\n2. 杀死更多的蓝队成员.", "关闭", "");
				    }
				    else if(TeamMap == 3)
				    {
      			        new rand;
		    	        rand = random(sizeof(DeathmatchSpawnsRed2MAP));
				        Q_SetPlayerPos(i, DeathmatchSpawnsRed2MAP[rand][0], DeathmatchSpawnsRed2MAP[rand][1], DeathmatchSpawnsRed2MAP[rand][2]);
				        SetPlayerInterior(i, 0);
		                PlayerInfo[i][pInt] = 0;
		                ShowPlayerDialog(i,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}地图 No. 3 | 规则", "{FFFFFF}1. 禁止杀死你的战友.\n2. 禁止使用第三方软件（作弊）.\n\n{0000FF}蓝队任务:\n\n{FFFFFF}1. 尽可能的杀死更多的红队.\n\n{FF0000}红队任务:\n\n{FFFFFF}1. 尽可能的杀死更多的蓝队.", "关闭", "");
				    }
				    else if(TeamMap == 4)
				    {
      			        new rand;
		    	        rand = random(sizeof(DeathmatchSpawnsRed2MAP2));
				        Q_SetPlayerPos(i, DeathmatchSpawnsRed2MAP2[rand][0], DeathmatchSpawnsRed2MAP2[rand][1], DeathmatchSpawnsRed2MAP2[rand][2]);
				        SetPlayerInterior(i, 0);
		                PlayerInfo[i][pInt] = 0;
		                ShowPlayerDialog(i,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}地图 No. 4 | 规则", "{FFFFFF}1. 禁止杀死你的战友.\n2. 禁止使用第三方软件（作弊）.\n\n{0000FF}蓝队任务:\n\n{FFFFFF}1. 找一个基于红队的警察.\n2. 将它交付给数据库.\n\n{FF0000}红队任务:\n\n{FFFFFF}1. 不要让蓝队拯救警察.\n2. 杀死更多的蓝队成员.", "关闭", "");
				    }
      			    SetPlayerSkin(i, 264);
                    SetPlayerColor(i,Cvet_1);
                    DeathmatchAmout[0]++;
      			}
      			if(PlayerDeathmatch[i] == 2)
				{
      			    GiveWeapon(i, 24, 30);
      			    if(TeamMap == 1)
      			    {
      			        new rand;
		    	        rand = random(sizeof(DeathmatchSpawnsBlue));
				        Q_SetPlayerPos(i, DeathmatchSpawnsBlue[rand][0], DeathmatchSpawnsBlue[rand][1], DeathmatchSpawnsBlue[rand][2]);
				        SetPlayerInterior(i, 10);
		                PlayerInfo[i][pInt] = 10;
		                ShowPlayerDialog(i,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}地图 No. 1 | 规则", "{FFFFFF}1. 禁止杀死你的战友.\n2. 禁止使用第三方软件（作弊）.\n\n{0000FF}蓝队任务:\n\n{FFFFFF}1. 尽可能的杀死更多的红队.\n\n{FF0000}红队任务:\n\n{FFFFFF}1. 尽可能的杀死更多的蓝队.", "关闭", "");
				    }
				    else if(TeamMap == 2)
				    {
      			        new rand;
		    	        rand = random(sizeof(DeathmatchSpawnsBlue2));
				        Q_SetPlayerPos(i, DeathmatchSpawnsBlue2[rand][0], DeathmatchSpawnsBlue2[rand][1], DeathmatchSpawnsBlue2[rand][2]);
				        SetPlayerInterior(i, 0);
		                PlayerInfo[i][pInt] = 0;
		                ShowPlayerDialog(i,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}地图 No. 2 | 规则", "{FFFFFF}1. 禁止杀死你的战友.\n2. 禁止跳入水中.\n3. 禁止使用第三方软件（作弊）.\n\n{0000FF}蓝队任务:\n\n{FFFFFF}1. 找一个基于红队的警察.\n2. 将它交付给数据库.\n\n{FF0000}红队任务:\n\n{FFFFFF}1. 不要让蓝队拯救警察.\n2. 杀死更多的蓝队成员.", "关闭", "");
				    }
				    else if(TeamMap == 3)
				    {
      			        new rand;
		    	        rand = random(sizeof(DeathmatchSpawnsBlue2MAP));
				        Q_SetPlayerPos(i, DeathmatchSpawnsBlue2MAP[rand][0], DeathmatchSpawnsBlue2MAP[rand][1], DeathmatchSpawnsBlue2MAP[rand][2]);
				        SetPlayerInterior(i, 0);
		                PlayerInfo[i][pInt] = 0;
		                ShowPlayerDialog(i,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}地图 No. 3 | 规则", "{FFFFFF}1. 禁止杀死你的战友.\n2. 禁止使用第三方软件（作弊）.\n\n{0000FF}蓝队任务:\n\n{FFFFFF}1. 尽可能的杀死更多的红队.\n\n{FF0000}红队任务:\n\n{FFFFFF}1. 尽可能的杀死更多的蓝队.", "关闭", "");
				    }
				    else if(TeamMap == 4)
				    {
      			        new rand;
		    	        rand = random(sizeof(DeathmatchSpawnsBlue2MAP2));
				        Q_SetPlayerPos(i, DeathmatchSpawnsBlue2MAP2[rand][0], DeathmatchSpawnsBlue2MAP2[rand][1], DeathmatchSpawnsBlue2MAP2[rand][2]);
				        SetPlayerInterior(i, 0);
		                PlayerInfo[i][pInt] = 0;
		                ShowPlayerDialog(i,D_NONE,DIALOG_STYLE_MSGBOX,"{1E90FF}地图 No. 4 | 规则", "{FFFFFF}1. 禁止杀死你的战友.\n2. 禁止使用第三方软件（作弊）.\n\n{0000FF}蓝队任务:\n\n{FFFFFF}1. 找一个基于红队的警察.\n2. 将它交付给数据库.\n\n{FF0000}红队任务:\n\n{FFFFFF}1. 不要让蓝队拯救警察.\n2. 杀死更多的蓝队成员.", "关闭", "");
				    }
      			    SetPlayerSkin(i, 285);
      			    SetPlayerColor(i,Cvet_5);
      			    DeathmatchAmout[1]++;
      			}
      			TextDrawShowForPlayer(i,Tdboi[0]);
				TextDrawShowForPlayer(i,Tdboi[1]);
				TextDrawShowForPlayer(i,Tdboi[2]);
				TextDrawShowForPlayer(i,Tdboi[3]);
				TextDrawShowForPlayer(i,Tdboi[4]);
				TextDrawShowForPlayer(i,Tdboi[5]);
				TextDrawShowForPlayer(i,Tdboi[6]);
				TextDrawShowForPlayer(i,Tdboi[7]);
				TogglePlayerControllable(i, false);
				PlayerDeathmatch2[i] = 0;
				StartTimeDTMH[i] = 30;
            }
	    }
	}
	new str1[20];
    format(str1, sizeof(str1),"TEAM RED: %d",DeathmatchAmout[0]);
	TextDrawSetString(Tdboi[1], str1);
	new str2[20];
    format(str2, sizeof(str2),"TEAM BLUE: %d",DeathmatchAmout[1]);
	TextDrawSetString(Tdboi[2], str2);
	SetTimer("StartDeathmatchRound3", 5000, 0);
	return true;
}

publics: StartDeathmatchRound3()
{
    foreach(new i : Player)
	{
	    if(IsPlayerConnected(i))
	    {
            if(PlayerDeathmatch[i] != 0)
            {
                TogglePlayerControllable(i, 1);
                GameTextForPlayer(i, "~r~GO GO GO!", 3000, 4);
            }
        }
    }
    SetTimer("DeathmatchEnded", 600000, 0);
    return true;
}

publics: DeathmatchEnded()
{
    if(DeathmatchKill[0] > DeathmatchKill[1])
    {
	    foreach(Player,i)
        {
            if(IsPlayerConnected(i))
	        {
                if(PlayerDeathmatch[i] == 1)
                {
                    PlayerDeathmatch2[i] = 1;
                    SendSyntaxMessage(i, "你的团队赢了! 恭喜!");
		            SendServerMessage(i,"― 团队奖励 10 捐赠点");
		            PlayerInfo[i][pDonatemoney] += 10;
                }
            }
        }
    }
    else if(DeathmatchKill[0] < DeathmatchKill[1])
    {
	    foreach(Player,i)
        {
            if(IsPlayerConnected(i))
	        {
                if(PlayerDeathmatch[i] == 2)
                {
                    PlayerDeathmatch2[i] = 1;
                    SendSyntaxMessage(i, "你的团队赢了! 恭喜!");
                    SendServerMessage(i,"― 团队奖励 10 捐赠点");
                    PlayerInfo[i][pDonatemoney] += 10;
                }
            }
        }
    }
    else if(DeathmatchKill[0] == DeathmatchKill[1])
    {
        foreach(Player,i)
        {
            if(IsPlayerConnected(i))
	        {
                if(PlayerDeathmatch[i] != 0)
                {
			        SendServerMessage(i, "团队争夺战平局");
			        PlayerDeathmatch2[i] = 0;
                }
            }
        }
    }
	SendClientMessageToAll(0xBFFF00AA,"警告! 团队争夺战. (获奖者名单: /teamlist )");
    foreach(new i : Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerDeathmatch[i] != 0)
	        {
	            DelGun(i);
	            ResetPlayerWeapons(i);
	            PlayerDeathmatch[i] = 0;
	            SetTimerEx("UnFreezePlayer", 3500, false, "i",i);
                TogglePlayerControllable(i, 0);
	           	Q_SetPlayerPos(i, 2050.6870,-1887.8271 + random(1)+2,999.9086);
	           	SetPlayerFacingAngle(i, 188.8227);
	           	SetPlayerVirtualWorld(i, 21);
	           	PlayerInfo[i][pCash] += 2000;
	           	SetPlayerArmourAC(i, 0);
	            SetPlayerHealthAC(i, 100);
	            SetPlayerVirtualWorld(i, 21);
				SetPlayerInterior(i, 1);
				PlayerInfo[i][pInt] = 1;
				if(PlayerInfo[i][pMember] >=1) {	SetPlayerSkin(i,PlayerInfo[i][pModel]);}
				if(PlayerInfo[i][pMember] ==0) {	SetPlayerSkin(i,PlayerInfo[i][pChar]);}
                SetPlayerToTeamColor(i);
		        SetCameraBehindPlayer(i);
		        SetPlayerArmourAC(i, 0);
	            SetPlayerHealthAC(i, 100);
	            CP[i] = 0;
	            DisablePlayerCheckpoint(i);
	            TextDrawHideForPlayer(i,Tdboi[0]);
		        TextDrawHideForPlayer(i,Tdboi[1]);
	        	TextDrawHideForPlayer(i,Tdboi[2]);
		        TextDrawHideForPlayer(i,Tdboi[3]);
		        TextDrawHideForPlayer(i,Tdboi[4]);
		        TextDrawHideForPlayer(i,Tdboi[5]);
		        TextDrawHideForPlayer(i,Tdboi[6]);
		        TextDrawHideForPlayer(i,Tdboi[7]);
	        }
		}
	}
	DeathmatchPlayers = 0;
	DeathmatchKill[0] = 0;
	DeathmatchKill[1] = 0;
	DeathmatchAmout[0] = 0;
	DeathmatchAmout[1] = 0;
	DeathmatchONRound = 0;
	return true;
}

stock TeamList(playerid)
{
    new stringer[90], strrr[1100], a = 0;
    foreach(new i : Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerDeathmatch2[i] != 0)
	        {
                a++;
                format(stringer, sizeof(stringer), "{FFFFFF}No. %i - %s\n",a, PlayerInfo[i][pName]);
                strcat(strrr, stringer);
            }
        }
    }
    if(strlen(stringer) < 1)  return ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}<< 获奖者名单 >>", "没有获奖者", "关闭", "");
    ShowPlayerDialog(playerid, D_NONE, DIALOG_STYLE_MSGBOX, "{1E90FF}<< 获奖者名单 >>", strrr, "关闭", "");
    return true;
}

stock PlayAudio(playerid, URLON)
{
    switch(URLON)
    {
    case 0: PlayAudioStreamForPlayer(playerid, "http://online.radiorecord.ru:8101/rr_128");
    case 1: PlayAudioStreamForPlayer(playerid, "http://kissfm.ua/v3/kiss-2.m3u");
    case 2: PlayAudioStreamForPlayer(playerid, "http://radio02-cn03.akadostream.ru:8108/shanson128.mp3");
    case 3: PlayAudioStreamForPlayer(playerid, "http://online.radiorecord.ru:8101/rr_128");
    case 4: PlayAudioStreamForPlayer(playerid, "http://stream05.akaver.com/skyradio_hi.mp3");
    case 5: PlayAudioStreamForPlayer(playerid, "http://webcast.emg.fm:55655/europaplus128.mp3");
    case 6: PlayAudioStreamForPlayer(playerid, "http://striiming.trio.ee/dfm64.mp3.m3u");
    default: PlayAudioStreamForPlayer(playerid, "http://skycast.su:2007/rock-online.m3u");
    }
    return 1;
}

publics: SyncUp()
{
	if(CaptureTime) CaptureTime--;
	for(new f = 0; f < sizeof(FrakCD); f++)
	{
		if(FrakCD[f] && FracVoina[f] != 1) FrakCD[f]--;
	}
	foreach(new i:Player)
	{
		PlayerInfo[i][pTimeBP]++;
		PlayerInfo[i][pTimeDayS] += 1;
	}
	new time = GetTickCount();
    new soxranit;
    new h, m, s;
    gettime(h, m, s);
    if(h == 03 && m == 55)
    {
        SendClientMessageToAll(COLOR_RED,"亲爱的玩家们! 5分钟后，服务器将自动重启");
        SetPVarInt(soxranit, "SaveAllGzDBS", gettime()+5);
        format(YCMDstr,sizeof(YCMDstr),"― 材料, 黑手党银行, 各组织仓库 - 保存. 耗时: %d <毫秒>",GetTickCount() - time);
        ABroadCast(-1,YCMDstr,1);
       	foreach(new i: Player)
		{
	    	if(PlayerInfo[i][pLogin] == 1)
	    	{
				OnPlayerUpdateAc(i);
			}
		}
    }
    /*if(h == 04 && m == 00)
    {
        SendClientMessageToAll(COLOR_RED,"Происходит автоматический рестарт сервера, перезайдите в игру..");
        SendRconCommand("gmx");
    }*/
    return 1;
}

publics: gatesfaClose (playerid)
{
    MoveObject(gatesfa, -1546.72, 510.74, 6.30, 2);
    KillTimer(gatetimersfa);
    return 1;
}

publics: gatelvaClose (playerid)
{
    MoveObject(gatelva, 87.15, 1922.18, 17.63+0.004, 0.12, 0.00, -90.00, 90.00);
    KillTimer(gatetimerlva);
    return 1;
}

publics: SMSP(playerid) return TextDrawHideForPlayer(playerid, SMS);

stock ShowBuyAccessories(playerid)
{
    static Float:lX,Float:lY,Float:lZ,Float:n1X,Float: n1Y;
    for(new i; i<6; i++)
    {
        TextDrawShowForPlayer(playerid, BuyAccesor[i]);
    }
    TextDrawShowForPlayer(playerid, BuyAcc[playerid]);
    TogglePlayerControllable(playerid,0);
    SelectTextDraw(playerid,0x444444FF);
    GetPlayerPos(playerid,lX,lY,lZ);
    n1X = lX + 1.4 * floatcos(1.25, degrees);
    n1Y = lY + 1.4 * floatsin(1.25, degrees);
    SetPlayerCameraPos(playerid, n1X, n1Y, lZ + 0.5);
    SetPlayerCameraLookAt(playerid, lX, lY, lZ + 0.5);
    SetPlayerFacingAngle(playerid, 1.25 - 90.0);
    buyaccessor[playerid] = 1;
    HatsGlasses[playerid] = 0;
    new price[12];
    accchoose[playerid] = 0;
    format(price, sizeof(price), "%d$",Accesor[HatsGlasses[playerid]][accchoose[playerid]][1]);
    TextDrawSetString(BuyAcc[playerid], price);
    RemovePlayerAttachedObject(playerid, 3);
    new typehat = GetType(Accesor[HatsGlasses[playerid]][accchoose[playerid]][0]);
    SetPlayerAttachedObject(playerid, 3, Accesor[HatsGlasses[playerid]][accchoose[playerid]][0], 2, AccAngle[typehat][0], 0.03, 0.0, AccAngle[typehat][1], AccAngle[typehat][2], AccAngle[typehat][3]);
}

stock StopShowBuyAccessories(playerid)
{
    for(new i; i<6; i++)
    {
        TextDrawHideForPlayer(playerid, BuyAccesor[i]);
    }
    TextDrawHideForPlayer(playerid, BuyAcc[playerid]);
    TogglePlayerControllable(playerid,1);
    SetCameraBehindPlayer(playerid);
    CancelSelectTextDraw(playerid);
    buyaccessor[playerid] = 0;
    RemovePlayerAttachedObject(playerid, 2);
    RemovePlayerAttachedObject(playerid, 3);
}

stock ShowAccessories(playerid)
{
    static Float:lX,Float:lY,Float:lZ,Float:n1X,Float: n1Y;
    for(new i; i<21; i++)
    {
        TextDrawShowForPlayer(playerid, Accessories[i]);
    }
    for(new i = 2; i<14; i++)
    {
        if(AccInvInfo[playerid][i] != 0)
        {
            PlayerTextDrawSetPreviewModel(playerid,AccInv[playerid][i], AccInvInfo[playerid][i]);
            PlayerTextDrawShow(playerid, AccInv[playerid][i]);
            if(AccInvInfo[playerid][0] == i)
            {
                PlayerTextDrawSetPreviewModel(playerid,AccInv[playerid][0], AccInvInfo[playerid][i]);
                PlayerTextDrawShow(playerid, AccInv[playerid][0]);
            }
            if(AccInvInfo[playerid][1] == i)
            {
                PlayerTextDrawSetPreviewModel(playerid,AccInv[playerid][1], AccInvInfo[playerid][i]);
                PlayerTextDrawShow(playerid, AccInv[playerid][1]);
            }
        }
    }
    SelectTextDraw(playerid,0x444444FF);
    TogglePlayerControllable(playerid, 0);
    GetPlayerPos(playerid,lX,lY,lZ);
    n1X = lX + 1.4 * floatcos(1.25, degrees);
    n1Y = lY + 1.4 * floatsin(1.25, degrees);
    SetPlayerCameraPos(playerid, n1X, n1Y, lZ + 0.5);
    SetPlayerCameraLookAt(playerid, lX, lY, lZ + 0.5);
    SetPlayerFacingAngle(playerid, 1.25 - 90.0);
    accessor[playerid] = 1;

}

stock StopShowAccessories(playerid)
{
    for(new i; i<21; i++)
    {
        TextDrawHideForPlayer(playerid, Accessories[i]);
    }
    for(new i; i<14; i++)
    {
        PlayerTextDrawHide(playerid, AccInv[playerid][i]);
    }
    TogglePlayerControllable(playerid,1);
    SetCameraBehindPlayer(playerid);
    accessor[playerid] = 0;
}

stock GetType(playerid)
{
    switch(playerid)
    {
        case 19069,19068,19067,18970,18969,18968,18967,18973,18972,18971: return 0;
        case 18951,18950,18949,18948,18947,18946,18945,18944,18935,18934,18933,18932,18931,18930,18929,18928,18927,18926,19093,19098,19097,19096,18962,19095,19137: return 1;
        default: return 2;
    }
	return true;
}

publics: GzCheck(i,napad,vlad)
{
	foreach(new m:Player)
	{
		if(IsAGang(m))
		{
			if(!GetPVarInt(m,"ppkz"))
		    {
				GangZoneFlashForPlayer(m,GZInfo[i][gID],GetGangColor(napad));
		        PlayerTextDrawShow(m, Capture[m][0]);
		        PlayerTextDrawShow(m, Capture[m][1]);
		        format(YCMDstr,30,"Time: %s",TimeConverter(GZInfo[i][gTime]));
		        PlayerTextDrawSetString(m,Capture[m][1],YCMDstr);
		        format(YCMDstr,30,"~w~%s ~r~0",GFrac(vlad));
			    PlayerTextDrawSetString(m,Capture[m][2],YCMDstr);
			    PlayerTextDrawShow(m, Capture[m][2]);
			    format(YCMDstr,30,"~w~%s ~r~0",GFrac(napad));
			    PlayerTextDrawSetString(m,Capture[m][3],YCMDstr);
			    PlayerTextDrawShow(m, Capture[m][3]);
				SetPVarInt(m,"ppkz",true);
			}
			else
			{
		        format(YCMDstr,30,"Time: %s",TimeConverter(GZInfo[i][gTime]));
		        PlayerTextDrawSetString(m,Capture[m][1],YCMDstr);
		        format(YCMDstr,30,"~w~%s ~r~%d",GFrac(vlad),CountOnZone[vlad]);
			    PlayerTextDrawSetString(m,Capture[m][2],YCMDstr);
			    format(YCMDstr,30,"~w~%s ~r~%d",GFrac(napad),CountOnZone[napad]);
			    PlayerTextDrawSetString(m,Capture[m][3],YCMDstr);
			}
		}
	}
	if(GZInfo[i][gTime] > 0)GZInfo[i][gTime] --;
	if(GZInfo[i][gTime] <= 0)
	{
		if(GZInfo[i][ZoneOnBattle] == 1)
		{
		    new strlolka[112];
			if(CountOnZone[vlad] == CountOnZone[napad] || CountOnZone[vlad] > CountOnZone[napad])
			format(strlolka,112,"[!] %s 占领了 %s 的地盘: %s",GFrac(vlad),GFrac(napad),GetPlayerZone(i));
			else
			{
				format(strlolka,112,"%s 占领了 %s 的地盘 %s",GFrac(napad),GFrac(vlad),GetPlayerZone(i));
				GZInfo[i][gFrakVlad] = GZInfo[i][gNapad];
			}
			SendBand(COLOR_ORANGE,strlolka);
			GZInfo[i][ZoneOnBattle] = 2;
		}
		if(GZInfo[i][ZoneOnBattle] == 2)
		{
  		   	new id_killed = -1;
			new max_killed = -1;
			foreach(new x:Player)
			{
				if(IsAGang(x) && GetPVarInt(x,"ppkz"))
    			EndCapt(x);
			    if(GetPVarInt(x,"killed_shot"))
			    {
			        if(GetPVarInt(x,"killed_shot")>max_killed)
			        {
			            max_killed = GetPVarInt(x,"killed_shot");
			            id_killed = x;
			        }
					DeletePVar(x,"killed_shot");
			    }
			}
			if(id_killed != -1 && max_killed != -1)
			{
			    format(YCMDstr,128,"杀人最多的是 {1E90FF}%s {E6251E}杀人数: {1E90FF}%i", PlayerInfo[id_killed][pName],max_killed);
		    	SendBand(COLOR_ORANGE,YCMDstr);
			}
			FracVoina[napad] = 0;
			FracVoina[vlad] = 0;
			CountOnZone[napad] = 0;
			CountOnZone[vlad] = 0;
			GZInfo[i][ZoneOnBattle] = 0;
			GangZoneStopFlashForAll(GZInfo[i][gID]);
			GangZoneHideForAll(GZInfo[i][gID]);
			GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
			SaveGZ(i);
			CaptureTime = 30;
			zahvat = false;
			KillTimer(GZInfo[i][gzTimer]);
			return 1;
		}
	}
	return 1;
}

EndCapt(m)
{
	PlayerTextDrawHide(m, Capture[m][0]);
	PlayerTextDrawHide(m, Capture[m][1]);
	PlayerTextDrawHide(m, Capture[m][2]);
	PlayerTextDrawHide(m, Capture[m][3]);
	for(new num; num < 10; num++) SendDeathMessageToPlayer(m,6000,5005, 255);
	DeletePVar(m,"ppkz");
}

stock GFrac(frac)
{
	new namegang[20];
	switch(frac)
	{
		case 15: namegang = "Grove Street";
		case 17: namegang = "Varrios Los Aztecas";
		case 12: namegang = "East Side Ballas";
		case 18: namegang = "Rifa";
		case 13: namegang = "Los Santos Vagos";
	}
	return namegang;
}

stock GetPlayerPoint(playerid)
{
	new zone[32],bool:getzone;
    for(new i=0; i<sizeof(gSAZones); i++)
    {
       	if(LASTPOS[playerid][0] >= gSAZones[i][SAZONE_AREA][0]
		&& LASTPOS[playerid][0] <= gSAZones[i][SAZONE_AREA][3]
		&& LASTPOS[playerid][1] >= gSAZones[i][SAZONE_AREA][1]
		&& LASTPOS[playerid][1] <= gSAZones[i][SAZONE_AREA][4])
       	{
        	format(zone, sizeof(zone), gSAZones[i][SAZONE_NAME]);
        	getzone = true;
        	break;
       	}
    }
    if(!getzone) zone = "未知";
    return zone;
}

stock GetPlayerZone(playerid)
{
	new Float:POS[3],zone[32],bool:getzone;
	GetPlayerPos(playerid, POS[0], POS[1], POS[2]);
    for(new i=0; i<sizeof(gSAZones); i++)
    {
       	if(POS[0] >= gSAZones[i][SAZONE_AREA][0]
	    && POS[0] <= gSAZones[i][SAZONE_AREA][3]
	    && POS[1] >= gSAZones[i][SAZONE_AREA][1]
		&& POS[1] <= gSAZones[i][SAZONE_AREA][4])
       	{
        	format(zone, sizeof(zone), gSAZones[i][SAZONE_NAME]);
        	getzone = true;
        	break;
       	}
    }
    if(!getzone) zone = "Неизвестно";
    return zone;
}

stock TimeConverter(seconds)//Конвертер секунды в минуты и секунды
{
	new str[6];//объявляем символьную переменную
	new minutes = floatround(seconds/60);//кол. целых минут
	seconds -= minutes*60;  //остаток
	format(str, sizeof(str), "%02d:%02d", minutes, seconds);//преобразовываем
	return str;//возвращаем строку символов
}

SendErr(playerid,text[])
{
	new string[144];
	format(string, 144, "[!] {ffffff}%s",text);
	SendClientMessage(playerid,-1, string);
	return 1;
}

stock SendBand(color,str[])
{
	foreach(new x:Player)
	{
	    if(IsAGang(x))
	    SendClientMessage(x,color,str);
	}
	return 1;
}

stock NewTextDrawsLoad(i)
{
	Capture[i][0] = CreatePlayerTextDraw(i, 107.000000, 293.000000, "_");
	PlayerTextDrawAlignment(i, Capture[i][0], 2);
	PlayerTextDrawBackgroundColor(i, Capture[i][0], 255);
	PlayerTextDrawFont(i, Capture[i][0], 1);
	PlayerTextDrawLetterSize(i, Capture[i][0], 1.120000, 3.200000);
	PlayerTextDrawColor(i, Capture[i][0], -1);
	PlayerTextDrawSetOutline(i, Capture[i][0], 0);
	PlayerTextDrawSetProportional(i, Capture[i][0], 1);
	PlayerTextDrawSetShadow(i, Capture[i][0], 1);
	PlayerTextDrawUseBox(i, Capture[i][0], 1);
	PlayerTextDrawBoxColor(i, Capture[i][0], 112);
	PlayerTextDrawTextSize(i, Capture[i][0], 43.000000, 206.000000);
	PlayerTextDrawSetSelectable(i, Capture[i][0], 0);

	Capture[i][1] = CreatePlayerTextDraw(i, 5.000000, 292.000000, "_");//time
	PlayerTextDrawBackgroundColor(i, Capture[i][1], 255);
	PlayerTextDrawFont(i, Capture[i][1], 1);
	PlayerTextDrawLetterSize(i, Capture[i][1], 0.490000, 1.000000);
	PlayerTextDrawColor(i, Capture[i][1], 96492799);
	PlayerTextDrawSetOutline(i, Capture[i][1], 1);
	PlayerTextDrawSetProportional(i, Capture[i][1], 1);
	PlayerTextDrawSetSelectable(i, Capture[i][1], 0);

	Capture[i][2] = CreatePlayerTextDraw(i, 5.000000, 302.000000, "_");//banda napad
	PlayerTextDrawBackgroundColor(i, Capture[i][2], 255);
	PlayerTextDrawFont(i, Capture[i][2], 1);
	PlayerTextDrawLetterSize(i, Capture[i][2], 0.480000, 1.000000);
	PlayerTextDrawColor(i, Capture[i][2], -1);
	PlayerTextDrawSetOutline(i, Capture[i][2], 1);
	PlayerTextDrawSetProportional(i, Capture[i][2], 1);
	PlayerTextDrawSetSelectable(i, Capture[i][2], 0);

	Capture[i][3] = CreatePlayerTextDraw(i, 5.000000, 312.000000, "_");//banda vlad
	PlayerTextDrawBackgroundColor(i, Capture[i][3], 255);
	PlayerTextDrawFont(i, Capture[i][3], 1);
	PlayerTextDrawLetterSize(i, Capture[i][3], 0.480000, 1.000000);
	PlayerTextDrawColor(i, Capture[i][3], -1);
	PlayerTextDrawSetOutline(i, Capture[i][3], 1);
	PlayerTextDrawSetProportional(i, Capture[i][3], 1);
	PlayerTextDrawSetSelectable(i, Capture[i][3], 0);
}
stock SendDead(ids,whoids,killerid,playerid,reason)
{
	for(new m = 0, j = GetPlayerPoolSize(); m <= j; m++)
	{
		if(PlayerInfo[m][pMember] == ids || PlayerInfo[m][pMember] == whoids) SendDeathMessageToPlayer(m, killerid, playerid, reason);
	}
	return 1;
}

stock IsPlayerInBandOnline(bandid)
{
	foreach(new i: Player)
	{
		if(PlayerInfo[i][pMember] == bandid || PlayerInfo[i][pLeader] == bandid) return 1;
	}
	return 0;
}

SetPlayerStraps(playerid)
{
	new strap_id = -1;
	switch(PlayerInfo[playerid][pMember])
	{
	    case 19:
	    {
	        switch(PlayerInfo[playerid][pRank])
	        {
				case 1..2: strap_id = 0;
				case 3..4: strap_id = 1;
				case 5..6: strap_id = 2;
				case 7..8: strap_id = 3;
				case 9..10: strap_id = 4;
				case 11..12: strap_id = 5;
				case 13: strap_id = 6;
				case 14..15: strap_id = 7;
	        }
	    }
	}

	if(strap_id != -1)
	{
	    if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
        new strap_id_object[8]={19783,19784,19785,19778,19781,19779,19782,19780};
		switch(PlayerInfo[playerid][pModel])
		{
	 		case 287:
	 		{
				SetPlayerAttachedObject(playerid, 0, strap_id_object[strap_id], 3, -0.061, -0.018999, -0.035, -23.500017, -58.499958, -72.800018, 0.323, 0.72, 1.0);
	    		SetPlayerAttachedObject(playerid, 1, strap_id_object[strap_id], 4, -0.075999, -0.021999, 0.056, 17.599998, 55.0, -76.799987,0.318999,0.768999,1.360000);
			}
			case 191:
			{
				SetPlayerAttachedObject(playerid, 0, strap_id_object[strap_id], 3, -0.0259, 0.0379, -0.0139, -70.8999, -40.3999, -113.7999, 0.4519, 0.8429, 0.8009, 0, 0);
				SetPlayerAttachedObject(playerid, 1, strap_id_object[strap_id], 4, -0.0449, 0.0130, 0.0010, 20.7000, 56.0000, -97.9999, 0.4169, 0.8029, 1.0000, 0, 0);
			}
			case 61:
			{
				SetPlayerAttachedObject(playerid, 0, strap_id_object[strap_id], 3, -0.0430, -0.0379, -0.0070, 0.0000, -64.0999, -59.8999, 0.3449, 0.7739, 1.0000, 0, 0);
				SetPlayerAttachedObject(playerid, 1, strap_id_object[strap_id], 4, -0.0500, -0.0449, 0.0160, 0.0000, 59.7000, -72.6999, 0.3379, 0.8309, 1.0000, 0, 0);
			}
			case 255:
			{
			    SetPlayerAttachedObject(playerid, 0, strap_id_object[strap_id], 3, -0.0559, -0.0379, -0.0289, -14.9999, -59.0999, -77.9999, 0.3300, 0.7509, 1.0000, 0, 0);
				SetPlayerAttachedObject(playerid, 1, strap_id_object[strap_id], 4, -0.0630, -0.0390, 0.0559, 13.1000, 60.4000, -80.6999, 0.3829, 0.7480, 1.0000, 0, 0);
			}
			case 295:
			{
			    SetPlayerAttachedObject(playerid, 0, strap_id_object[strap_id], 3, -0.0260, -0.0120, -0.0029, -3.0999, -62.9999, -68.6999, 0.4289, 0.8199, 1.0000, 0, 0);
				SetPlayerAttachedObject(playerid, 1, strap_id_object[strap_id], 4, -0.0359, -0.0099, 0.0140, 12.7999, 64.9000, -81.4999, 0.4379, 0.8619, 1.0000, 0, 0);
			}
		}
		printf("[DEBAG] SetPlayerStraps [ %d ]",strap_id_object[strap_id] );
	}
	return 1;
}

stock randomex(min, max)
{
    return random(max - min) + min;
}

publics: TreeVost(i)
{
	DestroyDynamicObject(gTree[i]);
	gTreeHealth[i] = 100;
	gTree[i] = CreateDynamicObject(717, ObjectTree[i][0], ObjectTree[i][1], ObjectTree[i][2], 0.00000, 0.00000, 359.23209);
	//gTreeCP[i] = CreateDynamicCP(ObjectTree[i][0],ObjectTree[i][1],ObjectTree[i][2]+(72.9820-69.38030),2.5);
	gTreeStatus[i] = true;
	return 1;
}

publics: Carryobject(playerid)
{
	RemovePlayerAttachedObject(playerid, 5);
}

publics: CarryDelay(playerid)
{
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
}

publics: AntiCheatVeh(playerid)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
        SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Vehicle Cheat #10)"),GKick(playerid);
    }
    return 1;
}

GetFloatDifference(Float: Number1, Float: Number2) return floatround(Number1 > Number2 ? Number1 - Number2 : Number2 - Number1);
publics: OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z, Float:vel_x, Float:vel_y, Float:vel_z) // АНТИЧИТ ПЕРЕПИСАН С FULL RP
{
 	GetVehiclePos(vehicleid, PosVeh[vehicleid][0], PosVeh[vehicleid][1], PosVeh[vehicleid][2]);
   	CountVeh[vehicleid][0] = floatround((PosVeh[vehicleid][0] > VehPos[vehicleid][0]) ? (PosVeh[vehicleid][0] - VehPos[vehicleid][0]) : (VehPos[vehicleid][0] - PosVeh[vehicleid][0]));
    CountVeh[vehicleid][1] = floatround((PosVeh[vehicleid][1] > VehPos[vehicleid][1]) ? (PosVeh[vehicleid][1] - VehPos[vehicleid][1]) : (VehPos[vehicleid][1] - PosVeh[vehicleid][1]));
    switch(GetVehicleModel(vehicleid))
    {
    	case 435, 450, 584, 591, 606..608, 610..611: goto UPDATE;
    }
    if((CountVeh[vehicleid][0] > 5 || CountVeh[vehicleid][1] > 5) && !UseCar(vehicleid) && !BanVeh[vehicleid])
    {
    	SetVehiclePos(vehicleid, VehPos[vehicleid][0], VehPos[vehicleid][1], VehPos[vehicleid][2]);
     	SetVehicleZAngle(vehicleid, VehPos[vehicleid][3]);
    }
    else
    {
    	UPDATE:
		OnUpdateVehiclePos(vehicleid, 0);
	}
	if(passenger_seat)
	{
		new Float:x, Float:y, Float:z;
		GetVehiclePos(vehicleid,x,y,z);
		if(GetFloatDifference(x,gVehicles[vehicleid][carshotX]) > 50.0 || GetFloatDifference(y,gVehicles[vehicleid][carshotY]) > 50.0)
		{
			gVehicles[vehicleid][carshotX] = x;
			gVehicles[vehicleid][carshotY] = y;
			gVehicles[vehicleid][carshotZ] = z;
			SetPVarInt(playerid,"pKick4",GetPVarInt(playerid,"pKick4") + 1);
			if(GetPVarInt(playerid,"pKick4") == 4)
			{
				SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Vehicle Cheat  #11)"),GKick(playerid);
			}
		}
	}
	return true;
}

publics: OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
 	if(PlayerInfo[playerid][pAdministration228] >= 2)
 	{
  		if(GetPlayerState(playerid) == 2)
  		{
	   		new tmpcar = GetPlayerVehicleID(playerid);
	   		Q_SetVehiclePos(tmpcar, fX, fY, fZ+2);
  		}
  		else Q_SetPlayerPos(playerid, fX, fY, fZ+1);
  		SetPlayerVirtualWorld(playerid,0);
  		SetPlayerInterior(playerid,0);
 	}
	acstruct[playerid][checkmaptp] = 1; acstruct[playerid][maptplastclick] = GetTickCount();
	acstruct[playerid][maptp][0] = fX; acstruct[playerid][maptp][1] = fY; acstruct[playerid][maptp][2] = fZ;
	if(PlayerEnteredPoint[playerid] == 0 && PlayerClickMapingCyka[playerid] == 1)
	{
	    GetPlayerPos(GetPlayerCarDriver(playerid), FIRSTPOS[GetPlayerCarDriver(playerid)][0], FIRSTPOS[GetPlayerCarDriver(playerid)][1], FIRSTPOS[GetPlayerCarDriver(playerid)][2]);
	    GetPlayerPos(playerid, FIRSTPOS[playerid][0], FIRSTPOS[playerid][1], FIRSTPOS[playerid][2]);
	    LASTPOS[playerid][0] = fX; LASTPOS[GetPlayerCarDriver(playerid)][0] = fX;
	    LASTPOS[playerid][1] = fY; LASTPOS[GetPlayerCarDriver(playerid)][1] = fY;
	    LASTPOS[playerid][2] = fZ; LASTPOS[GetPlayerCarDriver(playerid)][2] = fZ;
  		new string[256];
	    format(string, sizeof(string), "{00FFFF}目的地:{FFFFFF} %s\n{00FFFF}票价:{FFFFFF} %d$\n{999999}要更改目的地\n请点击 '返回'", GetPlayerPoint(playerid), GetPriceTaxi(GetPlayerCarDriver(playerid)));
		ShowPlayerDialog(playerid, TAXI_DIALOG+1, DIALOG_STYLE_MSGBOX, "{1E90FF}信息", string, "确定", "返回");
	}
	return 1;
}
// basetball
stock loadBasketBalls() {
	for(new i=0; i < sizeof(BBallsInfo); i++) {
		if(BBallsInfo[i][EBallType] == IS_DYNAMIC_OBJECT) {
			BBallsInfo[i][EBallObjectID] = CreateDynamicObject(BBallsInfo[i][EBallModelID],BBallsInfo[i][EBallX], BBallsInfo[i][EBallY],BBallsInfo[i][EBallZ], BBallsInfo[i][EBallRotX], BBallsInfo[i][EBallRotY], BBallsInfo[i][EBallRotZ],BBallsInfo[i][EBallVW],BBallsInfo[i][EBallInt]);
		}
	}
}

stock loadBaskets() {
	new bBallScoreLabel[128];
	for(new i=0; i < sizeof(BallBasketInfo); i++) {
		if(BallBasketInfo[i][EBasketType] == IS_DYNAMIC_OBJECT) {
			BallBasketInfo[i][EBasketObjectID] = CreateDynamicObject(BallBasketInfo[i][EBasketModelID],BallBasketInfo[i][EBasketX], BallBasketInfo[i][EBasketY],BallBasketInfo[i][EBasketZ], BallBasketInfo[i][EBasketRotX], BallBasketInfo[i][EBasketRotY], BallBasketInfo[i][EBasketRotZ],BallBasketInfo[i][EBasketVW],BallBasketInfo[i][EBasketInt]);
		}
		format(bBallScoreLabel, sizeof(bBallScoreLabel), "{FFFFFF}进球: %d", BallBasketInfo[i][EBasketScore]);
		BallBasketInfo[i][EBasketText] = CreateDynamic3DTextLabel(bBallScoreLabel, 0xFFA500AA, BallBasketInfo[i][EBasketX], BallBasketInfo[i][EBasketY],BallBasketInfo[i][EBasketZ]+0.25, 50.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,BallBasketInfo[i][EBasketVW], BallBasketInfo[i][EBasketInt]);
	}
}

stock isAtBBall(playerid, Float: radi = 1.5) {
	for(new i=0;i<sizeof(BBallsInfo);i++) {
		if(IsPlayerInRangeOfPoint(playerid, radi, BBallsInfo[i][EBallX], BBallsInfo[i][EBallY],BBallsInfo[i][EBallZ])) {
			return 1;
		}
	}
	return 0;
}

stock getClosestBBall(playerid, Float: radi = 1.5) {
	for(new i=0;i<sizeof(BBallsInfo);i++) {
		if(IsPlayerInRangeOfPoint(playerid, radi, BBallsInfo[i][EBallX], BBallsInfo[i][EBallY],BBallsInfo[i][EBallZ])) {
			return i;
		}
	}
	return -1;
}

stock getBBallArea(ballid) return BBallsInfo[ballid][EBBallArea];

stock checkPlayingState(playerid) {
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
		if(isPlayingBasketBall(playerid)) {
			if(isAtBBall(playerid, 30.0)) {
				if(hasBall(playerid)) {
					loadBBallAnims(playerid, BASKETBALL_RUN);
					playBounceSoundForPeople(playerid, 20.0);
				}
			} else exitBBallGame(playerid);
		}
	}
	return 1;
}

stock joiningOrLeavingBBall(playerid) {
	if(GetPVarInt(playerid, "WasToySlotUsed") == 0 && isAtBBall(playerid))
	tryPickUpBall(playerid);
}

stock exitBBallGame(playerid) {
	SendServerMessage(playerid, "你离开了篮球比赛!");
	SetPVarInt(playerid, "BrosilBBall", 0);
	new areaid = getAreaUserIsPlayingAt(playerid);
	destroyBBallPVars(playerid);
	tryDropBall(playerid);
	checkBBallGameState(areaid);
	unloadBBallAnims(playerid);
}

stock checkBBallGameState(areaid) {
	if(getAmountPlayingAtArea(areaid) < 1)
	restartBasketScores(areaid);
}

destroyBBallPVars(playerid) DeletePVar(playerid, "BasketBallArea");
stock tryDropBall(playerid) {
	new ballid = getLastBallID(playerid);
	if(getBallOwner(ballid) == playerid) {
		respawnBall(ballid);
		removeBallFromPlayer(playerid);
	}
}

stock respawnBall(ballid) {
	BBallsInfo[ballid][EBallObjectID] = CreateDynamicObject(BBallsInfo[ballid][EBallModelID],BBallsInfo[ballid][EBallX], BBallsInfo[ballid][EBallY],BBallsInfo[ballid][EBallZ], BBallsInfo[ballid][EBallRotX], BBallsInfo[ballid][EBallRotY], BBallsInfo[ballid][EBallRotZ],0,0);
	setBallOwner(-1, ballid);
}

stock removeBallFromPlayer(playerid) {
	RemovePlayerAttachedObject(playerid, SDK_BASKETBALL_SLOT);
	if(GetPVarType(playerid, "WasToySlotUsed") != PLAYER_VARTYPE_NONE) {
		if(GetPVarInt(playerid, "WasToySlotUsed") == 1) {
			//toggleAccessorySlot(playerid, SDK_BASKETBALL_SLOT);
			/*new Float:x,Float:y, Float:z, Float:rx, Float:ry, Float:rz, Float:sx, Float:sy, Float:sz;
			SetPlayerAttachedObject(playerid, SDK_BASKETBALL_SLOT, 2114, 6, x, y, z, rx, ry, rz, sx, sy, sz);*/
			SetPlayerAttachedObject(playerid, SDK_BASKETBALL_SLOT, SDK_BASKETBALL_MDL, 6);
			DeletePVar(playerid, "WasToySlotUsed");
		}
	}
	return 1;
}

stock tryPickUpBall(playerid) {
	if(isAtBBall(playerid)) {
		new ballindex = getClosestBBall(playerid);
		if(ballIsNotBeingUsed(ballindex)) {
			DestroyDynamicObject(BBallsInfo[ballindex][EBallObjectID]);
			pickupBBall(playerid, ballindex);
		} else joinBBallGame(playerid, ballindex);
	}
}

stock ballIsNotBeingUsed(ballid) {
	if(BBallsInfo[ballid][EBBallOwner] != -1)
	return 0;
	return 1;
}

stock pickupBBall(playerid, ballid) {
	joinBBallGame(playerid, ballid);
	attachBBallToPlayer(playerid, ballid);
	ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.0,0,0,0,0,0);
}

stock joinBBallGame(playerid, ballindex) {
	if(!isPlayingBasketBall(playerid)) {
		SetPVarInt(playerid, "BrosilBBall", 0);
		format(YCMDstr, 90, "%s 从地面拿起篮球", Name(playerid));
		ProxDetectorNew(playerid,15.0,COLOR_PURPLE,YCMDstr);
		SetPVarInt(playerid, "ExitBBall", 1);
		SendServerMessage(playerid, "你加入了篮球比赛,要离开比赛,离开篮球场区域就行");
		SendServerMessage(playerid, "功能测试完善中...");
		//SendServerMessage(playerid, "操作: 按键 '鼠标右键+SHIFT' - 传球, 按键 'Space' - 选择球, '跳跃' - 比分.");
	}
	new areaid = getBBallArea(ballindex);
	setUserAreaIsPlayingAt(playerid, areaid);
}

setLastBallID(playerid, ballid)
SetPVarInt(playerid, "LastBallID", ballid);
stock getLastBallID(playerid) {
	if(GetPVarType(playerid, "LastBallID") != PLAYER_VARTYPE_NONE) return GetPVarInt(playerid, "LastBallID");
	return -1;
}

stock setUserAreaIsPlayingAt(playerid, areaball)
SetPVarInt(playerid, "BasketBallArea", areaball);
stock getAreaUserIsPlayingAt(playerid) {
	if(GetPVarType(playerid, "BasketBallArea") != PLAYER_VARTYPE_NONE) return GetPVarInt(playerid, "BasketBallArea");
	return -1;
}

stock getAmountPlayingAtArea(areaid) {
	new count;
	foreach(new i: Player) {
		if(GetPVarType(i, "BasketBallArea") != PLAYER_VARTYPE_NONE)
		{
			if(GetPVarInt(i, "BasketBallArea") == areaid) count++;
		}
	}
	return count;
}

stock attachBBallToPlayer(playerid, ballid) {
	if(IsPlayerAttachedObjectSlotUsed(playerid, SDK_BASKETBALL_SLOT)) {
		SetPlayerAttachedObject(playerid, SDK_BASKETBALL_SLOT, SDK_BASKETBALL_MDL, 6);
		SetPVarInt(playerid, "WasToySlotUsed", 1);
	} else SetPlayerAttachedObject(playerid, SDK_BASKETBALL_SLOT, SDK_BASKETBALL_MDL, 6);
	setBallOwner(playerid, ballid);
	loadBBallAnims(playerid);
}

stock getBallOwner(ballid) return BBallsInfo[ballid][EBBallOwner];
stock setBallOwner(playerid, ballid) {
	setLastBallID(playerid, ballid);
	BBallsInfo[ballid][EBBallOwner] = playerid;
}

stock isPlayingBasketBall(playerid) {
	if(GetPVarType(playerid, "BasketBallArea") != PLAYER_VARTYPE_NONE) return 1;
	return 0;
}

stock loadBBallAnims(playerid, anim = BASKETBALL_WALK) {
	switch(anim) {
	case BASKETBALL_WALK: ApplyAnimation(playerid,"BSKTBALL","BBALL_walk",4.1,1,1,1,1,1);
	case BASKETBALL_RUN: ApplyAnimation(playerid,"BSKTBALL","BBALL_run",4.1,1,1,1,1,1);
	case BASKETBALL_DUNK: ApplyAnimation(playerid, "BSKTBALL", "BBALL_DNK", 4.0, 0, 0, 0, 0, 0);
	case BASKETBALL_DEFENSE: ApplyAnimation(playerid, "BSKTBALL", "BBALL_DEF_LOOP", 4.0, 1, 0, 0, 0, 0);
	}
	return true;
}

stock unloadBBallAnims(playerid) {
	ClearAnimations(playerid);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
}

stock playBounceSoundForPeople(playerid, Float: radi = 5.0) {
	new Float: X, Float: Y, Float: Z;
	GetPlayerPos(playerid, X, Y, Z);
	foreach(new i: Player) {
		if(IsPlayerConnected(i)) {
			if(IsPlayerInRangeOfPoint(i, radi, X, Y, Z)) {
				PlayerPlaySound(i, 4602, X, Y, Z);
			}
		}
	}
	return true;
}

stock tryMarkOpponent(playerid) {
	if(!basketballTackleCool(playerid)) {
		if(!hasBall(playerid)) {
			new opponentid = getClosestBBallOpponentID(playerid, 1.5);
			if(opponentid != -1) sendBBall(playerid, opponentid, 0);
		}
	}
	return true;
}

stock basketballTackleCool(playerid) {
	new time = GetPVarInt(playerid, "SDKTackleCoolDown");
	new timenow = gettime();
	if(SDK_TACKLE_COOLDOWN-(timenow-time) > 0) return 0;
	SetPVarInt(playerid, "SDKTackleCoolDown", gettime());
	return 1;
}

stock tryPassBall(playerid) {
	if(hasBall(playerid)) {
		new sendto = GetPlayerTargetPlayer(playerid);
		if(sendto != INVALID_PLAYER_ID)
		sendBBall(playerid, sendto, 1);
	}
	return true;
}

stock sendBBall(playerid, opponentid, calculatedist) {
	new ballid = getLastBallID(playerid);
	if(getAreaUserIsPlayingAt(playerid) != getAreaUserIsPlayingAt(opponentid)) return 1;
	if(ballid != -1) {
		unloadBBallAnims(playerid);
		if(calculatedist != 1) {
			removeBallFromPlayer(opponentid);
			attachBBallToPlayer(playerid, ballid);
		} else moveBallPhys(playerid, ballid, opponentid);
	}
	return 1;
}

stock moveBallPhys(playerid, ballid, opponentid) {
	removeBallFromPlayer(playerid);
	attachBBallToPlayer(opponentid, ballid);
}

stock getClosestBBallOpponentID(playerid, Float: radi = 2.0) {
	new Float: X, Float: Y, Float: Z;
	GetPlayerPos(playerid, X, Y, Z);
	foreach(new i: Player) {
		if(IsPlayerConnected(i)) {
			if(isPlayingBasketBall(i) && i != playerid) {
				if(IsPlayerInRangeOfPoint(i, radi, X, Y, Z)) {
					if(getAreaUserIsPlayingAt(i) == getAreaUserIsPlayingAt(playerid)) {
						if(hasBall(i)) {
							return i;
						}
					}
				}
			}
		}
	}
	return -1;
}

stock hasBall(playerid) {
	new ballid = getLastBallID(playerid);
	new getactualballowner = getBallOwner(ballid);
	if(playerid != getactualballowner) return 0;
	return 1;
}

stock tryScoreBBall(playerid) {
	if(isAtBasketBallBasket(playerid, 6.0)) {
		if(hasBall(playerid)) grantScore(playerid);
	}
	return 1;
}

stock grantScore(playerid) {
	if(GetPVarInt(playerid, "BrosilBBall") > 1) return true;
	new basketid = getClosestBasketBallBasket(playerid, 6.0);
	TogglePlayerControllable(playerid, 0);
	new result = random(2);
	if(result == 1){
		SetTimerEx("UnFreezePlayer",100,false,"i",playerid);
		format(YCMDstr, 90, "%s 试图进球 {ff0000}[失败]", Name(playerid));
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,YCMDstr);
		SetPVarInt(playerid, "BrosilBBall", 3);
		untryDropBall(playerid);
	}else{
		new score = getBasketScore(basketid);
		setBasketScore(basketid, score+1);
		resyncBasketLabel(basketid);
		Q_SetPlayerPos(playerid, BallBasketInfo[basketid][EBasketX], BallBasketInfo[basketid][EBasketY],BallBasketInfo[basketid][EBasketZ]-3.0);
		SetTimerEx("UnFreezePlayer",1500,false,"i",playerid);
		format(YCMDstr, 90, "%s 试图进球 {33AA33}[成功]", Name(playerid));
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,YCMDstr);
		SetPVarInt(playerid, "BrosilBBall", 0);
		tryDropBall(playerid);
	}
	loadBBallAnims(playerid, BASKETBALL_DUNK);
	return true;
}

stock untryDropBall(playerid) {
	new basketid = getClosestBasketBallBasket(playerid, 6.0);
	new ballid = getLastBallID(playerid);
	if(getBallOwner(ballid) == playerid) {
		BBallsInfo[getClosestBBall(playerid)][EBallX] = BallBasketInfo[basketid][EBasketX];
		BBallsInfo[getClosestBBall(playerid)][EBallY] = BallBasketInfo[basketid][EBasketY];
		BBallsInfo[getClosestBBall(playerid)][EBallZ] = BallBasketInfo[basketid][EBasketZ]-3.67;
		BBallsInfo[ballid][EBallObjectID] = CreateDynamicObject(BBallsInfo[ballid][EBallModelID],BBallsInfo[ballid][EBallX],BBallsInfo[ballid][EBallY],BBallsInfo[ballid][EBallZ], BBallsInfo[ballid][EBallRotX], BBallsInfo[ballid][EBallRotY], BBallsInfo[ballid][EBallRotZ],BBallsInfo[ballid][EBallVW],BBallsInfo[ballid][EBallInt]);
		setBallOwner(-1, ballid);
		removeBallFromPlayer(playerid);
	}
	return true;
}

stock isAtBasketBallBasket(playerid, Float: radi = 5.0) {
	for(new i=0;i<sizeof(BallBasketInfo);i++) {
		if(IsPlayerInRangeOfPoint(playerid, radi, BallBasketInfo[i][EBasketX], BallBasketInfo[i][EBasketY],BallBasketInfo[i][EBasketZ])) return 1;
	}
	return 0;
}

stock getClosestBasketBallBasket(playerid, Float: radi = 3.0) {
	for(new i=0;i<sizeof(BallBasketInfo);i++) {
		if(IsPlayerInRangeOfPoint(playerid, radi, BallBasketInfo[i][EBasketX], BallBasketInfo[i][EBasketY],BallBasketInfo[i][EBasketZ])) return i;
	}
	return -1;
}

stock resyncBasketLabel(basketid) {
	format(YCMDstr, sizeof(YCMDstr), "{FFFFFF}进球: %d", BallBasketInfo[basketid][EBasketScore]);
	UpdateDynamic3DTextLabelText(BallBasketInfo[basketid][EBasketText],0xFFA500AA,YCMDstr);
}

stock restartBasketScores(areaid) {
	for(new i=0;i<sizeof(BallBasketInfo);i++) {
		if(BallBasketInfo[i][EBasketArea] == areaid) {
			setBasketScore(i, 0);
			resyncBasketLabel(i);
		}
	}
	return true;
}

stock getBasketScore(basketid) return BallBasketInfo[basketid][EBasketScore];
stock setBasketScore(basketid, amount) BallBasketInfo[basketid][EBasketScore] = amount;

stock ExitTuning(playerid)
{
	SetPVarInt(playerid,"TuningCar",0);
	InTuning[playerid] = 0;
	stotuning = 0;
	for(new i;i<11;i++) PlayerTextDrawHide(playerid,TuningTD[i][playerid]);
	NullComponents(playerid),TuningCamera(playerid),SetCameraBehindPlayer(playerid);
	Q_SetVehiclePos(GetPlayerVehicleID(playerid), 1369.6342,-1877.8236,13.1793);
	return 1;
}

stock TuningCamera(playerid)
{
	SetPlayerCameraLookAt(playerid,2222.7085,-2529.8962,2052.1497);
	if(GetPVarInt(playerid,"Selected1") == 0) SetCameraBehindPlayer(playerid);
	else if(GetPVarInt(playerid,"Selected1") == 1) SetPlayerCameraPos(playerid,2220.5288,-2526.0508,2052.4458);
	else if(GetPVarInt(playerid,"Selected1") == 2) SetPlayerCameraPos(playerid,2222.4316,-2534.9326,2052.4434);
	else if(GetPVarInt(playerid,"Selected1") == 3) SetPlayerCameraPos(playerid,2220.7229,-2525.9919,2052.4458);
	else if(GetPVarInt(playerid,"Selected1") == 4) SetPlayerCameraPos(playerid,2222.5396,-2525.3142,2052.4458);
	else if(GetPVarInt(playerid,"Selected1") == 5) SetPlayerCameraPos(playerid,2222.4316,-2534.9326,2052.4434);
	else if(GetPVarInt(playerid,"Selected1") == 6) SetPlayerCameraPos(playerid,2222.8474,-2533.4060,2052.4434);
	return true;
}

stock LoadTuningCar(playerid)
{
	if(PlayerInfo[playerid][pNitro] == 1009 || PlayerInfo[playerid][pNitro] == 1008 || PlayerInfo[playerid][pNitro] == 1010) AddVehicleComponent(GetPlayerVehicleID(playerid),PlayerInfo[playerid][pNitro]);
	if(PlayerInfo[playerid][pWheels] != 0) AddVehicleComponent(GetPlayerVehicleID(playerid),PlayerInfo[playerid][pWheels]);
	if(PlayerInfo[playerid][pHBumper] != 0) AddVehicleComponent(GetPlayerVehicleID(playerid),PlayerInfo[playerid][pHBumper]);
	if(PlayerInfo[playerid][pBBumper] != 0) AddVehicleComponent(GetPlayerVehicleID(playerid),PlayerInfo[playerid][pBBumper]);
	if(PlayerInfo[playerid][pSpoilers] != 0) AddVehicleComponent(GetPlayerVehicleID(playerid),PlayerInfo[playerid][pSpoilers]);
	if(PlayerInfo[playerid][pHydraulics] != 0) AddVehicleComponent(GetPlayerVehicleID(playerid),PlayerInfo[playerid][pHydraulics]);
}

stock NullComponentid(playerid)
{
	LoadTuningCar(playerid);
	return 1;
}

stock NullComponents(playerid) {
	SetPVarInt(playerid,"Nitro",0);
	SetPVarInt(playerid,"Wheels",0);
	SetPVarInt(playerid,"Hydraulics",0);
	SetPVarInt(playerid,"Spoilers",0);
	SetPVarInt(playerid,"HBumper",0);
	SetPVarInt(playerid,"BBumper",0);
	return 1;
}

stock Secund()
{
	foreach(new x : Player)
	{
	    new Float:ppos[3];
	    SetPVarInt(x,"VodolazOxygenTimer",GetPVarInt(x,"VodolazOxygenTimer")+1);
		if(GetPVarInt(x,"VodolazOxygenTimer") == 4 && GetPVarInt(x,"VodolazStart") == 1)
		{
 			switch(GetPVarInt(x,"VodolazOxygen"))
   			{
   				case 20:
				{
					SendServerMessage(x,"空了,出来!");
				}
			}
			GetPlayerPos(x,ppos[0],ppos[1],ppos[2]);
			if(ppos[2] < -0.60)
			{
				if(GetPVarInt(x,"VodolazOxygen") > 1)
				{
				    SetPVarInt(x,"VodolazOxygen",GetPVarInt(x,"VodolazOxygen")-1);
					format(YCMDstr,20,"Oxygen: %d%",GetPVarInt(x,"VodolazOxygen"));
			  		PlayerTextDrawSetString(x,JobStats[x][2],YCMDstr);
				}
			}
	        SetPVarInt(x,"VodolazOxygenTimer",0);
		}
	}
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			new Float:Arm; GetPlayerArmour(i, Arm);
			if(Armour[i] < Arm)
			{
				SetPlayerArmourAC(i,Armour[i]);
			}
			else Armour[i] = Arm;
		}
	}
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			new Float:Health; GetPlayerHealth(i, Health);
			if(PlayerHealth[i] < Health)
			{
				SetPlayerHealthAC(i,PlayerHealth[i]);
			}
			else PlayerHealth[i] = Health;
		}
	}
	foreach(new i: Player)
	{
		if(IsPlayerConnected(i)) checkPlayingState(i);
	}
    if(duel_system == 1)
    {
        if(duel_second < 60)
        {
            duel_second++;
            format(YCMDstr, sizeof(YCMDstr), "Time: %d:%d", duel_minute, duel_second);
            TextDrawSetString(Time, YCMDstr);
        }
        if(duel_second == 60)
        {
            duel_minute++;
            duel_second = 0;
            format(YCMDstr, sizeof(YCMDstr), "Time: %d:%d", duel_minute, duel_second);
            TextDrawSetString(Time, YCMDstr);
        }
        if(duel_minute == 2)
        {
            format(YCMDstr, sizeof(YCMDstr), "― 2分钟过去了 ( 平局 )");
            SendClientMessage(getplayerid,-1,YCMDstr);
            SendClientMessage(setplayerid,-1,YCMDstr);
            PlayerInfo[getplayerid][pCash] += duel_sum;
            PlayerInfo[setplayerid][pCash] += duel_sum;
            Q_SetPlayerPos(setplayerid,2171.7788,-1677.2714,15.0859);
            Q_SetPlayerPos(getplayerid,2171.7788,-1677.2714,15.0859);
            ResetPlayerWeapons(setplayerid);
            ResetPlayerWeapons(getplayerid);
            SetPlayerVirtualWorld(getplayerid,0);
            SetPlayerVirtualWorld(setplayerid,0);
            SetPlayerInterior(setplayerid,0);
            SetPlayerInterior(getplayerid,0);
            SetPlayerHealthAC(setplayerid, 100.0);
           	SetPlayerHealthAC(getplayerid, 100.0);
            TextDrawHideForPlayer(setplayerid, Box_1);
            TextDrawHideForPlayer(getplayerid, Box_1);
            TextDrawHideForPlayer(setplayerid, Box_2);
            TextDrawHideForPlayer(getplayerid, Box_2);
            TextDrawHideForPlayer(setplayerid, System);
            TextDrawHideForPlayer(getplayerid, System);
            TextDrawHideForPlayer(setplayerid, Aga);
            TextDrawHideForPlayer(getplayerid, Aga);
            TextDrawHideForPlayer(setplayerid, Aga2);
            TextDrawHideForPlayer(getplayerid, Aga2);
            TextDrawHideForPlayer(setplayerid, Time);
            TextDrawHideForPlayer(getplayerid, Time);
            duel_map = "";
            duel_weapon = "";
            duel_map_num = 0;
            duel_weapon_num = 0;
            duel_sum = 0;
            getplayerid = 0;
            setplayerid = 0;
            duel_system = 0;
            duel_second = 0;
            duel_minute = 0;
            duel_gkiller = 0;
            duel_skiller = 0;
            duelzanyat = 0;
 		}
   		if(duel_skiller > duel_gkiller)
     	{
      		new name[MAX_PLAYER_NAME];
        	GetPlayerName(setplayerid, name, sizeof(name));
         	format(YCMDstr, sizeof(YCMDstr), "― 决斗结束! 胜利者 %s 拿走了赌注 {0C72E0}%d $", name, duel_sum);
          	SendClientMessage(setplayerid, -1, YCMDstr);
           	SendClientMessage(getplayerid, -1, YCMDstr);
            PlayerInfo[setplayerid][pCash] += duel_sum*2;
            Q_SetPlayerPos(setplayerid,2171.7788,-1677.2714,15.0859);
            Q_SetPlayerPos(getplayerid,2171.7788,-1677.2714,15.0859);
            ResetPlayerWeapons(setplayerid);
            ResetPlayerWeapons(getplayerid);
            SetPlayerVirtualWorld(getplayerid,0);
            SetPlayerVirtualWorld(setplayerid,0);
            SetPlayerInterior(setplayerid,0);
            SetPlayerInterior(getplayerid,0);
            SetPlayerHealthAC(setplayerid, 100.0);
           	SetPlayerHealthAC(getplayerid, 100.0);
            TextDrawHideForPlayer(setplayerid, Box_1);
            TextDrawHideForPlayer(getplayerid, Box_1);
            TextDrawHideForPlayer(setplayerid, Box_2);
            TextDrawHideForPlayer(getplayerid, Box_2);
            TextDrawHideForPlayer(setplayerid, System);
            TextDrawHideForPlayer(getplayerid, System);
            TextDrawHideForPlayer(setplayerid, Aga);
            TextDrawHideForPlayer(getplayerid, Aga);
            TextDrawHideForPlayer(setplayerid, Aga2);
            TextDrawHideForPlayer(getplayerid, Aga2);
            TextDrawHideForPlayer(setplayerid, Time);
            TextDrawHideForPlayer(getplayerid, Time);
            duel_map = "";
            duel_weapon = "";
            duel_map_num = 0;
            duel_weapon_num = 0;
            duel_sum = 0;
            getplayerid = 0;
            setplayerid = 0;
            duel_system = 0;
            duel_second = 0;
            duel_minute = 0;
            duel_gkiller = 0;
            duel_skiller = 0;
            duelzanyat = 0;
      	}
		if(duel_gkiller > duel_skiller)
       	{
        	new name[MAX_PLAYER_NAME];
         	GetPlayerName(getplayerid, name, sizeof(name));
         	format(YCMDstr, sizeof(YCMDstr), "― 决斗结束了! 胜利者 %s 拿走了赌注 {0C72E0}%d $", name, duel_sum);
          	SendClientMessage(setplayerid, -1, YCMDstr);
           	SendClientMessage(getplayerid, -1, YCMDstr);
   	     	PlayerInfo[getplayerid][pCash] += duel_sum*2;
          	Q_SetPlayerPos(setplayerid,2171.7788,-1677.2714,15.0859);
           	Q_SetPlayerPos(getplayerid,2171.7788,-1677.2714,15.0859);
            ResetPlayerWeapons(setplayerid);
            ResetPlayerWeapons(getplayerid);
            SetPlayerVirtualWorld(getplayerid,0);
            SetPlayerVirtualWorld(setplayerid,0);
            SetPlayerInterior(setplayerid,0);
            SetPlayerInterior(getplayerid,0);
            SetPlayerHealthAC(setplayerid, 100.0);
       		SetPlayerHealthAC(getplayerid, 100.0);
         	TextDrawHideForPlayer(setplayerid, Box_1);
          	TextDrawHideForPlayer(getplayerid, Box_1);
          	TextDrawHideForPlayer(setplayerid, Box_2);
           	TextDrawHideForPlayer(getplayerid, Box_2);
           	TextDrawHideForPlayer(setplayerid, System);
            TextDrawHideForPlayer(getplayerid, System);
            TextDrawHideForPlayer(setplayerid, Aga);
            TextDrawHideForPlayer(getplayerid, Aga);
            TextDrawHideForPlayer(setplayerid, Aga2);
            TextDrawHideForPlayer(getplayerid, Aga2);
            TextDrawHideForPlayer(setplayerid, Time);
            TextDrawHideForPlayer(getplayerid, Time);
            duel_map = "";
            duel_weapon = "";
            duel_map_num = 0;
            duel_weapon_num = 0;
            duel_sum = 0;
            getplayerid = 0;
            setplayerid = 0;
            duel_system = 0;
            duel_second = 0;
            duel_minute = 0;
            duel_gkiller = 0;
            duel_skiller = 0;
            duelzanyat = 0;
        }
    }
	if(gGamersLowRiders[0] != INVALID_PLAYER_ID && gGamersLowRiders[1] != INVALID_PLAYER_ID)
    {
        if(!StartServerRiders)
        {
            new mes[10];
            if(!TimerSecond[0])
            {
                TimerSecond[0] = 15;
                SendServerMessage(gGamersLowRiders[0], "战斗将在15秒内开始! (控制：数字键)");
                SendServerMessage(gGamersLowRiders[1], "战斗将在15秒内开始! (控制：数字键)");
            }
            else
            {
                if(TimerSecond[0] == 1)
                {
                    StartServerRiders = true, TimerSecond[0] = 0;
                    SendServerMessage(gGamersLowRiders[1], "Начинай!");
                    TimerSecond[1] = 80;
                    PlayerChangeImage(gGamersLowRiders[0], false);
                    PlayerChangeImage(gGamersLowRiders[1], false);
                }
                else TimerSecond[0] --;
            }
            f(mes, "~p~%i sec", TimerSecond[0]), GameTextForPlayer(gGamersLowRiders[0], mes, 500, 4);
            GameTextForPlayer(gGamersLowRiders[1], mes, 500, 4);
        }
        else
        {
            if(TimerSecond[1] > 0) TimerSecond[1]--;
            new mes[10];
            f(mes, "%s", TimeConverter(TimerSecond[1])), TextDrawSetString(LRRightBox[1],mes);
            if(!TimerSecond[1])
            {
                if(PlayerCountGoodKeys[gGamersLowRiders[0]] > PlayerCountGoodKeys[gGamersLowRiders[1]])
                {
                    SendSyntaxMessage(gGamersLowRiders[0], "祝贺胜利 (+10.000$)"), SendSyntaxMessage(gGamersLowRiders[1], "你输了!");
                    PlayerInfo[gGamersLowRiders[0]][pCash] += 10000;
                }
                else if(PlayerCountGoodKeys[gGamersLowRiders[1]] > PlayerCountGoodKeys[gGamersLowRiders[0]])
                {
                    SendSyntaxMessage(gGamersLowRiders[1], "祝贺胜利!"), SendSyntaxMessage(gGamersLowRiders[0], "你输了!");
                    PlayerInfo[gGamersLowRiders[1]][pCash] += 10000;
                }
                else if(PlayerCountGoodKeys[gGamersLowRiders[1]] == PlayerCountGoodKeys[gGamersLowRiders[0]])
                {
                    SendSyntaxMessage(gGamersLowRiders[1], "平局!"), SendSyntaxMessage(gGamersLowRiders[0], "平局!");
				}
                PlayerCountGoodKeys[gGamersLowRiders[0]] = 0;
                PlayerCountGoodKeys[gGamersLowRiders[1]] = 0;
                StartServerRiders = false;
                lowriders = 0;
                TextDrawHideForPlayer(gGamersLowRiders[0], LRRightBox[0]);
                TextDrawHideForPlayer(gGamersLowRiders[0], LRRightBox[1]);
                TextDrawHideForPlayer(gGamersLowRiders[0], LRRightBox[2]);
                TextDrawHideForPlayer(gGamersLowRiders[0], LRRightBox[3]);
                TextDrawHideForPlayer(gGamersLowRiders[0], LRRightBox[4]);
                PlayerTextDrawHide(gGamersLowRiders[0], LRArrows[gGamersLowRiders[0]][0]);
                PlayerTextDrawHide(gGamersLowRiders[0], LRArrows[gGamersLowRiders[0]][1]);
                PlayerTextDrawHide(gGamersLowRiders[0], LRArrows[gGamersLowRiders[0]][2]);

                TextDrawHideForPlayer(gGamersLowRiders[1], LRRightBox[0]);
                TextDrawHideForPlayer(gGamersLowRiders[1], LRRightBox[1]);
                TextDrawHideForPlayer(gGamersLowRiders[1], LRRightBox[2]);
                TextDrawHideForPlayer(gGamersLowRiders[1], LRRightBox[3]);
                TextDrawHideForPlayer(gGamersLowRiders[1], LRRightBox[4]);
                PlayerTextDrawHide(gGamersLowRiders[1], LRArrows[gGamersLowRiders[1]][0]);
                PlayerTextDrawHide(gGamersLowRiders[1], LRArrows[gGamersLowRiders[1]][1]);
                PlayerTextDrawHide(gGamersLowRiders[1], LRArrows[gGamersLowRiders[1]][2]);
                DestroyVehicle(PlayerVehicleID[gGamersLowRiders[0]]), DestroyVehicle(PlayerVehicleID[gGamersLowRiders[1]]);
                SpawnPlayer(gGamersLowRiders[0]), SpawnPlayer(gGamersLowRiders[1]);
                gGamersLowRiders[0] = INVALID_PLAYER_ID, gGamersLowRiders[1] = INVALID_PLAYER_ID;
                PlayerVehicleID[gGamersLowRiders[0]] = INVALID_VEHICLE_ID, PlayerVehicleID[gGamersLowRiders[1]] = INVALID_VEHICLE_ID;
            }

        }
    }
 	for(new l;l<8;l++)
	{
		if(TimeStavka[l] > 0)
		{
			TimeStavka[l]--;
			if(TimeStavka[l] == 1) ShowItog(l);
			foreach(new g : Player)
			{
				if(GetPVarInt(g, "GameStol") == l)
				{
				    if(GetPVarInt(g, "Crupe") != 1)
				    {
				        new vip = random(50)+5;
						SetPVarInt(g, "Ochki", vip);
						format(YCMDstr,sizeof(YCMDstr),"%d", vip);
						GameTextForPlayer(g,YCMDstr,500,4);
					}
					else
					{
					    format(YCMDstr,sizeof(YCMDstr),"LostTime: %d", TimeStavka[l]);
						GameTextForPlayer(g,YCMDstr,1000,4);
					}
				}
			}
		}
	}
	for(new s;s<8;s++)
	{
		new str[256],sstr[40];
		format(str,sizeof(str),"Bet: %d ~g~$~n~~w~Bank: %d ~g~$",StolInfo[s][Stavka],StolInfo[s][Bank]);
		TextDrawSetString(KostiGameInfo[s],str);
		format(str,sizeof(str),"");
		for(new i;i<5;i++)
		{
			new text[15];
			text = "~w~--";
			if(GetPVarInt(StolInfo[s][Gamer][i],"StolReg") == s) text = "~g~OK";
			if(GetPVarInt(StolInfo[s][Gamer][i],"Ochki") != -1) format(text,sizeof(text),"%d",GetPVarInt(StolInfo[s][Gamer][i],"Ochki"));
			format(sstr,sizeof(sstr),"~w~%d. %s%s~n~",i+1,GetCasinName(StolInfo[s][Gamer][i]),text);
			strcat(str,sstr,256);
		}
		TextDrawSetString(KostiInfo[s],str);
	}
	return 1;
}

publics: Gambler(playerid)
{
	if(Gambling[playerid] != G_STATE_GAMBLING)
	{
	    KillTimer(SlotTimer[playerid]);
	    SlotTimer[playerid] = -1;
	    Gambling[playerid] = G_STATE_NOT_GAMBLING;
	    return false;
	}
	SlotCounter[playerid] -= 1;

	new slot = SlotCounter[playerid];
	if(slot < 10) Slots[playerid][2]+=random(3)+1;
	else if(slot < 20)
	{
	    Slots[playerid][1]+=random(3)+1;
	    Slots[playerid][2]+=random(3)+1;
	}
	else
	{
	    Slots[playerid][0]+=random(3)+1;
	    Slots[playerid][1]+=random(3)+1;
	    Slots[playerid][2]+=random(3)+1;
	}
	if(Slots[playerid][0] >= 6) Slots[playerid][0] = 0;
	if(Slots[playerid][1] >= 6) Slots[playerid][1] = 0;
	if(Slots[playerid][2] >= 6) Slots[playerid][2] = 0;
	ShowPlayerSlots(playerid,Slots[playerid][0],Slots[playerid][1],Slots[playerid][2]);
	if(SlotCounter[playerid] == 0)
	{
	    KillTimer(SlotTimer[playerid]);
	    SlotTimer[playerid] = -1;
		Gambling[playerid] = G_STATE_DISPLAY;

	    if(Slots[playerid][0] == Slots[playerid][1] && Slots[playerid][0] == Slots[playerid][2])
	    {
	        new Multiplier=1;
	        switch(Slots[playerid][0])
	        {
	            case 0: Multiplier = Balance[playerid]*2;    // Cherries
	            case 1: Multiplier = Balance[playerid]*3;   // Grapes
	            case 2: Multiplier = Balance[playerid]*4;   // 69's
	            case 3: Multiplier = Balance[playerid]*5;   // Bells
	            case 4: Multiplier = Balance[playerid]*6;  // Bar
	            case 5: Multiplier = Balance[playerid]*7;  // Double Bars
	        }
	        new money = Multiplier;
	        format(YCMDstr, sizeof(YCMDstr), "―  恭喜! 获得了: %d$", money);
			SendClientMessage(playerid, -1, YCMDstr);
	        GameTextForPlayer(playerid,"~g~Great!",5000,1);
	        PlayerInfo[playerid][pCash] += money;//pcash
	        Slots[playerid][0] = random(5);
			Slots[playerid][1] = random(5);
			Slots[playerid][2] = random(5);
        	OnPlayerUpdateAc(playerid);
	    }
	    else
	    {
	        if(Slots[playerid][0] == Slots[playerid][1]
			|| Slots[playerid][1] == Slots[playerid][2]
			|| Slots[playerid][0] == Slots[playerid][2])
			{
			 	GameTextForPlayer(playerid,"~r~Loss!",5000,1);
		 		Balance[playerid] = 0;
		 		GangUpdateBalanceTextDraw(playerid, 0);
			}
	        else { GameTextForPlayer(playerid,"~r~Loss!",5000,1);  Balance[playerid] = 0; GangUpdateBalanceTextDraw(playerid, 0); }
	    }
	    Gambling[playerid] = G_STATE_NOT_GAMBLING;
	    SelectTextDraw(playerid,0x4169e1FF);
	    SetPVarInt(playerid, "GangCasino", 1);
	    TogglePlayerControllable(playerid, 1);
	    return true;
	}
	return false;
}

publics: PlayAgainTimer(playerid) ExitPlayerFromSlotMachine(playerid);

stock IsPlayerNearStol(playerid)
{
	for(new i;i<sizeof(StolCoor);i++)
	{
		if(GetPlayerDistanceFromPoint(playerid,StolCoor[i][0],StolCoor[i][1],StolCoor[i][2]) < 4.0) return i;
	}
	return -1;
}

stock SetNameStol(playerid,stolid)
{
	SetPVarInt(playerid,"StolReg",stolid);
	StolInfo[stolid][Igrokov]++;
	if(StolInfo[stolid][Gamer][0] == INVALID_PLAYER_ID) {StolInfo[stolid][Gamer][0] = playerid; return 1;}
	if(StolInfo[stolid][Gamer][1] == INVALID_PLAYER_ID) {StolInfo[stolid][Gamer][1] = playerid; return 1;}
	if(StolInfo[stolid][Gamer][2] == INVALID_PLAYER_ID) {StolInfo[stolid][Gamer][2] = playerid; return 1;}
	if(StolInfo[stolid][Gamer][3] == INVALID_PLAYER_ID) {StolInfo[stolid][Gamer][3] = playerid; return 1;}
	if(StolInfo[stolid][Gamer][4] == INVALID_PLAYER_ID) {StolInfo[stolid][Gamer][4] = playerid; return 1;}
	return 0;
}

stock DelName(playerid,stolid)
{
	if(StolInfo[stolid][Gamer][0] == playerid) {StolInfo[stolid][Gamer][0] = INVALID_PLAYER_ID; StolInfo[stolid][Igrokov]--; return 1;}
	if(StolInfo[stolid][Gamer][1] == playerid) {StolInfo[stolid][Gamer][1] = INVALID_PLAYER_ID; StolInfo[stolid][Igrokov]--;  return 1;}
	if(StolInfo[stolid][Gamer][2] == playerid) {StolInfo[stolid][Gamer][2] = INVALID_PLAYER_ID; StolInfo[stolid][Igrokov]--;  return 1;}
	if(StolInfo[stolid][Gamer][3] == playerid) {StolInfo[stolid][Gamer][3] = INVALID_PLAYER_ID; StolInfo[stolid][Igrokov]--;  return 1;}
	if(StolInfo[stolid][Gamer][4] == playerid) {StolInfo[stolid][Gamer][4] = INVALID_PLAYER_ID; StolInfo[stolid][Igrokov]--;  return 1;}
	return 0;
}

stock GetCasinName(ids)
{
	new name[64];
 	if(ids == INVALID_PLAYER_ID) name = "~w~--____________________";
  	else
   	{
    	GetPlayerName(ids,name,sizeof(name));
     	new v = 20 - strlen(name);
      	for(new g;g<v;g++)
       	{
        	strcat(name,"_",sizeof(name));
       	}
	}
 	return name;
}

stock ShowItog(stolid)
{
	new maxs = 0,ids = -1;
	foreach(new i : Player)
	{
		if(GetPVarInt(i, "GameStol") == stolid && GetPVarInt(i, "Crupe") != 1)
		{
			if(GetPVarInt(i, "Ochki") > maxs)
			{
			    maxs = GetPVarInt(i, "Ochki");
		 		ids = i;
			}
		}
	}
	new strc[144];
	format(strc,sizeof(strc),"获胜者是: {FFCD00}%s{33AAFF},  他的分数是 {FFCD00}%d{33AAFF}", PlayerInfo[ids][pName], maxs);
	format(YCMDstr, sizeof(YCMDstr), "―  恭喜! 你赢得了 %d$", StolInfo[stolid][Bank]);
	SendClientMessage(ids, -1, YCMDstr);
 	PlayerInfo[ids][pCash] += StolInfo[stolid][Bank];//pcash
 	OnPlayerUpdateAc(ids);
	foreach(new i : Player)
	{
		if(GetPVarInt(i,"GameStol") == stolid && GetPVarInt(i, "Crupe") != 1)
		{
			SendClientMessage(i,-1,strc);
			TextDrawHideForPlayer(i,KostiBox[stolid]);
			TextDrawHideForPlayer(i,TableName[stolid]);
  			TextDrawHideForPlayer(i,KostiInfo[stolid]);
		  	TextDrawHideForPlayer(i,KostiGameInfo[stolid]);
		  	TextDrawHideForPlayer(i,KostiKeyDone);
		  	TextDrawHideForPlayer(i,KostiKeyExit);
		  	TextDrawHideForPlayer(i,KostiKeyStavka);
		  	SetPVarInt(i,"GameStol",-1);
			SetPVarInt(i,"StolReg",-1);
			SetPVarInt(i,"RegCasino",0);
			TogglePlayerControllable(i,1);
			CancelSelectTextDraw(i);
			DelName(i,stolid);
			SetPVarInt(i,"Ochki",-1);
		}
	}
 	for(new i;i<5;i++) StolInfo[stolid][Gamer][i] = INVALID_PLAYER_ID;
	StolInfo[stolid][Stavka] = 0;
	StolInfo[stolid][Bank] = 0;
	StolInfo[stolid][Igrokov] = 0;
	StolInfo[stolid][GameStart] = 0;
	format(YCMDstr,sizeof(YCMDstr),"游戏桌 %d",stolid+1);
	UpdateDynamic3DTextLabelText(StolCoorText[stolid], -1, YCMDstr);
	return 1;
}

publics: CarHack(playerid, vehicleid)
{
	if(!IsPlayerConnected(playerid)) return 0;
	if(IsPlayerInVehicle(playerid, vehicleid))
	{
		ToCheat(1,playerid);
	}
	return 1;
}

publics: Raskraska(playerid)
{
	new carid = PlayerInfo[playerid][pCar];
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	PlayerInfo[playerid][pColor][0] = ColorBallon[playerid];
	PlayerInfo[playerid][pColor][1] = ColorBallon[playerid];
	ChangeVehicleColor(carid,ColorBallon[playerid],ColorBallon[playerid]);
	if(caridhouse[playerid] != -1)
	{
		DestroyVehicle(caridhouse[playerid]);
		caridhouse[playerid] = -1;
	}
	caridhouse[playerid] = CreateVehicle(PlayerInfo[playerid][pCar],1410.8140,-1897.8684,13.1220,91.0955, PlayerInfo[playerid][pColor][0] ,PlayerInfo[playerid][pColor][1], 86400);
	LockCar(caridhouse[playerid]);
	Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelcar];
	LinkVehicleToInterior(caridhouse[playerid], 0);
	CompVeh(playerid,caridhouse[playerid]);
	for ( new i = 0;  i < 5; i++ ) TextDrawShowForPlayer(playerid, TDInfo[i]);
	SetTimerEx("InfoTime", 2000, false, "d", playerid);
	RemovePlayerWeaponn(playerid,41);
	SetPVarInt(playerid,"krstop",0);
	KillTimer(TimerP);
    return true;
}

stock StartSpecPanel(playerid, specid)
{
 	if(GetPlayerState(playerid) != PLAYER_STATE_SPECTATING)
 	{
  		GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
    	TeleportDestNoFloat[playerid][0] = GetPlayerInterior(playerid);
     	TeleportDestNoFloat[playerid][1] = GetPlayerVirtualWorld(playerid);
  	}
	new Float:Pos[3];
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	if(GetPVarInt(playerid, "Spectrate") == 0)
	{
		SetPVarFloat(playerid, "PosSpecX", Pos[0]); SetPVarFloat(playerid, "PosSpecY", Pos[1]); SetPVarFloat(playerid, "PosSpecZ", Pos[2]);
		SetPVarInt(playerid, "SpecInt", GetPlayerInterior(playerid)); SetPVarInt(playerid, "SpecVT", GetPlayerVirtualWorld(playerid));
	}
	SendServerMessage(playerid, "查看更多信息,输入: {FF9900}/request [ID]");
	SendServerMessage(playerid, "操作菜单, 按下: {FF9900}ALT");
	SpecPanelOpen(playerid);
	gSpectateID[playerid] = specid;
	SpecAd[playerid] = specid;
	TogglePlayerSpectating(playerid, 1);
	SetPVarInt(playerid, "SpecID", specid);
	SetPVarInt(playerid, "Spectrate", 1);
	SetPlayerInterior(playerid, GetPlayerInterior(specid));
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specid));
	if(!IsPlayerInAnyVehicle(specid)) return PlayerSpectatePlayer(playerid, specid);
	else return PlayerSpectateVehicle(playerid, GetPlayerVehicleID(specid));
}

stock StopRecon(playerid)
{
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~w~Recon Stop",1000,3);
	SetPVarInt(playerid, "TeleportTimer", gettime()+1);
	PlayerInfo[playerid][pBolnicad] = 0;
	TogglePlayerSpectating(playerid, 0);
	KillTimer(ReconTimer);
	DeletePVar(playerid, "SpecID");
	gSpectateID[playerid] = INVALID_PLAYER_ID;
	return true;
}

stock SpecPanelOpen(playerid)
{
	for(new i;i<16;i++) PlayerTextDrawShow(playerid, SpecTD[i][playerid]);
}

stock SpecPanelClose(playerid)
{
	KillTimer(ReconTimer);
	SetPlayerToTeamColor(playerid);
	for(new i;i<16;i++) PlayerTextDrawHide(playerid, SpecTD[i][playerid]);
	SpawnPlayer(playerid);
	return true;
}

stock SlapPlayer(ids) {
	new Float:Pos[3];
	GetPlayerPos(ids, Pos[0], Pos[1], Pos[2]);
	Q_SetPlayerPos(ids, Pos[0], Pos[1], Pos[2] + 8);
	PlayerPlaySound(ids, 1130, Pos[0], Pos[1], Pos[2] + 5);
	return true;
}

stock SetFiski(playerid, kolvo)
{
	PlayerInfo[playerid][pCash] = kolvo;
	return true;
}

publics: NoRoof(playerid)
{
    new carid = GetPlayerSurfingVehicleID(playerid);
    if(carid != INVALID_VEHICLE_ID )
    {
        new Float:speed = GetVehicleSpeed(carid);
        new cm = GetVehicleModel(carid);
        switch(cm)
        {
            case 430,446,452,453,454,472,473,478,484,493,554,543,595,422,605,600,592:{return 1;}
            default:{}
        }
        if(speed > 30)
        {
            new Float:slx, Float:sly, Float:slz;
            GetPlayerPos(playerid, slx, sly, slz);
            Q_SetPlayerPos(playerid, slx, sly, slz+2.5);
            ApplyAnimation(playerid, "ped", "getup", 4.0, 0, 1, 0, 0, 0,0);
        }
    }
    return 1;
}

stock GetVehicleSpeed(vehicleid)
{
    new Float:Px,Float:Py,Float:Pz;
    GetVehicleVelocity(vehicleid,Px,Py,Pz);
    return floatround(floatsqroot(Px*Px+Py*Py+Pz*Pz) * 100.0);
}

publics: HideDamageForPlayer(playerid)
{
    Update3DTextLabelText(Damage[playerid],COLOR_BLUE," ");
    CountDamage[playerid] = 0;
    return 1;
}

publics: HideTDDamage(playerid)
{
    TextDrawHideForPlayer(playerid,heal44[playerid]);
    return 1;
}

stock AddCheater(playerid)
{
	new str[10];
	if(addchet[playerid]==0) addchet[playerid]=1;
	else addchet[playerid]=2;
    for(new i;i<10;i++)
	{
	   if(ChetInfo[i][cheatid1] == playerid)return false;
	}
	ChetInfo[Cheat1][cheatid1]=playerid;
	format(str, sizeof(str), "%d", playerid);
	TextDrawSetString(CheatText[Cheat1], str);
	Cheat1 ++;
	if(Cheat1 > 9) Cheat1 = 0;
	time_podoz = gettime();
	return 1;
}

stock ToCheat(type,playerid)
{
	if(type == 1)
	{
        AddCheater(playerid);
	}
	return 1;
}

publics: OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	if(weaponid != 38)
	{
		if(gettime() - DamagerTime[playerid] < 1)
		{
			Damager{playerid} += 1;
		}
		else
		{
			Damager{playerid} = 0;
		}
		if(Damager{playerid} > 10)
		{
 			new Weap = GetPlayerWeapon(playerid);
   			if(Weap != 32 && Weap != 28)
    		{
    			SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Damager )"),GKick(playerid);
	    		return 1;
	    	}
			else
			{
				Damager{playerid} = 0;
			}
		}
		DamagerTime[playerid] = gettime();
	}
	if(FirstFire[playerid] == 0) FirstFire[playerid] = GetTickCount();
 	else
 	{
  		SecondFire[playerid]= FirstFire[playerid];
   		FirstFire[playerid] = GetTickCount();
    	if(FirstFire[playerid]-SecondFire[playerid] < 30 && weaponid == 24) ToCheat(1,playerid);
    }
	if(hittype != BULLET_HIT_TYPE_NONE)
 	{
  		if((fX <= -1000.0 || fX >= 1000.0) || (fY <= -1000.0 || fY >= 1000.0) || (fZ <= -1000.0 || fZ >= 1000.0) || ((hittype != BULLET_HIT_TYPE_PLAYER) && (hittype != BULLET_HIT_TYPE_VEHICLE) && (hittype != BULLET_HIT_TYPE_OBJECT) && (hittype != BULLET_HIT_TYPE_PLAYER_OBJECT)))
    	{
     		SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Bullet Crasher #1 )"),GKick(playerid);
       		return 0;
       	}
    }
	if(hittype==BULLET_HIT_TYPE_PLAYER)
 	{
  		if(fX>=10 || fY>=10 || fZ>=10 || fX<=-10 || fY<=-10 || fZ<=-10)
    	{
       		SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Bullet Crasher #2 )"),GKick(playerid);
       		return 0;
       	}
    	if(PlayerInfo[hitid][pGM]) return ShowPlayerDialog(playerid,12313,DIALOG_STYLE_MSGBOX,"Anti-DM","该玩家受服务器保护","关闭","") & 0;
    }
	if(hittype < 0 || hittype > 4) return 0;
	if(weaponid > 47 && hittype == 0 && fX == 0.0000 && hitid == 0 && fY == 0.0000 && fZ == 0.0000)
	{
		SendClientMessage(playerid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( Bullet Crasher #3 )"),GKick(playerid);
		return 0;
	}
	return 1;
}

stock IsAIP(text[])
{
	new numbers;
	for(new i = 0;i < strlen(text); i++) if('0' <= text[i] <= '9') if(!('0' <= text[i+1] <= '9')) numbers ++;
	if(numbers >= 4) return true;
	return false;
}

publics: InfoTime(playerid)
{
    for(new i = 0;  i < 5; i++) TextDrawHideForPlayer(playerid, TDInfo[i]);
    return 1;
}

stock PlayerChangeImage(playerid, bool:type)
{
    if(type)
    {
        PlayerImageID[playerid][2] = PlayerImageID[playerid][1];
        PlayerTextDrawSetString(playerid, LRArrows[playerid][2], SelectedImage[PlayerImageID[playerid][2]]);
        PlayerTextDrawShow(playerid,LRArrows[playerid][2]);
    }
    PlayerImageID[playerid][1] = PlayerImageID[playerid][0];
    PlayerTextDrawSetString(playerid, LRArrows[playerid][1], SelectedImage[PlayerImageID[playerid][1]]);
    PlayerTextDrawShow(playerid,LRArrows[playerid][1]);

    new randomImage = random(sizeof(SelectedImage));
    PlayerTextDrawSetString(playerid, LRArrows[playerid][0], SelectedImage[randomImage]);
    PlayerTextDrawShow(playerid,LRArrows[playerid][0]);
    PlayerImageID[playerid][0] = randomImage;
    return 1;
}

stock DelPvars(){    foreach(new i : Player){    DeletePVar(i, "killed_shot");}}

publics: OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ)
{
	new stringer[144];
	format(stringer, sizeof(stringer), "OBJ ID: %d\nOBJ坐标: %f,%f,%f", modelid,fX,fY,fZ);
	ShowPlayerDialog(playerid, 22817, DIALOG_STYLE_MSGBOX, "{1E90FF}编辑", stringer ,"修改", "关闭");
	SetPVarInt(playerid, "SelectedObjectD", objectid);
	return true;
}
publics: Q_SetPlayerPos(playerid,Float:x,Float:y,Float:z)
{
	StatusAirTP[playerid] = GetTickCount();
    AC_Air[playerid][0] = x;
    AC_Air[playerid][1] = y;
    AC_Air[playerid][2] = z;
    return SetPlayerPos(playerid,x,y,z);
}

publics: Q_SetVehiclePos(vehicleid,Float:x,Float:y,Float:z)
{
	for(new u = GetMaxPlayers() - 1; u != -1; --u)
	{
	    if(!IsPlayerConnected(u)) continue;
    	if(Spawn[u] == false) continue;
        if(CarID[u] == vehicleid)
		{
			StatusAirTP[u] = GetTickCount();
            AC_Air[u][0] = x;
    		AC_Air[u][1] = y;
    		AC_Air[u][2] = z;
    		break;
        }
    }
	SetVehiclePos(vehicleid,x,y,z);
    OnUpdateVehiclePos(vehicleid, 0);
    return 1;
}

publics: Q_PutPlayerInVehicle(playerid,vehicleid,seatid)
{
    if(CarID[playerid] != INVALID_VEHICLE_ID)
	{
		RemovePlayerFromVehicle(playerid);
	}
	PutPlayerInVehicle(playerid,vehicleid,seatid);
	CarID[playerid] = vehicleid;
	GodCar[playerid] = vehicleid;
	StatusAirTP[playerid] = GetTickCount();
    if(IsPlayerInAnyVehicle(playerid))
	{
		GetVehiclePos(CarID[playerid],AC_Air[playerid][0],AC_Air[playerid][1],AC_Air[playerid][2]);
	}
	else
	{
		GetPlayerPos(playerid,AC_Air[playerid][0],AC_Air[playerid][1],AC_Air[playerid][2]);
	}
    return 1;
}

stock TunningGarages(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid,20.0,2065.3801,-1832.5280,13.68)||IsPlayerInRangeOfPoint(playerid,20.0,-99.7154,1117.5011,19.88)||IsPlayerInRangeOfPoint(playerid,20.0,719.8336,-456.7990,16.47)||IsPlayerInRangeOfPoint(playerid,20.0,-1420.4562,2583.2180,55.98)||IsPlayerInRangeOfPoint(playerid,20.0,-2424.8093,1021.1127,50.53)||IsPlayerInRangeOfPoint(playerid,20.0,1975.0587,2161.9456,11.21)||
	IsPlayerInRangeOfPoint(playerid,20.0,487.9699,-1741.5265,11.28)||IsPlayerInRangeOfPoint(playerid,20.0,1025.7683,-1023.8249,32.24)||IsPlayerInRangeOfPoint(playerid,20.0,-1904.9709,285.8506,41.18)||IsPlayerInRangeOfPoint(playerid,20.0,615.2845,-124.2390,997.7112)||IsPlayerInRangeOfPoint(playerid,20.0,616.7787,-74.8150,997.6274)||IsPlayerInRangeOfPoint(playerid,20.0,617.5302,-1.9900,1001.06))return true;
    return false;
}

publics: OnUpdateVehiclePos(vehicleid, type)
{
	if(type == 1)
	{
		BanVeh[vehicleid] = false;
	}
	GetVehiclePos(vehicleid, VehPos[vehicleid][0], VehPos[vehicleid][1], VehPos[vehicleid][2]);
	GetVehicleZAngle(vehicleid, VehPos[vehicleid][3]);
	return 1;
}

//forward bool:UseCar(carid);
stock UseCar(carid)
{
	for(new h = GetMaxPlayers() - 1; h != -1; --h)
 	{
  		if(!IsPlayerConnected(h)) continue;
    	if(IsPlayerInVehicle(h, carid)) return true;
    }
    return false;
}

publics: OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid)
{
	/*if(PlayerInfo[damagedid][pLevel] < 10 && PlayerInfo[damagedid][pExp] < 2)
	{
	    SetPlayerHealthAC(damagedid, healths);
		ShowPlayerDialog(playerid,23131,DIALOG_STYLE_MSGBOX,"Анти-ДМ","Данный игрок находится под защитой сервера","Понятно","");
	}
	if(PlayerInfo[damagedid][pLevel] < 10 && PlayerInfo[damagedid][pExp] < 2)
	{
	    SetPlayerHealthAC(damagedid, healths);
	    ShowPlayerDialog(playerid, 23132, DIALOG_STYLE_MSGBOX, "Анти-ДМ", "Вы не можете наносить урон игрокам, если не отыграли минимум час","Понятно","");
	}*/
	if(Tazer[playerid] == 1 && GetPlayerWeapon(playerid) == TAZE_WEAPON)
  	{
      	if(Tazed[damagedid] == 1) return 1;
      	new Float:x, Float:y, Float:z;
      	GetPlayerPos(damagedid, x, y, z);
      	ClearAnimations(damagedid);
      	ApplyAnimation(damagedid,"PED","KO_skid_front",4.1,0,1,1,1,0);
      	SetTimerEx("TazedRemove", TAZE_TIMER, 0, "i", damagedid);
      	SetPlayerChatBubble(damagedid, "电击枪击中", COLOR_PURPLE, 30.0, 10000);
      	Tazed[damagedid] = 1;
  	}
    if(StoreInfo[11][gmLock] == 0)
	{
		if(AFK[damagedid] < 1)
		{
 			DamagWarn{damagedid}++;
   			if(DamagWarn{damagedid} > 14)
	    	{
  				//SendClientMessage(damagedid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( GM #1 )"),GKick(damagedid);
		  		return 1;
	    	}
			GetPlayerArmour(damagedid,Armadura[damagedid]);
			GetPlayerHealth(damagedid,Vida[damagedid]);
			if(DamHealth[damagedid] < -50 && Vida[damagedid] > 1)
			{
				//SendClientMessage(damagedid, -1, "{FF0000}服务器禁止使用第三方作弊软件或者CLEO {FFFFFF}( GM #2 )"),GKick(damagedid);
 				return 1;
			}
			if(Armadura[damagedid] > 0)
			{
				if(amount > Armadura[damagedid])
				{
					Dmg[damagedid] = amount - Armadura[damagedid];
					Vida[damagedid] -= Dmg[damagedid];
					SetPlayerArmourAC(damagedid,0.0);
					SetPlayerHealthAC(damagedid,Vida[damagedid]);
					DamHealth[damagedid] -= Dmg[damagedid];
					return 1;
				}
				Armadura[damagedid] -= amount;
				SetPlayerArmourAC(damagedid,Armadura[damagedid]);
				return 1;
			}
			else
			{
				Vida[damagedid] -= amount;
				SetPlayerHealthAC(damagedid,Vida[damagedid]);
				DamHealth[damagedid] -= amount;
			}
		}
		else
		{
			DamagWarn{damagedid} = 0;
		}
	}
    return 1;
}

publics: OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid)
{
	//if(PlayerInfo[playerid][pLevel] < 10 && PlayerInfo[playerid][pExp] < 2)
	if(PlayerInfo[playerid][pLevel] < 2)
	{
	    SetPlayerHealthAC(issuerid, 100);
	    ShowPlayerDialog(issuerid,23131,DIALOG_STYLE_MSGBOX,"Anti-DM","此玩家受服务器新手保护(新手保护等级: 2)","关闭","");
	}
	//if(PlayerInfo[issuerid][pLevel] < 10 && PlayerInfo[issuerid][pExp] < 2)
	if(PlayerInfo[issuerid][pLevel] < 2)
	{
	    SetPlayerHealthAC(playerid, 100);
	    ShowPlayerDialog(issuerid,23132, DIALOG_STYLE_MSGBOX, "Anti-DM", "你需要达到2级才能对其他玩家进行伤害(新手保护等级: 2)","关闭","");
	}
    DamagWarn{playerid} = 0;
	return 1;
}

stock VehiclePlayer(vehicleid)
{
	foreach(new i : Player)
	{
		if(!IsPlayerConnected(i)) continue;
		if(caridhouse[i] == vehicleid) return i;
	}
	return -1;
}

stock hideDialog( playerid ) return ShowPlayerDialogEx(playerid, D_NONE, 0, "","","", " ");

stock strreplace(string[], find, replace)
{
	for(new i=0; string[i]; i++)
	{
		if(string[i] == find)
		{
			string[i] = replace;
		}
	}
}

stock Engine(vehicleid,bool:launched) {
	return launched ? SetVehicleParamsEx(vehicleid, VEHICLE_PARAMS_ON, -1, -1, -1, -1, -1, -1) : SetVehicleParamsEx(vehicleid, VEHICLE_PARAMS_OFF, -1, -1, -1, -1, -1, -1);
} //Запустить|заглушить двигатель

stock EngineStatus(vehicleid) {
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	return engine;
} //Вернёт статус двигателя ( вкл , выкл )

stock Lights(vehicleid,bool:launched) {
	return launched ? SetVehicleParamsEx(vehicleid, -1,VEHICLE_PARAMS_ON, -1, -1, -1, -1, -1) : SetVehicleParamsEx(vehicleid, -1,VEHICLE_PARAMS_OFF, -1, -1, -1, -1, -1);
} //Включение|Выключение фар

stock LightsStatus(vehicleid) {
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	return lights;
} //Вернёт статус фар ( вкл , выкл )

stock Alarm(vehickeid,bool:launched) {
	return launched ? SetVehicleParamsEx(vehicleid, -1,-1, VEHICLE_PARAMS_ON, -1, -1, -1, -1) : SetVehicleParamsEx(vehicleid, -1,-1, VEHICLE_PARAMS_OFF, -1, -1, -1, -1);
} //Включение|Выключение сигнализации

stock AlarmStatus(vehicleid) {
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	return alarm;
} //Вернёт статус сигнализации ( вкл , выкл )

stock Doors(vehicleid,bool:status) {
	return status ? SetVehicleParamsEx(vehicleid, -1,-1,-1,VEHICLE_PARAMS_ON, -1, -1, -1) : SetVehicleParamsEx(vehicleid, -1,-1,-1,VEHICLE_PARAMS_OFF, -1, -1, -1);
} //Открыть|закрыть двери

stock DoorsStatus(vehicleid)  {
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	return doors;
} //Вернёт статус дверей ( открыты , закрыты )

stock Bonnet(vehicleid,bool:status) {
	return status ? SetVehicleParamsEx(vehicleid, -1,-1,-1,-1,VEHICLE_PARAMS_ON, -1, -1) : SetVehicleParamsEx(vehicleid, -1,-1,-1,-1,VEHICLE_PARAMS_OFF, -1, -1);
} //Открыть|Закрыть капот

stock BonnetStatus(vehicleid)  {
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	return bonnet;
} //Вернёт статус капота ( открыт , закрыт )
stock Boot(vehicleid,bool:status) {
	return status ? SetVehicleParamsEx(vehicleid, -1,-1,-1,-1,-1,VEHICLE_PARAMS_ON, -1) : SetVehicleParamsEx(vehicleid, -1,-1,-1,-1,-1,VEHICLE_PARAMS_OFF, -1);
} //Открыть|Закрыть багажник

stock BootStatus(vehicleid)  {
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	return boot;
} //Вернёт статус багажника ( открыт , закрыт )

publics: LearnUniver(playerid, idU)
{
    if(GetPVarInt(playerid, "learnobject") == 1)
	{
	    switch(idU)
	    {
	        case 1:
	        {
	            if(PlayerInfo[playerid][pMath] >= 100) return SendErrorMessage(playerid, "你已经完全学会了这个科目"), callcmd::univeristyoff(playerid,"");
	            PlayerInfo[playerid][pMath] += 2;
	            GameTextForPlayer(playerid, "~g~ +2%", 5000, 1);
	            switch(random(3))
				{
				    case 0: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 数学分析\n\n这是一个集合\n专门研究功能的\n数学部分.\n在更一般的解释中，\n泛函分析，\n连同Lebesgue积分理论，\n也被应用于分析，\n一种研究定义在复平面上的函数的复分析。", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 1: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 引言高等数学是中学和高等教育机构的一门课程\n\n高等数学包括：解析几何，高阶和线性代数元素\n概率论和数理统计元素。", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 2: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 通用数学这是研究代数系统的数学分支\n例如组，环，场，模块，格子和这些结构之间的映射。", 0, 140, "Arial", 24, 0, -1, 0, 1);
				}
	        }
	        case 2:
	        {
	            if(PlayerInfo[playerid][pInform] >= 100) return SendErrorMessage(playerid, "你已经完全学会了这个科目"), callcmd::univeristyoff(playerid,"");
	            PlayerInfo[playerid][pInform] += 2;
	            GameTextForPlayer(playerid, "~g~ +2%", 5000, 1);

	            switch(random(3))
				{
				    case 0: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: “信息学”\n\n一词是由俄语、英语、法语和德语中的信息构成的，\n在20世纪60年代，人们倾向于用与“信息”一词相关联的词来代替这个词。", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 1: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 信息学是\n收集、存储、处理、传递、分析和评估信息的方法和过程的科学，\n为信息的使用提供了可能性。", 0, 140, "Arial", 24, 0, -1, 0, 1);
				    case 2: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 理论信息学理论信息学涉及形式语言和自动机理论，\n可计算性和复杂性理论，图论，密码学，逻辑，形式语义学，\n并为编程语言编译器的开发提供了基础。", 0, 140, "Arial", 24, 0, -1, 0, 1);
				}
	        }
	        case 3:
	        {
	            if(PlayerInfo[playerid][pHistory] >= 100) return SendErrorMessage(playerid, "你已经完全学会了这个科目"), callcmd::univeristyoff(playerid,"");
	            PlayerInfo[playerid][pHistory] += 2;
	            GameTextForPlayer(playerid, "~g~ +2%", 5000, 1);
	            switch(random(3))
				{
				    case 0: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 史学\n\n术语史学有多种含义。\n它是关于如何书写历史、\n如何正确应用历史方法和历史认知如何发展的科学。\n同一术语表示历史作品的总体性。", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 1: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 引言史是一门知识领域，也是一门研究人类过去的人文科学。\n它是一门研究过去各种来源的科学，\n以便建立一系列事件、历史进程、所描述的事实的客观性。", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 2: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 历史哲学是哲学的一部分，试图回答人类历史的终极意义问题。\n对于同一哲学领域，关于历史可能的目的论终结的猜测，\n即历史是否按照任何计划发展。", 0, 140, "Arial", 24, 0, -1, 0, 1);
				}
	        }
	        case 4:
        	{
        	    if(PlayerInfo[playerid][pRussian] >= 100) return SendErrorMessage(playerid, "你已经完全学会了这个科目"), callcmd::univeristyoff(playerid,"");
	            PlayerInfo[playerid][pRussian] += 2;
	            GameTextForPlayer(playerid, "~g~ +2%", 5000, 1);

	            switch(random(3))
				{
				    case 0: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 中文（Chinese）\n\n字面意思是中国文字（特指汉字）\n广泛意思是中国语言文字（包括少数民族语言文学）.", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 1: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 中文作为一种象形文字，具有超语言交际功能，不是单纯的语言符号。\n历史上，壮语、白语、苗语、蒙古语、满语地区，以及周边国家等皆有使用中文记录之习惯。", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 2: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 中文以其超越地域、超时空的方式，\n给不同语种、不同背景的人们提供了交流上的便利。", 0, 140, "Arial", 24, 0, -1, 0, 1);
				}
	        }
	        case 5:
	        {
	            if(PlayerInfo[playerid][pBiology] >= 100) return SendErrorMessage(playerid, "你已经完全学会了这个科目"), callcmd::univeristyoff(playerid,"");
	            PlayerInfo[playerid][pBiology] += 2;
	            GameTextForPlayer(playerid, "~g~ +2%", 5000, 1);
	            switch(random(3))
				{
				    case 0: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 基因理论\n\n是研究生物体的遗传和变异的科学\n是生物学的一个重要分支。", 0, 140, "Arial", 24, 0, -1, 0, 1);
			    	case 1: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 史前时期，\n人们就已经利用生物体的遗传特性通过选择育种来提高谷物和牲畜的产量。\n而现代遗传学，其目的是寻求了解遗传的整个过程的机制\n则是开始于19世纪中期孟德尔的研究工作。", 0, 140, "Arial", 24, 0, -1, 0, 1);
				    case 2: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "主题讲座: 虽然，孟德尔并不知道遗传的物理基础\n但他观察到了生物体的遗传特性\n某些遗传单位遵守简单的统计学规律\n这些遗传单位现在被称为基因。 ", 0, 140, "Arial", 24, 0, -1, 0, 1);
				}
	        }
	    }
	}
	return 1;
}

publics: IsPlayerInWater(playerid)
{
        new Float:FXF_wpos[3];
        GetPlayerPos(playerid,FXF_wpos[0],FXF_wpos[1],FXF_wpos[2]);
        if((FXF_wpos[2] > 0.00) || IsPlayerInZone(playerid,-1381.8527,1567.0306,-33.9964,140.3380)) { return 0; }
        else if((FXF_wpos[2] < 0.00) && (FXF_wpos[2] > -1.00)) { return 1; }
        else if(FXF_wpos[2] < -1.00) { return 2; }
        return 0;
}

publics: IsPlayerInZone(playerid, Float:minX, Float:minY, Float:maxX, Float:maxY)
{
    new Float:FXF_ZoneX, Float:FXF_ZoneY, Float:FXF_ZoneZ;
    GetPlayerPos(playerid, FXF_ZoneX, FXF_ZoneY, FXF_ZoneZ);
    if((FXF_ZoneX >= minX && FXF_ZoneX <= maxX) && (FXF_ZoneY >= minY && FXF_ZoneY <= maxY) && FXF_ZoneZ <= 1000)
    {
        return 1;
    }
    return 0;
}

stock GetCoordBootVehicle(vehicleid, &Float:x, &Float:y, &Float:z)
{
	new Float:angle,Float:distance;
	GetVehicleModelInfo(GetVehicleModel(vehicleid), 1, x, distance, z);
	distance = distance/2 + 0.1;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, angle);
	x += (distance * floatsin(-angle+180, degrees));
	y += (distance * floatcos(-angle+180, degrees));
	return true;
}

publics:HorseAnimTimer(playerid)
{
	new bool:playing = false;
    foreach(Player,i)
	{
		if(GetPVarInt(i,"Watching") == 1)
	    {
	        playing = true;
	        break;
		}
	}
	new string[80], HorseWon;
	for(new po = 0;po < 4;po++)
	{
	    HorsePosX[playerid][po] = HorsePosX[playerid][po] + (random(600) / 100);
		if(HorsePosX[playerid][po] >= 560)
		{
			HorseStop = 1;
			HorseWon = po+1;
		}
	}
 	if(playing == true)
 	{
		if(HorseAnimCount == 9) HorseAnimCount = 1;
		for(new po = 0;po < 4;po++)
		{
		    HorsePosX[playerid][po] = HorsePosX[playerid][po] + (random(600) / 100);
			PlayerTextDrawDestroy(playerid,Horse[playerid][po]);
		   	PlayerTextDrawDestroy(playerid,HorseNum[playerid][po]);
		   	format(string, sizeof(string), "LD_OTB:hrs%i", HorseAnimCount);
	 		Horse[playerid][po] = CreatePlayerTextDraw(playerid,HorsePosX[playerid][po], 200+50*po, string);
	    	HorseInfo(Horse[playerid][po]);
	    	format(string,30,"LD_OTB2:Ric%d",po+1);
	    	HorseNum[playerid][po] = CreatePlayerTextDraw(playerid,HorsePosX[playerid][po] + 15, 204+50*po, string);
	    	HorseNumInfo(HorseNum[playerid][po]);
		}
		HorseAnimCount++;
	 	foreach(Player,i)
		{
			if(GetPVarInt(i,"Watching") == 1)
		    {
		        //SetPlayerCameraPos(playerid, -331.6986, 1925.2861, 105.6225);
		        for(new po = 0;po < 4;po++)
				{
				   	PlayerTextDrawShow(i,Horse[playerid][po]);
				   	PlayerTextDrawShow(i,HorseNum[playerid][po]);
				}
		    }
		}
	}
	if(HorseStop == 0) SetTimer("HorseAnimTimer", 100, 0);
	else
	{
	    if(HorseWon != 0)
	    {
			HorseStop = 1;
			RaceStarted = 0;
	  		UpdateDynamic3DTextLabelText(Horses3D, 0xFFFFFFFF,"赛马信息屏幕\n状态: {FF0000}准备{ffffff}\n按: `H`");
			format(string,30,"No.%d 马匹赢了!",HorseWon);
			foreach(Player,i)
		 	{
		 	    PlayerTextDrawHide(i,BG[playerid][1]);
			    PlayerTextDrawHide(i,BG[playerid][0]);
			    PlayerTextDrawHide(i,Start2[playerid]);
			    PlayerTextDrawHide(i,Finish2[playerid]);
				PlayerTextDrawHide(i,Start[playerid]);
			    PlayerTextDrawHide(i,Finish[playerid]);
				if(IsPlayerInRangeOfPoint(i,10,828.2830,6.6600,1004.1870)) SendClientMessage(i,COLOR_LIGHTGREEN, string);
				if(GetPVarInt(i,"MoneyBet") > 0)
				{
					if(GetPVarInt(i,"BetOnHorse") == HorseWon)
		  			{
						SendServerMessage(i,"你赢了! 你的奖金x3!");
						PlayerPlaySound(i, 31205, 0.0, 0.0, 0.0);
						GiveMoney(i, GetPVarInt(i,"MoneyBet")*3);
					}
					else SendServerMessage(i, "你输了!");
				}
				if(GetPVarInt(i,"Watching") == 1)TogglePlayerControllable(i, 1),SetCameraBehindPlayer(i);
		  		SetPVarInt(i,"Watching",0);
				SetPVarInt(i,"BetOnHorse",0);
				SetPVarInt(i,"MoneyBet",0);
			}
   			for(new gon = 0;gon < 4;gon++)
			{
  				PlayerTextDrawHide(playerid,Horse[playerid][gon]);
	    		PlayerTextDrawHide(playerid,HorseNum[playerid][gon]);
			}
			for(new po = 0;po < 4;po++)
			{
		    	Horse[playerid][po] = CreatePlayerTextDraw(playerid,0, 200+50*po, "LD_OTB:hrs8");
				HorseInfo(Horse[playerid][po]);
				HorsePosX[playerid][po] = 0;
				format(string,30,"LD_OTB2:Ric%d",po+1);
				HorseNum[playerid][po] = CreatePlayerTextDraw(playerid,15, 204+50*po,string);
		    	HorseNumInfo(HorseNum[playerid][po]);
			}
		}
	}
}

publics:HorseStartTimer()
{
	new string[15];
	format(string, sizeof(string), "~r~%d",HorseCD);
	if(HorseCD > 0)HorseCD--,SetTimer("HorseStartTimer", 2000, 0);
	foreach(Player,i)
	{
		if(GetPVarInt(i,"Watching") == 1)
		{
		    if(HorseCD > 0) GameTextForPlayer(i,string, 1000, 3);
		    else GameTextForPlayer(i,"~y~GO GO GO!", 1000, 3),SetPlayerCameraPos(i, -331.6986, 1925.2861, 105.6225), SetPlayerCameraLookAt(i, 318.7538, -1998.8700, 17.8250, 1);
		}
	}
	if(HorseCD <= 0) SetTimer("HorseAnimTimer", 100, 0);
	return 1;
}

stock HorseInfo(PlayerText:horseid)
{
	foreach(Player,i)
	{
    	PlayerTextDrawFont(i,horseid, 4);
    	PlayerTextDrawColor(i,horseid,0xFFFFFFFF);
    	PlayerTextDrawTextSize(i,horseid,64,64);
	}
}

stock HorseNumInfo(PlayerText:horsenumid)
{
	foreach(Player,i)
	{
    	PlayerTextDrawFont(i,horsenumid, 4);
    	PlayerTextDrawColor(i,horsenumid,0xFFFFFFFF);
    	PlayerTextDrawTextSize(i,horsenumid,32,32);
	}
}

stock CreateCampfire(playerid, Float:x, Float:y, Float:z, Float:rz, cworld, interior)
{
	FireObject[playerid][0] = CreateDynamicObject(19475, x, y, z, 10.0, 90.0, rz + 18.0, cworld, interior, .streamdistance = 50.0);
	new tmp_2 = CreateDynamicObject(19475, x, y, z, -10.0, 90.0, rz + 36.0, cworld, interior, .streamdistance = 10.0);
	new tmp_3 = CreateDynamicObject(19475, x, y, z, 0.0, 100.0, rz + 54.0, cworld, interior, .streamdistance = 50.0);
	new tmp_4 = CreateDynamicObject(19475, x, y, z, 0.0, 80.0, rz + 72.0, cworld, interior, .streamdistance = 10.0);
	new tmp_5 = CreateDynamicObject(19475, x + (0.1 * floatsin(-rz, degrees)), y + (0.1 * floatcos(-rz, degrees)), z + 0.01, 10.0, 80.0, rz + 45.0, cworld, interior, .streamdistance = 100.0);
	new tmp_6 = CreateDynamicObject(19475, x + (0.1 * floatsin(-rz - 90.0, degrees)), y + (0.1 * floatcos(-rz - 90.0, degrees)), z + 0.01, 10.0, 80.0, rz + 45.0 + 90.0, cworld, interior, .streamdistance = 10.0);
	new tmp_7 = CreateDynamicObject(19475, x + (0.1 * floatsin(-rz - 180.0, degrees)), y + (0.1 * floatcos(-rz - 180.0, degrees)), z + 0.01, 10.0, 80.0, rz + 45.0 + 180.0, cworld, interior, .streamdistance = 10.0);
	new tmp_8 = CreateDynamicObject(19475, x + (0.1 * floatsin(-rz - 270.0, degrees)), y + (0.1 * floatcos(-rz - 270.0, degrees)), z + 0.01, 10.0, 80.0, rz + 45.0 + 270.0, cworld, interior, .streamdistance = 10.0);
	new tmp_9 = CreateDynamicObject(19475, x + (0.1 * floatsin(-rz, degrees)), y + (0.1 * floatcos(-rz, degrees)), z + 0.01, 10.0, 80.0, rz + random(90), cworld, interior, .streamdistance = 10.0);
	new tmp_10 = CreateDynamicObject(19475, x + (0.1 * floatsin(-rz - 90.0, degrees)), y + (0.1 * floatcos(-rz - 90.0, degrees)), z + 0.01, 10.0, 80.0, rz + random(90) + 90.0, cworld, interior, .streamdistance = 10.0);
	new tmp_11 = CreateDynamicObject(19475, x + (0.1 * floatsin(-rz - 180.0, degrees)), y + (0.1 * floatcos(-rz - 180.0, degrees)), z + 0.01, 10.0, 80.0, rz + random(90) + 180.0, cworld, interior, .streamdistance = 10.0);
	new tmp_12 = CreateDynamicObject(19475, x + (0.1 * floatsin(-rz - 270.0, degrees)), y + (0.1 * floatcos(-rz - 270.0, degrees)), z + 0.01, 10.0, 80.0, rz + random(90) + 270.0, cworld, interior, .streamdistance = 10.0);
	SetDynamicObjectMaterial(FireObject[playerid][0], 0, 2068,	"cj_ammo_net",		"CJ_cammonet", 0);
	SetDynamicObjectMaterial(tmp_2, 0, 2068,	"cj_ammo_net",		"CJ_cammonet", 0);
	SetDynamicObjectMaterial(tmp_3, 0, 2068,	"cj_ammo_net",		"CJ_cammonet", 0);
	SetDynamicObjectMaterial(tmp_4, 0, 2068,	"cj_ammo_net",		"CJ_cammonet", 0);
	SetDynamicObjectMaterial(tmp_5, 0, 693,	"gta_tree_pine",	"sm_redwood_branch", 0);
	SetDynamicObjectMaterial(tmp_6, 0, 693,	"gta_tree_pine",	"sm_redwood_branch", 0);
	SetDynamicObjectMaterial(tmp_7, 0, 693,	"gta_tree_pine",	"sm_redwood_branch", 0);
	SetDynamicObjectMaterial(tmp_8, 0, 693,	"gta_tree_pine",	"sm_redwood_branch", 0);
	SetDynamicObjectMaterial(tmp_9, 0, 693,	"gta_tree_pine",	"sm_redwood_branch", 0);
	SetDynamicObjectMaterial(tmp_10, 0, 693,	"gta_tree_pine",	"sm_redwood_branch", 0);
	SetDynamicObjectMaterial(tmp_11, 0, 693,	"gta_tree_pine",	"sm_redwood_branch", 0);
	SetDynamicObjectMaterial(tmp_12, 0, 693,	"gta_tree_pine",	"sm_redwood_branch", 0);
	FireObject[playerid][1] = CreateDynamicObject(18693,x, y, z-1.5,0.0,0.0,90, cworld, interior, -1, 200);
	FireSphere[playerid] = CreateDynamicSphere(x, y, z, 0.5, -1, -1, -1);
	return 1;
}

stock isPlayerWater(playerid) // 0 - не в воде, 1 - на воде, 2 - под водой
{
	if(GetPlayerAnimationIndex(playerid))
	{
		new animlib[6], animname[16];
		GetAnimationName(GetPlayerAnimationIndex(playerid), animlib, 5, animname, 15);
		if(!strcmp(animlib, "SWIM"))
		{
			if(!strcmp(animname, "Swim_Glide", true) || !strcmp(animname, "Swim_Dive_Under", true) || !strcmp(animname, "Swim_Under", true)) return 2;
			else return true;
		}
	}
	return 0;
}

stock CreateSurfboard(modelid, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz = 0.0)
{
	surfboardID++;
	if(surfboardID == 50)
	{
		surfboardID--;
		return -1;
	}
	new toSurfboardID = GetFreeSurfboardID();
	if(toSurfboardID == -1)
	{
		surfboardID--;
		return -1;
	}
	if(modelid < 1 || modelid > 3)
	{
		surfboardID--;
		return -1;
	}
	surfboardData[toSurfboardID][modelID] = modelid;
	surfboardData[toSurfboardID][position][0] = x;
	surfboardData[toSurfboardID][position][1] = y;
	surfboardData[toSurfboardID][position][2] = z;
	surfboardData[toSurfboardID][position][3] = rx;
	surfboardData[toSurfboardID][position][4] = ry;
	surfboardData[toSurfboardID][position][5] = rz;
	surfboardData[toSurfboardID][position][6] = rz;
	surfboardData[toSurfboardID][sppeed] = 0.0;
	surfboardData[toSurfboardID][objectID] = CreateObject(2403 + modelid, x, y, z, rx, ry, rz);
	return toSurfboardID;
}

stock DestroySurfboard(sbid)
{
	if(IsSurfboardCreated(sbid))
	{
		surfboardID--;
		surfboardData[sbid][modelID] = 0;
		surfboardData[sbid][position][0] = 0.0;
		surfboardData[sbid][position][1] = 0.0;
		surfboardData[sbid][position][2] = 0.0;
		surfboardData[sbid][position][3] = 0.0;
		surfboardData[sbid][position][4] = 0.0;
		surfboardData[sbid][position][5] = 0.0;
		surfboardData[sbid][position][6] = 0.0;
		surfboardData[sbid][sppeed] = 0.0;
		DestroyObject(surfboardData[sbid][objectID]);
		foreach(Player, u)
		{
			if(SurfPlayerUse[u] == sbid)
			{
				SurfPlayerUse[u] = -1;
				ClearAnimations(u,1);
				SetPlayerChatBubble(u, "删除冲浪板", COLOR_PURPLE, 15, 5000);
			}
			break;
		}
		return true;
	}
	return false;
}

stock IsSurfboardCreated(sbid)
{
	if(surfboardData[sbid][modelID]) return true;
	return false;
}

stock GetFreeSurfboardID()
{
	new sbid = -1;
	for(new a = 0; a < 50; a++)
	{
		if(!IsSurfboardCreated(a))
		{
			sbid = a;
			break;
		}
	}
	return sbid;
}

stock StopSurfboard(sbid)
{
	if(!IsSurfboardCreated(sbid)) return false;
	surfboardData[sbid][sppeed] = 0.0;
	StopObject(surfboardData[sbid][objectID]);
	return true;
}

stock IsSurfboardOccupied(sbid)
{
	if(!IsSurfboardCreated(sbid)) return INVALID_PLAYER_ID;
	foreach(Player, u)
	{
		if(SurfPlayerUse[u] == sbid) return u;
	}
	return INVALID_PLAYER_ID;
}

stock IsPlayerAtSurfboard(playerid, sbid)
{
	new Float:pos[3];
	GetObjectPos(surfboardData[sbid][objectID], pos[0], pos[1], pos[2]);
	if(IsPlayerInRangeOfPoint(playerid, 3.0, pos[0], pos[1], pos[2])) return true;
	return false;
}

stock IsPlayerAtAnySurfboard(playerid)
{
	new a = 0;
	for(a = 0; a < 50; a++)
	{
		if(IsPlayerAtSurfboard(playerid, a)) return a;
	}
	return -1;
}

stock GetXYInFrontOfPlayerOnSB(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float:angle;
	GetPlayerPos(playerid, x, y, angle);
	GetPlayerFacingAngle(playerid, angle);
	x += (distance * floatsin(-angle + 270.0, degrees));
	y += (distance * floatcos(-angle + 270.0, degrees));
}

stock SetVPPos(playerid, Float:x, Float:y, Float:z,type)
{
	new bool:Szvonok = false;
	if(type == 0)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) Szvonok = true;
	}
	else
	{
	    if(IsPlayerInAnyVehicle(playerid))Szvonok = true;
	}
	if(Szvonok == true)
	{
		new getcar = GetPlayerVehicleID(playerid),Float:PA;
		SetVehiclePos(getcar,x,y,z);
		GetVehicleZAngle(getcar,PA);
		SetVehicleZAngle(getcar,PA);
	}
	else SetPlayerPos(playerid, x,y,z);
	return true;
}

publics: PlayerUpdate(playerid)
{
    new Float: health;
    GetPlayerHealth(playerid, health);
    /*if(PlayerInfo[playerid][pGolod] <= 0)
    {
        SetPlayerHealthAC(playerid, health -5);
        PlayerHealth[playerid] = health;
    }
    else
	{
		if(PlayerInfo[playerid][pDonateRank])
		{
			PlayerInfo[playerid][pGolod] -=2;
		}
		else
		{
		    PlayerInfo[playerid][pGolod] -=5;
		}
	}*/
	return 1;
}

stock IsVehicleOccupiedEx(vehicleid)
{
	foreach(new i: Player) if(GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPlayerVehicleID(i) == vehicleid) return 1;
	return 0;
}
publics: MoneyFriends(playerid)
{
	new nick[MAX_PLAYER_NAME],bool:online = false;
	if(PlayerInfo[playerid][pLevel] == 4 && PlayerInfo[playerid][pExp] == 0)
	{
        foreach(new i:Player)
        {
		    if(i != INVALID_PLAYER_ID && IsPlayerConnected(i))
			{
			    if(i == playerid) continue;
			    GetPlayerName(i,nick,MAX_PLAYER_NAME);
			    if(strcmp(nick,PlayerInfo[playerid][pRinvitation], false) == 0)
			    {
			        online = true;
					format(PlayerInfo[playerid][pRinvitation],24,"-");
			        PlayerInfo[i][pCash] += 70000;
					format(YCMDstr,sizeof(YCMDstr),"你获得了 70.000$, 来自你的朋友 %s 注册时输入邀请人是你的名字",PlayerInfo[playerid][pName]);
					SendClientMessage(i,0x66CC00FF,YCMDstr);
					format(YCMDstr,sizeof(YCMDstr),"你的朋友 %s, 他会获得 70.000$",PlayerInfo[i][pName]);
					SendClientMessage(playerid,0x66CC00FF,YCMDstr);
					GameTextForPlayer(i,"~g~ +70.000$",5000,1);
					PlayerPlaySound(i, 43001, 0.0, 0.0, 0.0);
			        break;
				}
				else continue;
			}
		}
		if(online == false)
		{
			format(YCMDstr, sizeof(YCMDstr), "UPDATE `accounts` SET `pCash`=`pCash`+70000 WHERE `Name`='%s'",PlayerInfo[playerid][pRinvitation]);
			mysql_query(YCMDstr);
		}
	}
	return 1;
}

publics: TazedRemove(playerid)
{
  TogglePlayerControllable(playerid, 1);
  ClearAnimations(playerid);
  Tazed[playerid] = 0;
  return 1;
}

stock SetVehicleIndicator(vehicleid, leftindicator=0, rightindicator=0)
{
	if(!leftindicator & !rightindicator) return false;
	new Float:_vX[2], Float:_vY[2], Float:_vZ[2];
	if(rightindicator)
	{
		if(IsTrailerAttachedToVehicle(vehicleid))
		{
			new omg = GetVehicleModel(GetVehicleTrailer(vehicleid));
			GetVehicleModelInfo(omg, VEHICLE_MODEL_INFO_SIZE, _vX[0], _vY[0], _vZ[0]);
			Indicators_xqz[vehicleid][4] = CreateObject(19290, 0, 0, 0,0,0,0);
			AttachObjectToVehicle(Indicators_xqz[vehicleid][4], GetVehicleTrailer(vehicleid),  _vX[0]/2.4, -_vY[0]/3.35, -1.0 ,0,0,0);
		}
		GetVehicleModelInfo(GetVehicleModel(vehicleid), VEHICLE_MODEL_INFO_SIZE, _vX[0], _vY[0], _vZ[0]);
		Indicators_xqz[vehicleid][0] = CreateObject(19290, 0, 0, 0,0,0,0);
		AttachObjectToVehicle(Indicators_xqz[vehicleid][0], vehicleid,  _vX[0]/2.23, _vY[0]/2.23, 0.1 ,0,0,0);
		Indicators_xqz[vehicleid][1] = CreateObject(19290, 0, 0, 0,0,0,0);
		AttachObjectToVehicle(Indicators_xqz[vehicleid][1], vehicleid,  _vX[0]/2.23, -_vY[0]/2.23, 0.1 ,0,0,0);
	}
	if(leftindicator)
	{
		if(IsTrailerAttachedToVehicle(vehicleid))
		{
			new omg = GetVehicleModel(GetVehicleTrailer(vehicleid));
			GetVehicleModelInfo(omg, VEHICLE_MODEL_INFO_SIZE, _vX[0], _vY[0], _vZ[0]);
			Indicators_xqz[vehicleid][5] = CreateObject(19290, 0, 0, 0,0,0,0);
			AttachObjectToVehicle(Indicators_xqz[vehicleid][5], GetVehicleTrailer(vehicleid),  -_vX[0]/2.4, -_vY[0]/3.35, -1.0 ,0,0,0);
		}
		GetVehicleModelInfo(GetVehicleModel(vehicleid), VEHICLE_MODEL_INFO_SIZE, _vX[0], _vY[0], _vZ[0]);
		Indicators_xqz[vehicleid][2] = CreateObject(19290, 0, 0, 0,0,0,0);
		AttachObjectToVehicle(Indicators_xqz[vehicleid][2], vehicleid,  -_vX[0]/2.23, _vY[0]/2.23, 0.1 ,0,0,0);
		Indicators_xqz[vehicleid][3] = CreateObject(19290, 0, 0, 0,0,0,0);
		AttachObjectToVehicle(Indicators_xqz[vehicleid][3], vehicleid,  -_vX[0]/2.23, -_vY[0]/2.23, 0.1 ,0,0,0);
	}
	return 1;
}

stock SaveStuff()
{
	new Query[512];
	mysql_query("SELECT * FROM  `dle_hals` ORDER BY  `dle_hals`.`id` ASC ");
	mysql_store_result();
	mysql_debug(0);
	format(Query, sizeof(Query),"UPDATE `dle_hals` SET `TaxValue`='%d',`CopSal`='%d', \
			`SudSal`='%d',`MhsSal`='%d',`MerSal`='%d',`TaxSal`='%d',`LicSal`='%d',`MehSal`='%d',\
			`biztax`='%d',`electrich`='%d' WHERE `id` = '1'",
	TaxValue,
	CopSal,
	SudSal,
	MhsSal,
	MerSal,
	TaxSal,
	LicSal,
	MehSal,
	biztax,
	electrich);
	mysql_query(Query);
	mysql_free_result();
	return 1;
}

stock LoadStuff()
{
	new query[512];
	new IDo;
	mysql_query("SELECT * FROM  `dle_hals` ORDER BY  `dle_hals`.`id` ASC ");
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
		for(new idx = 1; idx <= mysql_num_rows(); idx++)
		{
			mysql_fetch_row(query);
			sscanf(query, "p<|>iiiiiiiiiii",
			IDo,
			TaxValue,
			CopSal,
			SudSal,
			MhsSal,
			MerSal,
			TaxSal,
			LicSal,
			MehSal,
			biztax,
			electrich);
		}
	}
	printf("[经济] 经济成功加载");
	mysql_free_result();
	return 1;
}

publics: sflvslakclose1()
{
	MoveObject(sflvslak1,1643.388671875,-40.182285308838,36.242427825928-0.004,0.004,0.00000000,270.00000000,20.00000000);
}

publics: sflvslakclose2()
{
	MoveObject(sflvslak2,1654.078125,-35.9287109375,36.295417785645-0.004,0.004,0.00000000,90.00000000,20.00000000);
}

publics: SlakClose1()
{
	MoveObject(Slak1,67.97479248,-1530.02893066,4.71585941-0.004,0.004,0.00000000,90.00000000,88.00000000);
}

publics: SlakClose2()
{
	MoveObject(Slak2,67.69296265,-1545.35229492,4.79085970-0.004,0.004,0.00000000,90.00000000,86.49499512);
}

publics: SlakClose3()
{
	MoveObject(Slak3,627.99127197,-1194.02526855,17.91875076-0.004,0.004,0.00000000,90.00000000,24.00000000);
}

publics: SlakClose4()
{
	MoveObject(Slak4,607.03051758,-1202.02661133,17.89089012-0.004,0.004,0.00000000,90.00000000,16.75000000);
}

publics: OnPlayerEnterDynamicArea(playerid, areaid)
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(areaid == Ships[i] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			new panels, tires;
			GetVehicleDamageStatus(GetPlayerVehicleID(playerid), panels, doors, lights, tires);
			UpdateVehicleDamageStatus(GetPlayerVehicleID(playerid), panels, doors, lights, 15);
			GameTextForPlayer(playerid, "~r~stalling", 1000, 6);
		}
	}
	return 1;
}
CMD:usecode(playerid)
{
	if(PlayerInfo[playerid][pLevel] < 3) return SendErrorMessage(playerid, "你的等级低于 3.");
    if(PlayerInfo[playerid][Promo]) return SendErrorMessage(playerid, "您已经激活了促销代码");
    ShowPlayerDialog(playerid, 22845, DIALOG_STYLE_INPUT, "激活促销代码", "输入促销代码名称:", "激活..", "放回");
    return 1;
}
CMD:veh(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 5 || dostup[playerid] == 0) return true;
    new string[145];
    new Float:pX,Float:pY,Float:pZ;
    if(sscanf(params, "ddd", params[0],params[1],params[2])) return SendClientMessage(playerid, COLOR_WHITE, "{BEBEBE}帮助: /veh [车辆id] {颜色 1} {颜色 2}");
    {
        if(VehID[playerid] > 0)
        {
            DestroyVehicle(VehID[playerid]);
            SendClientMessage(playerid, -1, "{696969}[!] 之前的车辆已删除,因为你重新创建了!");
            VehID[playerid] = 0;
        }
        if(params[1] > 126 || params[1] < 0 || params[2] > 126 || params[2] < 0) return SendClientMessage(playerid, COLOR_WHITE, "颜色ID最高 126!");
        GetPlayerPos(playerid,pX,pY,pZ);
        VehID[playerid] = CreateVehicle(params[0],pX+2,pY,pZ,0.0,1,1,0,0);
        format(string,sizeof(string),"{696969}[!] {1E90FF}你创建了一辆车,车辆ID:%d | CarID: %d.",params[0],VehID[playerid]);
        SendClientMessage(playerid,COLOR_WHITE,string);
        ChangeVehicleColor(VehID[playerid],params[1],params[2]);
    }
    return 1;
}
CMD:delveh(playerid)
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 5 || dostup[playerid] == 0) return true;
    if(VehID[playerid] > 0)
    {
        DestroyVehicle(VehID[playerid]);
        SendClientMessage(playerid,COLOR_WHITE,"{696969}[!] 已删除车辆!");
        VehID[playerid] = 0;
    }
    else SendClientMessage(playerid,COLOR_WHITE,"{696969}[!] 你没有在车上!");
    return 1;
}
CMD:aveh(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 9 || dostup[playerid] == 0) return true;
    new string[145], VCarID;
    new Float:pX,Float:pY,Float:pZ;
    if(sscanf(params, "ddd", params[0],params[1],params[2])) return SendClientMessage(playerid, COLOR_WHITE, "{BEBEBE}帮助: /aveh [车辆id] {颜色 1} {颜色 2}");
    {
        if(params[0] > 611 || params[0] < 400) return SendClientMessage(playerid, -1, "车辆ID 400 到 611!");
        if(params[1] > 126 || params[1] < 0 || params[2] > 126 || params[2] < 0) return SendClientMessage(playerid, -1, "颜色ID最高 126!");
        GetPlayerPos(playerid,pX,pY,pZ);
        VCarID = CreateVehicle(params[0],pX+2,pY,pZ,0.0,1,1,0,0);
        format(string,sizeof(string),"{696969}[!] {1E90FF}你创建了一辆管理员车辆,车辆ID:%d.",params[0],VehID[playerid]);
        SendClientMessage(playerid,COLOR_WHITE,string);
        ChangeVehicleColor(VCarID,params[1],params[2]);
    }
    return 1;
}
CMD:dveh(playerid)
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 9 || dostup[playerid] == 0) return true;
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
        if(GetPlayerVehicleID(playerid) == VehID[playerid]) return SendClientMessage(playerid,COLOR_WHITE,"{BEBEBE}[!] 在车内输入: /dveh!");
        DestroyVehicle(GetPlayerVehicleID(playerid));
        SendClientMessage(playerid,COLOR_WHITE,"{696969}[!] 车辆已删除!");
    }
    else SendClientMessage(playerid,COLOR_WHITE,"{696969}[!] 你需要在车内!");
    return 1;
}
/*CMD:cases(playerid)
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    NewSPD(playerid,22819,DIALOG_STYLE_LIST,"{1E90FF}宝箱","{FFFFFF}1 - 白银 {5F9EA0}[%d 人民币]\n{FFFFFF}2 - 黄金 {5F9EA0}[%d 人民币]\n{FFFFFF}3 - 铂金 {5F9EA0}[%d 人民币]\n{FFFFFF}4 - 钻石 {5F9EA0}[%d 人民币]","选择","返回",SILVER_CASE_PRICE,GOLD_CASE_PRICE,EXO_CASE_PRICE,DELTA_CASE_PRICE);
    return 1;
}*/
CMD:offlowrider(playerid)
{
	if(lowriders == 0) return SendErrorMessage(playerid,"你没有开始比赛!");
    Secund();
	SendClientMessage(playerid, COLOR_WHITE, "你退出了比赛");
	return 1;
}
CMD:tpcor(playerid,params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if (PlayerInfo[playerid][pAdministration228] >= 10)
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pAdministration228] < 10 || dostup[playerid] == 0) return true;
	if(sscanf(params,"ddd",params[0],params[1],params[2])) return SendClientMessage(playerid, COLOR_WHITE, "帮助 /tpcor [X][Y][Z]");
	SetPlayerPos(playerid, params[0],params[1],params[2]);
	return 1;
}
CMD:addprefix(playerid, params[])
{
	new sendername[24];
	GetPlayerName(playerid,sendername, sizeof(sendername));
	if(!strcmp(sendername,FD1,true) || !strcmp(sendername,FD2,true))
	{
	    new targetid_prefix, number_prefix;
		if(sscanf(params, "ii",targetid_prefix, number_prefix))
		{
			SendClientMessage(playerid, 0xFFFFFFFF, "帮助: /addprefix [id] [编号]");
			SendClientMessage(playerid, 0xFFFFFFFF, "0 - 实习管理员, 1 - 正式管理员, 2 - 中级管理员, 3 - 高级管理员");
			SendClientMessage(playerid, 0xFFFFFFFF, "4 - 协理管理员, 5 - 常务管理员, 6 - 前台管理员., 7 - 行政管理员");
			SendClientMessage(playerid, 0xFFFFFFFF, "8 - 组织管理员, 9 - 内务管理员, 10 - 裁决管理员., 11 - 开发人员");
			return SendClientMessage(playerid, 0xFFFFFFFF, "12 - 前台总管, 13 - 行政总管, 14 - 服务器总管, 15 - 总经理, 16 - 所有者&开发者");
		}
		if(PlayerInfo[targetid_prefix][pAdministration228] <= 0) return SendClientMessage(playerid, 0xFFFFFFAA, "他不是管理员!");
		if(number_prefix != 0)
		{
		    new string[144];
		    PlayerInfo[targetid_prefix][prefix_id] = number_prefix;
		 	format(string, 300, "所有者&开发者 %s 将 %s 任命为 %s", PlayerInfo[playerid][pName], PlayerInfo[targetid_prefix][pName], pPrefixName[PlayerInfo[targetid_prefix][prefix_id]]);
		  	ABroadCast(0xFF6347AA, string, 1);
		}
		else
		{
		    new string[144];
			format(string, 300, "所有者&开发者 %s 将 %s 任命为 %s", PlayerInfo[playerid][pName], PlayerInfo[targetid_prefix][pName], pPrefixName[PlayerInfo[targetid_prefix][prefix_id]]);
		  	ABroadCast(0xFF6347AA, string, 1);
		  	PlayerInfo[targetid_prefix][prefix_id] = number_prefix;
		}
	}
	return 1;
}
cmd:bc(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new string[128];
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendErrorMessage(playerid,"帮助: {4080FF}/bc {B4B5B7}[内容]");
	if(GetPVarInt(playerid,"Flood") > gettime()) return SendErrorMessage(playerid,"等待30秒(防止刷屏)!");
	if(PlayerInfo[playerid][pMuted] == 1)
	{
		PlayerMuteMessage(playerid);
		return true;
	}
	if(PlayerInfo[playerid][pRank] < 1) return SendErrorMessage(playerid,"你没有权限!");
	switch(PlayerInfo[playerid][pMember])
	{
	case 12:
		{
			if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[巴拉斯] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[巴拉斯] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[巴拉斯] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[巴拉斯] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[巴拉斯] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[巴拉斯] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[巴拉斯] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[巴拉斯] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[巴拉斯] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[巴拉斯] 未定 %s: %s",Name(playerid), result); }
			SendTeamMessageGang(1, COLOR_ALLDEPT, string);
			return true;
		}
	case 13:
		{
			if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[瓦戈斯] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[瓦戈斯] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[瓦戈斯] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[瓦戈斯] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[瓦戈斯] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[瓦戈斯] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[瓦戈斯] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[瓦戈斯] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[瓦戈斯] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[瓦戈斯] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[瓦戈斯] 未定 %s: %s",Name(playerid), result); }
			SendTeamMessageGang(1, COLOR_ALLDEPT, string);
			return true;
		}
	case 15:
		{
			if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[格罗夫] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[格罗夫] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[格罗夫] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[格罗夫] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[格罗夫] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[格罗夫] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[格罗夫] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[格罗夫] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[格罗夫] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[格罗夫] 未定 %s: %s",Name(playerid), result); }
			SendTeamMessageGang(1, COLOR_ALLDEPT, string);
			return true;
		}
	case 17:
		{
			if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[阿兹特克] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[阿兹特克] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[阿兹特克] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[阿兹特克] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[阿兹特克] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[阿兹特克] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[阿兹特克] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[阿兹特克] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[阿兹特克] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[阿兹特克] 未定 %s: %s",Name(playerid), result); }
			SendTeamMessageGang(1, COLOR_ALLDEPT, string);
			return true;
		}
	case 18:
		{
			if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[14K] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[14K] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[14K] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[14K] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[14K] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[14K] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[14K] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[14K] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[14K] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[14K] 未定 %s: %s",Name(playerid), result); }
			SendTeamMessageGang(1, COLOR_ALLDEPT, string);
			return true;
		}
	}
	return true;
}
CMD:mc(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	new string[128];
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendErrorMessage(playerid,"帮助: {4080FF}/bc {B4B5B7}[内容]");
	if(GetPVarInt(playerid,"Flood") > gettime()) return SendErrorMessage(playerid,"请等待30秒(防止刷屏)!");
	if(PlayerInfo[playerid][pMuted] == 1)
	{
		PlayerMuteMessage(playerid);
		return true;
	}
	if(PlayerInfo[playerid][pRank] < 1) return SendErrorMessage(playerid,"你没有权限!");
	switch(PlayerInfo[playerid][pMember])
	{
	case 14:
		{
			if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[黑手党] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[黑手党] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[黑手党] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[黑手党] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[黑手党] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[黑手党] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[黑手党] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[黑手党] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[黑手党] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[黑手党] 未定 %s: %s",Name(playerid), result); }
            SendTeamMessageMafia(1, COLOR_ALLDEPT, string);
            return 1;
		}
	case 6:
		{
			if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[山口组] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[山口组] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[山口组] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[山口组] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[山口组] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[山口组] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[山口组] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[山口组] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[山口组] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[山口组] 未定 %s: %s",Name(playerid), result); }
            SendTeamMessageMafia(1, COLOR_ALLDEPT, string);
            return 1;
		}
 	case 5:
		{
			if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[La Cosa Nostra] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[La Cosa Nostra] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[La Cosa Nostra] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[La Cosa Nostra] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[La Cosa Nostra] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[La Cosa Nostra] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[La Cosa Nostra] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[La Cosa Nostra] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[La Cosa Nostra] 未定 %s: %s",Name(playerid), result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[La Cosa Nostra] 未定 %s: %s",Name(playerid), result); }
            SendTeamMessageMafia(1, COLOR_ALLDEPT, string);
            return 1;
		}
	}
	return true;
}
CMD:awarn(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    if(PlayerInfo[playerid][pAdministration228] < 10) return true;
    {
		new reason[150];
        if(sscanf(params,"us[150]",params[0],reason)) return SendErrorMessage(playerid, "使用: /awarn [id] [理由]");
        if(params[0] == playerid)  return  SendErrorMessage(playerid,"目标不能为自己");
        if(PlayerInfo[playerid][pAdministration228] != PlayerInfo[params[0]][pAdministration228]) return SendErrorMessage(playerid,"该玩家不是管理员");
        if(IsPlayerConnected(params[0]))
        {
         	PlayerInfo[params[0]][pAWarn] ++;
         	format(YCMDstr,sizeof(YCMDstr),"― 你警告了 %s. 理由: %s",Name(params[0]),reason);
          	SendClientMessage(playerid,COLOR_LIGHTBLUE,YCMDstr);
           	format(YCMDstr,sizeof(YCMDstr),"{FF3300}― %s 警告了你. (理由: %s)",Name(playerid),reason);
           	SendClientMessage(params[0],-1,YCMDstr);
            if(PlayerInfo[params[0]][pAWarn] >= 3)
            {
            	PlayerInfo[params[0]][pAWarn] = 0;
            	SendServerMessage(playerid,"对方收到了三次警告以上,自动踢出管理组!");
                SendServerMessage(params[0],"你收到了三次警告以上,自动踢出管理组!");
                PlayerInfo[params[0]][pAdministration228] = 0;
                PlayerInfo[params[0]][prefix_id] = 0;
            }
        }
    }
    return true;
}
CMD:unawarn(playerid, params[])
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(Rucovod(playerid))
    {
        if(sscanf(params,"u",params[0])) return SendServerMessage(playerid, "使用: /unawarn [id]");
        if(PlayerInfo[playerid][pAdministration228] != PlayerInfo[params[0]][pAdministration228]) return SendErrorMessage(playerid,"该玩家不是管理员!");
        if(IsPlayerConnected(params[0]))
        {
        	if(PlayerInfo[params[0]][pAWarn] > 0)
         	{
          		PlayerInfo[params[0]][pAWarn] --;
            	format(YCMDstr,sizeof(YCMDstr),"你清除了 %s 的警告",Name(params[0]));
             	SendClientMessage(playerid,-1,YCMDstr);
              	format(YCMDstr,sizeof(YCMDstr),"管理员 %s 清除了你的警告",Name(playerid));
               	SendClientMessage(id,-1,YCMDstr);
            }
        }
    }
    return true;
}
CMD:editad(playerid)
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
	if(PlayerInfo[playerid][pMember] == 16)
	{
	    AdvertList(playerid);
	}
	else
	{
	    return 1;
 	}
 	return 1;
}
CMD:deletestat(playerid,params[])
{
	new stringer[144], stringers[144];
	if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"尚未登录!");
	if(Rucovod(playerid))
	{
		if(sscanf(params,"us[32]",params[0],params[1])) return SendErrorMessage(playerid,"帮助: /deletestat [id] [理由]");
		if(Rucovod(params[0])) return SendErrorMessage(playerid,"不能重置服务器经理的数据!");
		if(IsPlayerConnected(params[0]))
        {
			PlayerInfo[params[0]][pLevel] = 1;
			PlayerInfo[params[0]][pAdministration228] = 0;
			PlayerInfo[params[0]][pSupport] = 0;
			PlayerInfo[params[0]][pSHealth] = 100.0;
			PlayerInfo[params[0]][pHealth] = 100.0;
			PlayerInfo[params[0]][Promo] = 0;
			PlayerInfo[params[0]][pRub] = 0;
			PlayerInfo[params[0]][pHP] = 100;
			PlayerInfo[params[0]][pInt] = 0;
			PlayerInfo[params[0]][pLocal] = 255;
			new randphone = 100000 + random(899999);
			PlayerInfo[params[0]][pPnumber] = randphone;
			PlayerInfo[params[0]][pReg] = 1;
			PlayerInfo[params[0]][pCarLic] = 0;
			PlayerInfo[params[0]][pCash] = 5000;
			PlayerInfo[params[0]][pBank] = 0;
			PlayerInfo[params[0]][pMobile] = 0;
			PlayerInfo[params[0]][pChar][1] = 230;
			PlayerInfo[params[0]][pChar][2] = 230;
			PlayerInfo[params[0]][pMarriedTo] = strval("-");
			PlayerInfo[params[0]][pZakonp] = 0;
			PlayerInfo[params[0]][pHousecash] = 0;
			PlayerInfo[params[0]][pWantedLevel] = 0;
			PlayerInfo[params[0]][pMuted] = 0;
			PlayerInfo[params[0]][pMuteTime] = 0;
			PlayerInfo[params[0]][pPhousekey] = 0;
			PlayerInfo[params[0]][pDonatemoney] = 0;
			PlayerInfo[params[0]][pCarLic] = 0;
			//PlayerInfo[playerid][pGolod] = 100;
			PlayerInfo[params[0]][pMedcard] = 0;
			PlayerInfo[params[0]][pAutoTime] = 0;
			PlayerInfo[params[0]][pOtmbI4ka] = 0;
			PlayerInfo[params[0]][pTimeBP] = 0;
			PlayerInfo[params[0]][pAutoSkill] = 0;
			PlayerInfo[params[0]][pTruckSkill] = 0;
			PlayerInfo[params[0]][pSkillT] = 0;
			PlayerInfo[params[0]][pSkate] = 0;
			PlayerInfo[params[0]][pSgf] = 0;
			PlayerInfo[params[0]][pBalon4ik] = 0;
			PlayerInfo[params[0]][pBint] = 0;
			PlayerInfo[params[0]][pCoster] = 0;
			PlayerInfo[params[0]][pSerf] = 0;
			PlayerInfo[params[0]][pBizpokup] = 0;
			PlayerInfo[params[0]][pQuest] = 0;
			PlayerInfo[params[0]][pSiga] = 0;
			PlayerInfo[params[0]][pNazivka] = 0;
			PlayerInfo[params[0]][pPhonePlayer] = 0;
			PlayerInfo[params[0]][pDostup] = 0;
			PlayerInfo[params[0]][pShtanga] = 0;
			PlayerInfo[params[0]][pVelo] = 0;
			PlayerInfo[params[0]][pGiri] = 0;
			PlayerInfo[params[0]][pSpawnChange] = 1;
			PlayerInfo[params[0]][pBeg] = 0;
			PlayerInfo[params[0]][pEmailpod] = 0;
			PlayerInfo[params[0]][pNumbercar] = 0;
			PlayerInfo[params[0]][pWheels] = 0;
			PlayerInfo[params[0]][pSpoilers] = 0;
			PlayerInfo[params[0]][pHydraulics] = 0;
			PlayerInfo[params[0]][pHBumper] = 0;
			PlayerInfo[params[0]][pBBumper] = 0;
			PlayerInfo[params[0]][pNitro] = 0;
			PlayerInfo[params[0]][pOtel] = 0;
			PlayerInfo[params[0]][pQuest_1] = 0;
			PlayerInfo[params[0]][pQuest_2] = 0;
			PlayerInfo[params[0]][pQuest_3] = 0;
			PlayerInfo[params[0]][pQuest_4] = 0;
			PlayerInfo[params[0]][pQuest_5] = 0;
			PlayerInfo[params[0]][pLWarns] = 0;
			PlayerInfo[params[0]][pMWarns] = 0;
			PlayerInfo[params[0]][pAWarn] = 0;
			PlayerInfo[params[0]][pDiplom] = 0;
			PlayerInfo[params[0]][pMath] = 0;
			PlayerInfo[params[0]][pHistory] = 0;
			PlayerInfo[params[0]][pBiology] = 0;
			PlayerInfo[params[0]][pInform] = 0;
			PlayerInfo[params[0]][pRussian] = 0;
			PlayerInfo[params[0]][pKeylog] = 0;
			PlayerInfo[params[0]][pSuperKey] = 0;
			PlayerInfo[params[0]][kickdm] = 0;
			PlayerInfo[params[0]][prefix_id] = 0;
			format(stringer,sizeof(stringer),"%s %s 清除了账户 %s[%d] 的数据. 原因: %s",pPrefixName[PlayerInfo[playerid][prefix_id]], Name(playerid), Name(params[0]), params[0], params[1]);
			SendClientMessageToAll(COLOR_RED, stringer);
			format(stringers,sizeof(stringers),"管理员名称: %s\n原因: %s", Name(playerid), params[1]);
			ShowPlayerDialog(params[0],2311,DIALOG_STYLE_MSGBOX,"惩罚",stringers,"确定","");
        }
	}
	else
	{
	    SendErrorMessage(playerid,"你无法使用此命令!");
	}
	return 1;
}
CMD:donat(playerid)
{
    if(!PlayerInfo[playerid][pLogin]) return SendErrorMessage(playerid,"你没有登陆!");
    ShowPlayerDialog(playerid,26012, DIALOG_STYLE_LIST, "捐赠","\
	1. (未开放)\n\
	2. (未开放)\n\
	3. 兑换捐赠点\n\
	4. 购买车辆\n\
	5. (未开放)\n\
	6. 修改名称\n\
	7. 查看账户余额\n\
	8. 兑换游戏币","选择", "关闭");
	return 1;
}
CMD:givermb(playerid,params[])
{
	if(Rucovod(playerid))
	{
	    new stringer[144];
	    if(sscanf(params,"ud",params[0],params[1])) return SendErrorMessage(playerid,"帮助: /giverub [id] [数量]");
		PlayerInfo[playerid][pRub] += params[1];
		format(stringer,sizeof(stringer), "你给了 %s[%d]  %d 人民币", Name(params[0]),params[0],params[1]);
		SendClientMessage(playerid,COLOR_WHITE,stringer);
	}
	else
	{
	    SendErrorMessage(playerid,"你不是服务器经理");
	}
	return 1;
}

